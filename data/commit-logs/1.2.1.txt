From e80fd56ac5c97dba60b8dee80520a473f14dffb8 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Wed, 21 Dec 2005 23:15:13 +0000
Subject: [PATCH 1/5] This commit was manufactured by cvs2svn to create branch
 'v1_2_000_BRANCH'.

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_2_000_BRANCH@989 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 CVSROOT/checkoutlist                          |   13 -
 CVSROOT/commitinfo                            |   15 -
 CVSROOT/config                                |   14 -
 CVSROOT/cvswrappers                           |   23 -
 CVSROOT/editinfo                              |   21 -
 CVSROOT/loginfo                               |   27 -
 CVSROOT/modules                               |   26 -
 CVSROOT/notify                                |   12 -
 CVSROOT/rcsinfo                               |   13 -
 CVSROOT/taginfo                               |   20 -
 CVSROOT/verifymsg                             |   21 -
 JodaTimeContrib/.cvsignore                    |    4 -
 JodaTimeContrib/LICENSE.txt                   |  202 ---
 JodaTimeContrib/NOTICE.txt                    |    5 -
 JodaTimeContrib/README.txt                    |   14 -
 JodaTimeContrib/hibernate/.classpath          |   32 -
 JodaTimeContrib/hibernate/.cvsignore          |    2 -
 JodaTimeContrib/hibernate/.project            |   18 -
 JodaTimeContrib/hibernate/LICENSE.txt         |  202 ---
 JodaTimeContrib/hibernate/NOTICE.txt          |    5 -
 JodaTimeContrib/hibernate/README.txt          |   22 -
 JodaTimeContrib/hibernate/RELEASE-NOTES.txt   |   26 -
 JodaTimeContrib/hibernate/build.xml           |  313 -----
 JodaTimeContrib/hibernate/checkstyle.xml      |   81 --
 JodaTimeContrib/hibernate/project.properties  |   27 -
 JodaTimeContrib/hibernate/project.xml         |  155 ---
 .../hibernate/src/conf/MANIFEST.MF            |    7 -
 .../contrib/hibernate/PersistentDateTime.java |  147 ---
 .../hibernate/PersistentDateTimeTZ.java       |  134 --
 .../hibernate/PersistentTimeOfDay.java        |  153 ---
 .../hibernate/PersistentTimeOfDayExact.java   |  153 ---
 .../hibernate/PersistentYearMonthDay.java     |  147 ---
 .../joda/time/contrib/hibernate/Event.java    |   38 -
 .../joda/time/contrib/hibernate/EventTZ.java  |   38 -
 .../contrib/hibernate/HibernateTestCase.java  |   43 -
 .../joda/time/contrib/hibernate/Schedule.java |   61 -
 .../hibernate/TestPersistentDateTime.java     |  103 --
 .../hibernate/TestPersistentTimeOfDay.java    |   71 --
 .../TestPersistentTimeOfDayExact.java         |   60 -
 .../hibernate/TestPersistentYearMonthDay.java |   60 -
 .../joda/time/contrib/hibernate/event.hbm.xml |   16 -
 .../time/contrib/hibernate/eventTZ.hbm.xml    |   19 -
 .../time/contrib/hibernate/schedule.hbm.xml   |   20 -
 .../hibernate/xdocs/images/joda.png           |  Bin 2919 -> 0 bytes
 .../hibernate/xdocs/images/jodatime.png       |  Bin 2850 -> 0 bytes
 JodaTimeContrib/hibernate/xdocs/index.xml     |   74 --
 .../hibernate/xdocs/licensecover.xml          |   41 -
 .../hibernate/xdocs/navigation.xml            |   42 -
 .../xdocs/stylesheets/joda-theme.css          |  121 --
 .../xdocs/stylesheets/maven-theme.css         |  121 --
 JodaTimeContrib/hibernate/xdocs/tasks.xml     |   19 -
 JodaTimeContrib/hibernate/xdocs/userguide.xml |   30 -
 JodaTimeContrib/holiday/.cvsignore            |    5 -
 JodaTimeContrib/holiday/LICENSE.txt           |  202 ---
 JodaTimeContrib/holiday/NOTICE.txt            |    5 -
 JodaTimeContrib/holiday/checkstyle.xml        |   81 --
 .../holiday/CanadaStatutoryHolidays.java      |   52 -
 .../joda/time/contrib/holiday/GBHolidays.java |   51 -
 .../joda/time/contrib/holiday/Holiday.java    |  106 --
 .../time/contrib/holiday/HolidayRule.java     |  259 ----
 .../time/contrib/holiday/USGovtHolidays.java  |   54 -
 .../anniversary/AnniversaryFactory.java       |   46 -
 .../holiday/anniversary/AnnualHolidays.java   |   49 -
 .../anniversary/CanadaAnniversaries.java      |  105 --
 .../anniversary/CommonAnniversaries.java      |  118 --
 .../holiday/anniversary/GBAnniversaries.java  |   69 -
 .../anniversary/IAnniversaryFactory.java      |   25 -
 .../anniversary/NamedAnniversaryFactory.java  |   63 -
 .../holiday/anniversary/TimeUtility.java      |  157 ---
 .../holiday/anniversary/USAnniversaries.java  |  191 ---
 .../holiday/currency/AbstractChoice.java      |   46 -
 .../time/contrib/holiday/currency/Choice.java |   40 -
 .../contrib/holiday/currency/ChoiceList.java  |   46 -
 .../holiday/currency/CurrencyHoliday.java     | 1132 -----------------
 .../time/contrib/holiday/currency/Date.java   |   37 -
 .../contrib/holiday/currency/DateFactory.java |   29 -
 .../contrib/holiday/currency/DateUtil.java    |   29 -
 .../time/contrib/holiday/currency/Month.java  |  194 ---
 .../holiday/currency/RawHolidayChoice.java    |   43 -
 .../currency/RawHolidayChoiceImpl.java        |  673 ----------
 .../contrib/holiday/currency/Weekday.java     |  161 ---
 .../org/joda/time/contrib/holiday/src/GB.xml  |  217 ----
 .../time/contrib/holiday/src/joda-holiday.dtd |   41 -
 .../time/contrib/holiday/TestUSHolidays.java  |   57 -
 .../anniversary/TestCommonAnniversaries.java  |   46 -
 .../anniversary/TestUSAnniversaries.java      |  135 --
 JodaTimeContrib/holiday/xdoc/images/joda.png  |  Bin 2919 -> 0 bytes
 .../holiday/xdoc/images/jodatime.png          |  Bin 2850 -> 0 bytes
 JodaTimeContrib/holiday/xdoc/index.xml        |   54 -
 .../holiday/xdoc/stylesheets/joda-theme.css   |  121 --
 .../holiday/xdoc/stylesheets/maven-theme.css  |  121 --
 JodaTimeContrib/jsptags/.classpath            |   18 -
 JodaTimeContrib/jsptags/.cvsignore            |    3 -
 JodaTimeContrib/jsptags/.project              |   18 -
 JodaTimeContrib/jsptags/LICENSE.txt           |  201 ---
 JodaTimeContrib/jsptags/NOTICE.txt            |    8 -
 JodaTimeContrib/jsptags/RELEASE-NOTES.txt     |  121 --
 JodaTimeContrib/jsptags/build.xml             |  217 ----
 JodaTimeContrib/jsptags/checkstyle.xml        |   81 --
 JodaTimeContrib/jsptags/maven.xml             |   47 -
 JodaTimeContrib/jsptags/project.properties    |   17 -
 JodaTimeContrib/jsptags/project.xml           |  146 ---
 JodaTimeContrib/jsptags/src/conf/joda.tld     |  231 ----
 .../jsptags/src/conf/manifest-additions.txt   |    2 -
 .../contrib/jsptag/DateTimeZoneSupport.java   |  136 --
 .../time/contrib/jsptag/DateTimeZoneTag.java  |   34 -
 .../time/contrib/jsptag/FormatSupport.java    |  155 ---
 .../joda/time/contrib/jsptag/FormatTag.java   |   98 --
 .../jsptag/JodaTagLibraryValidator.java       |  409 ------
 .../contrib/jsptag/ParseDateTimeSupport.java  |  162 ---
 .../time/contrib/jsptag/ParseDateTimeTag.java |  100 --
 .../joda/time/contrib/jsptag/Resources.java   |  124 --
 .../time/contrib/jsptag/Resources.properties  |  304 -----
 .../contrib/jsptag/Resources_ja.properties    |  297 -----
 .../jsptag/SetDateTimeZoneSupport.java        |   93 --
 .../contrib/jsptag/SetDateTimeZoneTag.java    |   41 -
 .../org/joda/time/contrib/jsptag/Util.java    |  636 ---------
 JodaTimeContrib/jsptags/xdocs/images/joda.png |  Bin 2919 -> 0 bytes
 .../jsptags/xdocs/images/jodatime.png         |  Bin 2850 -> 0 bytes
 JodaTimeContrib/jsptags/xdocs/index.xml       |   76 --
 .../jsptags/xdocs/licensecover.xml            |   38 -
 JodaTimeContrib/jsptags/xdocs/navigation.xml  |   42 -
 .../jsptags/xdocs/stylesheets/joda-theme.css  |  121 --
 .../jsptags/xdocs/stylesheets/maven-theme.css |  121 --
 JodaTimeContrib/jsptags/xdocs/tasks.xml       |   19 -
 JodaTimeContrib/jsptags/xdocs/userguide.xml   |  235 ----
 JodaTimeContrib/presentation/JodaTime.sxi     |  Bin 12525 -> 0 bytes
 .../presentation/JodaTimeBeJUG.sxi            |  Bin 108944 -> 0 bytes
 128 files changed, 12242 deletions(-)
 delete mode 100644 CVSROOT/checkoutlist
 delete mode 100644 CVSROOT/commitinfo
 delete mode 100644 CVSROOT/config
 delete mode 100644 CVSROOT/cvswrappers
 delete mode 100644 CVSROOT/editinfo
 delete mode 100644 CVSROOT/loginfo
 delete mode 100644 CVSROOT/modules
 delete mode 100644 CVSROOT/notify
 delete mode 100644 CVSROOT/rcsinfo
 delete mode 100644 CVSROOT/taginfo
 delete mode 100644 CVSROOT/verifymsg
 delete mode 100644 JodaTimeContrib/.cvsignore
 delete mode 100644 JodaTimeContrib/LICENSE.txt
 delete mode 100644 JodaTimeContrib/NOTICE.txt
 delete mode 100644 JodaTimeContrib/README.txt
 delete mode 100644 JodaTimeContrib/hibernate/.classpath
 delete mode 100644 JodaTimeContrib/hibernate/.cvsignore
 delete mode 100644 JodaTimeContrib/hibernate/.project
 delete mode 100644 JodaTimeContrib/hibernate/LICENSE.txt
 delete mode 100644 JodaTimeContrib/hibernate/NOTICE.txt
 delete mode 100644 JodaTimeContrib/hibernate/README.txt
 delete mode 100644 JodaTimeContrib/hibernate/RELEASE-NOTES.txt
 delete mode 100644 JodaTimeContrib/hibernate/build.xml
 delete mode 100644 JodaTimeContrib/hibernate/checkstyle.xml
 delete mode 100644 JodaTimeContrib/hibernate/project.properties
 delete mode 100644 JodaTimeContrib/hibernate/project.xml
 delete mode 100644 JodaTimeContrib/hibernate/src/conf/MANIFEST.MF
 delete mode 100644 JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentDateTime.java
 delete mode 100644 JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentDateTimeTZ.java
 delete mode 100644 JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentTimeOfDay.java
 delete mode 100644 JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentTimeOfDayExact.java
 delete mode 100644 JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentYearMonthDay.java
 delete mode 100644 JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/Event.java
 delete mode 100644 JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/EventTZ.java
 delete mode 100644 JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/HibernateTestCase.java
 delete mode 100644 JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/Schedule.java
 delete mode 100644 JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentDateTime.java
 delete mode 100644 JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentTimeOfDay.java
 delete mode 100644 JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentTimeOfDayExact.java
 delete mode 100644 JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentYearMonthDay.java
 delete mode 100644 JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/event.hbm.xml
 delete mode 100644 JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/eventTZ.hbm.xml
 delete mode 100644 JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/schedule.hbm.xml
 delete mode 100644 JodaTimeContrib/hibernate/xdocs/images/joda.png
 delete mode 100644 JodaTimeContrib/hibernate/xdocs/images/jodatime.png
 delete mode 100644 JodaTimeContrib/hibernate/xdocs/index.xml
 delete mode 100644 JodaTimeContrib/hibernate/xdocs/licensecover.xml
 delete mode 100644 JodaTimeContrib/hibernate/xdocs/navigation.xml
 delete mode 100644 JodaTimeContrib/hibernate/xdocs/stylesheets/joda-theme.css
 delete mode 100644 JodaTimeContrib/hibernate/xdocs/stylesheets/maven-theme.css
 delete mode 100644 JodaTimeContrib/hibernate/xdocs/tasks.xml
 delete mode 100644 JodaTimeContrib/hibernate/xdocs/userguide.xml
 delete mode 100644 JodaTimeContrib/holiday/.cvsignore
 delete mode 100644 JodaTimeContrib/holiday/LICENSE.txt
 delete mode 100644 JodaTimeContrib/holiday/NOTICE.txt
 delete mode 100644 JodaTimeContrib/holiday/checkstyle.xml
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/CanadaStatutoryHolidays.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/GBHolidays.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/USGovtHolidays.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/AnniversaryFactory.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/AnnualHolidays.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/CanadaAnniversaries.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/CommonAnniversaries.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/GBAnniversaries.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/IAnniversaryFactory.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/NamedAnniversaryFactory.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/TimeUtility.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/USAnniversaries.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/AbstractChoice.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Choice.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/ChoiceList.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/CurrencyHoliday.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Date.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/DateFactory.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/DateUtil.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Month.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/RawHolidayChoice.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/RawHolidayChoiceImpl.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Weekday.java
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/src/GB.xml
 delete mode 100644 JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/src/joda-holiday.dtd
 delete mode 100644 JodaTimeContrib/holiday/src/test/org/joda/time/contrib/holiday/TestUSHolidays.java
 delete mode 100644 JodaTimeContrib/holiday/src/test/org/joda/time/contrib/holiday/anniversary/TestCommonAnniversaries.java
 delete mode 100644 JodaTimeContrib/holiday/src/test/org/joda/time/contrib/holiday/anniversary/TestUSAnniversaries.java
 delete mode 100644 JodaTimeContrib/holiday/xdoc/images/joda.png
 delete mode 100644 JodaTimeContrib/holiday/xdoc/images/jodatime.png
 delete mode 100644 JodaTimeContrib/holiday/xdoc/index.xml
 delete mode 100644 JodaTimeContrib/holiday/xdoc/stylesheets/joda-theme.css
 delete mode 100644 JodaTimeContrib/holiday/xdoc/stylesheets/maven-theme.css
 delete mode 100644 JodaTimeContrib/jsptags/.classpath
 delete mode 100644 JodaTimeContrib/jsptags/.cvsignore
 delete mode 100644 JodaTimeContrib/jsptags/.project
 delete mode 100644 JodaTimeContrib/jsptags/LICENSE.txt
 delete mode 100644 JodaTimeContrib/jsptags/NOTICE.txt
 delete mode 100644 JodaTimeContrib/jsptags/RELEASE-NOTES.txt
 delete mode 100644 JodaTimeContrib/jsptags/build.xml
 delete mode 100644 JodaTimeContrib/jsptags/checkstyle.xml
 delete mode 100644 JodaTimeContrib/jsptags/maven.xml
 delete mode 100644 JodaTimeContrib/jsptags/project.properties
 delete mode 100644 JodaTimeContrib/jsptags/project.xml
 delete mode 100644 JodaTimeContrib/jsptags/src/conf/joda.tld
 delete mode 100644 JodaTimeContrib/jsptags/src/conf/manifest-additions.txt
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/DateTimeZoneSupport.java
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/DateTimeZoneTag.java
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/FormatSupport.java
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/FormatTag.java
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/JodaTagLibraryValidator.java
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/ParseDateTimeSupport.java
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/ParseDateTimeTag.java
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Resources.java
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Resources.properties
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Resources_ja.properties
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/SetDateTimeZoneSupport.java
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/SetDateTimeZoneTag.java
 delete mode 100644 JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Util.java
 delete mode 100644 JodaTimeContrib/jsptags/xdocs/images/joda.png
 delete mode 100644 JodaTimeContrib/jsptags/xdocs/images/jodatime.png
 delete mode 100644 JodaTimeContrib/jsptags/xdocs/index.xml
 delete mode 100644 JodaTimeContrib/jsptags/xdocs/licensecover.xml
 delete mode 100644 JodaTimeContrib/jsptags/xdocs/navigation.xml
 delete mode 100644 JodaTimeContrib/jsptags/xdocs/stylesheets/joda-theme.css
 delete mode 100644 JodaTimeContrib/jsptags/xdocs/stylesheets/maven-theme.css
 delete mode 100644 JodaTimeContrib/jsptags/xdocs/tasks.xml
 delete mode 100644 JodaTimeContrib/jsptags/xdocs/userguide.xml
 delete mode 100644 JodaTimeContrib/presentation/JodaTime.sxi
 delete mode 100644 JodaTimeContrib/presentation/JodaTimeBeJUG.sxi

diff --git a/CVSROOT/checkoutlist b/CVSROOT/checkoutlist
deleted file mode 100644
index b04b3501f..000000000
--- a/CVSROOT/checkoutlist
+++ /dev/null
@@ -1,13 +0,0 @@
-# The "checkoutlist" file is used to support additional version controlled
-# administrative files in $CVSROOT/CVSROOT, such as template files.
-#
-# The first entry on a line is a filename which will be checked out from
-# the corresponding RCS file in the $CVSROOT/CVSROOT directory.
-# The remainder of the line is an error message to use if the file cannot
-# be checked out.
-#
-# File format:
-#
-#	[<whitespace>]<filename><whitespace><error message><end-of-line>
-#
-# comment lines begin with '#'
diff --git a/CVSROOT/commitinfo b/CVSROOT/commitinfo
deleted file mode 100644
index b19e7b7a6..000000000
--- a/CVSROOT/commitinfo
+++ /dev/null
@@ -1,15 +0,0 @@
-# The "commitinfo" file is used to control pre-commit checks.
-# The filter on the right is invoked with the repository and a list 
-# of files to check.  A non-zero exit of the filter program will 
-# cause the commit to be aborted.
-#
-# The first entry on a line is a regular expression which is tested
-# against the directory that the change is being committed to, relative
-# to the $CVSROOT.  For the first match that is found, then the remainder
-# of the line is the name of the filter to run.
-#
-# If the repository name does not match any of the regular expressions in this
-# file, the "DEFAULT" line is used, if it is specified.
-#
-# If the name "ALL" appears as a regular expression it is always used
-# in addition to the first matching regex or "DEFAULT".
diff --git a/CVSROOT/config b/CVSROOT/config
deleted file mode 100644
index ff43ec005..000000000
--- a/CVSROOT/config
+++ /dev/null
@@ -1,14 +0,0 @@
-# Set this to "no" if pserver shouldn't check system users/passwords
-#SystemAuth=no
-
-# Put CVS lock files in this directory rather than directly in the repository.
-#LockDir=/var/lock/cvs
-
-# Set `TopLevelAdmin' to `yes' to create a CVS directory at the top
-# level of the new working directory when using the `cvs checkout'
-# command.
-#TopLevelAdmin=no
-
-# Set `LogHistory' to `all' or `TOFEWGCMAR' to log all transactions to the
-# history file, or a subset as needed (ie `TMAR' logs all write operations)
-#LogHistory=TOFEWGCMAR
diff --git a/CVSROOT/cvswrappers b/CVSROOT/cvswrappers
deleted file mode 100644
index 0accaf1b1..000000000
--- a/CVSROOT/cvswrappers
+++ /dev/null
@@ -1,23 +0,0 @@
-# This file affects handling of files based on their names.
-#
-# The -t/-f options allow one to treat directories of files
-# as a single file, or to transform a file in other ways on
-# its way in and out of CVS.
-#
-# The -m option specifies whether CVS attempts to merge files.
-#
-# The -k option specifies keyword expansion (e.g. -kb for binary).
-#
-# Format of wrapper file ($CVSROOT/CVSROOT/cvswrappers or .cvswrappers)
-#
-#  wildcard	[option value][option value]...
-#
-#  where option is one of
-#  -f		from cvs filter		value: path to filter
-#  -t		to cvs filter		value: path to filter
-#  -m		update methodology	value: MERGE or COPY
-#  -k		expansion mode		value: b, o, kkv, &c
-#
-#  and value is a single-quote delimited value.
-# For example:
-#*.gif -k 'b'
diff --git a/CVSROOT/editinfo b/CVSROOT/editinfo
deleted file mode 100644
index d78886c15..000000000
--- a/CVSROOT/editinfo
+++ /dev/null
@@ -1,21 +0,0 @@
-# The "editinfo" file is used to allow verification of logging
-# information.  It works best when a template (as specified in the
-# rcsinfo file) is provided for the logging procedure.  Given a
-# template with locations for, a bug-id number, a list of people who
-# reviewed the code before it can be checked in, and an external
-# process to catalog the differences that were code reviewed, the
-# following test can be applied to the code:
-#
-#   Making sure that the entered bug-id number is correct.
-#   Validating that the code that was reviewed is indeed the code being
-#       checked in (using the bug-id number or a seperate review
-#       number to identify this particular code set.).
-#
-# If any of the above test failed, then the commit would be aborted.
-#
-# Actions such as mailing a copy of the report to each reviewer are
-# better handled by an entry in the loginfo file.
-#
-# One thing that should be noted is the the ALL keyword is not
-# supported.  There can be only one entry that matches a given
-# repository.
diff --git a/CVSROOT/loginfo b/CVSROOT/loginfo
deleted file mode 100644
index d5619fc23..000000000
--- a/CVSROOT/loginfo
+++ /dev/null
@@ -1,27 +0,0 @@
-# The "loginfo" file controls where "cvs commit" log information
-# is sent.  The first entry on a line is a regular expression which must match
-# the directory that the change is being made to, relative to the
-# $CVSROOT.  If a match is found, then the remainder of the line is a filter
-# program that should expect log information on its standard input.
-#
-# If the repository name does not match any of the regular expressions in this
-# file, the "DEFAULT" line is used, if it is specified.
-#
-# If the name ALL appears as a regular expression it is always used
-# in addition to the first matching regex or DEFAULT.
-#
-# You may specify a format string as part of the
-# filter.  The string is composed of a `%' followed
-# by a single format character, or followed by a set of format
-# characters surrounded by `{' and `}' as separators.  The format
-# characters are:
-#
-#   s = file name
-#   V = old version number (pre-checkin)
-#   v = new version number (post-checkin)
-#
-# For example:
-#DEFAULT (echo ""; id; echo %s; date; cat) >> $CVSROOT/CVSROOT/commitlog
-# or
-#DEFAULT (echo ""; id; echo %{sVv}; date; cat) >> $CVSROOT/CVSROOT/commitlog
-DEFAULT /cvsroot/sitedocs/CVSROOT/cvstools/syncmail %{sVv} joda-time-cvs@lists.sourceforge.net
diff --git a/CVSROOT/modules b/CVSROOT/modules
deleted file mode 100644
index cb9e9efc9..000000000
--- a/CVSROOT/modules
+++ /dev/null
@@ -1,26 +0,0 @@
-# Three different line formats are valid:
-#	key	-a    aliases...
-#	key [options] directory
-#	key [options] directory files...
-#
-# Where "options" are composed of:
-#	-i prog		Run "prog" on "cvs commit" from top-level of module.
-#	-o prog		Run "prog" on "cvs checkout" of module.
-#	-e prog		Run "prog" on "cvs export" of module.
-#	-t prog		Run "prog" on "cvs rtag" of module.
-#	-u prog		Run "prog" on "cvs update" of module.
-#	-d dir		Place module in directory "dir" instead of module name.
-#	-l		Top-level directory only -- do not recurse.
-#
-# NOTE:  If you change any of the "Run" options above, you'll have to
-# release and re-checkout any working directories of these modules.
-#
-# And "directory" is a path to a directory relative to $CVSROOT.
-#
-# The "-a" option specifies an alias.  An alias is interpreted as if
-# everything on the right of the "-a" had been typed on the command line.
-#
-# You can encode a module within a module by using the special '&'
-# character to interpose another module into the current module.  This
-# can be useful for creating a module that consists of many directories
-# spread out over the entire source repository.
diff --git a/CVSROOT/notify b/CVSROOT/notify
deleted file mode 100644
index 34f0bc288..000000000
--- a/CVSROOT/notify
+++ /dev/null
@@ -1,12 +0,0 @@
-# The "notify" file controls where notifications from watches set by
-# "cvs watch add" or "cvs edit" are sent.  The first entry on a line is
-# a regular expression which is tested against the directory that the
-# change is being made to, relative to the $CVSROOT.  If it matches,
-# then the remainder of the line is a filter program that should contain
-# one occurrence of %s for the user to notify, and information on its
-# standard input.
-#
-# "ALL" or "DEFAULT" can be used in place of the regular expression.
-#
-# For example:
-#ALL mail %s -s "CVS notification"
diff --git a/CVSROOT/rcsinfo b/CVSROOT/rcsinfo
deleted file mode 100644
index 49e59f4d0..000000000
--- a/CVSROOT/rcsinfo
+++ /dev/null
@@ -1,13 +0,0 @@
-# The "rcsinfo" file is used to control templates with which the editor
-# is invoked on commit and import.
-#
-# The first entry on a line is a regular expression which is tested
-# against the directory that the change is being made to, relative to the
-# $CVSROOT.  For the first match that is found, then the remainder of the
-# line is the name of the file that contains the template.
-#
-# If the repository name does not match any of the regular expressions in this
-# file, the "DEFAULT" line is used, if it is specified.
-#
-# If the name "ALL" appears as a regular expression it is always used
-# in addition to the first matching regex or "DEFAULT".
diff --git a/CVSROOT/taginfo b/CVSROOT/taginfo
deleted file mode 100644
index 274a46dd5..000000000
--- a/CVSROOT/taginfo
+++ /dev/null
@@ -1,20 +0,0 @@
-# The "taginfo" file is used to control pre-tag checks.
-# The filter on the right is invoked with the following arguments:
-#
-# $1 -- tagname
-# $2 -- operation "add" for tag, "mov" for tag -F, and "del" for tag -d
-# $3 -- repository
-# $4->  file revision [file revision ...]
-#
-# A non-zero exit of the filter program will cause the tag to be aborted.
-#
-# The first entry on a line is a regular expression which is tested
-# against the directory that the change is being committed to, relative
-# to the $CVSROOT.  For the first match that is found, then the remainder
-# of the line is the name of the filter to run.
-#
-# If the repository name does not match any of the regular expressions in this
-# file, the "DEFAULT" line is used, if it is specified.
-#
-# If the name "ALL" appears as a regular expression it is always used
-# in addition to the first matching regex or "DEFAULT".
diff --git a/CVSROOT/verifymsg b/CVSROOT/verifymsg
deleted file mode 100644
index 86f747ce2..000000000
--- a/CVSROOT/verifymsg
+++ /dev/null
@@ -1,21 +0,0 @@
-# The "verifymsg" file is used to allow verification of logging
-# information.  It works best when a template (as specified in the
-# rcsinfo file) is provided for the logging procedure.  Given a
-# template with locations for, a bug-id number, a list of people who
-# reviewed the code before it can be checked in, and an external
-# process to catalog the differences that were code reviewed, the
-# following test can be applied to the code:
-#
-#   Making sure that the entered bug-id number is correct.
-#   Validating that the code that was reviewed is indeed the code being
-#       checked in (using the bug-id number or a seperate review
-#       number to identify this particular code set.).
-#
-# If any of the above test failed, then the commit would be aborted.
-#
-# Actions such as mailing a copy of the report to each reviewer are
-# better handled by an entry in the loginfo file.
-#
-# One thing that should be noted is the the ALL keyword is not
-# supported.  There can be only one entry that matches a given
-# repository.
diff --git a/JodaTimeContrib/.cvsignore b/JodaTimeContrib/.cvsignore
deleted file mode 100644
index a348feba8..000000000
--- a/JodaTimeContrib/.cvsignore
+++ /dev/null
@@ -1,4 +0,0 @@
-bin
-.classpath
-.project
-target
diff --git a/JodaTimeContrib/LICENSE.txt b/JodaTimeContrib/LICENSE.txt
deleted file mode 100644
index d64569567..000000000
--- a/JodaTimeContrib/LICENSE.txt
+++ /dev/null
@@ -1,202 +0,0 @@
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
diff --git a/JodaTimeContrib/NOTICE.txt b/JodaTimeContrib/NOTICE.txt
deleted file mode 100644
index dffbcf31c..000000000
--- a/JodaTimeContrib/NOTICE.txt
+++ /dev/null
@@ -1,5 +0,0 @@
-=============================================================================
-= NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
-=============================================================================
-This product includes software developed by
-Joda.org (http://www.joda.org/).
diff --git a/JodaTimeContrib/README.txt b/JodaTimeContrib/README.txt
deleted file mode 100644
index 6456c9dee..000000000
--- a/JodaTimeContrib/README.txt
+++ /dev/null
@@ -1,14 +0,0 @@
-
-Joda-Time Contributions area
-============================
-Joda-Time is a date and time library that vastly improves on the JDK.
-
-The Joda-Time contributions area hosts additional code that may be of
-use when working with the main Joda-Time library.
-Each of these contributions is licensed using the Apache License v2.0.
-
-Please note that this code is not supported in the same way as the main
-Joda-Time code. As such it is possible that methods and classes may come
-and go over time without warning - you have been warned!
-
-See the README in each subproject for more details.
diff --git a/JodaTimeContrib/hibernate/.classpath b/JodaTimeContrib/hibernate/.classpath
deleted file mode 100644
index b29791e64..000000000
--- a/JodaTimeContrib/hibernate/.classpath
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<classpath>
-  <classpathentry excluding="" kind="src" path="src/java">
-  </classpathentry>
-  <classpathentry output="target/test-classes" kind="src" path="src/test">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/junit/jars/junit-3.8.1.jar">
-  </classpathentry>
-  <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/joda-time/jars/joda-time-1.0.jar">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/hibernate/jars/hibernate-3.0.5.jar">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/commons-logging/jars/commons-logging-api-1.0.4.jar">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/commons-collections/jars/commons-collections-3.1.jar">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/hsqldb/jars/hsqldb-1.7.3.3.jar">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/ehcache/jars/ehcache-1.1.jar">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/dom4j/jars/dom4j-1.6.jar">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/cglib/jars/cglib-full-2.0.2.jar">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/jta/jars/jta-1_0_1B-classes.zip">
-  </classpathentry>
-  <classpathentry kind="output" path="target/classes">
-  </classpathentry>
-</classpath>
\ No newline at end of file
diff --git a/JodaTimeContrib/hibernate/.cvsignore b/JodaTimeContrib/hibernate/.cvsignore
deleted file mode 100644
index d567ba01e..000000000
--- a/JodaTimeContrib/hibernate/.cvsignore
+++ /dev/null
@@ -1,2 +0,0 @@
-bin
-target
diff --git a/JodaTimeContrib/hibernate/.project b/JodaTimeContrib/hibernate/.project
deleted file mode 100644
index acd8cc8f9..000000000
--- a/JodaTimeContrib/hibernate/.project
+++ /dev/null
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<projectDescription>
-  <name>joda-time-hibernate</name>
-  <comment>Contribution to Joda-Time that adds Hibernate support</comment>
-  <projects>
-  </projects>
-  <buildSpec>
-    <buildCommand>
-      <name>org.eclipse.jdt.core.javabuilder</name>
-      <arguments>
-      </arguments>
-    </buildCommand>
-  </buildSpec>
-  <natures>
-    <nature>org.eclipse.jdt.core.javanature</nature>
-  </natures>
-</projectDescription>
\ No newline at end of file
diff --git a/JodaTimeContrib/hibernate/LICENSE.txt b/JodaTimeContrib/hibernate/LICENSE.txt
deleted file mode 100644
index d64569567..000000000
--- a/JodaTimeContrib/hibernate/LICENSE.txt
+++ /dev/null
@@ -1,202 +0,0 @@
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
diff --git a/JodaTimeContrib/hibernate/NOTICE.txt b/JodaTimeContrib/hibernate/NOTICE.txt
deleted file mode 100644
index dffbcf31c..000000000
--- a/JodaTimeContrib/hibernate/NOTICE.txt
+++ /dev/null
@@ -1,5 +0,0 @@
-=============================================================================
-= NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
-=============================================================================
-This product includes software developed by
-Joda.org (http://www.joda.org/).
diff --git a/JodaTimeContrib/hibernate/README.txt b/JodaTimeContrib/hibernate/README.txt
deleted file mode 100644
index cc1e21894..000000000
--- a/JodaTimeContrib/hibernate/README.txt
+++ /dev/null
@@ -1,22 +0,0 @@
-
-Joda-Time Contributions area - Hibernate support
-================================================
-Joda-Time is a date and time library that vastly improves on the JDK.
-This release provides additional support for Hibernate database persistence.
-See http://www.hibernate.org/ for more details on Hibernate.
-
-Additional setup for test cases
--------------------------------
-Joda-Time supports the use of maven for the build process.
-Maven tries to download all dependencies from ibiblio.
-Some of them are not hosted due to their licensing.
-
-Thus you have to download them and put them in your local maven repository.
-eg. on Linux, YOUR_HOME/.maven/respository
-eg. on Windows, Documents and Settings/YOUR_USER/.maven/respository
-
-For the hibernate code, you need the Java Transaction API:
-http://java.sun.com/products/jta
-
-# mkdir ~/.maven/repository/jta/jars
-# cp jta-1_0_1B-classes.zip ~/.maven/repository/jta/jars
diff --git a/JodaTimeContrib/hibernate/RELEASE-NOTES.txt b/JodaTimeContrib/hibernate/RELEASE-NOTES.txt
deleted file mode 100644
index 02ccdd57d..000000000
--- a/JodaTimeContrib/hibernate/RELEASE-NOTES.txt
+++ /dev/null
@@ -1,26 +0,0 @@
-
-Joda-Time Contributions area - Hibernate support  v0.1
-======================================================
-Joda-Time is a date and time library that vastly improves on the JDK.
-This release provides additional support for Hibernate database persistence.
-See http://www.hibernate.org/ for more details on Hibernate.
-
-This library is a user contribution by Mario Ivankovits, thank you.
-
-The Joda-Time contributions area hosts additional code that may be of
-use when working with the main Joda-Time library.
-Each of these contributions is licensed using the Apache License v2.0.
-However, Hibernate is LGPL licensed software.
-It is your resposibility to use the joda-time-hibernate jar correctly
-in your own application according to the terms of the LGPL license.
-
-Please note that this code is not supported in the same way as the main
-Joda-Time code. As such it is possible that methods and classes may come
-and go over time without warning - you have been warned!
-
-
-Feedback
---------
-All feedback is welcomed at joda-interest@lists.sourceforge.net.
-
-The Joda team
diff --git a/JodaTimeContrib/hibernate/build.xml b/JodaTimeContrib/hibernate/build.xml
deleted file mode 100644
index 29135b2dc..000000000
--- a/JodaTimeContrib/hibernate/build.xml
+++ /dev/null
@@ -1,313 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--build.xml generated by maven from project.xml version 1.0
-  on date July 19 2005, time 0051-->
-
-<project default="jar" name="joda-time-hibernate" basedir=".">
-  <!--Load local and user build preferences-->
-
-  <property file="build.properties">
-  </property>
-  <property file="${user.home}/build.properties">
-  </property>
-  <!--Build properties-->
-
-  <property name="defaulttargetdir" value="${basedir}/target">
-  </property>
-  <property name="libdir" value="${user.home}/.maven/repository">
-  </property>
-  <property name="classesdir" value="${basedir}/target/classes">
-  </property>
-  <property name="testclassesdir" value="${basedir}/target/test-classes">
-  </property>
-  <property name="testreportdir" value="${basedir}/target/test-reports">
-  </property>
-  <property name="distdir" value="${basedir}/dist">
-  </property>
-  <property name="javadocdir" value="${basedir}/dist/docs/api">
-  </property>
-  <property name="final.name" value="joda-time-hibernate-1.0">
-  </property>
-  <property name="proxy.host" value="">
-  </property>
-  <property name="proxy.port" value="">
-  </property>
-  <property name="proxy.username" value="">
-  </property>
-  <property name="proxy.password" value="">
-  </property>
-  <path id="build.classpath">
-    <pathelement location="${libdir}/joda-time/jars/joda-time-1.0.jar">
-    </pathelement>
-    <pathelement location="${libdir}/hibernate/jars/hibernate-3.0.5.jar">
-    </pathelement>
-    <pathelement location="${libdir}/commons-logging/jars/commons-logging-api-1.0.4.jar">
-    </pathelement>
-    <pathelement location="${libdir}/commons-collections/jars/commons-collections-3.1.jar">
-    </pathelement>
-    <pathelement location="${libdir}/hsqldb/jars/hsqldb-1.7.3.3.jar">
-    </pathelement>
-    <pathelement location="${libdir}/ehcache/jars/ehcache-1.1.jar">
-    </pathelement>
-    <pathelement location="${libdir}/dom4j/jars/dom4j-1.6.jar">
-    </pathelement>
-    <pathelement location="${libdir}/cglib/jars/cglib-full-2.0.2.jar">
-    </pathelement>
-    <pathelement location="${libdir}/jta/jars/jta-1_0_1B-classes.zip">
-    </pathelement>
-  </path>
-  <target name="init" description="o Initializes some properties">
-    <mkdir dir="${libdir}">
-    </mkdir>
-    <condition property="noget">
-      <equals arg2="only" arg1="${build.sysclasspath}">
-      </equals>
-    </condition>
-    <!--Test if JUNIT is present in ANT classpath-->
-
-    <available property="Junit.present" classname="junit.framework.Test">
-    </available>
-    <!--Test if user defined a proxy-->
-
-    <condition property="useProxy">
-      <and>
-        <isset property="proxy.host">
-        </isset>
-        <not>
-          <equals trim="true" arg2="" arg1="${proxy.host}">
-          </equals>
-        </not>
-      </and>
-    </condition>
-  </target>
-  <target name="compile" description="o Compile the code" depends="get-deps">
-    <mkdir dir="${classesdir}">
-    </mkdir>
-    <javac destdir="${classesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
-      <src>
-        <pathelement location="${basedir}/src/java">
-        </pathelement>
-      </src>
-      <classpath refid="build.classpath">
-      </classpath>
-    </javac>
-  </target>
-  <target name="jar" description="o Create the jar" depends="compile,test">
-    <jar jarfile="${defaulttargetdir}/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}">
-    </jar>
-  </target>
-  <target name="clean" description="o Clean up the generated directories">
-    <delete dir="${defaulttargetdir}">
-    </delete>
-    <delete dir="${distdir}">
-    </delete>
-  </target>
-  <target name="dist" description="o Create a distribution" depends="jar, javadoc">
-    <mkdir dir="dist">
-    </mkdir>
-    <copy todir="dist">
-      <fileset dir="${defaulttargetdir}" includes="*.jar">
-      </fileset>
-      <fileset dir="${basedir}" includes="LICENSE*, README*">
-      </fileset>
-    </copy>
-  </target>
-  <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
-    <fail message="There were test failures.">
-    </fail>
-  </target>
-  <target name="internal-test" if="Junit.present" depends="junit-present,compile-tests">
-    <mkdir dir="${testreportdir}">
-    </mkdir>
-    <junit dir="${basedir}" failureproperty="test.failure" printSummary="yes" fork="true" haltonerror="true">
-      <sysproperty key="basedir" value=".">
-      </sysproperty>
-      <formatter type="xml">
-      </formatter>
-      <formatter usefile="false" type="plain">
-      </formatter>
-      <classpath>
-        <path refid="build.classpath">
-        </path>
-        <pathelement path="${testclassesdir}">
-        </pathelement>
-        <pathelement path="${classesdir}">
-        </pathelement>
-      </classpath>
-      <batchtest todir="${testreportdir}">
-        <fileset dir="${basedir}/src/test">
-          <include name="org/joda/time/contrib/hibernate/**/Test*.java">
-          </include>
-        </fileset>
-      </batchtest>
-    </junit>
-  </target>
-  <target name="junit-present" unless="Junit.present" depends="init">
-    <echo>================================= WARNING ================================</echo>
-    <echo>Junit isn't present in your ${ANT_HOME}/lib directory. Tests not executed.</echo>
-    <echo>==========================================================================</echo>
-  </target>
-  <target name="compile-tests" if="Junit.present" depends="junit-present,compile">
-    <mkdir dir="${testclassesdir}">
-    </mkdir>
-    <javac destdir="${testclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
-      <src>
-        <pathelement location="${basedir}/src/test">
-        </pathelement>
-      </src>
-      <classpath>
-        <path refid="build.classpath">
-        </path>
-        <pathelement path="${classesdir}">
-        </pathelement>
-      </classpath>
-    </javac>
-  </target>
-  <target name="javadoc" description="o Generate javadoc" depends="get-deps">
-    <mkdir dir="${javadocdir}">
-    </mkdir>
-    <tstamp>
-      <format pattern="2002-yyyy" property="year">
-      </format>
-    </tstamp>
-    <property name="copyright" value="Copyright &amp;copy;  Joda.org. All Rights Reserved.">
-    </property>
-    <property name="title" value="Joda time Hibernate support 1.0 API">
-    </property>
-    <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="${basedir}/src/java" packagenames="org.joda.time.contrib.hibernate.*">
-      <classpath>
-        <path refid="build.classpath">
-        </path>
-      </classpath>
-    </javadoc>
-  </target>
-  <target name="get-dep-joda-time.jar" description="o Download the dependency : joda-time.jar" unless="joda-time.jar" depends="init,setProxy,noProxy,get-custom-dep-joda-time.jar">
-    <mkdir dir="${libdir}/joda-time/jars/">
-    </mkdir>
-    <get dest="${libdir}/joda-time/jars/joda-time-1.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/joda-time/jars/joda-time-1.0.jar">
-    </get>
-  </target>
-  <target name="get-custom-dep-joda-time.jar" if="joda-time.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/joda-time/jars/">
-    </mkdir>
-    <get dest="${libdir}/joda-time/jars/joda-time-1.0.jar" usetimestamp="true" ignoreerrors="true" src="${joda-time.jar}">
-    </get>
-  </target>
-  <target name="get-dep-hibernate.jar" description="o Download the dependency : hibernate.jar" unless="hibernate.jar" depends="init,setProxy,noProxy,get-custom-dep-hibernate.jar">
-    <mkdir dir="${libdir}/hibernate/jars/">
-    </mkdir>
-    <get dest="${libdir}/hibernate/jars/hibernate-3.0.5.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/hibernate/jars/hibernate-3.0.5.jar">
-    </get>
-  </target>
-  <target name="get-custom-dep-hibernate.jar" if="hibernate.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/hibernate/jars/">
-    </mkdir>
-    <get dest="${libdir}/hibernate/jars/hibernate-3.0.5.jar" usetimestamp="true" ignoreerrors="true" src="${hibernate.jar}">
-    </get>
-  </target>
-  <target name="get-dep-commons-logging-api.jar" description="o Download the dependency : commons-logging-api.jar" unless="commons-logging-api.jar" depends="init,setProxy,noProxy,get-custom-dep-commons-logging-api.jar">
-    <mkdir dir="${libdir}/commons-logging/jars/">
-    </mkdir>
-    <get dest="${libdir}/commons-logging/jars/commons-logging-api-1.0.4.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-api-1.0.4.jar">
-    </get>
-  </target>
-  <target name="get-custom-dep-commons-logging-api.jar" if="commons-logging-api.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/commons-logging/jars/">
-    </mkdir>
-    <get dest="${libdir}/commons-logging/jars/commons-logging-api-1.0.4.jar" usetimestamp="true" ignoreerrors="true" src="${commons-logging-api.jar}">
-    </get>
-  </target>
-  <target name="get-dep-commons-collections.jar" description="o Download the dependency : commons-collections.jar" unless="commons-collections.jar" depends="init,setProxy,noProxy,get-custom-dep-commons-collections.jar">
-    <mkdir dir="${libdir}/commons-collections/jars/">
-    </mkdir>
-    <get dest="${libdir}/commons-collections/jars/commons-collections-3.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/commons-collections/jars/commons-collections-3.1.jar">
-    </get>
-  </target>
-  <target name="get-custom-dep-commons-collections.jar" if="commons-collections.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/commons-collections/jars/">
-    </mkdir>
-    <get dest="${libdir}/commons-collections/jars/commons-collections-3.1.jar" usetimestamp="true" ignoreerrors="true" src="${commons-collections.jar}">
-    </get>
-  </target>
-  <target name="get-dep-hsqldb.jar" description="o Download the dependency : hsqldb.jar" unless="hsqldb.jar" depends="init,setProxy,noProxy,get-custom-dep-hsqldb.jar">
-    <mkdir dir="${libdir}/hsqldb/jars/">
-    </mkdir>
-    <get dest="${libdir}/hsqldb/jars/hsqldb-1.7.3.3.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/hsqldb/jars/hsqldb-1.7.3.3.jar">
-    </get>
-  </target>
-  <target name="get-custom-dep-hsqldb.jar" if="hsqldb.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/hsqldb/jars/">
-    </mkdir>
-    <get dest="${libdir}/hsqldb/jars/hsqldb-1.7.3.3.jar" usetimestamp="true" ignoreerrors="true" src="${hsqldb.jar}">
-    </get>
-  </target>
-  <target name="get-dep-ehcache.jar" description="o Download the dependency : ehcache.jar" unless="ehcache.jar" depends="init,setProxy,noProxy,get-custom-dep-ehcache.jar">
-    <mkdir dir="${libdir}/ehcache/jars/">
-    </mkdir>
-    <get dest="${libdir}/ehcache/jars/ehcache-1.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/ehcache/jars/ehcache-1.1.jar">
-    </get>
-  </target>
-  <target name="get-custom-dep-ehcache.jar" if="ehcache.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/ehcache/jars/">
-    </mkdir>
-    <get dest="${libdir}/ehcache/jars/ehcache-1.1.jar" usetimestamp="true" ignoreerrors="true" src="${ehcache.jar}">
-    </get>
-  </target>
-  <target name="get-dep-dom4j.jar" description="o Download the dependency : dom4j.jar" unless="dom4j.jar" depends="init,setProxy,noProxy,get-custom-dep-dom4j.jar">
-    <mkdir dir="${libdir}/dom4j/jars/">
-    </mkdir>
-    <get dest="${libdir}/dom4j/jars/dom4j-1.6.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/dom4j/jars/dom4j-1.6.jar">
-    </get>
-  </target>
-  <target name="get-custom-dep-dom4j.jar" if="dom4j.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/dom4j/jars/">
-    </mkdir>
-    <get dest="${libdir}/dom4j/jars/dom4j-1.6.jar" usetimestamp="true" ignoreerrors="true" src="${dom4j.jar}">
-    </get>
-  </target>
-  <target name="get-dep-cglib.jar" description="o Download the dependency : cglib.jar" unless="cglib.jar" depends="init,setProxy,noProxy,get-custom-dep-cglib.jar">
-    <mkdir dir="${libdir}/cglib/jars/">
-    </mkdir>
-    <get dest="${libdir}/cglib/jars/cglib-full-2.0.2.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/cglib/jars/cglib-full-2.0.2.jar">
-    </get>
-  </target>
-  <target name="get-custom-dep-cglib.jar" if="cglib.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/cglib/jars/">
-    </mkdir>
-    <get dest="${libdir}/cglib/jars/cglib-full-2.0.2.jar" usetimestamp="true" ignoreerrors="true" src="${cglib.jar}">
-    </get>
-  </target>
-  <target name="get-dep-jta.jar" description="o Download the dependency : jta.jar" unless="jta.jar" depends="init,setProxy,noProxy,get-custom-dep-jta.jar">
-    <mkdir dir="${libdir}/jta/jars/">
-    </mkdir>
-    <get dest="${libdir}/jta/jars/jta-1_0_1B-classes.zip" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/jta/jars/jta-1_0_1B-classes.zip">
-    </get>
-  </target>
-  <target name="get-custom-dep-jta.jar" if="jta.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/jta/jars/">
-    </mkdir>
-    <get dest="${libdir}/jta/jars/jta-1_0_1B-classes.zip" usetimestamp="true" ignoreerrors="true" src="${jta.jar}">
-    </get>
-  </target>
-  <target name="get-deps" unless="noget" depends="get-dep-joda-time.jar,get-dep-hibernate.jar,get-dep-commons-logging-api.jar,get-dep-commons-collections.jar,get-dep-hsqldb.jar,get-dep-ehcache.jar,get-dep-dom4j.jar,get-dep-cglib.jar,get-dep-jta.jar">
-  </target>
-  <target name="setProxy" if="useProxy" depends="init">
-    <!--Proxy settings works only with a JDK 1.2 and higher.-->
-
-    <echo>Proxy used :</echo>
-    <echo>Proxy host [${proxy.host}]</echo>
-    <echo>Proxy port [${proxy.port}]</echo>
-    <echo>Proxy user [${proxy.username}]</echo>
-    <setproxy proxyuser="${proxy.username}" proxyport="${proxy.port}" proxypassword="${proxy.password}" proxyhost="${proxy.host}">
-    </setproxy>
-  </target>
-  <target name="noProxy" unless="useProxy" depends="init">
-    <echo>Proxy not used.</echo>
-  </target>
-  <target name="install-maven">
-    <get dest="${user.home}/maven-install-latest.jar" usetimestamp="true" src="${repo}/maven/maven-install-latest.jar">
-    </get>
-    <unjar dest="${maven.home}" src="${user.home}/maven-install-latest.jar">
-    </unjar>
-  </target>
-</project>
\ No newline at end of file
diff --git a/JodaTimeContrib/hibernate/checkstyle.xml b/JodaTimeContrib/hibernate/checkstyle.xml
deleted file mode 100644
index 0f1c60d63..000000000
--- a/JodaTimeContrib/hibernate/checkstyle.xml
+++ /dev/null
@@ -1,81 +0,0 @@
-<?xml version="1.0"?>
-
-<!DOCTYPE module PUBLIC
-    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
-    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">
-
-<!-- customization of default Checkstyle behavior -->
-<module name="Checker">
-  <property name="localeLanguage" value="en"/>
-  <!--module name="PackageHtml"/-->
-  <module name="TreeWalker">
-    <module name="MemberName">
-      <property name="format" value="^i[A-Z][a-zA-Z0-9]*$"/>
-    </module>
-    <module name="LocalVariableName">
-      <property name="format" value="^ex[0-9]*$"/>
-      <property name="tokens" value="PARAMETER_DEF"/>
-    </module>
-    <module name="AvoidStarImport"/>
-    <module name="RedundantImport"/>
-    <module name="UnusedImports"/>
-    
-    <module name="TabCharacter"/>
-    <module name="NeedBraces"/>
-    <!--module name="TypecastParenPad"/-->
-    <module name="WhitespaceAfter"/>
-    <module name="WhitespaceAround"/>
-    <module name="ModifierOrder"/>
-    <module name="RedundantModifier"/>
-    
-    <module name="EmptyBlock"/>
-    <module name="LeftCurly"/>
-    <module name="NeedBraces"/>
-    <module name="RightCurly"/>
-    <!--module name="AvoidNestedBlocks">
-      <property name="allowInSwitchCase" value="true"/>
-    </module-->
-    
-    <!--module name="ArrayTrailingComma"/-->
-    <!--module name="CovariantEquals"/-->
-    <module name="DoubleCheckedLocking"/>
-    <module name="EmptyStatement"/>
-    <module name="EqualsHashCode"/>
-    <!--module name="HiddenField">
-      <property name="ignoreConstructorParameter" value="true"/>
-      <property name="ignoreSetter" value="true"/>
-    </module-->
-    <module name="IllegalInstantiation">
-      <property name="classes" value="java.lang.Boolean"/>
-    </module>
-    <!--module name="SuperClone"/-->
-    <!--module name="ExplicitInitialization"/-->
-              
-    <module name="GenericIllegalRegexp">
-      <property name="format" value="System\.out\.println"/>
-    </module>
-    <module name="GenericIllegalRegexp">
-      <property name="format" value="System\.err\.println"/>
-    </module>
-    <module name="TodoComment"/>
-    <module name="UpperEll"/>
-    <module name="ArrayTypeStyle"/>
-    <module name="Indentation"/>
-          
-    <module name="RedundantThrows">
-      <property name="allowUnchecked" value="true"/>
-    </module>
-    <module name="LineLength">
-      <property name="max" value="120"/>
-    </module>
-    <module name="JavadocVariable">
-      <property name="excludeScope" value="private"/>
-    </module>
-    <module name="JavadocMethod">
-      <property name="excludeScope" value="private"/>
-      <property name="allowUndeclaredRTE" value="true"/>
-    </module>
- </module>
-</module>
-                        
-
diff --git a/JodaTimeContrib/hibernate/project.properties b/JodaTimeContrib/hibernate/project.properties
deleted file mode 100644
index 518ee544f..000000000
--- a/JodaTimeContrib/hibernate/project.properties
+++ /dev/null
@@ -1,27 +0,0 @@
-#show data on the breadcrumbs line
-maven.xdoc.date = navigation-bottom
-maven.xdoc.date.format = yyyy-MM-dd
-# maven.xdoc.version = ${pom.currentVersion}
-maven.xdoc.legend = false;
-maven.xdoc.theme.url = ./style/joda-theme.css
-
-maven.checkstyle.properties=checkstyle.xml
-maven.junit.fork=true
-maven.xdoc.poweredby.image=maven-feather.png
-maven.javadoc.links=http://java.sun.com/products/j2se/1.4/docs/api, http://joda-time.sourceforge.net/api-release
-maven.javadoc.public=true
-maven.javadoc.package=false
-maven.javadoc.private=false
-
-# Generate class files for specific VM version (e.g., 1.1 or 1.2). 
-# Note that the default value depends on the JVM that is running Ant. 
-# In particular, if you use JDK 1.4+ the generated classes will not be usable
-# for a 1.1 Java VM unless you explicitly set this attribute to the value 1.1 
-# (which is the default value for JDK 1.1 to 1.3).
-maven.compile.target = 1.1
-
-# Specifies the source version for the Java compiler.
-# Corresponds to the source attribute for the ant javac task. 
-# Valid values are 1.3, 1.4, 1.5. 
-maven.compile.source = 1.3
-
diff --git a/JodaTimeContrib/hibernate/project.xml b/JodaTimeContrib/hibernate/project.xml
deleted file mode 100644
index cf502c725..000000000
--- a/JodaTimeContrib/hibernate/project.xml
+++ /dev/null
@@ -1,155 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project>
-  <pomVersion>3</pomVersion>
-  <id>joda-time-hibernate</id>
-  <groupId>joda-time</groupId>
-  <name>Joda time Hibernate support</name>
-  <currentVersion>0.8-dev</currentVersion>
-  <shortDescription>Joda time Hibernate support</shortDescription>
-  <description>
-    Contribution to Joda-Time that adds Hibernate support
-  </description>
-
-  <url>http://joda-time.sourceforge.net/contrib/hibernate</url>
-  <logo>/images/jodatime.png</logo>
-  <issueTrackingUrl>http://sourceforge.net/tracker/?atid=617889&amp;group_id=97367&amp;func=browse</issueTrackingUrl>
-  <inceptionYear>2002</inceptionYear>
-  <package>org.joda.time.contrib.hibernate</package>
-
-  <siteAddress>shell.sourceforge.net</siteAddress>
-  <siteDirectory>/home/groups/j/jo/joda-time/htdocs/contrib/hibernate</siteDirectory>
-  <distributionDirectory>home/groups/j/jo/joda-time/htdocs/repository</distributionDirectory>
-
-  <licenses>
-    <license>
-      <name>Apache 2</name>
-      <url>http://www.apache.org/licenses/</url>
-      <distribution>repo</distribution>
-    </license>
-  </licenses>
-
-  <organization>
-    <name>Joda.org</name>
-    <url>http://www.joda.org</url>
-    <logo>/images/joda.png</logo>
-  </organization>
-
-  <repository>
-    <connection>scm:cvs:pserver:anonymous@cvs.sourceforge.net:/cvsroot/joda-time:JodaTimeContrib/hibernate</connection>
-    <url>http://cvs.sourceforge.net/viewcvs.py/joda-time/JodaTimeContrib/hibernate/</url>
-  </repository>
-
-  <mailingLists>
-    <mailingList>
-      <name>Joda Interest list</name>
-      <subscribe>http://sourceforge.net/mail/?group_id=47291</subscribe>
-      <unsubscribe>http://sourceforge.net/mail/?group_id=47291</unsubscribe>
-      <archive>http://sourceforge.net/mailarchive/forum.php?forum_id=8530</archive>
-    </mailingList>
-  </mailingLists>
-
-  <developers>
-    <developer>
-      <name>Mario Ivankovits</name>
-      <id>imario</id>
-      <email></email>
-      <roles>
-        <role>Lead developer</role>
-      </roles>
-    </developer>
-    <developer>
-      <name>Stephen Colebourne</name>
-      <id>scolebourne</id>
-      <email></email>
-      <roles>
-        <role>Website and Release manager</role>
-      </roles>
-    </developer>
-  </developers>
-
-  <dependencies>
-    <dependency>
-      <groupId>joda-time</groupId>
-      <artifactId>joda-time</artifactId>
-      <version>1.0</version>
-    </dependency>
-    <dependency>
-      <groupId>hibernate</groupId>
-      <artifactId>hibernate</artifactId>
-      <version>3.0.5</version>
-    </dependency>
-    <dependency>
-      <groupId>commons-logging</groupId>
-      <artifactId>commons-logging-api</artifactId>
-      <version>1.0.4</version>
-    </dependency>
-    <dependency>
-      <groupId>commons-collections</groupId>
-      <artifactId>commons-collections</artifactId>
-      <version>3.1</version>
-    </dependency>
-    <dependency>
-      <groupId>hsqldb</groupId>
-      <artifactId>hsqldb</artifactId>
-      <version>1.7.3.3</version>
-    </dependency>
-    <dependency>
-      <groupId>ehcache</groupId>
-      <artifactId>ehcache</artifactId>
-      <version>1.1</version>
-    </dependency>
-    <dependency>
-      <groupId>dom4j</groupId>
-      <artifactId>dom4j</artifactId>
-      <version>1.6</version>
-    </dependency>
-    <dependency>
-      <groupId>cglib</groupId>
-      <artifactId>cglib</artifactId>
-      <version>full-2.0.2</version>
-    </dependency>
-    <dependency>
-      <groupId>jta</groupId>
-      <artifactId>jta</artifactId>
-      <url>http://java.sun.com/products/jta</url>
-      <jar>jta-1_0_1B-classes.zip</jar>
-    </dependency>
-  </dependencies>
-
-  <build>
-    <sourceDirectory>src/java</sourceDirectory>
-    <unitTestSourceDirectory>src/test</unitTestSourceDirectory>
-    <unitTest>
-      <includes>
-        <include>org/joda/time/contrib/hibernate/**/Test*.java</include>
-      </includes>
-    </unitTest>
-    <resources>
-      <resource>
-        <targetPath>meta-inf</targetPath>
-        <includes>
-          <include>NOTICE.txt</include>
-        </includes>
-      </resource>
-    </resources>
-  </build>
-
-  <reports>
-     <report>maven-changelog-plugin</report>
-     <report>maven-changes-plugin</report>
-     <report>maven-checkstyle-plugin</report>
-     <!-- <report>maven-clover-plugin</report> -->
-     <report>maven-jcoverage-plugin</report>
-     <report>maven-developer-activity-plugin</report>
-     <report>maven-file-activity-plugin</report>
-     <report>maven-javadoc-plugin</report>
-     <!-- <report>maven-jellydoc-plugin</report> -->
-     <report>maven-junit-report-plugin</report>
-     <report>maven-jxr-plugin</report>
-     <report>maven-license-plugin</report>
-     <!--report>maven-linkcheck-plugin</report-->
-     <!--report>maven-statcvs-plugin</report-->
-     <!--report>maven-tasklist-plugin</report-->
-  </reports>
-
-</project>
diff --git a/JodaTimeContrib/hibernate/src/conf/MANIFEST.MF b/JodaTimeContrib/hibernate/src/conf/MANIFEST.MF
deleted file mode 100644
index 043b4d7ce..000000000
--- a/JodaTimeContrib/hibernate/src/conf/MANIFEST.MF
+++ /dev/null
@@ -1,7 +0,0 @@
-Extension-Name: @name@
-Specification-Title: Joda Time Hibernate support
-Specification-Vendor: Joda.org
-Specification-Version: 0.1
-Implementation-Vendor: Joda.org
-Implementation-Title: org.joda.time.contrib.hibernate
-Implementation-Version: @version@
diff --git a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentDateTime.java b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentDateTime.java
deleted file mode 100644
index f7dba416d..000000000
--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentDateTime.java
+++ /dev/null
@@ -1,147 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.hibernate;
-
-import org.hibernate.Hibernate;
-import org.hibernate.HibernateException;
-import org.hibernate.usertype.EnhancedUserType;
-import org.joda.time.DateTime;
-
-import java.io.Serializable;
-import java.sql.PreparedStatement;
-import java.sql.ResultSet;
-import java.sql.SQLException;
-import java.sql.Types;
-
-/**
- * Persist {@link org.joda.time.DateTime} via hibernate
- *
- * @author Mario Ivankovits (mario@ops.co.at)
- */
-public class PersistentDateTime implements EnhancedUserType
-{
-	public final static PersistentDateTime INSTANCE = new PersistentDateTime();
-
-	private static final int[] SQL_TYPES = new int[]
-    {
-        Types.TIMESTAMP,
-    };
-
-    public int[] sqlTypes()
-    {
-        return SQL_TYPES;
-    }
-
-    public Class returnedClass()
-    {
-        return DateTime.class;
-    }
-
-    public boolean equals(Object x, Object y) throws HibernateException
-    {
-        if (x == y)
-        {
-            return true;
-        }
-        if (x == null || y == null)
-        {
-            return false;
-        }
-        DateTime dtx = (DateTime) x;
-        DateTime dty = (DateTime) y;
-
-        return dtx.equals(dty);
-    }
-
-    public int hashCode(Object object) throws HibernateException
-    {
-        return object.hashCode();
-    }
-
-    public Object nullSafeGet(ResultSet resultSet, String[] strings, Object object) throws HibernateException, SQLException
-    {
-		return nullSafeGet(resultSet, strings[0]);
-
-	}
-
-	public Object nullSafeGet(ResultSet resultSet, String string) throws SQLException
-	{
-		Object timestamp = Hibernate.TIMESTAMP.nullSafeGet(resultSet, string);
-		if (timestamp == null)
-		{
-			return null;
-		}
-
-		return new DateTime(timestamp);
-	}
-
-	public void nullSafeSet(PreparedStatement preparedStatement, Object value, int index) throws HibernateException, SQLException
-	{
-		if (value == null)
-		{
-			Hibernate.TIMESTAMP.nullSafeSet(preparedStatement, null, index);
-		}
-		else
-		{
-			Hibernate.TIMESTAMP.nullSafeSet(preparedStatement, ((DateTime) value).toDate(), index);
-		}
-	}
-
-    public Object deepCopy(Object value) throws HibernateException
-    {
-        if (value == null)
-        {
-            return null;
-        }
-
-        return new DateTime(value);
-    }
-
-    public boolean isMutable()
-    {
-        return false;
-    }
-
-    public Serializable disassemble(Object value) throws HibernateException
-    {
-        return (Serializable) value;
-    }
-
-    public Object assemble(Serializable cached, Object value) throws HibernateException
-    {
-        return cached;
-    }
-
-    public Object replace(Object original, Object target, Object owner) throws HibernateException
-    {
-        return original;
-    }
-
-	public String objectToSQLString(Object object)
-	{
-		throw new UnsupportedOperationException();
-	}
-
-	public String toXMLString(Object object)
-	{
-		return object.toString();
-	}
-
-	public Object fromXMLString(String string)
-	{
-		return new DateTime(string);
-	}
-}
diff --git a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentDateTimeTZ.java b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentDateTimeTZ.java
deleted file mode 100644
index e8ec0352f..000000000
--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentDateTimeTZ.java
+++ /dev/null
@@ -1,134 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.hibernate;
-
-import org.hibernate.Hibernate;
-import org.hibernate.HibernateException;
-import org.hibernate.usertype.UserType;
-import org.joda.time.DateTime;
-import org.joda.time.DateTimeZone;
-
-import java.io.Serializable;
-import java.sql.PreparedStatement;
-import java.sql.ResultSet;
-import java.sql.SQLException;
-import java.sql.Types;
-
-/**
- * Persist {@link org.joda.time.DateTime} via hibernate.<br />
- * The timezone will be stored in an extra column
- *
- * @author Mario Ivankovits (mario@ops.co.at)
- */
-public class PersistentDateTimeTZ implements UserType
-{
-	public final static PersistentDateTimeTZ INSTANCE = new PersistentDateTimeTZ();
-
-	private static final int[] SQL_TYPES = new int[]
-    {
-        Types.TIMESTAMP,
-        Types.VARCHAR,
-    };
-
-    public int[] sqlTypes()
-    {
-        return SQL_TYPES;
-    }
-
-    public Class returnedClass()
-    {
-        return DateTime.class;
-    }
-
-    public boolean equals(Object x, Object y) throws HibernateException
-    {
-        if (x == y)
-        {
-            return true;
-        }
-        if (x == null || y == null)
-        {
-            return false;
-        }
-        DateTime dtx = (DateTime) x;
-        DateTime dty = (DateTime) y;
-
-        return dtx.equals(dty);
-    }
-
-    public int hashCode(Object object) throws HibernateException
-    {
-        return object.hashCode();
-    }
-
-    public Object nullSafeGet(ResultSet resultSet, String[] strings, Object object) throws HibernateException, SQLException
-    {
-        Object timestamp = Hibernate.TIMESTAMP.nullSafeGet(resultSet, strings[0]);
-        Object timezone = Hibernate.STRING.nullSafeGet(resultSet, strings[1]);
-        if (timestamp == null || timezone == null)
-        {
-            return null;
-        }
-
-        return new DateTime(timestamp, DateTimeZone.forID(timezone.toString()));
-    }
-
-    public void nullSafeSet(PreparedStatement preparedStatement, Object value, int index) throws HibernateException, SQLException
-    {
-        if (value == null)
-        {
-            Hibernate.TIMESTAMP.nullSafeSet(preparedStatement, null, index);
-            Hibernate.STRING.nullSafeSet(preparedStatement, null, index+1);
-        }
-        else
-        {
-            DateTime dt = (DateTime) value;
-
-            Hibernate.TIMESTAMP.nullSafeSet(preparedStatement, dt.toDate(), index);
-            Hibernate.STRING.nullSafeSet(preparedStatement, dt.getZone().getID(), index+1);
-        }
-    }
-
-    public Object deepCopy(Object value) throws HibernateException
-    {
-        if (value == null)
-        {
-            return null;
-        }
-
-        return new DateTime(value);
-    }
-
-    public boolean isMutable()
-    {
-        return false;
-    }
-
-    public Serializable disassemble(Object value) throws HibernateException
-    {
-        return (Serializable) value;
-    }
-
-    public Object assemble(Serializable cached, Object value) throws HibernateException
-    {
-        return cached;
-    }
-
-    public Object replace(Object original, Object target, Object owner) throws HibernateException
-    {
-        return original;
-    }
-}
diff --git a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentTimeOfDay.java b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentTimeOfDay.java
deleted file mode 100644
index 72dd180f2..000000000
--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentTimeOfDay.java
+++ /dev/null
@@ -1,153 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.hibernate;
-
-import org.hibernate.Hibernate;
-import org.hibernate.HibernateException;
-import org.hibernate.usertype.EnhancedUserType;
-import org.joda.time.YearMonthDay;
-import org.joda.time.TimeOfDay;
-import org.joda.time.DateTime;
-
-import java.io.Serializable;
-import java.sql.PreparedStatement;
-import java.sql.ResultSet;
-import java.sql.SQLException;
-import java.sql.Types;
-import java.sql.Time;
-
-/**
- * Persist {@link org.joda.time.TimeOfDay} via hibernate. <br />
- * This uses java.sql.Time and the time datatype of your database. <br />
- * Notice: You might loose the milliseconds part.
- *
- * @author Mario Ivankovits (mario@ops.co.at)
- */
-public class PersistentTimeOfDay implements EnhancedUserType
-{
-	private final DateTime timeBase = new DateTime(1970, 1, 1, 0, 0, 0, 0);
-	public final static PersistentTimeOfDay INSTANCE = new PersistentTimeOfDay();
-
-	private static final int[] SQL_TYPES = new int[]
-	{
-		Types.TIME,
-	};
-
-	public int[] sqlTypes()
-	{
-		return SQL_TYPES;
-	}
-
-	public Class returnedClass()
-	{
-		return TimeOfDay.class;
-	}
-
-	public boolean equals(Object x, Object y) throws HibernateException
-	{
-		if (x == y)
-		{
-			return true;
-		}
-		if (x == null || y == null)
-		{
-			return false;
-		}
-		TimeOfDay dtx = (TimeOfDay) x;
-		TimeOfDay dty = (TimeOfDay) y;
-
-		return dtx.equals(dty);
-	}
-
-	public int hashCode(Object object) throws HibernateException
-	{
-		return object.hashCode();
-	}
-
-	public Object nullSafeGet(ResultSet resultSet, String[] strings, Object object) throws HibernateException, SQLException
-	{
-		return nullSafeGet(resultSet, strings[0]);
-
-	}
-
-	public Object nullSafeGet(ResultSet resultSet, String string) throws SQLException
-	{
-		Object date = Hibernate.TIME.nullSafeGet(resultSet, string);
-		if (date == null)
-		{
-			return null;
-		}
-
-		return new TimeOfDay(date);
-	}
-
-	public void nullSafeSet(PreparedStatement preparedStatement, Object value, int index) throws HibernateException, SQLException
-	{
-		if (value == null)
-		{
-			Hibernate.TIME.nullSafeSet(preparedStatement, null, index);
-		}
-		else
-		{
-			Hibernate.TIME.nullSafeSet(preparedStatement, new Time(((TimeOfDay) value).toDateTime(timeBase).getMillis()), index);
-		}
-	}
-
-	public Object deepCopy(Object value) throws HibernateException
-	{
-		if (value == null)
-		{
-			return null;
-		}
-
-		return new TimeOfDay(value);
-	}
-
-	public boolean isMutable()
-	{
-		return false;
-	}
-
-	public Serializable disassemble(Object value) throws HibernateException
-	{
-		return (Serializable) value;
-	}
-
-	public Object assemble(Serializable cached, Object value) throws HibernateException
-	{
-		return cached;
-	}
-
-	public Object replace(Object original, Object target, Object owner) throws HibernateException
-	{
-		return original;
-	}
-
-	public String objectToSQLString(Object object)
-	{
-		throw new UnsupportedOperationException();
-	}
-
-	public String toXMLString(Object object)
-	{
-		return object.toString();
-	}
-
-	public Object fromXMLString(String string)
-	{
-		return new TimeOfDay(string);
-	}
-}
diff --git a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentTimeOfDayExact.java b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentTimeOfDayExact.java
deleted file mode 100644
index 36611c8c0..000000000
--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentTimeOfDayExact.java
+++ /dev/null
@@ -1,153 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.hibernate;
-
-import org.hibernate.Hibernate;
-import org.hibernate.HibernateException;
-import org.hibernate.usertype.EnhancedUserType;
-import org.joda.time.YearMonthDay;
-import org.joda.time.TimeOfDay;
-import org.joda.time.DateTime;
-
-import java.io.Serializable;
-import java.sql.PreparedStatement;
-import java.sql.ResultSet;
-import java.sql.SQLException;
-import java.sql.Types;
-import java.sql.Time;
-
-/**
- * Persist {@link org.joda.time.TimeOfDay} via hibernate.<br />
- * This uses a simple integer to store the time as milliseconds since 1970-1-1. <br />
- * The milliseconds will survive.
- *
- * @author Mario Ivankovits (mario@ops.co.at)
- */
-public class PersistentTimeOfDayExact implements EnhancedUserType
-{
-	private final DateTime timeBase = new DateTime(1970, 1, 1, 0, 0, 0, 0);
-	public final static PersistentTimeOfDayExact INSTANCE = new PersistentTimeOfDayExact();
-
-	private static final int[] SQL_TYPES = new int[]
-	{
-		Types.INTEGER,
-	};
-
-	public int[] sqlTypes()
-	{
-		return SQL_TYPES;
-	}
-
-	public Class returnedClass()
-	{
-		return TimeOfDay.class;
-	}
-
-	public boolean equals(Object x, Object y) throws HibernateException
-	{
-		if (x == y)
-		{
-			return true;
-		}
-		if (x == null || y == null)
-		{
-			return false;
-		}
-		TimeOfDay dtx = (TimeOfDay) x;
-		TimeOfDay dty = (TimeOfDay) y;
-
-		return dtx.equals(dty);
-	}
-
-	public int hashCode(Object object) throws HibernateException
-	{
-		return object.hashCode();
-	}
-
-	public Object nullSafeGet(ResultSet resultSet, String[] strings, Object object) throws HibernateException, SQLException
-	{
-		return nullSafeGet(resultSet, strings[0]);
-
-	}
-
-	public Object nullSafeGet(ResultSet resultSet, String string) throws SQLException
-	{
-		int value = resultSet.getInt(string);
-		if (resultSet.wasNull())
-		{
-			return null;
-		}
-
-		return new TimeOfDay(value);
-	}
-
-	public void nullSafeSet(PreparedStatement preparedStatement, Object value, int index) throws HibernateException, SQLException
-	{
-		if (value == null)
-		{
-			preparedStatement.setNull(index, SQL_TYPES[0]);
-		}
-		else
-		{
-			preparedStatement.setInt(index, (int) ((TimeOfDay) value).toDateTime(timeBase).getMillis());
-		}
-	}
-
-	public Object deepCopy(Object value) throws HibernateException
-	{
-		if (value == null)
-		{
-			return null;
-		}
-
-		return new TimeOfDay(value);
-	}
-
-	public boolean isMutable()
-	{
-		return false;
-	}
-
-	public Serializable disassemble(Object value) throws HibernateException
-	{
-		return (Serializable) value;
-	}
-
-	public Object assemble(Serializable cached, Object value) throws HibernateException
-	{
-		return cached;
-	}
-
-	public Object replace(Object original, Object target, Object owner) throws HibernateException
-	{
-		return original;
-	}
-
-	public String objectToSQLString(Object object)
-	{
-		throw new UnsupportedOperationException();
-	}
-
-	public String toXMLString(Object object)
-	{
-		return object.toString();
-	}
-
-	public Object fromXMLString(String string)
-	{
-		return new TimeOfDay(string);
-	}
-}
diff --git a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentYearMonthDay.java b/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentYearMonthDay.java
deleted file mode 100644
index b3918bb42..000000000
--- a/JodaTimeContrib/hibernate/src/java/org/joda/time/contrib/hibernate/PersistentYearMonthDay.java
+++ /dev/null
@@ -1,147 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.hibernate;
-
-import org.hibernate.Hibernate;
-import org.hibernate.HibernateException;
-import org.hibernate.usertype.EnhancedUserType;
-import org.joda.time.YearMonthDay;
-
-import java.io.Serializable;
-import java.sql.PreparedStatement;
-import java.sql.ResultSet;
-import java.sql.SQLException;
-import java.sql.Types;
-
-/**
- * Persist {@link org.joda.time.YearMonthDay} via hibernate
- *
- * @author Mario Ivankovits (mario@ops.co.at)
- */
-public class PersistentYearMonthDay implements EnhancedUserType
-{
-	public final static PersistentYearMonthDay INSTANCE = new PersistentYearMonthDay();
-
-	private static final int[] SQL_TYPES = new int[]
-    {
-        Types.DATE,
-    };
-
-    public int[] sqlTypes()
-    {
-        return SQL_TYPES;
-    }
-
-    public Class returnedClass()
-    {
-        return YearMonthDay.class;
-    }
-
-    public boolean equals(Object x, Object y) throws HibernateException
-    {
-        if (x == y)
-        {
-            return true;
-        }
-        if (x == null || y == null)
-        {
-            return false;
-        }
-        YearMonthDay dtx = (YearMonthDay) x;
-        YearMonthDay dty = (YearMonthDay) y;
-
-        return dtx.equals(dty);
-    }
-
-    public int hashCode(Object object) throws HibernateException
-    {
-        return object.hashCode();
-    }
-
-    public Object nullSafeGet(ResultSet resultSet, String[] strings, Object object) throws HibernateException, SQLException
-    {
-		return nullSafeGet(resultSet, strings[0]);
-
-	}
-
-	public Object nullSafeGet(ResultSet resultSet, String string) throws SQLException
-	{
-		Object date = Hibernate.DATE.nullSafeGet(resultSet, string);
-		if (date == null)
-		{
-			return null;
-		}
-
-		return new YearMonthDay(date);
-	}
-
-	public void nullSafeSet(PreparedStatement preparedStatement, Object value, int index) throws HibernateException, SQLException
-	{
-		if (value == null)
-		{
-			Hibernate.DATE.nullSafeSet(preparedStatement, null, index);
-		}
-		else
-		{
-			Hibernate.DATE.nullSafeSet(preparedStatement, ((YearMonthDay) value).toDateMidnight().toDate(), index);
-		}
-	}
-
-    public Object deepCopy(Object value) throws HibernateException
-    {
-        if (value == null)
-        {
-            return null;
-        }
-
-        return new YearMonthDay(value);
-    }
-
-    public boolean isMutable()
-    {
-        return false;
-    }
-
-    public Serializable disassemble(Object value) throws HibernateException
-    {
-        return (Serializable) value;
-    }
-
-    public Object assemble(Serializable cached, Object value) throws HibernateException
-    {
-        return cached;
-    }
-
-    public Object replace(Object original, Object target, Object owner) throws HibernateException
-    {
-        return original;
-    }
-
-	public String objectToSQLString(Object object)
-	{
-		throw new UnsupportedOperationException();
-	}
-
-	public String toXMLString(Object object)
-	{
-		return object.toString();
-	}
-
-	public Object fromXMLString(String string)
-	{
-		return new YearMonthDay(string);
-	}
-}
diff --git a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/Event.java b/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/Event.java
deleted file mode 100644
index 166f0644d..000000000
--- a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/Event.java
+++ /dev/null
@@ -1,38 +0,0 @@
-package org.joda.time.contrib.hibernate;
-
-import org.joda.time.DateTime;
-
-import java.io.Serializable;
-
-/**
- * PO to be stored using hibernate
- */
-public class Event implements Serializable
-{
-    private int id;
-    private DateTime dateTime;
-
-    public Event()
-    {
-    }
-
-    public int getId()
-    {
-        return id;
-    }
-
-    public void setId(int id)
-    {
-        this.id = id;
-    }
-
-    public DateTime getDateTime()
-    {
-        return dateTime;
-    }
-
-    public void setDateTime(DateTime dateTime)
-    {
-        this.dateTime = dateTime;
-    }
-}
diff --git a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/EventTZ.java b/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/EventTZ.java
deleted file mode 100644
index b3095095a..000000000
--- a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/EventTZ.java
+++ /dev/null
@@ -1,38 +0,0 @@
-package org.joda.time.contrib.hibernate;
-
-import org.joda.time.DateTime;
-
-import java.io.Serializable;
-
-/**
- * PO to be stored using hibernate
- */
-public class EventTZ implements Serializable
-{
-    private int id;
-    private DateTime dateTime;
-
-    public EventTZ()
-    {
-    }
-
-    public int getId()
-    {
-        return id;
-    }
-
-    public void setId(int id)
-    {
-        this.id = id;
-    }
-
-    public DateTime getDateTime()
-    {
-        return dateTime;
-    }
-
-    public void setDateTime(DateTime dateTime)
-    {
-        this.dateTime = dateTime;
-    }
-}
diff --git a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/HibernateTestCase.java b/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/HibernateTestCase.java
deleted file mode 100644
index 9926dcddc..000000000
--- a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/HibernateTestCase.java
+++ /dev/null
@@ -1,43 +0,0 @@
-package org.joda.time.contrib.hibernate;
-
-import junit.framework.TestCase;
-import org.hibernate.SessionFactory;
-import org.hibernate.cfg.Configuration;
-import org.hibernate.dialect.HSQLDialect;
-import org.hibernate.tool.hbm2ddl.SchemaUpdate;
-
-public abstract class HibernateTestCase extends TestCase
-{
-	private SessionFactory factory;
-
-	protected SessionFactory getSessionFactory()
-	{
-		if (this.factory == null)
-		{
-			Configuration cfg = new Configuration();
-
-			setupConfiguration(cfg);
-
-			cfg.setProperty("hibernate.connection.driver_class", "org.hsqldb.jdbcDriver");
-			cfg.setProperty("hibernate.connection.url", "jdbc:hsqldb:mem:hbmtest" + getClass().getName());
-			cfg.setProperty("hibernate.dialect", HSQLDialect.class.getName());
-
-			cfg.setProperty("hibernate.show_sql", "true");
-			SessionFactory factory = cfg.buildSessionFactory();
-
-			SchemaUpdate update = new SchemaUpdate(cfg);
-			update.execute(true, true);
-
-			this.factory = factory;
-		}
-		return factory;
-	}
-
-	protected void tearDown() throws Exception
-	{
-		this.factory.close();
-		this.factory = null;
-	}
-
-	protected abstract void setupConfiguration(Configuration cfg);
-}
diff --git a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/Schedule.java b/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/Schedule.java
deleted file mode 100644
index faf395377..000000000
--- a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/Schedule.java
+++ /dev/null
@@ -1,61 +0,0 @@
-package org.joda.time.contrib.hibernate;
-
-import org.joda.time.YearMonthDay;
-import org.joda.time.TimeOfDay;
-
-import java.io.Serializable;
-
-/**
- * PO to be stored using hibernate
- */
-public class Schedule implements Serializable
-{
-    private int id;
-    private YearMonthDay startDate;
-	private TimeOfDay nextTime;
-	private TimeOfDay nextTimeMillis;
-
-	public Schedule()
-    {
-    }
-
-    public int getId()
-    {
-        return id;
-    }
-
-    public void setId(int id)
-    {
-        this.id = id;
-    }
-
-	public YearMonthDay getStartDate()
-	{
-		return startDate;
-	}
-
-	public void setStartDate(YearMonthDay startDate)
-	{
-		this.startDate = startDate;
-	}
-
-	public TimeOfDay getNextTime()
-	{
-		return nextTime;
-	}
-
-	public void setNextTime(TimeOfDay nextTime)
-	{
-		this.nextTime = nextTime;
-	}
-
-	public TimeOfDay getNextTimeMillis()
-	{
-		return nextTimeMillis;
-	}
-
-	public void setNextTimeMillis(TimeOfDay nextTimeMillis)
-	{
-		this.nextTimeMillis = nextTimeMillis;
-	}
-}
diff --git a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentDateTime.java b/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentDateTime.java
deleted file mode 100644
index 3fa8cee11..000000000
--- a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentDateTime.java
+++ /dev/null
@@ -1,103 +0,0 @@
-package org.joda.time.contrib.hibernate;
-
-import org.hibernate.Session;
-import org.hibernate.SessionFactory;
-import org.hibernate.cfg.Configuration;
-import org.joda.time.DateTime;
-import org.joda.time.DateTimeZone;
-
-import java.io.File;
-import java.sql.SQLException;
-
-public class TestPersistentDateTime extends HibernateTestCase
-{
-    private DateTime[] writeReadTimes = new DateTime[]
-    {
-        new DateTime(2004, 2, 25, 17, 3, 45, 760),
-        new DateTime(1980, 3, 11,  2, 3, 45,   0, DateTimeZone.forOffsetHours(2))
-    };
-
-    public void testSimpleStore() throws SQLException
-    {
-        SessionFactory factory = getSessionFactory();
-
-        Session session = factory.openSession();
-
-        for (int i = 0; i<writeReadTimes.length; i++)
-        {
-            DateTime writeReadTime = writeReadTimes[i];
-
-            Event event = new Event();
-            event.setId(i);
-            event.setDateTime(writeReadTime);
-
-            session.save(event);
-        }
-
-        session.flush();
-        session.connection().commit();
-        session.close();
-
-        for (int i = 0; i<writeReadTimes.length; i++)
-        {
-            DateTime writeReadTime = writeReadTimes[i];
-
-            session = factory.openSession();
-            Event eventReread = (Event) session.get(Event.class, new Integer(i));
-
-            assertNotNull("get failed - event#'" + i + "'not found", eventReread);
-            assertNotNull("get failed - returned null", eventReread.getDateTime());
-
-            // we loose the timezone, so we have to normalize both to offset=0
-            assertEquals("get failed - returned different time",
-                writeReadTime.toDateTime(DateTimeZone.forOffsetHours(0)),
-                eventReread.getDateTime().toDateTime(DateTimeZone.forOffsetHours(0)));
-
-            session.close();
-        }
-    }
-
-    public void testStoreWithTimezone() throws SQLException
-    {
-        SessionFactory factory = getSessionFactory();
-
-        Session session = factory.openSession();
-
-        for (int i = 0; i<writeReadTimes.length; i++)
-        {
-            DateTime writeReadTime = writeReadTimes[i];
-
-            EventTZ event = new EventTZ();
-            event.setId(i);
-            event.setDateTime(writeReadTime);
-
-            session.save(event);
-        }
-
-        session.flush();
-        session.connection().commit();
-        session.close();
-
-        for (int i = 0; i<writeReadTimes.length; i++)
-        {
-            DateTime writeReadTime = writeReadTimes[i];
-
-            session = factory.openSession();
-            EventTZ eventReread = (EventTZ) session.get(EventTZ.class, new Integer(i));
-
-            assertNotNull("get failed - event#'" + i + "'not found", eventReread);
-            assertNotNull("get failed - returned null", eventReread.getDateTime());
-
-            assertEquals("get failed - returned different time",
-                writeReadTime, eventReread.getDateTime());
-        }
-		
-		session.close();
-    }
-
-	protected void setupConfiguration(Configuration cfg)
-	{
-		cfg.addFile(new File("src/test/org/joda/time/contrib/hibernate/event.hbm.xml"));
-		cfg.addFile(new File("src/test/org/joda/time/contrib/hibernate/eventTZ.hbm.xml"));
-	}
-}
diff --git a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentTimeOfDay.java b/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentTimeOfDay.java
deleted file mode 100644
index b97f1a870..000000000
--- a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentTimeOfDay.java
+++ /dev/null
@@ -1,71 +0,0 @@
-package org.joda.time.contrib.hibernate;
-
-import org.hibernate.Session;
-import org.hibernate.SessionFactory;
-import org.hibernate.cfg.Configuration;
-import org.joda.time.TimeOfDay;
-
-import java.io.File;
-import java.sql.SQLException;
-
-public class TestPersistentTimeOfDay extends HibernateTestCase
-{
-    private TimeOfDay[] writeReadTimes = new TimeOfDay[]
-    {
-        new TimeOfDay(12, 10, 31),
-        new TimeOfDay(23,  7, 43, 120)
-    };
-
-    public void testSimpleStore() throws SQLException
-    {
-        SessionFactory factory = getSessionFactory();
-
-        Session session = factory.openSession();
-
-        for (int i = 0; i<writeReadTimes.length; i++)
-        {
-            TimeOfDay writeReadTime = writeReadTimes[i];
-
-            Schedule event = new Schedule();
-            event.setId(i);
-            event.setNextTime(writeReadTime);
-
-            session.save(event);
-        }
-
-        session.flush();
-        session.connection().commit();
-        session.close();
-
-        for (int i = 0; i<writeReadTimes.length; i++)
-        {
-            TimeOfDay writeReadTime = writeReadTimes[i];
-
-            session = factory.openSession();
-            Schedule eventReread = (Schedule) session.get(Schedule.class, new Integer(i));
-
-            assertNotNull("get failed - event#'" + i + "'not found", eventReread);
-            assertNotNull("get failed - returned null", eventReread.getNextTime());
-
-			TimeOfDay reReadTime = eventReread.getNextTime();
-			if (writeReadTime.getHourOfDay() != reReadTime.getHourOfDay() ||
-				writeReadTime.getMinuteOfHour() != reReadTime.getMinuteOfHour() ||
-				writeReadTime.getSecondOfMinute() != reReadTime.getSecondOfMinute())
-			{
-				fail("get failed - returned different date. expected " + writeReadTime + " was " + eventReread.getNextTime());
-			}
-
-			if (writeReadTime.getMillisOfSecond() != reReadTime.getMillisOfSecond())
-			{
-				System.out.println("millis different, might happen?");
-			}
-		}
-
-		session.close();
-    }
-
-	protected void setupConfiguration(Configuration cfg)
-	{
-		cfg.addFile(new File("src/test/org/joda/time/contrib/hibernate/schedule.hbm.xml"));
-	}
-}
diff --git a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentTimeOfDayExact.java b/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentTimeOfDayExact.java
deleted file mode 100644
index 6fe259290..000000000
--- a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentTimeOfDayExact.java
+++ /dev/null
@@ -1,60 +0,0 @@
-package org.joda.time.contrib.hibernate;
-
-import org.hibernate.Session;
-import org.hibernate.SessionFactory;
-import org.hibernate.cfg.Configuration;
-import org.joda.time.TimeOfDay;
-
-import java.io.File;
-import java.sql.SQLException;
-
-public class TestPersistentTimeOfDayExact extends HibernateTestCase
-{
-    private TimeOfDay[] writeReadTimes = new TimeOfDay[]
-    {
-        new TimeOfDay(12, 10, 31),
-        new TimeOfDay(23,  7, 43, 120)
-    };
-
-    public void testSimpleStore() throws SQLException
-    {
-        SessionFactory factory = getSessionFactory();
-
-        Session session = factory.openSession();
-
-        for (int i = 0; i<writeReadTimes.length; i++)
-        {
-            TimeOfDay writeReadTime = writeReadTimes[i];
-
-            Schedule event = new Schedule();
-            event.setId(i);
-            event.setNextTimeMillis(writeReadTime);
-
-            session.save(event);
-        }
-
-        session.flush();
-        session.connection().commit();
-        session.close();
-
-        for (int i = 0; i<writeReadTimes.length; i++)
-        {
-            TimeOfDay writeReadTime = writeReadTimes[i];
-
-            session = factory.openSession();
-            Schedule eventReread = (Schedule) session.get(Schedule.class, new Integer(i));
-
-            assertNotNull("get failed - event#'" + i + "'not found", eventReread);
-            assertNotNull("get failed - returned null", eventReread.getNextTimeMillis());
-
-			assertEquals("get failed - returned different date.", writeReadTime, eventReread.getNextTimeMillis());
-		}
-
-		session.close();
-    }
-
-	protected void setupConfiguration(Configuration cfg)
-	{
-		cfg.addFile(new File("src/test/org/joda/time/contrib/hibernate/schedule.hbm.xml"));
-	}
-}
diff --git a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentYearMonthDay.java b/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentYearMonthDay.java
deleted file mode 100644
index f1a36ebe7..000000000
--- a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/TestPersistentYearMonthDay.java
+++ /dev/null
@@ -1,60 +0,0 @@
-package org.joda.time.contrib.hibernate;
-
-import org.hibernate.Session;
-import org.hibernate.SessionFactory;
-import org.hibernate.cfg.Configuration;
-import org.joda.time.YearMonthDay;
-
-import java.io.File;
-import java.sql.SQLException;
-
-public class TestPersistentYearMonthDay extends HibernateTestCase
-{
-    private YearMonthDay[] writeReadTimes = new YearMonthDay[]
-    {
-        new YearMonthDay(2004, 2, 25),
-        new YearMonthDay(1980, 3, 11)
-    };
-
-    public void testSimpleStore() throws SQLException
-    {
-        SessionFactory factory = getSessionFactory();
-
-        Session session = factory.openSession();
-
-        for (int i = 0; i<writeReadTimes.length; i++)
-        {
-            YearMonthDay writeReadTime = writeReadTimes[i];
-
-            Schedule event = new Schedule();
-            event.setId(i);
-            event.setStartDate(writeReadTime);
-
-            session.save(event);
-        }
-
-        session.flush();
-        session.connection().commit();
-        session.close();
-
-        for (int i = 0; i<writeReadTimes.length; i++)
-        {
-            YearMonthDay writeReadTime = writeReadTimes[i];
-
-            session = factory.openSession();
-            Schedule eventReread = (Schedule) session.get(Schedule.class, new Integer(i));
-
-            assertNotNull("get failed - event#'" + i + "'not found", eventReread);
-            assertNotNull("get failed - returned null", eventReread.getStartDate());
-
-            assertEquals("get failed - returned different date", writeReadTime, eventReread.getStartDate());
-        }
-		
-		session.close();
-    }
-
-	protected void setupConfiguration(Configuration cfg)
-	{
-		cfg.addFile(new File("src/test/org/joda/time/contrib/hibernate/schedule.hbm.xml"));
-	}
-}
diff --git a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/event.hbm.xml b/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/event.hbm.xml
deleted file mode 100644
index 31995a77d..000000000
--- a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/event.hbm.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE hibernate-mapping PUBLIC
-        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
-        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
-
-<hibernate-mapping package="org.joda.time.contrib.hibernate">
-
-        <class name="Event">
-
-                <id name="id" />
-
-                <property type="org.joda.time.contrib.hibernate.PersistentDateTime" name="dateTime"/>
-
-        </class>
-
-</hibernate-mapping>
diff --git a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/eventTZ.hbm.xml b/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/eventTZ.hbm.xml
deleted file mode 100644
index 60eec9e44..000000000
--- a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/eventTZ.hbm.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE hibernate-mapping PUBLIC
-        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
-        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
-
-<hibernate-mapping package="org.joda.time.contrib.hibernate">
-
-        <class name="EventTZ">
-
-                <id name="id" />
-
-                <property type="org.joda.time.contrib.hibernate.PersistentDateTimeTZ" name="dateTime">
-                    <column name="dateTimeTime"/>
-                    <column name="dateTimeTZ"/>
-                </property>
-
-        </class>
-
-</hibernate-mapping>
diff --git a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/schedule.hbm.xml b/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/schedule.hbm.xml
deleted file mode 100644
index d0cbb236d..000000000
--- a/JodaTimeContrib/hibernate/src/test/org/joda/time/contrib/hibernate/schedule.hbm.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE hibernate-mapping PUBLIC
-        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
-        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
-
-<hibernate-mapping package="org.joda.time.contrib.hibernate">
-
-        <class name="Schedule">
-
-                <id name="id" />
-
-
-				<property type="org.joda.time.contrib.hibernate.PersistentYearMonthDay" name="startDate"/>
-
-				<property type="org.joda.time.contrib.hibernate.PersistentTimeOfDay" name="nextTime"/>
-
-				<property type="org.joda.time.contrib.hibernate.PersistentTimeOfDayExact" name="nextTimeMillis"/>
-        </class>
-
-</hibernate-mapping>
diff --git a/JodaTimeContrib/hibernate/xdocs/images/joda.png b/JodaTimeContrib/hibernate/xdocs/images/joda.png
deleted file mode 100644
index 435df26a39732551d2f7ed9b1fdf288be1c83875..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2919
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
Inz-Nl59h<Bq5uE@

diff --git a/JodaTimeContrib/hibernate/xdocs/images/jodatime.png b/JodaTimeContrib/hibernate/xdocs/images/jodatime.png
deleted file mode 100644
index 4d5d609868c392a2871e8f15100f4ba54b7e92b6..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2850
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
R4?N!j7N#hZS4Oy){{UxZaMAz(

diff --git a/JodaTimeContrib/hibernate/xdocs/index.xml b/JodaTimeContrib/hibernate/xdocs/index.xml
deleted file mode 100644
index 17ff9296b..000000000
--- a/JodaTimeContrib/hibernate/xdocs/index.xml
+++ /dev/null
@@ -1,74 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Hibernate support - Home</title>
-  <author email="scolebourne@users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Joda Time - Hibernate support">
-<p>
-<a href="/index.html">Joda-Time</a> provides a complete quality alternative
-to the JDK date and time classes.
-At some point however, many projects need to persist these classes to a database.
-One popular tool for achieving this is <a href="http://www.hibernate.org/">Hibernate</a>.
-</p>
-<p>
-To ease the integration of Joda-Time and Hibernate, this sub-project was setup.
-It aims to provide the classes necessary to persist Joda-Time objects.
-</p>
-<p>
-<!--As a flavour of the tags, here's how to format a Joda-Time object in JSP:
-<source>
-  &lt;%@taglib prefix="joda" uri="http://www.joda.org/joda/time/tags" %&gt;
-  &lt;% pageContext.setAttribute("now", new org.joda.time.DateTime()); %&gt;
-  <b>&lt;joda:format value="${now}" style="SM" /&gt;</b>
-</source>-->
-<!--Version 0.8 was released on 2005-xxxx -
-<a href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=xxxx">Download now</a>-->
-</p>
-</section>
-
-
-<section name="Documentation">
-<p>
-Various documentation is available:
-<ul>
-<!--<li>The user guide - <a href="userguide.html">user guide</a></li>
-<li>The javadoc for the <a href="api-release/index.html">current release</a></li>-->
-<li>The javadoc for the <a href="apidocs/index.html">latest CVS</a></li>
-<!--li>A <a href="faq.html">FAQ</a> list</li-->
-<li>The <a href="http://cvs.sourceforge.net/viewcvs.py/joda-time/JodaTimeContrib/hibernate">CVS repository</a></li>
-</ul>
-</p>
-</section>
-
-
-<section name="Releases">
-<p>
-None yet.
-<!--<a href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=xxxx">Release 0.8</a>
-is the current latest release.
-This release is a beta release and may have bugs.-->
-</p>
-<p>
-The dependencies are Joda-Time 1.1 and Hibernate 3.0 (plus associated dependencies).
-We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
-</p>
-</section>
-
-
-<section name="Support">
-<p>
-The Joda-Time Hibernate support library was contributed to Joda-Time by Mario Ivankovits.
-</p>
-<p>
-For support on bugs, using the library or to volunteer please contact the <a href="mail-lists.html">mailing list</a>
-(or email direct to the list via <a href="mailto:joda-interest@lists.sourceforge.net">joda-interest@lists.sourceforge.net</a>).
-</p>
-</section>
-</body>
-</document>
diff --git a/JodaTimeContrib/hibernate/xdocs/licensecover.xml b/JodaTimeContrib/hibernate/xdocs/licensecover.xml
deleted file mode 100644
index e11306f9f..000000000
--- a/JodaTimeContrib/hibernate/xdocs/licensecover.xml
+++ /dev/null
@@ -1,41 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Hibernate support - License</title>
-  <author email="scolebourne@joda.org">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="License information">
-<p>
-Joda-Time source code is released under the business-friendly
-<a href="license.html">Apache 2.0 license</a>.
-This is the same license as <a href="http://ant.apache.org">Ant</a>,
-<a href="http://www.springframework.org">Spring</a>,
-<a href="http://tomcat.apache.org">Tomcat</a> and
-<a href="http://jakarta.apache.org">Jakarta</a>.
-</p>
-<p>
-The Hibernate support contributed library depends on
-<a href="http://www.hibernate.org/">Hibernate</a>.
-Hibernate is <a href="http://www.gnu.org/copyleft/lesser.html">LGPL</a> licenced
-with specific <a href="http://www.hibernate.org/196.html">clarifications</a>.
-As a user of this library you must decide how the LGPL applies to you.
-</p>
-<p>
-As is normal with the <a href="license.html">Apache 2.0 license</a>, a
-NOTICE file exists for Joda-Time Hibernate support:
-<source>
-=============================================================================
-= NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
-=============================================================================
-This product includes software developed by
-Joda.org (http://www.joda.org/).
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTimeContrib/hibernate/xdocs/navigation.xml b/JodaTimeContrib/hibernate/xdocs/navigation.xml
deleted file mode 100644
index 6af8af8ed..000000000
--- a/JodaTimeContrib/hibernate/xdocs/navigation.xml
+++ /dev/null
@@ -1,42 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<project name="Joda Time">
-
-  <title>Joda Time</title>
-  <organizationLogo href="">Joda.org</organizationLogo>
-
-  <body>
-    <links>
-      <item name="Joda-Time" href="../../index.html"/>
-      <item name="JSP tags" href="../jsptags/index.html"/>
-      <item name="Hibernate" href="/index.html"/>
-    </links>
-    <menu name="Joda Time Hibernate">
-      <item name="Overview" href="index.html"/>
-      <item name="Users guide" href="userguide.html"/>
-<!--      <item name="Javadoc (Release)" href="/api-release/index.html"/>-->
-      <item name="License" href="licensecover.html"/>
-      <item name="Download" href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=xxxxxx"/>
-    </menu>
-    <menu name="Development">
-      <item name="Sourceforge" href="http://sourceforge.net/projects/joda-time/"/>
-      <item name="Mailing lists" href="mail-lists.html"/>
-      <item name="Tasks" href="tasks.html"/>
-      <item name="CVS" href="http://cvs.sourceforge.net/viewcvs.py/joda-time/JodaTimeContrib/hibernate/"/>
-      <item name="Javadoc (CVS)" href="apidocs/index.html"/>
-    </menu>
-
-    <menu name="Joda">
-      <item name="Joda home" href="http://joda.sourceforge.net"/>
-      <item name="Time" href="http://joda-time.sourceforge.net/index.html"/>
-      <item name="Beans" href="http://joda.sourceforge.net/beans.html"/>
-      <item name="Primitives" href="http://joda-primitives.sourceforge.net/index.html"/>
-    </menu>
-
-    <footer>
-      <a href="http://sourceforge.net">
-        <img src="http://sourceforge.net/sflogo.php?group_id=97367&amp;type=2" width="125" height="37" border="0" alt="SourceForge.net Logo" />
-      </a>
-    </footer>
-  </body>
-</project>
diff --git a/JodaTimeContrib/hibernate/xdocs/stylesheets/joda-theme.css b/JodaTimeContrib/hibernate/xdocs/stylesheets/joda-theme.css
deleted file mode 100644
index 5d616b279..000000000
--- a/JodaTimeContrib/hibernate/xdocs/stylesheets/joda-theme.css
+++ /dev/null
@@ -1,121 +0,0 @@
-body, td, select, input, li{
-  font-family: Helvetica, Arial, sans-serif;
-  font-size: 13px;
-  background-color: #fff;
-}
-a {
-  text-decoration: none;
-}
-a:link {
-  color:#009;
-}
-a:visited  {
-  color:#009;
-}
-a:active, a:hover {
-  text-decoration: underline;
-}
-a.externalLink, a.externalLink:link, a.externalLink:visited, a.externalLink:active, a.externalLink:hover {
-  background: url(../images/external.png) right center no-repeat;
-  padding-right: 15px;
-}
-a.newWindow, a.newWindow:link, a.newWindow:visited, a.newWindow:active, a.newWindow:hover {
-  background: url(../images/newwindow.png) right center no-repeat;
-  padding-right: 18px;
-}
-h2 {
-  font-family: Verdana, Helvetica, Arial, sans-serif;
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #999;
-  color: #006;
-  background-color: #eef;
-  font-weight:bold;
-  font-size: 16px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-h3 {
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #aaa;
-  color: #006;
-  background-color: #eee;
-  font-weight: normal;
-  font-size: 14px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-p, ul {
-  font-size: 13px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-#banner {
-  background-color: #eef;
-  border-bottom: 1px solid #aaa;
-}
-#organizationLogo img, #projectLogo img {
-  border: 1px solid #999;
-}
-#breadcrumbs {
-  padding-top: 1px;
-  padding-bottom: 2px;
-  border-bottom: 1px solid #aaa;
-  background-color: #ddf;
-}
-#leftColumn {
-  margin: 8px 0 8px 4px;
-  border: 1px solid #999;
-  background-color: #eef;
-}
-#navcolumn {
-  padding: 6px 4px 0 6px;
-}
-#navcolumn h5 {
-  font-size: 12px;
-  border-bottom: 1px solid #aaaaaa;
-  padding-top: 2px;
-  font-weight: normal;
-}
-#navcolumn li {
-  font-size: 12px;
-  padding-left: 12px;
-  background-color: #eef;
-}
-#navcolumn a:active, #navcolumn a:hover {
-  text-decoration: none;
-}
-#lastPublished {
-  font-size: 10px;
-}
-table.bodyTable th {
-  color: white;
-  background-color: #bbb;
-  text-align: left;
-  font-weight: bold;
-  font-size: 13px;
-}
-
-table.bodyTable th, table.bodyTable td {
-  font-size: 13px;
-}
-
-table.bodyTable tr.a {
-  background-color: #ddd;
-}
-
-table.bodyTable tr.b {
-  background-color: #eee;
-}
-
-.source {
-  border: 1px solid #999;
-  padding: 8px;
-  margin: 6px;
-}
-#footer {
-  background-color: #eef;
-  border-top: 1px solid #999;
-}
-body {
-  padding-bottom: 0px;
-}
diff --git a/JodaTimeContrib/hibernate/xdocs/stylesheets/maven-theme.css b/JodaTimeContrib/hibernate/xdocs/stylesheets/maven-theme.css
deleted file mode 100644
index 5d616b279..000000000
--- a/JodaTimeContrib/hibernate/xdocs/stylesheets/maven-theme.css
+++ /dev/null
@@ -1,121 +0,0 @@
-body, td, select, input, li{
-  font-family: Helvetica, Arial, sans-serif;
-  font-size: 13px;
-  background-color: #fff;
-}
-a {
-  text-decoration: none;
-}
-a:link {
-  color:#009;
-}
-a:visited  {
-  color:#009;
-}
-a:active, a:hover {
-  text-decoration: underline;
-}
-a.externalLink, a.externalLink:link, a.externalLink:visited, a.externalLink:active, a.externalLink:hover {
-  background: url(../images/external.png) right center no-repeat;
-  padding-right: 15px;
-}
-a.newWindow, a.newWindow:link, a.newWindow:visited, a.newWindow:active, a.newWindow:hover {
-  background: url(../images/newwindow.png) right center no-repeat;
-  padding-right: 18px;
-}
-h2 {
-  font-family: Verdana, Helvetica, Arial, sans-serif;
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #999;
-  color: #006;
-  background-color: #eef;
-  font-weight:bold;
-  font-size: 16px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-h3 {
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #aaa;
-  color: #006;
-  background-color: #eee;
-  font-weight: normal;
-  font-size: 14px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-p, ul {
-  font-size: 13px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-#banner {
-  background-color: #eef;
-  border-bottom: 1px solid #aaa;
-}
-#organizationLogo img, #projectLogo img {
-  border: 1px solid #999;
-}
-#breadcrumbs {
-  padding-top: 1px;
-  padding-bottom: 2px;
-  border-bottom: 1px solid #aaa;
-  background-color: #ddf;
-}
-#leftColumn {
-  margin: 8px 0 8px 4px;
-  border: 1px solid #999;
-  background-color: #eef;
-}
-#navcolumn {
-  padding: 6px 4px 0 6px;
-}
-#navcolumn h5 {
-  font-size: 12px;
-  border-bottom: 1px solid #aaaaaa;
-  padding-top: 2px;
-  font-weight: normal;
-}
-#navcolumn li {
-  font-size: 12px;
-  padding-left: 12px;
-  background-color: #eef;
-}
-#navcolumn a:active, #navcolumn a:hover {
-  text-decoration: none;
-}
-#lastPublished {
-  font-size: 10px;
-}
-table.bodyTable th {
-  color: white;
-  background-color: #bbb;
-  text-align: left;
-  font-weight: bold;
-  font-size: 13px;
-}
-
-table.bodyTable th, table.bodyTable td {
-  font-size: 13px;
-}
-
-table.bodyTable tr.a {
-  background-color: #ddd;
-}
-
-table.bodyTable tr.b {
-  background-color: #eee;
-}
-
-.source {
-  border: 1px solid #999;
-  padding: 8px;
-  margin: 6px;
-}
-#footer {
-  background-color: #eef;
-  border-top: 1px solid #999;
-}
-body {
-  padding-bottom: 0px;
-}
diff --git a/JodaTimeContrib/hibernate/xdocs/tasks.xml b/JodaTimeContrib/hibernate/xdocs/tasks.xml
deleted file mode 100644
index c33821dde..000000000
--- a/JodaTimeContrib/hibernate/xdocs/tasks.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Hibernate support - Tasks outstanding</title>
-  <author email="scolebourne@users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Tasks outstanding">
-<p>
-The project needs a release!
-Contact the mailing lists for more details or to help.
-</p>
-</section>
-
- </body>
-</document>
diff --git a/JodaTimeContrib/hibernate/xdocs/userguide.xml b/JodaTimeContrib/hibernate/xdocs/userguide.xml
deleted file mode 100644
index 7f894ad83..000000000
--- a/JodaTimeContrib/hibernate/xdocs/userguide.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Hibernate support - User Guide</title>
-  <author email="scolebourne@users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-<body>
-
-<!-- ========================================================================= -->
-
-<section name="Introduction">
-<p>
-<a href="/index.html">Joda-Time</a> Hibernate support provides classes to
-persist Joda-Time based date and time objects to a database using Hibernate.
-</p>
-
-<!-- ========================================================================= -->
-
-<subsection name="TODO">
-<p>
-TODO
-</p>
-</subsection>
-</section>
-
-<!-- ========================================================================= -->
-
-</body>
-</document>
diff --git a/JodaTimeContrib/holiday/.cvsignore b/JodaTimeContrib/holiday/.cvsignore
deleted file mode 100644
index e3edba998..000000000
--- a/JodaTimeContrib/holiday/.cvsignore
+++ /dev/null
@@ -1,5 +0,0 @@
-bin
-.settings
-.classpath
-.project
-.checkstyle
diff --git a/JodaTimeContrib/holiday/LICENSE.txt b/JodaTimeContrib/holiday/LICENSE.txt
deleted file mode 100644
index d64569567..000000000
--- a/JodaTimeContrib/holiday/LICENSE.txt
+++ /dev/null
@@ -1,202 +0,0 @@
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
diff --git a/JodaTimeContrib/holiday/NOTICE.txt b/JodaTimeContrib/holiday/NOTICE.txt
deleted file mode 100644
index dffbcf31c..000000000
--- a/JodaTimeContrib/holiday/NOTICE.txt
+++ /dev/null
@@ -1,5 +0,0 @@
-=============================================================================
-= NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
-=============================================================================
-This product includes software developed by
-Joda.org (http://www.joda.org/).
diff --git a/JodaTimeContrib/holiday/checkstyle.xml b/JodaTimeContrib/holiday/checkstyle.xml
deleted file mode 100644
index 37326e2f0..000000000
--- a/JodaTimeContrib/holiday/checkstyle.xml
+++ /dev/null
@@ -1,81 +0,0 @@
-<?xml version="1.0"?>
-
-<!DOCTYPE module PUBLIC
-    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
-    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">
-
-<!-- customization of default Checkstyle behavior -->
-<module name="Checker">
-  <property name="localeLanguage" value="en"/>
-  <!--module name="PackageHtml"/-->
-  <module name="TreeWalker">
-    <module name="MemberName">
-      <property name="format" value="^[a-zA-Z][a-zA-Z0-9]*$"/>
-    </module>
-    <module name="LocalVariableName">
-      <property name="format" value="^ex[0-9]*$"/>
-      <property name="tokens" value="PARAMETER_DEF"/>
-    </module>
-    <module name="AvoidStarImport"/>
-    <module name="RedundantImport"/>
-    <module name="UnusedImports"/>
-    
-    <module name="TabCharacter"/>
-    <module name="NeedBraces"/>
-    <!--module name="TypecastParenPad"/-->
-    <module name="WhitespaceAfter"/>
-    <module name="WhitespaceAround"/>
-    <module name="ModifierOrder"/>
-    <module name="RedundantModifier"/>
-    
-    <module name="EmptyBlock"/>
-    <module name="LeftCurly"/>
-    <module name="NeedBraces"/>
-    <module name="RightCurly"/>
-    <!--module name="AvoidNestedBlocks">
-      <property name="allowInSwitchCase" value="true"/>
-    </module-->
-    
-    <!--module name="ArrayTrailingComma"/-->
-    <!--module name="CovariantEquals"/-->
-    <module name="DoubleCheckedLocking"/>
-    <module name="EmptyStatement"/>
-    <module name="EqualsHashCode"/>
-    <!--module name="HiddenField">
-      <property name="ignoreConstructorParameter" value="true"/>
-      <property name="ignoreSetter" value="true"/>
-    </module-->
-    <module name="IllegalInstantiation">
-      <property name="classes" value="java.lang.Boolean"/>
-    </module>
-    <!--module name="SuperClone"/-->
-    <!--module name="ExplicitInitialization"/-->
-              
-    <module name="GenericIllegalRegexp">
-      <property name="format" value="System\.out\.println"/>
-    </module>
-    <module name="GenericIllegalRegexp">
-      <property name="format" value="System\.err\.println"/>
-    </module>
-    <module name="TodoComment"/>
-    <module name="UpperEll"/>
-    <module name="ArrayTypeStyle"/>
-    <!--module name="Indentation"/-->
-          
-    <module name="RedundantThrows">
-      <property name="allowUnchecked" value="true"/>
-    </module>
-    <module name="LineLength">
-      <property name="max" value="120"/>
-    </module>
-    <module name="JavadocVariable">
-      <property name="excludeScope" value="private"/>
-    </module>
-    <module name="JavadocMethod">
-      <property name="excludeScope" value="private"/>
-      <property name="allowUndeclaredRTE" value="true"/>
-    </module>
- </module>
-</module>
-                        
-
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/CanadaStatutoryHolidays.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/CanadaStatutoryHolidays.java
deleted file mode 100644
index f4a85a5a0..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/CanadaStatutoryHolidays.java
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday;
-
-import org.joda.time.contrib.holiday.anniversary.AnnualHolidays;
-import org.joda.time.contrib.holiday.anniversary.CanadaAnniversaries;
-import org.joda.time.contrib.holiday.anniversary.CommonAnniversaries;
-import org.joda.time.contrib.holiday.anniversary.NamedAnniversaryFactory;
-
-/**
- * 
- * @author Al Major
- *
- */
-public class CanadaStatutoryHolidays {
-    static AnnualHolidays<NamedAnniversaryFactory.NamedAnniversary, NamedAnniversaryFactory>
-    FEDERAL = new AnnualHolidays<NamedAnniversaryFactory.NamedAnniversary, NamedAnniversaryFactory> () {
-        protected void buildFactories () {
-            addFactory(new NamedAnniversaryFactory("New Year's Day",
-                    CanadaAnniversaries.NEW_YEAR_HOLIDAY));
-            addFactory(new NamedAnniversaryFactory("Good Friday",
-                    CommonAnniversaries.GOOD_FRIDAY));
-            addFactory(new NamedAnniversaryFactory("Victoria Day",
-                    CanadaAnniversaries.VICTORIA_DAY));
-            addFactory(new NamedAnniversaryFactory("Canada Day",
-                    CanadaAnniversaries.CANADA_DAY_HOLIDAY));
-            addFactory(new NamedAnniversaryFactory("Labour Day",
-                    CommonAnniversaries.LABOR_DAY));
-            addFactory(new NamedAnniversaryFactory("Thanksgiving Day",
-                    CanadaAnniversaries.THANKSGIVING));
-            addFactory(new NamedAnniversaryFactory("Remembrance Day",
-                    CanadaAnniversaries.REMEMBRANCE_DAY_HOLIDAY));
-            addFactory(new NamedAnniversaryFactory("Christmas Day",
-                    CanadaAnniversaries.CHRISTMAS_HOLIDAY));
-            addFactory(new NamedAnniversaryFactory("Boxing Day",
-                    CanadaAnniversaries.BOXING_DAY_HOLIDAY));
-        }
-    };
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/GBHolidays.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/GBHolidays.java
deleted file mode 100644
index 6f15be8a5..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/GBHolidays.java
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday;
-
-import org.joda.time.contrib.holiday.anniversary.AnnualHolidays;
-import org.joda.time.contrib.holiday.anniversary.CommonAnniversaries;
-import org.joda.time.contrib.holiday.anniversary.GBAnniversaries;
-import org.joda.time.contrib.holiday.anniversary.NamedAnniversaryFactory;
-/**
- * 
- * @author Al Major
- *
- */
-public class GBHolidays {
-    static AnnualHolidays<NamedAnniversaryFactory.NamedAnniversary, NamedAnniversaryFactory>
-        ENGLISH_BANK = new AnnualHolidays<NamedAnniversaryFactory.NamedAnniversary, NamedAnniversaryFactory> () {
-        protected void buildFactories () {
-            addFactory(new NamedAnniversaryFactory("New Year's Day",
-                    CommonAnniversaries.NEW_YEAR));
-            addFactory(new NamedAnniversaryFactory("Good Friday",
-                    CommonAnniversaries.GOOD_FRIDAY));
-            addFactory(new NamedAnniversaryFactory("Easter Monday",
-                    CommonAnniversaries.EASTER_MONDAY));
-            addFactory(new NamedAnniversaryFactory("May Day Bank Holiday",
-                    GBAnniversaries.MAY_DAY_BANK_HOLIDAY));
-            addFactory(new NamedAnniversaryFactory("Spring Bank Holiday",
-                    GBAnniversaries.SPRING_BANK_HOLIDAY));
-            addFactory(new NamedAnniversaryFactory("Battle of the Boyne",
-                    GBAnniversaries.JULY_12));
-            addFactory(new NamedAnniversaryFactory("Summer Bank Holiday",
-                    GBAnniversaries.SUMMER_BANK_HOLIDAY));
-            addFactory(new NamedAnniversaryFactory("Christmas Day",
-                    CommonAnniversaries.CHRISTMAS));
-            addFactory(new NamedAnniversaryFactory("Boxing Day",
-                    CommonAnniversaries.BOXING_DAY));
-        }
-    };
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java
deleted file mode 100644
index a2b80a1ca..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/Holiday.java
+++ /dev/null
@@ -1,106 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Locale;
-import java.util.Map;
-
-import org.joda.time.DateTimeZone;
-import org.joda.time.MutableDateTime;
-import org.joda.time.YearMonthDay;
-
-/**
- * Holiday defines a specially named day and the rules for creating it.
- * The named day may be a holiday, anniversary or other day with
- * particular meaning.
- *
- * @author Al Major
- * @author Stephen Colebourne
- * @version $Id$
- */
-public class Holiday {
-
-    /** The id of the holiday. */
-    private String iId;
-    /** The name of the holiday. */
-    private Map iNames;
-    /** The list of HolidayRule objects. */
-    private List iHolidayRules = new ArrayList();
-
-    /**
-     * Constructor.
-     */
-    Holiday() {
-        super();
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the ID of the holiday.
-     *
-     * @return the id of the holiday
-     */
-    public String getID() {
-        return iId;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the name of the holiday.
-     * This method supports intelligent name lookup by locale.
-     *
-     * @param locale  the locale to get the name in
-     * @return the name of the holiday
-     */
-    public String getName(Locale locale) {
-        String localeStr = locale.toString();
-        String name = (String) iNames.get(localeStr);
-        if (name == null && locale.getVariant().length() > 0) {
-            name = (String) iNames.get(localeStr.substring(0, 5));
-        }
-        if (name == null && locale.getCountry().length() > 0) {
-            name = (String) iNames.get(localeStr.substring(0, 2));
-        }
-        if (name == null) {
-            name = (String) iNames.get("en");
-        }
-        if (name == null && iNames.size() > 0) {
-            name = (String) iNames.values().iterator().next();
-        }
-        return name;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the YearMonthDay object for the specified year.
-     *
-     * @param year  the year
-     * @return the YearMonthDay, null if day does not exist for this year
-     */
-    public YearMonthDay yearMonthDayForYear(int year) {
-        MutableDateTime mdt = new MutableDateTime(0L, DateTimeZone.UTC);
-        for (int i = 0; i < iHolidayRules.size(); i++) {
-            HolidayRule rule = (HolidayRule) iHolidayRules.get(i);
-            if (rule.appliesForYear(mdt, year)) {
-                return new YearMonthDay(rule.applyForYear(mdt, year));
-            }
-        }
-        return null;
-    }
-
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java
deleted file mode 100644
index 9dbe41025..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/HolidayRule.java
+++ /dev/null
@@ -1,259 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday;
-
-import org.joda.time.DateTimeConstants;
-import org.joda.time.MutableDateTime;
-
-/**
- * HolidayRule defines the rules to create a specially named day.
- * The named day may be a holiday, anniversary or other day with
- * particular meaning.
- *
- * @author Al Major
- * @author Stephen Colebourne
- * @version $Id$
- */
-public class HolidayRule {
-
-    /** The from year, when the rule begins, inclusive. */
-    private int iFromYear;
-    /** The to year, when the rule ends, inclusive. */
-    private int iToYear;
-    /** The month. */
-    private int iMonthOfYear;
-    /** The day of month. */
-    private int iDayOfMonth;
-    /** The day of week. */
-    private int iDayOfWeek;
-    /** The field week of month. */
-    private int iWeekOfMonth;
-    /** The relative days. */
-    private int iRelativeDays;
-    /** The weekend adjust. */
-    private int iWeekendAdjust;
-
-    /** The weekend adjust value, to move to the next weekday. */
-    private static final int WEEKEND_ADJUST_NEXT_WEEKDAY = 0;
-    /** The weekend adjust value, to move to the next weekday. */
-    private static final int WEEKEND_ADJUST_PREVIOUS_WEEKDAY = 1;
-    /** The weekend adjust value, to move to the next weekday. */
-    private static final int WEEKEND_ADJUST_NEAREST_WEEKDAY = 2;
-
-    /**
-     * Constructor.
-     */
-    HolidayRule() {
-        super();
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the year that the rule commences (inclusive).
-     *
-     * @return the from year, Integer.MIN_VALUE if not used
-     */
-    public int getFromYear() {
-        return iFromYear;
-    }
-
-    /**
-     * Sets the year that the rule commences (inclusive).
-     *
-     * @param year  the from year, Integer.MIN_VALUE if not used
-     */
-    void setFromYear(int year) {
-        iFromYear = year;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the year that the rule ends (inclusive).
-     *
-     * @return the to year, Integer.MAX_VALUE if not used
-     */
-    public int getToYear() {
-        return iToYear;
-    }
-
-    /**
-     * Sets the year that the rule ends (inclusive).
-     *
-     * @param year  the to year, Integer.MIN_VALUE if not used
-     */
-    void setToYear(int year) {
-        iToYear = year;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the month of the year of the rule.
-     *
-     * @return the month of year, Integer.MIN_VALUE if not used
-     */
-    public int getMonthOfYear() {
-        return iMonthOfYear;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the day of the month of the rule.
-     *
-     * @return the day of month, Integer.MIN_VALUE if not used
-     */
-    public int getDayOfMonth() {
-        return iDayOfMonth;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the day of the week of the rule.
-     *
-     * @return the day of week, Integer.MIN_VALUE if not used
-     */
-    public int getDayOfWeek() {
-        return iDayOfWeek;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the week of the month of the rule.
-     * -1 indicates the last.
-     *
-     * @return the week of month, Integer.MIN_VALUE if not used
-     */
-    public int getWeekOfMonth() {
-        return iWeekOfMonth;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the relative days of the rule.
-     *
-     * @return the relative days, Integer.MIN_VALUE if not used
-     */
-    public int getRelativeDays() {
-        return iRelativeDays;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Gets the day of the month of the rule.
-     *
-     * @return the weekend adjustment rule, Integer.MIN_VALUE if not used
-     */
-    public int getWeekendAdjust() {
-        return iWeekendAdjust;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Does this rule apply for the specified year.
-     *
-     * @param mdt  working copy MutableDateTime, may be altered, not null
-     * @param year  the year
-     * @return true if this rule applies for the specified year
-     */
-    boolean appliesForYear(MutableDateTime mdt, int year) {
-        return (iFromYear <= year && iToYear >= year);
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Applies the rules for the specified year.
-     *
-     * @param mdt  working copy MutableDateTime, may be altered, not null
-     * @param year  the year
-     * @return the MutableDateTime
-     */
-    MutableDateTime applyForYear(MutableDateTime mdt, int year) {
-        mdt.setDate(year, 1, 1);
-        if (iMonthOfYear != Integer.MIN_VALUE) {
-            mdt.setMonthOfYear(iMonthOfYear);
-        }
-        if (iDayOfMonth != Integer.MIN_VALUE) {
-            mdt.setDayOfMonth(iDayOfMonth);
-        }
-        if (iDayOfWeek != Integer.MIN_VALUE) {
-            mdt.setDayOfWeek(iDayOfWeek);
-        }
-        if (iWeekOfMonth != Integer.MIN_VALUE) {
-            calculateWeekOfMonth(mdt, iMonthOfYear, iWeekOfMonth);
-        }
-        if (iRelativeDays != Integer.MIN_VALUE) {
-            mdt.addDays(iRelativeDays);
-        }
-        if (iWeekendAdjust != Integer.MIN_VALUE) {
-            calculateWeekendAdjust(mdt, iWeekendAdjust);
-        }
-        return mdt;
-    }
-
-    //-----------------------------------------------------------------------
-    /**
-     * Perform the weekk of month calculation.
-     * TODO, move this to a DateTimeField.
-     *
-     * @param mdt  the datetime to update
-     * @param month  the month it should be
-     * @param week  the week of month
-     */
-    private void calculateWeekOfMonth(MutableDateTime mdt, int month, int week) {
-        if (week > 0) {
-            while (mdt.getMonthOfYear() >= month) {
-                mdt.addWeeks(-1);
-            }
-            mdt.addWeeks(week);
-        } else {
-            while (mdt.getMonthOfYear() <= month) {
-                mdt.addWeeks(1);
-            }
-            mdt.addWeeks(-week);
-        }
-    }
-
-    /**
-     * Calculates the weekend adjust field.
-     *
-     * @param mdt  the datetime to update
-     * @param adjust  the adjust value
-     */
-    private void calculateWeekendAdjust(MutableDateTime mdt, int adjust) {
-        // TODO, use proper weekend calculation, not hard coded SatSun
-        if (mdt.getDayOfWeek() == DateTimeConstants.SATURDAY) {
-            switch (adjust) {
-                case WEEKEND_ADJUST_NEXT_WEEKDAY:
-                    mdt.addDays(2);
-                    break;
-                case WEEKEND_ADJUST_PREVIOUS_WEEKDAY:
-                case WEEKEND_ADJUST_NEAREST_WEEKDAY:
-                    mdt.addDays(-1);
-                    break;
-            }
-        } else if (mdt.getDayOfWeek() == DateTimeConstants.SUNDAY) {
-            switch (adjust) {
-                case WEEKEND_ADJUST_NEXT_WEEKDAY:
-                case WEEKEND_ADJUST_NEAREST_WEEKDAY:
-                    mdt.addDays(1);
-                    break;
-                case WEEKEND_ADJUST_PREVIOUS_WEEKDAY:
-                    mdt.addDays(-2);
-                    break;
-            }
-        }
-    }
-
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/USGovtHolidays.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/USGovtHolidays.java
deleted file mode 100644
index ece6f8196..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/USGovtHolidays.java
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday;
-
-import org.joda.time.contrib.holiday.anniversary.AnnualHolidays;
-import org.joda.time.contrib.holiday.anniversary.CommonAnniversaries;
-import org.joda.time.contrib.holiday.anniversary.NamedAnniversaryFactory;
-import org.joda.time.contrib.holiday.anniversary.USAnniversaries;
-/**
- * 
- * @author Al Major
- *
- */
-public class USGovtHolidays {
-    static AnnualHolidays<NamedAnniversaryFactory.NamedAnniversary, NamedAnniversaryFactory>
-        FEDERAL = new AnnualHolidays<NamedAnniversaryFactory.NamedAnniversary, NamedAnniversaryFactory> () {
-        protected void buildFactories () {
-            addFactory(new NamedAnniversaryFactory("New Year's Day",
-                    USAnniversaries.NEW_YEAR_HOLIDAY));
-            addFactory(new NamedAnniversaryFactory(
-                    "Birthday of Martin Luther King, Jr.",
-                    USAnniversaries.MARTIN_LUTHER_KING_DAY));
-            addFactory(new NamedAnniversaryFactory("Washington's Birthday",
-                    USAnniversaries.WASHINGTONS_BIRTHDAY_HOLIDAY));
-            addFactory(new NamedAnniversaryFactory("Memorial Day",
-                    USAnniversaries.MEMORIAL_DAY));
-            addFactory(new NamedAnniversaryFactory("Independence Day",
-                    USAnniversaries.INDEPENDENCE_DAY_HOLIDAY));
-            addFactory(new NamedAnniversaryFactory("Labor Day",
-                    CommonAnniversaries.LABOR_DAY));
-            addFactory(new NamedAnniversaryFactory("Columbus Day",
-                    USAnniversaries.COLUMBUS_DAY));
-            addFactory(new NamedAnniversaryFactory("Veterans Day",
-                    USAnniversaries.VETERANS_DAY_HOLIDAY));
-            addFactory(new NamedAnniversaryFactory("Thanksgiving Day",
-                    USAnniversaries.THANKSGIVING));
-            addFactory(new NamedAnniversaryFactory("Christmas Day",
-                    USAnniversaries.CHRISTMAS_HOLIDAY));
-        }
-    };
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/AnniversaryFactory.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/AnniversaryFactory.java
deleted file mode 100644
index d1b1e4baa..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/AnniversaryFactory.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.anniversary;
-
-import org.joda.time.Chronology;
-import org.joda.time.DateTime;
-/**
- * 
- * @author Al Major
- *
- */
-public abstract class AnniversaryFactory implements
-        IAnniversaryFactory<DateTime> {
-    private final String holidayID;
-
-    protected AnniversaryFactory(String str, Chronology c) {
-        if (c != Chronology.getISO()) {
-            throw new IllegalArgumentException(
-                    "AnniversaryFactory(String, Chronology): requires Gregorian/UTC chronologies only");
-        }
-        this.holidayID = str;
-    }
-
-    protected AnniversaryFactory(String str) {
-        this.holidayID = str;
-    }
-
-    public abstract DateTime create(int iYear);
-
-    public String getId() {
-        return holidayID;
-    }
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/AnnualHolidays.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/AnnualHolidays.java
deleted file mode 100644
index 5e9630123..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/AnnualHolidays.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.anniversary;
-
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-/**
- * 
- * @author Al Major
- *
- * @param <T>
- * @param <AF>
- */
-public abstract class AnnualHolidays<T extends Comparable, AF extends IAnniversaryFactory<? extends T>> {
-    protected final List<AF> fHolidayFactories = new ArrayList<AF>();
-    
-    public AnnualHolidays() {
-        buildFactories();
-    }
-
-    protected abstract void buildFactories ();
-
-    protected void addFactory(AF af) {
-        fHolidayFactories.add(af);
-    }
-
-    public List<T> getHolidaysForYear(int iYear) {
-        List<T> result = new ArrayList<T>(fHolidayFactories.size());
-        for (AF sdf : (List<AF>) fHolidayFactories) {
-            result.add((T) sdf.create(iYear));
-        }
-        Collections.sort(result);
-        return result;
-    }
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/CanadaAnniversaries.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/CanadaAnniversaries.java
deleted file mode 100644
index 0472ee637..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/CanadaAnniversaries.java
+++ /dev/null
@@ -1,105 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.anniversary;
-
-import org.joda.time.DateMidnight;
-import org.joda.time.DateTime;
-import org.joda.time.DateTimeConstants;
-
-/**
- * Caveat: According to the description on Wikipedia, the rule states that the
- * holiday is moved if it would fall on _another holiday_ not just a weekend.
- * The only standard holidays for which this could be a problem is Boxing Day
- * and Jan 2, which are explicitly corrected.
- * 
- * It's not clear how the rule interacts with non statutory holidays.
- * 
- */
-public class CanadaAnniversaries {
-
-    public static final AnniversaryFactory NEW_YEAR_HOLIDAY = new AnniversaryFactory(
-            "CanadaDayHoliday") {
-        public DateTime create(int iYear) {
-            return TimeUtility
-                    .AdjustCanadianHolidayForWeekend(CanadaAnniversaries.CANADA_DAY
-                            .create(iYear));
-        }
-    };
-
-    public static final AnniversaryFactory VICTORIA_DAY = new AnniversaryFactory(
-            "VictoriaDay") {
-        public DateTime create(int iYear) {
-            return TimeUtility.GetLastXWeekdayOfMonthBeforeYMonthday(
-                    DateTimeConstants.MONDAY, 25, iYear, DateTimeConstants.MAY);
-        }
-    };
-
-    public static final AnniversaryFactory CANADA_DAY = new AnniversaryFactory(
-            "CanadaDay") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.JULY, 1)
-                    .toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory CANADA_DAY_HOLIDAY = new AnniversaryFactory(
-            "CanadaDayHoliday") {
-        public DateTime create(int iYear) {
-            return TimeUtility
-                    .AdjustCanadianHolidayForWeekend(CanadaAnniversaries.CANADA_DAY
-                            .create(iYear));
-        }
-    };
-
-    public static final AnniversaryFactory THANKSGIVING = new AnniversaryFactory(
-            "Thanksgiving") {
-        public DateTime create(int iYear) {
-            // Second Monday in October
-            return TimeUtility.GetFirstXWeekdayOfMonth(
-                    DateTimeConstants.MONDAY, iYear, DateTimeConstants.OCTOBER)
-                    .plusWeeks(1);
-        }
-    };
-
-    public static final AnniversaryFactory REMEMBRANCE_DAY_HOLIDAY = new AnniversaryFactory(
-            "RemembranceDayHoliday") {
-        public DateTime create(int iYear) {
-            return TimeUtility
-                    .AdjustCanadianHolidayForWeekend(CommonAnniversaries.ARMISTICE_DAY
-                            .create(iYear));
-        }
-    };
-
-    public static final AnniversaryFactory CHRISTMAS_HOLIDAY = new AnniversaryFactory(
-            "ChristmasHoliday") {
-        public DateTime create(int iYear) {
-            return TimeUtility
-                    .AdjustCanadianHolidayForWeekend(CommonAnniversaries.CHRISTMAS
-                            .create(iYear));
-        }
-    };
-
-    public static final AnniversaryFactory BOXING_DAY_HOLIDAY = new AnniversaryFactory(
-            "BoxingDayHoliday") {
-        // special case. since they two dates are together and both have to be on a weekday
-        public DateTime create(int iYear) {
-            return TimeUtility
-                    .AdjustCanadianHolidayForWeekend(CHRISTMAS_HOLIDAY.create(
-                            iYear).plusDays(1));
-        }
-    };
-
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/CommonAnniversaries.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/CommonAnniversaries.java
deleted file mode 100644
index 370290e6e..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/CommonAnniversaries.java
+++ /dev/null
@@ -1,118 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.anniversary;
-
-import org.joda.time.DateMidnight;
-import org.joda.time.DateTime;
-import org.joda.time.DateTimeConstants;
-
-public class CommonAnniversaries {
-
-    public static final AnniversaryFactory NEW_YEAR = new AnniversaryFactory(
-            "NewYear") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.JANUARY, 1)
-                    .toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory ST_VALENTINES_DAY = new AnniversaryFactory(
-            "ValentinesDay") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.FEBRUARY, 14)
-                    .toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory ST_PATRICKS_DAY = new AnniversaryFactory(
-            "StPatricksDay") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.MARCH, 17)
-                    .toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory GOOD_FRIDAY = new AnniversaryFactory(
-            "GoodFriday") {
-        public DateTime create(int iYear) {
-            return EASTER_SUNDAY.create(iYear).minusDays(2);
-        }
-    };
-
-    /**
-     * Source: http://www.tondering.dk/claus/calendar.html This is a calculation
-     * for the <em>Gregorian</em> calendar only.
-     */
-    public static final AnniversaryFactory EASTER_SUNDAY = new AnniversaryFactory(
-            "EasterSunday") {
-        public DateTime create(int iYear) {
-            int iG = iYear % 19;
-            int iC = iYear / 100;
-            int iH = (iC - iC / 4 - (8 * iC + 13) / 25 + 19 * iG + 15) % 30;
-            int iI = iH - (iH / 28) * (1 - (29 / (iH + 1)) * ((21 - iG) / 11));
-            int iJ = (iYear + iYear / 4 + iI + 2 - iC + iC / 4) % 7;
-            int iL = iI - iJ;
-            int iMonth = 3 + (iL + 40) / 44;
-            int iDay = iL + 28 - 31 * (iMonth / 4);
-            return new DateMidnight(iYear, iMonth, iDay).toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory EASTER_MONDAY = new AnniversaryFactory(
-            "EasterMonday") {
-        public DateTime create(int iYear) {
-            return EASTER_SUNDAY.create(iYear).plusDays(1);
-        }
-    };
-
-    /**
-     * same as Veterans Day and Remembrance Day.
-     */
-    public static final AnniversaryFactory ARMISTICE_DAY = new AnniversaryFactory(
-            "ArmisticeDay") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.NOVEMBER, 11)
-                    .toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory CHRISTMAS = new AnniversaryFactory(
-            "Christmas") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.DECEMBER, 25)
-                    .toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory BOXING_DAY = new AnniversaryFactory(
-            "BoxingDay") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.DECEMBER, 26)
-                    .toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory LABOR_DAY = new AnniversaryFactory(
-            "LaborDay") {
-        public DateTime create(int iYear) {
-            // First Monday in September
-            return TimeUtility.GetFirstXWeekdayOfMonth(
-                    DateTimeConstants.MONDAY, iYear,
-                    DateTimeConstants.SEPTEMBER);
-        }
-    };
-
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/GBAnniversaries.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/GBAnniversaries.java
deleted file mode 100644
index fc1202547..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/GBAnniversaries.java
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.anniversary;
-
-import org.joda.time.DateMidnight;
-import org.joda.time.DateTime;
-import org.joda.time.DateTimeConstants;
-
-public class GBAnniversaries {
-    /*
-     * TODO: in 1995 this was moved to second monday in may. fix?
-     */
-    public static final AnniversaryFactory MAY_DAY_BANK_HOLIDAY = new AnniversaryFactory(
-            "MayDayBankHoliday") {
-        public DateTime create(int iYear) {
-            // First Monday in May
-            return TimeUtility.GetFirstXWeekdayOfMonth(
-                    DateTimeConstants.MONDAY, iYear, DateTimeConstants.MAY);
-        }
-    };
-
-    public static final AnniversaryFactory SPRING_BANK_HOLIDAY = new AnniversaryFactory(
-            "SpringBankHoliday") {
-        public DateTime create(int iYear) {
-            // Last Monday in May
-            return TimeUtility.GetLastXWeekdayOfMonth(DateTimeConstants.MONDAY,
-                    iYear, DateTimeConstants.MAY);
-        }
-    };
-
-    public static final AnniversaryFactory JULY_12 = new AnniversaryFactory(
-            "July12") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.JULY, 12)
-                    .toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory SUMMER_BANK_HOLIDAY = new AnniversaryFactory(
-            "SummerBankHoliday") {
-        public DateTime create(int iYear) {
-            // Last Monday in August
-            return TimeUtility.GetLastXWeekdayOfMonth(DateTimeConstants.MONDAY,
-                    iYear, DateTimeConstants.AUGUST);
-        }
-    };
-
-    public static final AnniversaryFactory SCOTTISH_SUMMER_BANK_HOLIDAY = new AnniversaryFactory(
-            "MayDayBankHoliday") {
-        public DateTime create(int iYear) {
-            // First Monday in August
-            return TimeUtility.GetFirstXWeekdayOfMonth(
-                    DateTimeConstants.MONDAY, iYear, DateTimeConstants.AUGUST);
-        }
-    };
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/IAnniversaryFactory.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/IAnniversaryFactory.java
deleted file mode 100644
index 0c5570f49..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/IAnniversaryFactory.java
+++ /dev/null
@@ -1,25 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.anniversary;
-/**
- * 
- * @author Al Major
- *
- * @param <T>
- */
-public interface IAnniversaryFactory<T> {
-    T create(int iYear);
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/NamedAnniversaryFactory.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/NamedAnniversaryFactory.java
deleted file mode 100644
index 2f30bb670..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/NamedAnniversaryFactory.java
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.anniversary;
-
-import org.joda.time.DateTime;
-/**
- * 
- * @author Al Major
- *
- */
-public class NamedAnniversaryFactory implements
-        IAnniversaryFactory<NamedAnniversaryFactory.NamedAnniversary> {
-    public class NamedAnniversary implements Comparable {
-        final DateTime fAnniversary;
-
-        NamedAnniversary(DateTime dm) {
-            fAnniversary = dm;
-        }
-
-        public String getName() {
-            return fAnniversaryName;
-        }
-
-        public DateTime getDate() {
-            return fAnniversary;
-        }
-
-        public int compareTo(Object o) {
-            if ( o instanceof NamedAnniversary ) {
-                return fAnniversary.compareTo(((NamedAnniversary)o).fAnniversary);
-            } else {
-                assert false;
-                return 0;
-            }
-        }
-    }
-
-    final String fAnniversaryName;
-
-    final AnniversaryFactory fFactory;
-
-    public NamedAnniversaryFactory(String strName, AnniversaryFactory af) {
-        fAnniversaryName = strName;
-        fFactory = af;
-    }
-
-    public NamedAnniversary create(int iYear) {
-        return new NamedAnniversary(fFactory.create(iYear));
-    }
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/TimeUtility.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/TimeUtility.java
deleted file mode 100644
index aec3df23d..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/TimeUtility.java
+++ /dev/null
@@ -1,157 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.anniversary;
-
-import org.joda.time.DateMidnight;
-import org.joda.time.DateTime;
-import org.joda.time.DateTimeConstants;
-import org.joda.time.Period;
-/**
- * 
- * @author Al Major
- *
- */
-public class TimeUtility {
-    private static final long APPROX_MILLIS_PER_YEAR = 365L * 24L * 60L * 60L
-            * 1000L;
-
-    private static final long APPROX_MILLIS_PER_MONTH = 31L * 24L * 60L * 60L
-            * 1000L;
-
-    public static Period getApproxPeriod(long l) {
-        long millis = l;
-
-        long numYears = millis / APPROX_MILLIS_PER_YEAR;
-        Period p = Period.years((int) numYears);
-        millis -= numYears * APPROX_MILLIS_PER_YEAR;
-
-        long numMonths = millis / APPROX_MILLIS_PER_MONTH;
-        p = p.withMonths((int) numMonths);
-        millis -= numMonths * APPROX_MILLIS_PER_MONTH;
-
-        long numDays = millis / DateTimeConstants.MILLIS_PER_DAY;
-        p = p.withDays((int) numDays);
-        millis -= numDays * DateTimeConstants.MILLIS_PER_DAY;
-
-        long numHours = millis / DateTimeConstants.MILLIS_PER_HOUR;
-        p = p.withHours((int) numHours);
-        millis -= numHours * DateTimeConstants.MILLIS_PER_HOUR;
-
-        long numMinutes = millis / DateTimeConstants.MILLIS_PER_MINUTE;
-        p = p.withMinutes((int) numMinutes);
-        millis -= numMinutes * DateTimeConstants.MILLIS_PER_MINUTE;
-
-        long numSeconds = millis / DateTimeConstants.MILLIS_PER_SECOND;
-        p = p.withSeconds((int) numSeconds);
-        millis -= numSeconds * DateTimeConstants.MILLIS_PER_SECOND;
-
-        p = p.withMillis((int) millis);
-
-        assert l == getApproxMillis(p);
-
-        return p;
-    }
-
-    public static long getApproxMillis(Period p) {
-        if (p.getWeeks() != 0) {
-            return ((long) p.getWeeks()) * DateTimeConstants.MILLIS_PER_WEEK;
-        }
-        return ((long) p.getYears()) * APPROX_MILLIS_PER_YEAR
-                + ((long) p.getMonths()) * APPROX_MILLIS_PER_MONTH
-                + ((long) p.getDays()) * DateTimeConstants.MILLIS_PER_DAY
-                + ((long) p.getHours()) * DateTimeConstants.MILLIS_PER_HOUR
-                + ((long) p.getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE
-                + ((long) p.getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND
-                + ((long) p.getMillis());
-    }
-
-    // iXDayOfWeek takes on values from DateTimeConstants.MONDAY through
-    // DateTimeConstants.SUNDAY
-    static DateTime GetFirstXWeekdayOfMonth(int iXDayOfWeek, int iYear,
-            int iMonth) {
-        DateTime dmFirstOfMonth = new DateMidnight(iYear, iMonth, 1)
-                .toDateTime();
-        int dayOfWeek = dmFirstOfMonth.getDayOfWeek();
-        int daysToAdd = iXDayOfWeek - dayOfWeek;
-        if (iXDayOfWeek < dayOfWeek) {
-            daysToAdd += 7;
-        }
-        return dmFirstOfMonth.plusDays(daysToAdd);
-    }
-
-    // iXDayOfWeek takes on values from DateTimeConstants.MONDAY through
-    // DateTimeConstants.SUNDAY
-    static DateTime GetLastXWeekdayOfMonth(int iXDayOfWeek, int iYear,
-            int iMonth) {
-        DateTime dmFirstOfMonth = new DateMidnight(iYear, iMonth, 1)
-                .toDateTime();
-        DateTime dmLastOfMonth = dmFirstOfMonth.plusMonths(1).minusDays(1);
-        int dayOfWeek = dmLastOfMonth.getDayOfWeek();
-        int daysToSubtract = dayOfWeek - iXDayOfWeek;
-        if (dayOfWeek < iXDayOfWeek) {
-            daysToSubtract -= 7;
-        }
-        return dmLastOfMonth.minusDays(daysToSubtract);
-    }
-
-    // iXDayOfWeek takes on values from DateTimeConstants.MONDAY through
-    // DateTimeConstants.SUNDAY
-    static DateTime GetFirstXWeekdayOfMonthAfterYMonthday(int iXDayOfWeek,
-            int iYMonthDay, int iYear, int iMonth) {
-        assert 1 <= iYMonthDay && iYMonthDay <= 31;
-        DateTime dmFirstXDayOfMonth = GetFirstXWeekdayOfMonth(iXDayOfWeek,
-                iYear, iMonth);
-        while (dmFirstXDayOfMonth.getDayOfMonth() <= iYMonthDay) {
-            dmFirstXDayOfMonth.plusWeeks(1);
-        }
-        return dmFirstXDayOfMonth;
-    }
-
-    // iXDayOfWeek takes on values from DateTimeConstants.MONDAY through
-    // DateTimeConstants.SUNDAY
-    static DateTime GetLastXWeekdayOfMonthBeforeYMonthday(int iXDayOfWeek,
-            int iYMonthDay, int iYear, int iMonth) {
-        assert 1 <= iYMonthDay && iYMonthDay <= 31;
-        DateTime dmLastXDayOfMonth = GetLastXWeekdayOfMonth(iXDayOfWeek, iYear,
-                iMonth);
-        while (dmLastXDayOfMonth.getDayOfMonth() >= iYMonthDay) {
-            dmLastXDayOfMonth.minusWeeks(1);
-        }
-        return dmLastXDayOfMonth;
-    }
-
-    static DateTime AdjustAmericanHolidayForWeekend(DateTime dm) {
-        switch (dm.getDayOfWeek()) {
-        case DateTimeConstants.SATURDAY:
-            return dm.minusDays(1);
-        case DateTimeConstants.SUNDAY:
-            return dm.plusDays(1);
-        default:
-            return dm;
-        }
-    }
-
-    static DateTime AdjustCanadianHolidayForWeekend(DateTime dm) {
-        switch (dm.getDayOfWeek()) {
-        case DateTimeConstants.SATURDAY:
-            return dm.plusDays(2);
-        case DateTimeConstants.SUNDAY:
-            return dm.plusDays(1);
-        default:
-            return dm;
-        }
-    }
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/USAnniversaries.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/USAnniversaries.java
deleted file mode 100644
index 582e34740..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/anniversary/USAnniversaries.java
+++ /dev/null
@@ -1,191 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.anniversary;
-
-import org.joda.time.DateMidnight;
-import org.joda.time.DateTime;
-import org.joda.time.DateTimeConstants;
-
-/**
- * TODO: There may be a need for localizable labels for the names of the holidays.
- * would have to be loaded from an appropriate properties file.
- * TODO: at some point it may make sense to generate either the holiday computation
- * code from a definition file or to run an interpreter on the file to generate
- * the holiday directly.
- */
-/**
- * Except when specifically noted otherwise, dates for holidays are based on
- * information from Wikipedia.
- */
-public class USAnniversaries {
-
-    public static final AnniversaryFactory NEW_YEAR_HOLIDAY = new AnniversaryFactory(
-            "NewYearHoliday") {
-        public DateTime create(int iYear) {
-            return TimeUtility
-                    .AdjustAmericanHolidayForWeekend(CommonAnniversaries.NEW_YEAR
-                            .create(iYear));
-        }
-    };
-
-    public static final AnniversaryFactory MARTIN_LUTHER_KING_DAY = new AnniversaryFactory(
-            "MartinLutherKingDay") {
-        public DateTime create(int iYear) {
-            // Third Monday in January
-            return TimeUtility.GetFirstXWeekdayOfMonth(
-                    DateTimeConstants.MONDAY, iYear, DateTimeConstants.JANUARY)
-                    .plusWeeks(2);
-        }
-    };
-
-    /**
-     * Also called "President's Day"
-     */
-    public static final AnniversaryFactory WASHINGTONS_BIRTHDAY_HOLIDAY = new AnniversaryFactory(
-            "WashingtonsBirthdayHoliday") {
-        public DateTime create(int iYear) {
-            // Third Monday in February
-            return TimeUtility
-                    .GetFirstXWeekdayOfMonth(DateTimeConstants.MONDAY, iYear,
-                            DateTimeConstants.FEBRUARY).plusWeeks(2);
-        }
-    };
-
-    public static final AnniversaryFactory MEMORIAL_DAY = new AnniversaryFactory(
-            "MemorialDay") {
-        public DateTime create(int iYear) {
-            // Last Monday in May
-            return TimeUtility.GetLastXWeekdayOfMonth(DateTimeConstants.MONDAY,
-                    iYear, DateTimeConstants.MAY);
-        }
-    };
-
-    public static final AnniversaryFactory INDEPENDENCE_DAY = new AnniversaryFactory(
-            "IndependenceDay") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.JULY, 4)
-                    .toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory INDEPENDENCE_DAY_HOLIDAY = new AnniversaryFactory(
-            "IndependenceDayHoliday") {
-        public DateTime create(int iYear) {
-            return TimeUtility.AdjustAmericanHolidayForWeekend(INDEPENDENCE_DAY
-                    .create(iYear));
-        }
-    };
-
-    public static final AnniversaryFactory VETERANS_DAY_HOLIDAY = new AnniversaryFactory(
-            "VeteransDayHoliday") {
-        public DateTime create(int iYear) {
-            return TimeUtility
-                    .AdjustAmericanHolidayForWeekend(CommonAnniversaries.ARMISTICE_DAY
-                            .create(iYear));
-        }
-    };
-
-    public static final AnniversaryFactory COLUMBUS_DAY = new AnniversaryFactory(
-            "ColumbusDay") {
-        public DateTime create(int iYear) {
-            // Second Monday in October
-            return TimeUtility.GetFirstXWeekdayOfMonth(
-                    DateTimeConstants.MONDAY, iYear, DateTimeConstants.OCTOBER)
-                    .plusWeeks(1);
-        }
-    };
-
-    public static final AnniversaryFactory THANKSGIVING = new AnniversaryFactory(
-            "ThanksGiving") {
-        public DateTime create(int iYear) {
-            // 4th Thursday in November
-            return TimeUtility.GetFirstXWeekdayOfMonth(
-                    DateTimeConstants.THURSDAY, iYear,
-                    DateTimeConstants.NOVEMBER).plusWeeks(3);
-        }
-    };
-
-    public static final AnniversaryFactory CHRISTMAS_HOLIDAY = new AnniversaryFactory(
-            "ChristmasHoliday") {
-        public DateTime create(int iYear) {
-            return TimeUtility
-                    .AdjustAmericanHolidayForWeekend(CommonAnniversaries.CHRISTMAS
-                            .create(iYear));
-        }
-    };
-
-    /**
-     * This was the holiday prior to 1968-1971.
-     */
-    public static final AnniversaryFactory WASHINGTONS_BIRTHDAY = new AnniversaryFactory(
-            "WashingtonsBirthday") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.FEBRUARY, 22)
-                    .toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory LINCOLNS_BIRTHDAY = new AnniversaryFactory(
-            "LincolnsBirthday") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.FEBRUARY, 12)
-                    .toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory CINCO_DE_MAYO = new AnniversaryFactory(
-            "CincoDeMayo") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.MAY, 5)
-                    .toDateTime();
-        }
-    };
-
-    public static final AnniversaryFactory HALLOWEEN = new AnniversaryFactory(
-            "Halloween") {
-        public DateTime create(int iYear) {
-            return new DateMidnight(iYear, DateTimeConstants.OCTOBER, 31)
-                    .toDateTime();
-        }
-    };
-
-    /**
-     * Source: the example given in RFC 2445
-     */
-    public static final AnniversaryFactory ELECTION_DAY = new AnniversaryFactory(
-            "ElectionDay") {
-        public DateTime create(int iYear) {
-            // not really an anniversary, happens once in 4 years
-            if (iYear % 4 != 0) {
-                return null;
-            }
-            // First Tuesday in November which follows a Monday in November
-            return TimeUtility.GetFirstXWeekdayOfMonthAfterYMonthday(
-                    DateTimeConstants.TUESDAY, 1, iYear,
-                    DateTimeConstants.NOVEMBER);
-        }
-    };
-
-    public static final AnniversaryFactory PRE_FDR_THANKSGIVING = new AnniversaryFactory(
-            "PreFDRThanksGiving") {
-        public DateTime create(int iYear) {
-            // Last Thursday in November
-            return TimeUtility.GetLastXWeekdayOfMonth(
-                    DateTimeConstants.THURSDAY, iYear,
-                    DateTimeConstants.NOVEMBER);
-        }
-    };
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/AbstractChoice.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/AbstractChoice.java
deleted file mode 100644
index 575a8be6e..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/AbstractChoice.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.currency;
-
-/**
- * Abstract choice implementation.
- *
- * @author Scott R. Duchin
- */
-public abstract class AbstractChoice {
-
-    private final ChoiceList _choices;
-    private final String _label;
-
-    public AbstractChoice(ChoiceList list, String label) {
-        super();
-        _choices = list;
-        _label = label;
-    }
-
-    public Class choiceClass() {
-        return _choices.choiceClass();
-    }
-
-    public ChoiceList choiceList() {
-        return _choices;
-    }
-
-    public String getLabel() {
-        return _label;
-    }
-
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Choice.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Choice.java
deleted file mode 100644
index 1113de9ba..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Choice.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.currency;
-
-/**
- * Choice interface.
- *
- * @author Scott R. Duchin
- */
-public interface Choice {
-
-    /**
-     * 
-     */
-    String getLabel();
-
-    /**
-     * 
-     */
-    ChoiceList choiceList();
-
-    /**
-     * 
-     */
-    Class choiceClass();
-
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/ChoiceList.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/ChoiceList.java
deleted file mode 100644
index 26654a4e7..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/ChoiceList.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.currency;
-
-import java.util.ArrayList;
-
-/**
- * Choice list.
- *
- * @author Scott R. Duchin
- */
-public class ChoiceList extends ArrayList<Choice> {
-
-    private final Class cls;
-
-    public static ChoiceList choiceList(Class cls) {
-        return new ChoiceList(cls);
-    }
-
-    public ChoiceList(Class cls) {
-        super();
-        this.cls = cls;
-    }
-
-    public RawHolidayChoice choice(String holi) {
-        return null;
-    }
-
-    public Class choiceClass() {
-        return cls;
-    }
-
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/CurrencyHoliday.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/CurrencyHoliday.java
deleted file mode 100644
index ee7e50743..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/CurrencyHoliday.java
+++ /dev/null
@@ -1,1132 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.currency;
-
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.TreeMap;
-import java.util.logging.Logger;
-
-/**
- * Private class to hold weekend rules with holiday.
- *
- * @author Scott R. Duchin
- */
-class CcyHoli implements RawHolidayChoice {
-
-    static final long serialVersionUID = 1001L;             // version 1 for serialization
-
-    // private fields
-    private RawHolidayChoice _rawHoli;   // raw holiday
-    private int                         _sat;               // saturday rule (days adjustment)
-    private int                         _sun;               // sunday rule (days adjustment)
-
-    /**
-     * Constructor.
-     * @param raw Raw holiday.
-     * @param sat Saturday adjustment.
-     * @param sun Sunday adjustment.
-     */
-    CcyHoli(RawHolidayChoice raw, int sat, int sun) {
-        _rawHoli = raw;
-        _sat = sat;
-        _sun = sun;
-    }
-
-    /**
-     * Returns the interface associated with this choice.
-     * @return The interface associated with this choice.
-     */
-    public Class choiceClass() {
-        return _rawHoli.choiceClass();
-    }
-
-    /**
-     * Returns the list containing this choice.
-     * @return The list containing this choice.
-     */
-    public ChoiceList choiceList() {
-        return _rawHoli.choiceList();
-    }
-
-    /**
-     * Returns the name associated with this choice.
-     * @return The name associated with this choice.
-     */
-    public String getLabel() {
-        return _rawHoli.getLabel();
-    }
-
-    /**
-     * Returns the date of the particular holiday for the specified year.
-     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.
-     * @param year Year the holiday is requested for.
-     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.
-     */
-    public Date date(/*year*/int year) {
-        Date holi = _rawHoli.date(year);
-        if (holi != null) {
-            Weekday wkdy = holi.weekday();
-            if (_sun != 0 && wkdy.equals(Weekday.SUN)) {
-                holi = holi.addDays(_sun);
-            } else if (_sat != 0 && wkdy.equals(Weekday.SAT)) {
-                holi = holi.addDays(_sat);
-            }
-        }
-        return holi;
-    }
-
-    /**
-     * Returns a list of dates of the particular holiday for the specified years.
-     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.
-     * @param start Starting year.
-     * @param end   Ending year.
-     * @return List of dates of holidays in specified years, inclusive.
-     */
-    public List<Date> dates(/*year*/int start, /*year*/int end) {
-        List<Date> list = new ArrayList<Date>(end - start + 1);
-        for (/*year*/int year = start; year <= end; year++) {
-            list.add(date(year));
-        }
-        return list;
-    }
-}
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-
-/**
- * The list of holidays per currency implementations.
- *
- * @author Scott R. Duchin
- */
-public final class CurrencyHoliday {
-
-    // static variables
-    private static final Logger         _logger = Logger.getLogger("com.swvi.financial.instrument.CurrencyHoliday");
-
-    /**
-     * A map containing all currencies pointing to list of their corresponding holidays.
-     */
-    private static Map<String, Map<String, RawHolidayChoice>> _ccys =
-      Collections.synchronizedSortedMap(new TreeMap<String, Map<String, RawHolidayChoice>>());
-
-    /**
-     * Choice list of the raw holidays.
-     */
-    private static ChoiceList _raws =
-      ChoiceList.choiceList(RawHolidayChoiceImpl.klass());
-
-    /**
-     * Private constructor.
-     */
-    private CurrencyHoliday() {
-    }
-
-    /*
-     * Variable representing that a Saturday holiday is observed on Saturday.
-     */
-    private static final int ON_SAT = 0;
-    /*
-     * Variable representing that a Sunday holiday is observed on Sunday.
-     */
-    private static final int ON_SUN = 0;
-    /*
-     * Variable representing that a Saturday holiday is observed on Friday.
-     */
-    private static final int SAT_FRI = -1;
-    /*
-     * Variable representing that a Saturday holiday is observed on Monday.
-     */
-    private static final int SAT_MON = 2;
-    /*
-     * Variable representing that a Sunday holiday is observed on Monday.
-     */
-    private static final int SUN_MON = 1;
-    /*
-     * Variable representing that a Sunday holiday is observed on Tuesday.
-     */
-    private static final int SUN_TUE = 2;
-
-    /**
-     * Static initializer.
-     */
-    static {
-        // argentina peso
-        addHoliday("ARS", "Argentina Flag Day");
-        addHoliday("ARS", "Argentina Independence",         ON_SAT, ON_SUN);
-        addHoliday("ARS", "Argentina May Revolution",       ON_SAT, ON_SUN);
-        addHoliday("ARS", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("ARS", "Columbus Day",                   ON_SAT, ON_SUN);
-        addHoliday("ARS", "Easter Monday");
-        addHoliday("ARS", "General San Martin Memorial");
-        addHoliday("ARS", "Good Friday");
-        addHoliday("ARS", "Holy Thursday");
-        addHoliday("ARS", "Immaculate Conception",          ON_SAT, ON_SUN);
-        addHoliday("ARS", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("ARS", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("ARS", "New Year Eve",                   ON_SAT, ON_SUN);
-//      ARS 06/14/1999 Malvinas Day
-//      ARS 06/05/2000 Malvinas Day
-//      ARS 06/04/2001 Malvinas Day
-
-        // austria schilling
-        addHoliday("ATS", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("ATS", "Ascension");
-        addHoliday("ATS", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("ATS", "Austria National Day",           ON_SAT, ON_SUN);
-        addHoliday("ATS", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("ATS", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("ATS", "Corpus Christi");
-        addHoliday("ATS", "Easter Monday");
-        addHoliday("ATS", "Epiphany",                       ON_SAT, ON_SUN);
-//      addHoliday("ATS", "Good Friday");                                     // TODO: check if observed
-        addHoliday("ATS", "Immaculate Conception",          ON_SAT, ON_SUN);
-        addHoliday("ATS", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("ATS", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("ATS", "Pentecost");
-
-        // australia dollar
-        addHoliday("AUD", "Anzac Day",                      ON_SAT, ON_SUN);
-        addHoliday("AUD", "Australia Day",                  ON_SAT, ON_SUN);
-        addHoliday("AUD", "Australia Labour Day",           ON_SAT, ON_SUN);
-        addHoliday("AUD", "Australia Queen Day");
-        addHoliday("AUD", "Autumn Bank Holiday");
-        addHoliday("AUD", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("AUD", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("AUD", "Easter Monday");
-        addHoliday("AUD", "Good Friday");
-//      addHoliday("AUD", "May Monday");                                      // TODO: check if observed
-        addHoliday("AUD", "New Year Day",                   SAT_MON, SUN_MON);
-
-        // barbados dollar
-        addHoliday("BBD", "Barbados Heroes Day",            ON_SAT, ON_SUN);
-        addHoliday("BBD", "Barbados Independence",          ON_SAT, ON_SUN);
-        addHoliday("BBD", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("BBD", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("BBD", "December Bank Holiday",          ON_SAT, ON_SUN);
-        addHoliday("BBD", "Errol Barrow Day",               ON_SAT, ON_SUN);
-        addHoliday("BBD", "Emancipation Day",               ON_SAT, ON_SUN);
-        addHoliday("BBD", "Good Friday");
-        addHoliday("BBD", "Kadooment Day",                  ON_SAT, ON_SUN);
-        addHoliday("BBD", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("BBD", "New Year Day",                   ON_SAT, ON_SUN);
-
-        // belgium franc
-        addHoliday("BEF", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("BEF", "Armistice Day",                  ON_SAT, ON_SUN);
-        addHoliday("BEF", "Ascension");
-        addHoliday("BEF", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("BEF", "Belgium National Day",           ON_SAT, ON_SUN);
-        addHoliday("BEF", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("BEF", "Easter Monday");
-        addHoliday("BEF", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("BEF", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("BEF", "Pentecost");
-
-        // bermuda dollar
-        addHoliday("BMD", "Bermuda Cup Match");
-        addHoliday("BMD", "Bermuda Labour Day");
-        addHoliday("BMD", "Bermuda Queen Day");
-        addHoliday("BMD", "Bermuda Somers Day");
-        addHoliday("BMD", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("BMD", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("BMD", "Christmas Eve",                  ON_SAT, ON_SUN);
-        addHoliday("BMD", "Good Friday");
-        addHoliday("BMD", "Remembrance Day",                ON_SAT, ON_SUN);
-
-        // bolivia boliviano
-        addHoliday("BOB", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("BOB", "Bolivia Independence",           ON_SAT, ON_SUN);
-        addHoliday("BOB", "Carnival Thursday");
-        addHoliday("BOB", "Carnival Wednesday");
-        addHoliday("BOB", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("BOB", "Corpus Christi");
-        addHoliday("BOB", "Good Friday");
-        addHoliday("BOB", "La Paz",                         ON_SAT, ON_SUN);
-        addHoliday("BOB", "New Year Day",                   ON_SAT, ON_SUN);
-
-        // brazil real
-        addHoliday("BRL", "All Souls Day",                  ON_SAT, ON_SUN);
-        addHoliday("BRL", "Brazil Independence",            ON_SAT, ON_SUN);
-        addHoliday("BRL", "Carnival Monday");
-        addHoliday("BRL", "Carnival Tuesday");
-        addHoliday("BRL", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("BRL", "Corpus Christi");
-        addHoliday("BRL", "Good Friday");
-        addHoliday("BRL", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("BRL", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("BRL", "Nossa Senhora",                  ON_SAT, ON_SUN);
-        addHoliday("BRL", "Brazil Republic Day",            ON_SAT, ON_SUN);
-        addHoliday("BRL", "Tiradentes",                     ON_SAT, ON_SUN);
-
-        // bahamas dollar
-        addHoliday("BSD", "Bahamas Independence",           ON_SAT, ON_SUN);
-        addHoliday("BSD", "Bahamas Labour Day",             ON_SAT, ON_SUN);
-        addHoliday("BSD", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("BSD", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("BSD", "Columbus Day",                   ON_SAT, ON_SUN);
-        addHoliday("BSD", "Emancipation Monday");
-        addHoliday("BSD", "New Year Day",                   ON_SAT, ON_SUN);
-
-        // belize dollar
-        addHoliday("BZD", "Belize Emancipation",            ON_SAT, ON_SUN);
-        addHoliday("BZD", "Belize Independence",            ON_SAT, ON_SUN);
-        addHoliday("BZD", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("BZD", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("BZD", "Commonwealth Day",               ON_SAT, ON_SUN);
-        addHoliday("BZD", "December Bank Holiday",          ON_SAT, ON_SUN);
-        addHoliday("BZD", "Garifuna Day",                   ON_SAT, ON_SUN);
-        addHoliday("BZD", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("BZD", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("BZD", "St. Georges Caye Day",           ON_SAT, ON_SUN);
-
-        // canada dollar
-        addHoliday("CAD", "Boxing Day",                     SAT_MON, SUN_MON);
-        addHoliday("CAD", "Canada Independence",            SAT_MON, SUN_MON);
-        addHoliday("CAD", "Canada Labour Day");
-        addHoliday("CAD", "Canada Thanksgiving Day");
-        addHoliday("CAD", "Christmas",                      SAT_FRI, SUN_TUE); // skip over boxing day on monday
-        addHoliday("CAD", "Easter Monday");
-        addHoliday("CAD", "Good Friday");
-        addHoliday("CAD", "New Year Day",                   ON_SAT, ON_SUN); // TODO: check this
-        addHoliday("CAD", "Remembrance Day",                ON_SAT, ON_SUN);
-        addHoliday("CAD", "Queen Victoria Day");
-
-        // switzerland franc
-        addHoliday("CHF", "Ascension");
-        addHoliday("CHF", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("CHF", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("CHF", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("CHF", "Easter Monday");
-        addHoliday("CHF", "Good Friday");
-        addHoliday("CHF", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("CHF", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("CHF", "New Year Day II",                ON_SAT, ON_SUN);
-        addHoliday("CHF", "New Year Eve",                   ON_SAT, ON_SUN);
-        addHoliday("CHF", "Pentecost");
-        addHoliday("CHF", "Swiss National Day",             ON_SAT, ON_SUN);
-
-        // chile peso
-        addHoliday("CLP", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("CLP", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("CLP", "Chile Army Day",                 ON_SAT, ON_SUN);
-        addHoliday("CLP", "Chile Commemoration Day",        ON_SAT, ON_SUN);
-        addHoliday("CLP", "Chile Marine Day",               ON_SAT, ON_SUN);
-        addHoliday("CLP", "Chile National Day",             ON_SAT, ON_SUN);
-        addHoliday("CLP", "Chile Unity Day",                ON_SAT, ON_SUN);
-        addHoliday("CLP", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("CLP", "Columbus Day",                   ON_SAT, ON_SUN);
-        addHoliday("CLP", "Corpus Christi");
-        addHoliday("CLP", "Good Friday");
-        addHoliday("CLP", "Immaculate Conception",          ON_SAT, ON_SUN);
-        addHoliday("CLP", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("CLP", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("CLP", "New Year Eve",                   ON_SAT, ON_SUN);
-
-        // columbia peso
-        addHoliday("COP", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("COP", "Ascension");
-        addHoliday("COP", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("COP", "Battle of Boyaca Day",           ON_SAT, ON_SUN);
-        addHoliday("COP", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("COP", "Columbia Independence",          ON_SAT, ON_SUN);
-        addHoliday("COP", "Columbus Day",                   ON_SAT, ON_SUN);
-        addHoliday("COP", "Corpus Christi");
-        addHoliday("COP", "Epiphany",                       ON_SAT, ON_SUN);
-        addHoliday("COP", "Friendship Day",                 ON_SAT, ON_SUN);
-        addHoliday("COP", "Good Friday");
-        addHoliday("COP", "Holy Thursday");
-        addHoliday("COP", "Immaculate Conception",          ON_SAT, ON_SUN);
-        addHoliday("COP", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("COP", "New Year Day",                   ON_SAT, ON_SUN); // TODO: check this
-        addHoliday("COP", "St. Josephs Day",                ON_SAT, ON_SUN);
-        addHoliday("COP", "St. Peter & St. Paul Day",       ON_SAT, ON_SUN);
-
-        // costa rica colon
-        addHoliday("CRC", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("CRC", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("CRC", "Christmas VI",                   ON_SAT, ON_SUN);
-        addHoliday("CRC", "Christmas V",                    ON_SAT, ON_SUN);
-        addHoliday("CRC", "Christmas VI",                   ON_SAT, ON_SUN);
-        addHoliday("CRC", "Columbus Day",                   ON_SAT, ON_SUN);
-        addHoliday("CRC", "Costa Rica Independence",        ON_SAT, ON_SUN);
-        addHoliday("CRC", "Good Friday");
-        addHoliday("CRC", "Holy Thursday");
-        addHoliday("CRC", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("CRC", "New Year Eve",                   ON_SAT, ON_SUN);
-        addHoliday("CRC", "May Labour Day",                 ON_SAT, ON_SUN);
-
-        // czech koruna
-        addHoliday("CZK", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("CZK", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("CZK", "Czech Liberation",               ON_SAT, ON_SUN);
-        addHoliday("CZK", "Czech National Day",             ON_SAT, ON_SUN);
-        addHoliday("CZK", "Easter Monday");
-        addHoliday("CZK", "Jan Hus",                        ON_SAT, ON_SUN);
-        addHoliday("CZK", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("CZK", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("CZK", "St. Cyril & Methodius",          ON_SAT, ON_SUN);
-
-        // germany mark
-        addHoliday("DEM", "Ascension");
-        addHoliday("DEM", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("DEM", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("DEM", "Easter Monday");
-        addHoliday("DEM", "German Unity Day",               ON_SAT, ON_SUN);
-        addHoliday("DEM", "Good Friday");
-        addHoliday("DEM", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("DEM", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("DEM", "Pentecost");
-
-        // denmark krone
-        addHoliday("DKK", "Ascension");
-        addHoliday("DKK", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("DKK", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("DKK", "Christmas Eve",                  ON_SAT, ON_SUN);
-        addHoliday("DKK", "Denmark National Day",           ON_SAT, ON_SUN);
-        addHoliday("DKK", "Easter Monday");
-        addHoliday("DKK", "Good Friday");
-        addHoliday("DKK", "Holy Thursday");
-        addHoliday("DKK", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("DKK", "Pentecost");
-        addHoliday("DKK", "Prayer Day");
-
-        // ecuador sucre
-        addHoliday("ECS", "All Souls Day",                  ON_SAT, ON_SUN);
-        addHoliday("ECS", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("ECS", "Columbus Day",                   ON_SAT, ON_SUN);
-        addHoliday("ECS", "Cuencas Independence",           ON_SAT, ON_SUN);
-        addHoliday("ECS", "Ecuador Bank Holiday");
-        addHoliday("ECS", "Ecuador Independence",           ON_SAT, ON_SUN);
-        addHoliday("ECS", "Guayaquils Independence",        ON_SAT, ON_SUN);
-        addHoliday("ECS", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("ECS", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("ECS", "Pichincha Battle",               ON_SAT, ON_SUN);
-        addHoliday("ECS", "Quitos Foundation",              ON_SAT, ON_SUN);
-        addHoliday("ECS", "Simon Bolivar Day",              ON_SAT, ON_SUN);
-
-        // egypt pound
-        addHoliday("EGP", "Birth of the Prophet",           ON_SAT, ON_SUN);
-        addHoliday("EGP", "Egypt Army Day",                 ON_SAT, ON_SUN);
-        addHoliday("EGP", "Egypt Liberation",               ON_SAT, ON_SUN);
-        addHoliday("EGP", "Egypt National Day",             ON_SAT, ON_SUN);
-        addHoliday("EGP", "Egypt Union Day",                ON_SAT, ON_SUN);
-        addHoliday("EGP", "Egypt Victory Day",              ON_SAT, ON_SUN);
-        addHoliday("EGP", "Eid Al Fitr",                    ON_SAT, ON_SUN);
-        addHoliday("EGP", "Eid El Adha",                    ON_SAT, ON_SUN);
-        addHoliday("EGP", "Islamic New Year",               ON_SAT, ON_SUN);
-        addHoliday("EGP", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("EGP", "Mid Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("EGP", "Sham El Nessim",                 ON_SAT, ON_SUN);
-        addHoliday("EGP", "Sinai Day",                      ON_SAT, ON_SUN);
-        addHoliday("EGP", "Suez Victory Day",               ON_SAT, ON_SUN);
-
-        // spain peseta
-        addHoliday("ESP", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("ESP", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("ESP", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("ESP", "Easter Monday");
-        addHoliday("ESP", "Epiphany",                       ON_SAT, ON_SUN);
-        addHoliday("ESP", "Holy Thursday");
-        addHoliday("ESP", "Immaculate Conception",          ON_SAT, ON_SUN);
-        addHoliday("ESP", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("ESP", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("ESP", "Spain Constitution Day",         ON_SAT, ON_SUN);
-        addHoliday("ESP", "Spain National Day",             ON_SAT, ON_SUN);
-
-        // euro
-        addHoliday("EUR", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("EUR", "New Year Day",                   ON_SAT, ON_SUN);
-
-        // finland markka
-        addHoliday("FIM", "Ascension");
-        addHoliday("FIM", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("FIM", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("FIM", "Christmas Eve",                  ON_SAT, ON_SUN);
-        addHoliday("FIM", "Easter Monday");
-        addHoliday("FIM", "Epiphany",                       ON_SAT, ON_SUN);
-        addHoliday("FIM", "Finland Independence",           ON_SAT, ON_SUN);
-        addHoliday("FIM", "Good Friday");
-        addHoliday("FIM", "May Day",                        ON_SAT, ON_SUN);
-        addHoliday("FIM", "May Day Eve",                    ON_SAT, ON_SUN);
-        addHoliday("FIM", "Midsummer",                      ON_SAT, ON_SUN);
-        addHoliday("FIM", "Midsummer Eve",                  ON_SAT, ON_SUN);
-        addHoliday("FIM", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("FIM", "Pentecost");
-
-        // france franc
-        addHoliday("FRF", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("FRF", "Armistice Day",                  ON_SAT, ON_SUN);
-        addHoliday("FRF", "Ascension");
-        addHoliday("FRF", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("FRF", "Bastille Day",                   ON_SAT, ON_SUN);
-        addHoliday("FRF", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("FRF", "Easter Monday");
-        addHoliday("FRF", "Fete De La Victoire",            ON_SAT, ON_SUN);
-//      addHoliday("FRF", "Good Friday");                                    // TODO: check if observed
-        addHoliday("FRF", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("FRF", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("FRF", "Pentecost");
-
-        // great britain pound
-        addHoliday("GBP", "Boxing Day",                     SAT_MON, SUN_MON);
-        addHoliday("GBP", "Christmas",                      SAT_FRI, SUN_TUE); // skip over boxing day on monday
-        addHoliday("GBP", "Easter Monday");
-        addHoliday("GBP", "Good Friday");
-        addHoliday("GBP", "May Monday");
-        addHoliday("GBP", "New Year Day",                   SAT_MON, SUN_MON);
-        addHoliday("GBP", "New Year Eve",                   SAT_FRI, SUN_TUE);
-        addHoliday("GBP", "Spring Bank Holiday");
-        addHoliday("GBP", "Summer Bank Holiday");
-
-        // greece drachma
-        addHoliday("GRD", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("GRD", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("GRD", "Epiphany",                       ON_SAT, ON_SUN);
-        addHoliday("GRD", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("GRD", "Good Friday");
-        addHoliday("GRD", "Fasting Day",                    ON_SAT, ON_SUN);
-        addHoliday("GRD", "Greece National Day I",          ON_SAT, ON_SUN);
-        addHoliday("GRD", "Greece National Day II",         ON_SAT, ON_SUN);
-        addHoliday("GRD", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("GRD", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("GRD", "Pentecost");
-//      GRD 04/11/1999 Orthodox Easter
-//      GRD 04/12/1999 Orthodox Easter Monday
-//      GRD 04/11/2000 Orthodox Easter
-//      GRD 04/12/2000 Orthodox Easter Monday
-//      GRD 04/15/2001 Orthodox Easter
-//      GRD 04/16/2001 Orthodox Easter Monday
-
-        // hong kong dollar
-        addHoliday("HKD", "Boxing Day",                     ON_SAT, SUN_MON);
-        addHoliday("KRW", "Buddha Birthday",                ON_SAT, ON_SUN);
-        addHoliday("HKD", "Chinese National Day I",         ON_SAT, SUN_TUE);
-        addHoliday("HKD", "Chinese National Day II",        ON_SAT, SUN_MON);
-        addHoliday("HKD", "Ching Ming Festival",            ON_SAT, ON_SUN);
-        addHoliday("HKD", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("HKD", "Easter Monday");
-        addHoliday("HKD", "Good Friday");
-        addHoliday("HKD", "Lunar New Year",                 ON_SAT, ON_SUN);
-        addHoliday("HKD", "Lunar New Year II",              ON_SAT, ON_SUN);
-        addHoliday("HKD", "Lunar New Year III",             ON_SAT, ON_SUN);
-        addHoliday("HKD", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("TWD", "Mid Autumn Festival",            ON_SAT, ON_SUN);
-        addHoliday("HKD", "Mid Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("HKD", "New Year Day",                   ON_SAT, ON_SUN);
-//      HKD 06/18/1999 Tuen Ng Festival
-//      HKD 08/16/1999 Sino-JapaneseWar Victory Day
-//      HKD 10/18/1999 Chung Yeung Festival
-//      HKD 06/06/2000 Tuen Ng Day
-//      HKD 08/21/2000 Sino-Japanese War Victory Day
-//      HKD 10/06/2000 Chung Yeung Day
-
-        // honduras limpira
-        addHoliday("HNL", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("HNL", "Columbus Day",                   ON_SAT, ON_SUN);
-        addHoliday("HNL", "Honduras Army Day",              ON_SAT, ON_SUN);
-        addHoliday("HNL", "Honduras Independence",          ON_SAT, ON_SUN);
-        addHoliday("HNL", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("HNL", "Morazan Day",                    ON_SAT, ON_SUN);
-        addHoliday("HNL", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("HNL", "Panamerican Day",                ON_SAT, ON_SUN);
-
-        // hungary forint
-        addHoliday("HUF", "Ascension");
-        addHoliday("HUF", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("HUF", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("HUF", "Easter Monday");
-        addHoliday("HUF", "Hungary Constitution Day",       ON_SAT, ON_SUN);
-        addHoliday("HUF", "Hungary National Day",           ON_SAT, ON_SUN);
-        addHoliday("HUF", "Hungary Republic Day",           ON_SAT, ON_SUN);
-        addHoliday("HUF", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("HUF", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("HUF", "Pentecost");
-
-        // indonesia rupiah
-        addHoliday("IDR", "Ascension");
-        addHoliday("IDR", "Birth of the Prophet",           ON_SAT, ON_SUN);
-        addHoliday("IDR", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("IDR", "Good Friday");
-        addHoliday("IDR", "Indonesia Independence",         ON_SAT, ON_SUN);
-        addHoliday("IDR", "Islamic New Year",               ON_SAT, ON_SUN);
-        addHoliday("IDR", "Muttons Feast",                  ON_SAT, ON_SUN);
-        addHoliday("IDR", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("IDR", "Wesak Day",                      ON_SAT, ON_SUN);
-
-        // ireland punt
-        addHoliday("IEP", "Autumn Bank Holiday");
-        addHoliday("IEP", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("IEP", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("IEP", "Easter Monday");
-        addHoliday("IEP", "Good Friday");
-        addHoliday("IEP", "Halloween Day");
-        addHoliday("IEP", "June Bank Holiday");
-        addHoliday("IEP", "May Monday");
-        addHoliday("IEP", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("IEP", "St. Patrick Day",                ON_SAT, ON_SUN);
-
-        // india rupee
-        addHoliday("INR", "Buddha Purnima",                 ON_SAT, ON_SUN);
-        addHoliday("INR", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("INR", "Diwali",                         ON_SAT, ON_SUN);
-        addHoliday("INR", "Dussehra",                       ON_SAT, ON_SUN);
-        addHoliday("INR", "Eid Al Fitr",                    ON_SAT, ON_SUN);
-        addHoliday("INR", "Good Friday");
-        addHoliday("INR", "Guru Nanak",                     ON_SAT, ON_SUN);
-        addHoliday("INR", "India Independence",             ON_SAT, ON_SUN);
-        addHoliday("INR", "India Republic Day",             ON_SAT, ON_SUN);
-        addHoliday("INR", "Mahatma Gandhis Birthday",       ON_SAT, ON_SUN);
-        addHoliday("INR", "Mahavir Jayanti",                ON_SAT, ON_SUN);
-        addHoliday("INR", "Muharram",                       ON_SAT, ON_SUN);
-        addHoliday("INR", "New Year Day",                   ON_SAT, ON_SUN);
-//      INR 03/29/1999 Idul Zuha
-//      INR 06/27/1999 Id-el-Milad
-
-        // iceland krona
-        addHoliday("ISK", "Ascension");
-        addHoliday("ISK", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("ISK", "Easter Monday");
-        addHoliday("ISK", "Good Friday");
-        addHoliday("ISK", "Holy Thursday");
-        addHoliday("ISK", "Iceland Commerce Day");
-        addHoliday("ISK", "Iceland National Day",           ON_SAT, ON_SUN);
-        addHoliday("ISK", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("ISK", "Pentecost");
-
-        // italy lira
-        addHoliday("ITL", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("ITL", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("ITL", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("ITL", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("ITL", "Easter Monday");
-        addHoliday("ITL", "Epiphany",                       ON_SAT, ON_SUN);
-        addHoliday("ITL", "Immaculate Conception",          ON_SAT, ON_SUN);
-        addHoliday("ITL", "Italy Liberation Day",           ON_SAT, ON_SUN);
-        addHoliday("ITL", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("ITL", "New Year Day",                   ON_SAT, ON_SUN);
-
-        // japan yen -- since Saturday is Friday evening in the West and mostly worked, Saturdays do not roll but are taken directly
-        addHoliday("JPY", "Autumnal Equinox",               ON_SAT, ON_SUN); // TODO: equinox algorithms not working yet
-        addHoliday("JPY", "Japan Bank Holiday",             ON_SAT, ON_SUN);
-        addHoliday("JPY", "Japan Children Day",             ON_SAT, ON_SUN);
-        addHoliday("JPY", "Japan Coming of Age Day",        ON_SAT, ON_SUN);
-        addHoliday("JPY", "Japan Culture Day",              ON_SAT, ON_SUN);
-        addHoliday("JPY", "Japan Emperor Birthday",         ON_SAT, ON_SUN);
-        addHoliday("JPY", "Japan Foundation Day",           ON_SAT, ON_SUN);
-        addHoliday("JPY", "Japan Greenery Day",             ON_SAT, ON_SUN);
-        addHoliday("JPY", "Japan Sports Day",               ON_SAT, SUN_MON);
-        addHoliday("JPY", "Japan Marine Day",               ON_SAT, ON_SUN);
-        addHoliday("JPY", "Japan Memorial Day",             ON_SAT, ON_SUN);
-        addHoliday("JPY", "Japan Respect Aged Day",         ON_SAT, ON_SUN);
-        addHoliday("JPY", "Japan Thanksgiving Day",         ON_SAT, ON_SUN);
-        addHoliday("JPY", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("JPY", "New Year Day II",                ON_SAT, ON_SUN);
-        addHoliday("JPY", "New Year Day III",               ON_SAT, ON_SUN);
-        addHoliday("JPY", "New Year Eve",                   ON_SAT, ON_SUN);
-        addHoliday("JPY", "Vernal Equinox",                 ON_SAT, ON_SUN); // TODO: equinox algorithms not working yet
-        addHoliday("JPY", "Vernal Equinox II",              ON_SAT, ON_SUN); // TODO: equinox algorithms not working yet
-
-        // south korea won
-        addHoliday("KRW", "Buddha Birthday",                ON_SAT, ON_SUN);
-        addHoliday("KRW", "Lunar New Year",                 ON_SAT, ON_SUN);
-        addHoliday("KRW", "Lunar New Year II",              ON_SAT, ON_SUN);
-        addHoliday("KRW", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("KRW", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("KRW", "New Year Day II",                ON_SAT, ON_SUN);
-        addHoliday("KRW", "South Korean Constitution",      ON_SAT, ON_SUN);
-        addHoliday("KRW", "South Korean Independence",      ON_SAT, ON_SUN);
-        addHoliday("KRW", "South Korean Liberation",        ON_SAT, ON_SUN);
-        addHoliday("KRW", "South Korean Memorial Day",      ON_SAT, ON_SUN);
-        addHoliday("KRW", "South Korean National Day",      ON_SAT, ON_SUN);
-//      KRW 09/23/1999 Harvest Moon Festival Eve
-//      KRW 09/24/1999 Harvest Moon Festival Day
-//      KRW 09/11/2000 Harvest Moon Festival Eve
-//      KRW 09/12/2000 Harvest Moon Festival Day
-//      KRW 09/13/2000 Harvest Moon Festival Holiday
-//      KRW 09/30/2001 Harvest Moon Festival Eve
-//      KRW 10/01/2001 Harvest Moon Festival Day
-//      KRW 10/02/2001 Harvest Moon Festival Holiday
-
-        // kuwait dinar
-        addHoliday("KWD", "Birth of the Prophet",           ON_SAT, ON_SUN);
-        addHoliday("KWD", "Eid Al Fitr",                    ON_SAT, ON_SUN);
-        addHoliday("KWD", "Eid El Adha",                    ON_SAT, ON_SUN);
-        addHoliday("KWD", "Islamic New Year",               ON_SAT, ON_SUN);
-        addHoliday("KWD", "Kuwait Liberation Day",          ON_SAT, ON_SUN);
-        addHoliday("KWD", "Kuwait National Day",            ON_SAT, ON_SUN);
-        addHoliday("KWD", "New Year Day",                   ON_SAT, ON_SUN);
-
-        // cayman islands dollar
-        addHoliday("KYD", "Cayman Constitution Day");
-        addHoliday("KYD", "Cayman Discovery Day");
-        addHoliday("KYD", "Cayman Queen Day");
-        addHoliday("KYD", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("KYD", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("KYD", "Christmas Eve",                  ON_SAT, ON_SUN);
-        addHoliday("KYD", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("KYD", "Remembrance Day",                ON_SAT, ON_SUN);
-
-        // luxemburg franc
-        addHoliday("LUF", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("LUF", "Ascension");
-        addHoliday("LUF", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("LUF", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("LUF", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("LUF", "Easter Monday");
-        addHoliday("LUF", "Luxemburg National Day",         ON_SAT, ON_SUN);
-        addHoliday("LUF", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("LUF", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("LUF", "Pentecost");
-
-        // mexico peso
-        addHoliday("MXN", "All Souls Day",                  ON_SAT, ON_SUN);
-        addHoliday("MXN", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("MXN", "Cinco De Mayo",                  ON_SAT, ON_SUN);
-        addHoliday("MXN", "Columbus Day",                   ON_SAT, ON_SUN);
-        addHoliday("MXN", "Easter Monday");
-        addHoliday("MXN", "Good Friday");
-        addHoliday("MXN", "Guadalupes Day",                 ON_SAT, ON_SUN);
-        addHoliday("MXN", "Holy Thursday");
-        addHoliday("MXN", "Juarez Birthday",                ON_SAT, ON_SUN);
-        addHoliday("MXN", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("MXN", "Mexico Constitution Day",        ON_SAT, ON_SUN);
-        addHoliday("MXN", "Mexico Independence",            ON_SAT, ON_SUN);
-        addHoliday("MXN", "Mexico Revolution",              ON_SAT, ON_SUN);
-        addHoliday("MXN", "New Year Day",                   ON_SAT, ON_SUN); // TODO: check this
-
-        // malaysia ringgit
-        addHoliday("MYR", "Birth of the Prophet",           ON_SAT, ON_SUN);
-        addHoliday("MYR", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("MYR", "Islamic New Year",               ON_SAT, ON_SUN);
-        addHoliday("MYR", "Lunar New Year",                 ON_SAT, ON_SUN);
-        addHoliday("MYR", "Lunar New Year II",              ON_SAT, ON_SUN);
-        addHoliday("MYR", "Malaysia Federal Territory",     ON_SAT, ON_SUN);
-        addHoliday("MYR", "Malaysia National Day",          ON_SAT, ON_SUN);
-        addHoliday("MYR", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("MYR", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("MYR", "Wesak Day",                      ON_SAT, ON_SUN);
-//      MYR 01/19/1999 Hari Raya Puasa
-//      MYY 01/20/1999 Hari Raya Puasa
-//      MYR 11/07/1999 Deepavally Day
-//      MYR 01/08/2000 Hari Raya Puasa
-//      MYR 01/09/2000 Hari Raya Puasa
-//      MYR 10/26/2000 Deepavally Day
-//      MYR 12/27/2000 Hari Raya Puasa
-//      MYR 12/28/2000 Hari Raya Puasa
-//      MYR 12/16/2001 Hari Raya Puasa
-//      MYR 12/17/2001 Hari Raya Puasa
-
-        // netherlands guilder
-        addHoliday("NLG", "Ascension");
-        addHoliday("NLG", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("NLG", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("NLG", "Easter Monday");
-        addHoliday("NLG", "Good Friday");
-        addHoliday("NLG", "Netherland Liberation",          ON_SAT, ON_SUN);
-        addHoliday("NLG", "Netherland Queen Birthday",      ON_SAT, ON_SUN);
-        addHoliday("NLG", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("NLG", "Pentecost");
-
-        // norway krone
-        addHoliday("NOK", "Ascension");
-        addHoliday("NOK", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("NOK", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("NOK", "Easter Monday");
-        addHoliday("NOK", "Good Friday");
-        addHoliday("NOK", "Holy Thursday");
-        addHoliday("NOK", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("NOK", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("NOK", "Norway Constitution Day",        ON_SAT, ON_SUN);
-        addHoliday("NOK", "Pentecost");
-
-        // new zealand dollar
-        addHoliday("NZD", "Anzac Day",                      ON_SAT, ON_SUN);
-        addHoliday("NZD", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("NZD", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("NZD", "Easter Monday");
-        addHoliday("NZD", "Good Friday");
-        addHoliday("NZD", "New Year Day",                   SAT_MON, SUN_TUE);
-        addHoliday("NZD", "New Year Day II",                SAT_MON, SUN_TUE);
-        addHoliday("NZD", "New Zealand Labour Day");
-        addHoliday("NZD", "New Zealand Queen Day");
-        addHoliday("NZD", "Waitangi Day",                   ON_SAT, ON_SUN);
-
-        // panama balboa
-        addHoliday("PAB", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("PAB", "Carnival Monday");
-        addHoliday("PAB", "Carnival Tuesday");
-        addHoliday("PAB", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("PAB", "Good Friday");
-        addHoliday("PAB", "Martyrs Day",                    ON_SAT, ON_SUN);
-        addHoliday("PAB", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("PAB", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("PAB", "Panama Announcement",            ON_SAT, ON_SUN);
-        addHoliday("PAB", "Panama Break From Spain",        ON_SAT, ON_SUN);
-        addHoliday("PAB", "Panama Independence I",          ON_SAT, ON_SUN);
-        addHoliday("PAB", "Panama Independence II",         ON_SAT, ON_SUN);
-        addHoliday("PAB", "Panama Mothers Day",             ON_SAT, ON_SUN);
-
-        // peru sol
-        addHoliday("PEN", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("PEN", "Angamos Battle",                 ON_SAT, ON_SUN);
-        addHoliday("PEN", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("PEN", "Good Friday");
-        addHoliday("PEN", "Holy Thursday");
-        addHoliday("PEN", "Immaculate Conception",          ON_SAT, ON_SUN);
-        addHoliday("PEN", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("PEN", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("PEN", "Peru Independence I",            ON_SAT, ON_SUN);
-        addHoliday("PEN", "Peru Independence II",           ON_SAT, ON_SUN);
-        addHoliday("PEN", "St. Peter & St. Paul Day",       ON_SAT, ON_SUN);
-        addHoliday("PEN", "St. Rose of Lima",               ON_SAT, ON_SUN);
-
-        // philippine peso
-        addHoliday("PHP", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("PHP", "Bonifacio Day",                  ON_SAT, ON_SUN);
-        addHoliday("PHP", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("PHP", "Good Friday");
-        addHoliday("PHP", "Holy Thursday");
-        addHoliday("PHP", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("PHP", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("PHP", "New Year Eve",                   ON_SAT, ON_SUN);
-        addHoliday("PHP", "New Year Eve Eve",               ON_SAT, ON_SUN);
-        addHoliday("PHP", "Philippine Heroes Day I",        ON_SAT, ON_SUN);
-        addHoliday("PHP", "Philippine Heroes Day II",       ON_SAT, ON_SUN);
-        addHoliday("PHP", "Philippine Heroes Day III",      ON_SAT, ON_SUN);
-        addHoliday("PHP", "Philippine Independence",        ON_SAT, ON_SUN);
-
-        // poland zloty
-        addHoliday("PLN", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("PLN", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("PLN", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("PLN", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("PLN", "Corpus Christi");
-        addHoliday("PLN", "Easter Monday");
-        addHoliday("PLN", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("PLN", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("PLN", "Poland Constitution Day",        ON_SAT, ON_SUN);
-        addHoliday("PLN", "Poland Independence",            ON_SAT, ON_SUN);
-
-        // portugal escudo
-        addHoliday("PTE", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("PTE", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("PTE", "Carnival Monday");                                // TODO: or tuesday
-        addHoliday("PTE", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("PTE", "Christmas Eve",                  ON_SAT, ON_SUN);
-        addHoliday("PTE", "Corpus Christi");
-        addHoliday("PTE", "Good Friday");
-        addHoliday("PTE", "Immaculate Conception",          ON_SAT, ON_SUN);
-        addHoliday("PTE", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("PTE", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("PTE", "Portugal Day",                   ON_SAT, ON_SUN);
-        addHoliday("PTE", "Portugal Independence",          ON_SAT, ON_SUN);
-        addHoliday("PTE", "Portugal Liberty Day",           ON_SAT, ON_SUN);
-        addHoliday("PTE", "Portugal Republic Day",          ON_SAT, ON_SUN);
-
-        // russia ruble
-        addHoliday("RUB", "Defenders of Motherland",        ON_SAT, ON_SUN);
-        addHoliday("RUB", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("RUB", "May Labour Day II",              ON_SAT, ON_SUN);
-        addHoliday("RUB", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("RUB", "New Year Day II",                ON_SAT, ON_SUN);
-        addHoliday("RUB", "Orthodox Christmas",             ON_SAT, ON_SUN);
-        addHoliday("RUB", "Russia Constitution Day",        ON_SAT, ON_SUN);
-        addHoliday("RUB", "Russia National Day",            ON_SAT, ON_SUN);
-        addHoliday("RUB", "Russia Revolution Day",          ON_SAT, ON_SUN);
-        addHoliday("RUB", "Russia Victory Day",             ON_SAT, ON_SUN);
-        addHoliday("RUB", "Russia Womans Day",              ON_SAT, ON_SUN);
-
-        // saudi arabia riyal
-        addHoliday("SAR", "Eid Al Fitr",                    ON_SAT, ON_SUN);
-        addHoliday("SAR", "Eid El Adha",                    ON_SAT, ON_SUN);
-        addHoliday("SAR", "Saudi Arabia Nature Day",        ON_SAT, ON_SUN);
-        addHoliday("SAR", "Saudi Arabia Nature Day II",     ON_SAT, ON_SUN);
-        addHoliday("SAR", "Saudi Arabia Unification",       ON_SAT, ON_SUN);
-
-        // sweden krona
-        addHoliday("SEK", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("SEK", "Ascension");
-        addHoliday("SEK", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("SEK", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("SEK", "Christmas Eve",                  ON_SAT, ON_SUN);
-        addHoliday("SEK", "Easter Monday");
-        addHoliday("SEK", "Epiphany",                       ON_SAT, ON_SUN);
-        addHoliday("SEK", "Good Friday");
-        addHoliday("SEK", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("SEK", "Midsummer");
-        addHoliday("SEK", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("SEK", "New Year Eve",                   ON_SAT, ON_SUN);
-        addHoliday("SEK", "Pentecost");
-        addHoliday("SEK", "St. Walpurgis Day",              ON_SAT, ON_SUN);
-        addHoliday("SEK", "Sweden Flag Day",                ON_SAT, ON_SUN);
-
-        // singapore dollar
-        addHoliday("SGD", "Lunar New Year",                 ON_SAT, ON_SUN);
-        addHoliday("SGD", "Lunar New Year II",              ON_SAT, ON_SUN);
-        addHoliday("SGD", "Lunar New Year III",             ON_SAT, ON_SUN);
-        addHoliday("SGD", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("SGD", "Good Friday");
-        addHoliday("SGD", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("SGD", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("SGD", "Singapore National Day",         ON_SAT, ON_SUN);
-        addHoliday("SGD", "Wesak Day",                      ON_SAT, ON_SUN);
-//      SGD 01/19/1999 Hari Raya Puasa
-//      SGD 03/28/1999 Hari Raya Haji
-//      SGD 11/07/1999 Deepavali
-//      SGD 01/08/2000 Hari Raya Puasa
-//      SGD 03/16/2000 Hari Raya Haji
-//      SGD 10/26/2000 Deepavali
-//      SGD 12/27/2000 Hari Raya Puasa
-//      SGD 03/06/2001 Hari Raya Haji
-//      SGD 12/16/2001 Hari Raya Puasa
-
-        // slovakia koruna
-        addHoliday("SGD", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("SGD", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("SGD", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("SGD", "Christmas Eve",                  ON_SAT, ON_SUN);
-        addHoliday("SGD", "Epiphany",                       ON_SAT, ON_SUN);
-        addHoliday("SGD", "Good Friday");
-        addHoliday("SGD", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("SGD", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("SGD", "Our Lady of Seven Sorrows",      ON_SAT, ON_SUN);
-        addHoliday("SGD", "Slovakia Constitution Day",      ON_SAT, ON_SUN);
-        addHoliday("SGD", "Slovakia Liberation",            ON_SAT, ON_SUN);
-        addHoliday("SGD", "Slovakia National Day",          ON_SAT, ON_SUN);
-        addHoliday("SGD", "St. Cyril & Methodius",          ON_SAT, ON_SUN);
-
-        // el salvador colon
-        addHoliday("SVC", "All Souls Day",                  ON_SAT, ON_SUN);
-        addHoliday("SVC", "Bank Balance I",                 ON_SAT, ON_SUN);
-        addHoliday("SVC", "Bank Balance II",                ON_SAT, ON_SUN);
-        addHoliday("SVC", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("SVC", "Easter Monday");
-        addHoliday("SVC", "El Salvador Independence",       ON_SAT, ON_SUN);
-        addHoliday("SVC", "Good Friday");
-        addHoliday("SVC", "Holy Thursday");
-        addHoliday("SVC", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("SVC", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("SVC", "New Year Eve",                   ON_SAT, ON_SUN);
-        addHoliday("SVC", "New Year Eve Eve",               ON_SAT, ON_SUN);
-        addHoliday("SVC", "Transfiguration I",              ON_SAT, ON_SUN);
-        addHoliday("SVC", "Transfiguration II",             ON_SAT, ON_SUN);
-        addHoliday("SVC", "Transfiguration III",            ON_SAT, ON_SUN);
-
-        // thailand baht
-        addHoliday("THB", "King Chulalongkorn Memorial",    ON_SAT, ON_SUN);
-        addHoliday("THB", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("THB", "Mid Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("THB", "New Year Day",                   SAT_MON, SUN_MON);
-        addHoliday("THB", "New Year Eve",                   ON_SAT, ON_SUN);
-        addHoliday("THB", "Shakri Dynasty Day",             ON_SAT, ON_SUN);
-        addHoliday("THB", "Songkran Festival I",            ON_SAT, ON_SUN);
-        addHoliday("THB", "Songkran Festival II",           ON_SAT, ON_SUN);
-        addHoliday("THB", "Songkran Festival III",          ON_SAT, ON_SUN);
-        addHoliday("THB", "Thailand Constitution Day",      SAT_MON, SUN_MON);
-        addHoliday("THB", "Thailand Crowning Day",          ON_SAT, ON_SUN);
-        addHoliday("THB", "Thailand King Day",              ON_SAT, ON_SUN);
-        addHoliday("THB", "Thailand Queen Day",             ON_SAT, ON_SUN);
-//      THB 01/01/1999 Makha Bucha Day (?)
-//      THB 05/29/1999 Visakha Bucha Day
-//      THB 07/28/1999 Buddisht Lent
-//      THB 05/18/2000 Vishaka Bucha Day
-//      THB 07/17/2000 Buddisht Lent
-
-        // turkey lira
-        addHoliday("TRL", "Eid Al Fitr",                    ON_SAT, ON_SUN);
-        addHoliday("TRL", "Eid El Adha",                    ON_SAT, ON_SUN);
-        addHoliday("TRL", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("TRL", "Turkey Children & Sovereign",    ON_SAT, ON_SUN);
-        addHoliday("TRL", "Turkey Republic Day",            ON_SAT, ON_SUN);
-        addHoliday("TRL", "Turkey Victory Day",             ON_SAT, ON_SUN);
-        addHoliday("TRL", "Turkey Youth & Sports",          ON_SAT, ON_SUN);
-//      TRL 03/16/2000 Day of the Sacrifice
-//      TRL 03/17/2000 Day of the Sacrifice
-//      TRL 03/18/2000 Day of the Sacrifice
-//      TRL 03/19/2000 Day of the Sacrifice
-//      TRL 03/05/2001 Day of the Sacrifice
-//      TRL 03/06/2001 Day of the Sacrifice
-//      TRL 03/07/2001 Day of the Sacrifice
-//      TRL 03/08/2001 Day of the Sacrifice
-
-        // taiwan dollar
-        addHoliday("TWD", "Ching Ming Eve",                 ON_SAT, ON_SUN);
-        addHoliday("TWD", "Confucius Birthday",             ON_SAT, ON_SUN);
-        addHoliday("TWD", "Dragon Boat Day",                ON_SAT, ON_SUN);
-        addHoliday("TWD", "Dr. Sun Yat Sen Birthday",       ON_SAT, ON_SUN);
-        addHoliday("TWD", "Lunar New Year Eve",             ON_SAT, ON_SUN);
-        addHoliday("TWD", "Lunar New Year",                 ON_SAT, ON_SUN);
-        addHoliday("TWD", "Lunar New Year II",              ON_SAT, ON_SUN);
-        addHoliday("TWD", "Lunar New Year III",             ON_SAT, ON_SUN);
-        addHoliday("TWD", "Mid Autumn Festival",            ON_SAT, ON_SUN);
-        addHoliday("TWD", "Mid Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("TWD", "New Year Day",                   SAT_MON, SUN_TUE);
-        addHoliday("TWD", "New Year Day II",                SAT_MON, SUN_TUE);
-        addHoliday("TWD", "President Tchiang Kai Sek",      ON_SAT, ON_SUN);
-        addHoliday("TWD", "Taiwan Constitution Day",        ON_SAT, ON_SUN);
-        addHoliday("TWD", "Taiwan National Day",            ON_SAT, ON_SUN);
-        addHoliday("TWD", "Taiwan Peace Day",               ON_SAT, ON_SUN);
-        addHoliday("TWD", "Taiwan Retrocession",            ON_SAT, ON_SUN);
-        addHoliday("TWD", "Taiwan Woman Day",               ON_SAT, ON_SUN);
-        addHoliday("TWD", "Taiwan Youth Day",               ON_SAT, ON_SUN);
-
-        // united states dollar
-        addHoliday("USD", "Christmas",                      SAT_FRI, SUN_MON);
-        addHoliday("USD", "Fourth Of July",                 SAT_FRI, SUN_MON);
-        addHoliday("USD", "Martin Luther King");
-        addHoliday("USD", "New Year Day",                   SAT_FRI, SUN_MON);
-        addHoliday("USD", "Presidents Day");
-        addHoliday("USD", "Thanksgiving Day");
-        addHoliday("USD", "USA Columbus Day");
-        addHoliday("USD", "USA Labor Day");
-        addHoliday("USD", "USA Memorial Day");
-        addHoliday("USD", "USA Veterans Day",               SAT_FRI, SUN_MON); // TODO: unsure if this is a currency
-
-        // venezuela bolivar
-        addHoliday("VEB", "All Saints Day",                 ON_SAT, ON_SUN);
-        addHoliday("VEB", "Ascension");
-        addHoliday("VEB", "Assumption",                     ON_SAT, ON_SUN);
-        addHoliday("VEB", "Battle of Carabobo",             ON_SAT, ON_SUN);
-        addHoliday("VEB", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("VEB", "Columbus Day",                   ON_SAT, ON_SUN);
-        addHoliday("VEB", "Epiphany Monday");
-        addHoliday("VEB", "Immaculate Conception",          ON_SAT, ON_SUN);
-        addHoliday("VEB", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("VEB", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("VEB", "San Jose",                       ON_SAT, ON_SUN);
-        addHoliday("VEB", "St. Peter & St. Paul Day",       ON_SAT, ON_SUN);
-        addHoliday("VEB", "Simon Bolivar Day",              ON_SAT, ON_SUN);
-        addHoliday("VEB", "Venezuela Independence",         ON_SAT, ON_SUN);
-        addHoliday("VEB", "Venezuela Independence II",      ON_SAT, ON_SUN);
-
-        // south africa rand
-        addHoliday("ZAR", "Ascension");
-        addHoliday("ZAR", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("ZAR", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("ZAR", "Easter Monday");
-        addHoliday("ZAR", "Good Friday");
-        addHoliday("ZAR", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("ZAR", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("ZAR", "South Africa Freedom Day",       ON_SAT, ON_SUN);
-        addHoliday("ZAR", "South Africa Heritage Day",      ON_SAT, ON_SUN);
-        addHoliday("ZAR", "South Africa Human Rights",      ON_SAT, SUN_MON);
-        addHoliday("ZAR", "South Africa Reconciliation",    ON_SAT, ON_SUN);
-        addHoliday("ZAR", "South Africa Womans Day",        ON_SAT, ON_SUN);
-        addHoliday("ZAR", "South Africa Youth Day",         ON_SAT, ON_SUN);
-
-        // zimbabwe dollar
-        addHoliday("ZWD", "Africa Day",                     ON_SAT, ON_SUN);
-        addHoliday("ZWD", "Boxing Day",                     ON_SAT, ON_SUN);
-        addHoliday("ZWD", "Christmas",                      ON_SAT, ON_SUN);
-        addHoliday("ZWD", "May Labour Day",                 ON_SAT, ON_SUN);
-        addHoliday("ZWD", "New Year Day",                   ON_SAT, ON_SUN);
-        addHoliday("ZWD", "Zimbabwe Armed Forces Day",      ON_SAT, ON_SUN);
-        addHoliday("ZWD", "Zimbabwe Heroes Day",            ON_SAT, ON_SUN);
-        addHoliday("ZWD", "Zimbabwe Independence",          ON_SAT, ON_SUN);
-        addHoliday("ZWD", "Zimbabwe Public Holiday",        ON_SAT, ON_SUN);
-        addHoliday("ZWD", "Zimbabwe Unity Day",             ON_SAT, ON_SUN);
-    }
-
-    /**
-     * Returns an iterator for all the currencies handled by this class.
-     * @return Iterator of currency keys.
-     */
-    public static Iterator<String> currencies() {
-        return _ccys.keySet().iterator();
-    }
-
-    /**
-     * Returns an iterator for all the holidays for specified currency.
-     * @param ccy Name of the currency.
-     * @return Iterator of currency keys.
-     */
-    public static Iterator<RawHolidayChoice> holidays(String ccy) {
-        Map<String, RawHolidayChoice> ccyMap = _ccys.get(ccy);
-        return ccyMap.values().iterator();
-    }
-
-    /**
-     * Prints holidays for currency between years specified, inclusive.
-     * @param ccy   Name of the currency.
-     * @param start Starting year.
-     * @param end   Ending year.
-     */
-    public static void print(String ccy, /*year*/int start, /*year*/int end) {
-        RawHolidayChoice holi;
-        Date date;
-        /*year*/int year;
-        for (Iterator<RawHolidayChoice> ih = holidays(ccy); ih.hasNext();) {
-            holi = ih.next();
-            _logger.info("  " + holi.getLabel());
-            for (year = start; year <= end; year++) {
-                date = holi.date(year);
-                if (date != null) {
-                    _logger.info("    " + date);
-                }
-            }
-        }
-    }
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-
-    /**
-     * Stores a holiday for a currency on the currency's list.
-     * @param ccy  Name of the currency.
-     * @param holi Name of the holiday.
-     */
-    public static void addHoliday(String ccy, String holi) {
-        RawHolidayChoice raw = (RawHolidayChoice) _raws.choice(holi);
-        if (raw != null) {
-            putHoliday(ccy, raw);
-        }
-    }
-
-    /**
-     * Stores a holiday for a currency on the currency's list.
-     * @param ccy  Name of the currency.
-     * @param holi Name of the holiday.
-     * @param sat  Saturday adjustment.
-     * @param sun  Sunday adjustment.
-     */
-    public static void addHoliday(String ccy, String holi, int sat, int sun) {
-        if (sat == 0 && sun == 0) {
-            addHoliday(ccy, holi);
-        } else {
-            RawHolidayChoice raw = (RawHolidayChoice) _raws.choice(holi);
-            if (raw != null) {
-                putHoliday(ccy, new CcyHoli(raw, sat, sun));
-            }
-        }
-    }
-
-    /**
-     * Stores a holiday for a currency on the currency's list.
-     * @param ccy Name of the currency.
-     * @param raw Raw holiday object.
-     */
-    public static void putHoliday(String ccy, RawHolidayChoice raw) {
-        Map<String, RawHolidayChoice> ccyMap = _ccys.get(ccy);
-        if (ccyMap == null) {
-            ccyMap = new TreeMap<String, RawHolidayChoice>();
-            _ccys.put(ccy, ccyMap);
-        }
-        ccyMap.put(raw.getLabel(), raw);
-    }
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Date.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Date.java
deleted file mode 100644
index f583352a5..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Date.java
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.currency;
-
-/**
- * Date wrapper.
- *
- * @author Scott R. Duchin
- */
-public class Date {
-
-    public Date addDays(int _sun) {
-        return null;
-    }
-
-    public Weekday weekday() {
-        return null;
-    }
-
-    public Date nextWeekday(Weekday _weekday) {
-        return null;
-    }
-
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/DateFactory.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/DateFactory.java
deleted file mode 100644
index d55e92545..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/DateFactory.java
+++ /dev/null
@@ -1,29 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.currency;
-
-/**
- * Date factory.
- *
- * @author Scott R. Duchin
- */
-public class DateFactory {
-
-    public static Date date(int year, Month _month, int _day) {
-        return null;
-    }
-
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/DateUtil.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/DateUtil.java
deleted file mode 100644
index 0dec7f42a..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/DateUtil.java
+++ /dev/null
@@ -1,29 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.currency;
-
-/**
- * Date utilities.
- *
- * @author Scott R. Duchin
- */
-public class DateUtil {
-
-    public static boolean isLeapYear(int year) {
-        return false;
-    }
-
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Month.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Month.java
deleted file mode 100644
index dbdd4ecbd..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Month.java
+++ /dev/null
@@ -1,194 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.currency;
-
-import java.util.HashMap;
-import java.util.Map;
-
-/**
- * This enumeration is for the months of a year.
- *
- * @author Scott R. Duchin
- */
-public enum Month {
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-// Static Variables & Methods
-
-    /**
-     * Defines the twelve months.
-     */
-    JAN(1), FEB(2), MAR(3), APR(4), MAY(5), JUN(6), JUL(7), AUG(8), SEP(9), OCT(10), NOV(11), DEC(12);
-
-    // static variables
-    private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };
-    private static Map<String, Month>   _names = new HashMap<String, Month>(12); // lower case names to months
-
-    /**
-     * Numeric value representing number of months in the year.
-     */
-    public static int MONTHS_PER_YEAR = 12;
-
-    /**
-     * Array of month full names.
-     */
-    private static final String[] FULL_NAME = {
-        null,
-        "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"
-    };
-
-    /**
-     * Array of days per month in non-leap year.
-     */
-    private static final /*day*/int[] MAX_DAYS = {
-        0,
-        31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31
-    };
-
-    /**
-     * Array of days per month in year.
-     */
-    private static final int[] START_WITHIN_YEAR = {
-        0,
-        0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334
-    };
-    private static final int[] START_WITHIN_LEAP_YEAR = {
-        0,
-        0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335
-    };
-
-    static {
-        _names.put("january",   Month.JAN);
-        _names.put("february",  Month.FEB);
-        _names.put("march",     Month.MAR);
-        _names.put("april",     Month.APR);
-        _names.put("may",       Month.MAY);
-        _names.put("june",      Month.JUN);
-        _names.put("july",      Month.JUL);
-        _names.put("august",    Month.AUG);
-        _names.put("september", Month.SEP);
-        _names.put("october",   Month.OCT);
-        _names.put("november",  Month.NOV);
-        _names.put("december",  Month.DEC);
-    }
-
-    /**
-     * Returns the month associated with the index.
-     * @param index Index of the month (1...12).
-     * @return Associated month.
-     */
-    public static Month month(int index) {
-        return _months[index];
-    }
-
-    /**
-     * Returns the month associated with the name.
-     * @param str Month name.
-     * @return Associated month; <code>null</code> if invalid string.
-     */
-    public static Month month(String str) {
-        Month month;
-        if (str.length() == 3) {
-            try {
-                month = Enum.valueOf(Month.class, str.toUpperCase());
-            } catch (IllegalArgumentException iae) {
-                month = null;
-            }
-        } else {
-            month = _names.get(str.toLowerCase());
-        }
-        return month;
-    }
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-// Field Variables & Constructor
-
-    // private field variables
-    private final int                   _month;             // index of the month
-
-    /**
-     * Constructor.
-     * @param   month   Month index.
-     */
-    private Month(int month) {
-        _month = month;
-    }
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-// Business Logic
-
-    /**
-     * Returns the number of days in the year.
-     * @param leapYear <code>true</code> if leap year; <code>false</code> otherwise.
-     * @return Number of days in month for year; inclusive range of 28 thru 31.
-     */
-    public /*day*/int maxDays(boolean leapYear) {
-        return (this == FEB && leapYear) ? 29 : MAX_DAYS[_month];
-    }
-
-    /**
-     * Returns the number of days in the year.
-     * @param year  Year (1...3000).
-     * @return Number of days in month for year; inclusive range of 28 thru 31.
-     */
-    public /*day*/int maxDays(/*year*/int year) {
-        return maxDays(DateUtil.isLeapYear(year));
-    }
-
-    /**
-     * Calculates the starting day of the year.
-     * @param leapYear <code>true</code> if leap year; <code>false</code> otherwise.
-     * @return Day number (1...366) of the year.
-     */
-    public int startDayInYear(boolean leapYear) {
-        return leapYear ? START_WITHIN_LEAP_YEAR[_month] : START_WITHIN_YEAR[_month];
-    }
-
-    /**
-     * Returns a string representation of the month.
-     * @return Month abbreviation.
-     */
-    public String toString() {
-        return name();
-    }
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-// Get & Set Methods
-
-    /**
-     * Returns the month abbreviated name.
-     * @return Month abbreviation (JAN, FEB, ..., DEC).
-     */
-    public String getAbbrev() {
-        return name();
-    }
-
-    /**
-     * Returns the month full name.
-     * @return Month name (January, February, ..., December).
-     */
-    public String getFullName() {
-        return FULL_NAME[_month];
-    }
-
-    /**
-     * Returns the month index.
-     * @return Index of the month (1...12).
-     */
-    public int getValue() {
-        return _month;
-    }
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/RawHolidayChoice.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/RawHolidayChoice.java
deleted file mode 100644
index 2803917ac..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/RawHolidayChoice.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.currency;
-
-import java.util.List;
-
-/**
- * The interface for specifying a raw holiday; the Saturday and Sunday behavior is not specified at this level.
- *
- * @author Scott R. Duchin
- */
-public interface RawHolidayChoice extends Choice {
-
-    /**
-     * Returns the date of the particular holiday for the specified year.
-     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.
-     * @param year Year the holiday is requested for.
-     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.
-     */
-    Date date(/*year*/int year);
-
-    /**
-     * Returns a list of dates of the particular holiday for the specified years.
-     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.
-     * @param start Starting year.
-     * @param end   Ending year.
-     * @return List of dates of holidays in specified years, inclusive.
-     */
-    List<Date> dates(/*year*/int start, /*year*/int end);
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/RawHolidayChoiceImpl.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/RawHolidayChoiceImpl.java
deleted file mode 100644
index c0b46abf1..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/RawHolidayChoiceImpl.java
+++ /dev/null
@@ -1,673 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.currency;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * Abstract Holidays.
- *
- * @author Scott R. Duchin
- */
-abstract class AbstractHoliday extends AbstractChoice implements RawHolidayChoice {
-
-    static final long serialVersionUID = 1001L;             // version 1 for serialization
-
-    // state fields
-    protected /*day*/int                _day;               // day (or days from easter, etc...)
-    protected /*year*/int               _end = 2100;        // ending year for holidays
-    protected int                       _every = 1;         // the number of years between holidays
-    protected Month                     _month;             // month of holiday
-    protected /*year*/int               _start = 1;         // starting year for holidays
-    protected Weekday                   _weekday;           // day of the week
-
-    /**
-     * Constructor for holiday.
-     * @param label The holiday convention.
-     * @param month Month holiday is in.
-     * @param day   Day holiday is on.
-     */
-    public AbstractHoliday(String label, Month month, /*day*/int day) {
-        super(RawHolidayChoiceImpl.choices(), label);
-        _day = day;
-        _month = month;
-    }
-
-    /**
-     * Constructor for holiday.
-     * @param label The holiday convention.
-     * @param month Month holiday is in.
-     * @param day   Day holiday is on.
-     * @param start Starting year.
-     * @param end   Ending year.
-     * @param every Number of years between holidays.
-     */
-    public AbstractHoliday(String label, Month month, /*day*/int day, /*year*/int start, /*year*/int end, int every) {
-        super(RawHolidayChoiceImpl.choices(), label);
-        _day = day;
-        _month = month;
-        _start = start;
-        _end = end;
-        _every = every;
-    }
-
-    /**
-     * Returns a list of dates of the particular holiday for the specified years.
-     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.
-     * @param start Starting year.
-     * @param end   Ending year.
-     * @return List of dates of holidays in specified years, inclusive.
-     */
-    public List<Date> dates(/*year*/int start, /*year*/int end) {
-        List<Date> list = new ArrayList<Date>(end - start + 1);
-        for (/*year*/int year = start; year <= end; year++) {
-            list.add(date(year));
-        }
-        return list;
-    }
-}
-
-/**
- * Easter Holidays.
- *
- * @author Scott R. Duchin
- */
-class HolidayEaster extends AbstractHoliday {
-
-    static final long serialVersionUID = 1001L;             // version 1 for serialization
-
-    /**
-     * Constructor for holiday.
-     * @param label The holiday convention.
-     * @param days  Days from Easter Sunday.
-     */
-    public HolidayEaster(String label, int days) {
-        super(label, null, days);
-    }
-
-    private static final /*day*/int[] EASTER = {
-        14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27
-    };
-
-    /**
-     * Returns the date of the particular holiday for the specified year.
-     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.
-     * @param year Year the holiday is requested for.
-     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.
-     */
-    public Date date(/*year*/int year) {
-        int day = EASTER[year % 19];
-        Date easter = DateFactory.date(year, (day < 20) ? Month.APR : Month.MAR, day).addDays(1).nextWeekday(Weekday.SUN);
-        Date holi = easter.addDays(_day);
-        return holi;
-    }
-}
-
-/**
- * Equinox Holidays.
- *
- * @author Scott R. Duchin
- */
-class HolidayEquinox extends AbstractHoliday {
-
-    static final long serialVersionUID = 1001L;             // version 1 for serialization
-
-    /**
-     * Constructor for holiday.
-     * @param label  The holiday convention.
-     * @param spring <code>true</code> for Spring; <code>false</code> for Autumn.
-     * @param days   Days from Equinox.
-     */
-    public HolidayEquinox(String label, boolean spring, int days) {
-        super(label, spring ? Month.MAR : Month.SEP, days);
-    }
-
-    /**
-     * Returns the date of the particular holiday for the specified year.
-     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.
-     * @param year Year the holiday is requested for.
-     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.
-     */
-    public Date date(/*year*/int year) {
-        // TODO: must get starting seconds and add seconds per year to derive actual time of equinox
-        Date equinox;
-        if (_month == Month.MAR) {
-            equinox = DateFactory.date(year, _month, 21);
-        } else {
-            equinox = DateFactory.date(year, _month, 23);
-        }
-        Date holi = equinox.addDays(_day);
-        return holi;
-    }
-}
-
-/**
- * Islamic Holidays.
- *
- * @author Scott R. Duchin
- */
-class HolidayIslamic extends AbstractHoliday {
-
-    static final long serialVersionUID = 1001L;             // version 1 for serialization
-
-    /**
-     * Constructor for holiday.
-     * @param label The holiday convention.
-     * @param days  Days from Islamic new year.
-     */
-    public HolidayIslamic(String label, int days) {
-        super(label, null, days);
-    }
-
-    private static final int[][] ISLAMIC = {
-        {1999, 4, 18}, {2000, 4, 6}, {2001, 3, 26}, {2002, 3, 15}
-    };
-
-    /**
-     * Returns the date of the particular holiday for the specified year.
-     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.
-     * @param year Year the holiday is requested for.
-     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.
-     */
-    public Date date(/*year*/int year) {
-        Date holi = null;
-        if (1999 <= year && year <= 2002) {
-            int yr = year - 1999;
-            Date islamic = DateFactory.date(year, Month.month(ISLAMIC[yr][1]), ISLAMIC[yr][2]);
-            holi = islamic.addDays(_day);
-        }
-        return holi;
-    }
-}
-
-/**
- * Lunar New Year Holidays.
- *
- * @author Scott R. Duchin
- */
-class HolidayLunar extends AbstractHoliday {
-
-    static final long serialVersionUID = 1001L;             // version 1 for serialization
-
-    /**
-     * Constructor for holiday.
-     * @param label The holiday convention.
-     * @param days  Days from lunar new year.
-     */
-    public HolidayLunar(String label, int days) {
-        super(label, null, days);
-    }
-
-    private static final int[][] LUNAR = {
-        {1999, 2, 16}, {2000, 2,  5}, {2001, 1, 24}, {2002, 2, 12}, {2003, 2,  1}, {2004, 1, 22},
-        {2005, 2,  9}, {2006, 1, 29}, {2007, 2, 18}, {2008, 2,  7}, {2009, 1, 26}, {2010, 2, 14}
-    };
-
-    /**
-     * Returns the date of the particular holiday for the specified year.
-     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.
-     * @param year Year the holiday is requested for.
-     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.
-     */
-    public Date date(/*year*/int year) {
-        Date holi = null;
-        if (1999 <= year && year <= 2010) {
-            int yr = year - 1999;
-            Date lunar = DateFactory.date(year, Month.month(LUNAR[yr][1]), LUNAR[yr][2]);
-            holi = lunar.addDays(_day);
-        }
-        return holi;
-    }
-}
-
-/**
- * Day Of Month Holidays.
- *
- * @author Scott R. Duchin
- */
-class HolidayMonthDay extends AbstractHoliday {
-
-    static final long serialVersionUID = 1001L;             // version 1 for serialization
-
-    /**
-     * Constructor for holiday.
-     * @param label The holiday convention.
-     * @param month Month holiday is in.
-     * @param day   Day holiday is on.
-     */
-    public HolidayMonthDay(String label, Month month, /*day*/int day) {
-        super(label, month, day);
-    }
-
-    /**
-     * Constructor for holiday.
-     * @param label The holiday convention.
-     * @param month Month holiday is in.
-     * @param day   Day holiday is on.
-     * @param start Starting year.
-     * @param end   Ending year.
-     * @param every Number of years between holidays.
-     */
-    public HolidayMonthDay(String label, Month month, /*day*/int day, /*year*/int start, /*year*/int end, int every) {
-        super(label, month, day, start, end, every);
-    }
-
-    /**
-     * Returns the date of the particular holiday for the specified year.
-     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.
-     * @param year Year the holiday is requested for.
-     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.
-     */
-    public Date date(/*year*/int year) {
-        Date holi = null;
-        if (_every == 1 || (_start <= year && year <= _end && ((year - _start) % _every == 0))) {
-            holi = DateFactory.date(year, _month, _day);
-        }
-        return holi;
-    }
-}
-
-/**
- * Weekday Holidays.
- *
- * @author Scott R. Duchin
- */
-class HolidayWeekday extends AbstractHoliday {
-
-    static final long serialVersionUID = 1001L;             // version 1 for serialization
-
-    /**
-     * Constructor for holiday.
-     * @param label   The holiday convention.
-     * @param month   Month holiday is in.
-     * @param day     First possible day for holiday.
-     * @param weekday Day of the week holiday is on.
-     */
-    public HolidayWeekday(String label, Month month, /*day*/int day, Weekday weekday) {
-        super(label, month, day);
-        _weekday = weekday;
-    }
-
-    /**
-     * Returns the date of the particular holiday for the specified year.
-     * Note: the holiday returned is pure; not adjusted for Saturday or Sunday local behavior.
-     * @param year Year the holiday is requested for.
-     * @return Date of holiday in specified year; <code>null</code> if no holiday in specified year.
-     */
-    public Date date(/*year*/int year) {
-        Date holi = DateFactory.date(year, _month, _day);
-        return holi.nextWeekday(_weekday);
-    }
-}
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-
-/**
- * The choice list for holiday implementations.
- *
- * @author Scott R. Duchin
- */
-public final class RawHolidayChoiceImpl {
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-// Static Variables & Methods
-
-    // static variables
-    private static ChoiceList _choices;
-
-    /**
-     * Static initializer to create the holiday convention list.
-     */
-    static {
-        _choices = new ChoiceList(klass());
-
-        new HolidayMonthDay("Africa Day",                   Month.MAY,  25);
-        new HolidayMonthDay("All Saints Day",               Month.NOV,   1);
-        new HolidayMonthDay("All Souls Day",                Month.NOV,   2);
-        new HolidayMonthDay("Angamos Battle",               Month.OCT,   8);
-        new HolidayMonthDay("Annunciation",                 Month.MAR,  25);
-        new HolidayMonthDay("Anzac Day",                    Month.APR,  25);
-        new HolidayWeekday("Argentina Flag Day",            Month.JUN,  18,  Weekday.MON); // TODO: starting date
-        new HolidayMonthDay("Argentina Independence",       Month.JUL,   9);
-        new HolidayMonthDay("Argentina May Revolution",     Month.MAY,  25);
-        new HolidayMonthDay("Armistice Day",                Month.NOV,  11);
-        new HolidayEaster("Ascension",                       39);
-        new HolidayEaster("Ash Wednesday",                  -46);
-        new HolidayMonthDay("Assumption",                   Month.AUG,  15);
-        new HolidayMonthDay("Australia Day",                Month.JAN,  26);
-        new HolidayMonthDay("Australia Labour Day",         Month.MAR,   1);
-        new HolidayWeekday("Australia Queen Day",           Month.JUN,   8,  Weekday.MON);
-        new HolidayMonthDay("Austria National Day",         Month.OCT,  26);
-        new HolidayWeekday("Autumn Bank Holiday",           Month.AUG,   1,  Weekday.MON);
-        new HolidayEquinox("Autumnal Equinox",              false, 0);
-        new HolidayMonthDay("Bahamas Independence",         Month.JUL,  10);
-        new HolidayWeekday("Bahamas Labour Day",            Month.JUN,   1,  Weekday.FRI);
-        new HolidayMonthDay("Bank Balance I",               Month.JUN,  29);
-        new HolidayMonthDay("Bank Balance II",              Month.JUN,  30);
-        new HolidayMonthDay("Barbados Heroes Day",          Month.APR,  28);
-        new HolidayMonthDay("Barbados Independence",        Month.NOV,  30);
-        new HolidayMonthDay("Bastille Day",                 Month.JUL,  14);
-        new HolidayMonthDay("Battle of Boyaca Day",         Month.AUG,   7);
-        new HolidayMonthDay("Battle of Carabobo",           Month.JUN,  24);
-        new HolidayMonthDay("Belgium National Day",         Month.JUL,  21);
-        new HolidayMonthDay("Belize Emancipation",          Month.MAY,  24);
-        new HolidayMonthDay("Belize Independence",          Month.SEP,  21);
-        new HolidayWeekday("Bermuda Cup Match",             Month.JUL,  30,  Weekday.THU); // TODO: starting date
-        new HolidayWeekday("Bermuda Labour Day",            Month.SEP,   1,  Weekday.MON);
-        new HolidayWeekday("Bermuda Queen Day",             Month.JUN,  15,  Weekday.MON); // TODO: starting date
-        new HolidayWeekday("Bermuda Somers Day",            Month.JUL,  31,  Weekday.FRI); // TODO: starting date
-        new HolidayIslamic("Birth of the Prophet",           69);
-        new HolidayMonthDay("Bolivia Independence",         Month.AUG,   6);
-        new HolidayMonthDay("Bonifacio Day",                Month.NOV,  30);
-        new HolidayMonthDay("Brazil Independence",          Month.SEP,   7);
-        new HolidayMonthDay("Brazil Republic Day",          Month.NOV,  15);
-        new HolidayMonthDay("Boxing Day",                   Month.DEC,  26);
-        new HolidayMonthDay("Buddha Purnima",               Month.APR,  30);
-        new HolidayLunar("Buddha Birthday",                  95);
-        new HolidayWeekday("Canada Civic Day",              Month.AUG,   1,  Weekday.MON);
-        new HolidayMonthDay("Canada Independence",          Month.JUL,   1);
-        new HolidayWeekday("Canada Labour Day",             Month.SEP,   1,  Weekday.MON);
-        new HolidayWeekday("Canada Thanksgiving Day",       Month.OCT,   8,  Weekday.MON);
-        new HolidayEaster("Carnival Monday",                -48);
-        new HolidayEaster("Carnival Thursday",              -52);
-        new HolidayEaster("Carnival Tuesday",               -47);
-        new HolidayEaster("Carnival Wednesday",             -53);
-        new HolidayWeekday("Cayman Constitution Day",       Month.JUL,   1,  Weekday.MON); // TODO: starting date
-        new HolidayWeekday("Cayman Discovery Day",          Month.MAY,  15,  Weekday.MON); // TODO: starting date
-        new HolidayWeekday("Cayman Queen Day",              Month.JUN,   8,  Weekday.MON); // TODO: starting date
-        new HolidayMonthDay("Chile Army Day",               Month.SEP,  19);
-        new HolidayMonthDay("Chile Commemoration Day",      Month.SEP,  11);
-        new HolidayMonthDay("Chile Marine Day",             Month.MAY,  21);
-        new HolidayMonthDay("Chile National Day",           Month.SEP,  18);
-        new HolidayMonthDay("Chile Unity Day",              Month.SEP,   6);
-        new HolidayMonthDay("Chinese National Day I",       Month.OCT,   1);
-        new HolidayMonthDay("Chinese National Day II",      Month.OCT,   2);
-        new HolidayMonthDay("Ching Ming Eve",               Month.APR,   5); // TODO: check this with next
-        new HolidayMonthDay("Ching Ming Festival",          Month.APR,   6);
-        new HolidayMonthDay("Christmas",                    Month.DEC,  25);
-        new HolidayMonthDay("Christmas Eve",                Month.DEC,  24);
-        new HolidayMonthDay("Christmas IV",                 Month.DEC,  28);
-        new HolidayMonthDay("Christmas V",                  Month.DEC,  29);
-        new HolidayMonthDay("Christmas VI",                 Month.DEC,  30);
-        new HolidayMonthDay("Cinco De Mayo",                Month.MAY,   5);
-        new HolidayMonthDay("Columbia Independence",        Month.JUL,  20);
-        new HolidayMonthDay("Columbus Day",                 Month.OCT,  12);
-        new HolidayMonthDay("Commonwealth Day",             Month.MAR,   9);
-        new HolidayMonthDay("Confucius Birthday",           Month.SEP,  28);
-        new HolidayEaster("Corpus Christi",                  60);
-        new HolidayMonthDay("Costa Rica Independence",      Month.SEP,  15);
-        new HolidayMonthDay("Cuencas Independence",         Month.NOV,   3);
-        new HolidayMonthDay("Czech Liberation",             Month.MAY,   8);
-        new HolidayMonthDay("Czech National Day",           Month.OCT,  28);
-        new HolidayMonthDay("December Bank Holiday",        Month.DEC,   1);
-        new HolidayMonthDay("Denmark National Day",         Month.JUN,   5);
-        new HolidayMonthDay("Defenders of Motherland",      Month.FEB,  23);
-        new HolidayMonthDay("Diwali",                       Month.NOV,   7);
-        new HolidayMonthDay("Dr. Sun Yat Sen Birthday",     Month.NOV,  12);
-        new HolidayLunar("Dragon Boat Day",                 122);
-        new HolidayMonthDay("Dussehra",                     Month.OCT,  19);
-        new HolidayEaster("Easter Monday",                    1);
-        new HolidayMonthDay("Ecuador Independence",         Month.AUG,  10);
-        new HolidayWeekday("Ecuador Bank Holiday",          Month.JUN,  24,  Weekday.FRI);
-        new HolidayIslamic("Eid Al Fitr",                   -89);
-        new HolidayIslamic("Eid El Adha",                   -20);
-        new HolidayMonthDay("Egypt Army Day",               Month.OCT,   6);
-        new HolidayMonthDay("Egypt Liberation",             Month.OCT,  23);
-        new HolidayMonthDay("Egypt National Day",           Month.JUL,  23);
-        new HolidayMonthDay("Egypt Union Day",              Month.FEB,  22);
-        new HolidayMonthDay("Egypt Victory Day",            Month.DEC,  23);
-        new HolidayMonthDay("El Salvador Independence",     Month.SEP,  15);
-        new HolidayWeekday("Election Day",                  Month.NOV,   2,  Weekday.TUE);
-        new HolidayMonthDay("Emancipation Day",             Month.AUG,   1);
-        new HolidayWeekday("Emancipation Monday",           Month.AUG,   1,  Weekday.MON);
-        new HolidayMonthDay("Epiphany",                     Month.JAN,   6);
-        new HolidayWeekday("Epiphany Monday",               Month.JAN,   2,  Weekday.MON);
-        new HolidayMonthDay("Elevation",                    Month.SEP,  14);
-        new HolidayMonthDay("Errol Barrow Day",             Month.JAN,  21);
-        new HolidayMonthDay("Fasting Day",                  Month.FEB,  22);
-        new HolidayMonthDay("Fete De La Victoire",          Month.MAY,   8);
-        new HolidayMonthDay("Finland Independence",         Month.DEC,   6);
-        new HolidayMonthDay("Foundation Day",               Month.JUN,   7);
-        new HolidayMonthDay("Fourth Of July",               Month.JUL,   4);
-        new HolidayMonthDay("Friendship Day",               Month.SEP,  20);
-        new HolidayMonthDay("Garifuna Day",                 Month.NOV,  19);
-        new HolidayWeekday("General San Martin Memorial",   Month.AUG,  13,  Weekday.MON); // TODO: starting date
-        new HolidayMonthDay("German Unity Day",             Month.OCT,   3);
-        new HolidayEaster("Good Friday",                    -2);
-        new HolidayMonthDay("Greece National Day I",        Month.MAR,  25);
-        new HolidayMonthDay("Greece National Day II",       Month.OCT,  28);
-        new HolidayMonthDay("Guadalupes Day",               Month.DEC,  12);
-        new HolidayMonthDay("Guayaquils Independence",      Month.OCT,   9);
-        new HolidayMonthDay("Guru Nanak",                   Month.NOV,  23);
-        new HolidayWeekday("Halloween Day",                 Month.OCT,  25,  Weekday.MON);
-        new HolidayIslamic("Hari Raya Haji",                -20);
-        new HolidayEaster("Holy Thursday",                  -3);
-        new HolidayMonthDay("Honduras Army Day",            Month.OCT,  21);
-        new HolidayMonthDay("Honduras Independence",        Month.SEP,  15);
-        new HolidayMonthDay("Hungary Constitution Day",     Month.AUG,  20);
-        new HolidayMonthDay("Hungary National Day",         Month.MAR,  15);
-        new HolidayMonthDay("Hungary Republic Day",         Month.OCT,  23);
-        new HolidayWeekday("Iceland Commerce Day",          Month.AUG,   1,  Weekday.MON);
-        new HolidayMonthDay("Iceland National Day",         Month.JUL,  17);
-        new HolidayMonthDay("Immaculate Conception",        Month.DEC,   8);
-        new HolidayMonthDay("Inauguration Day",             Month.JAN,  20,  1937, 3000, 4);
-        new HolidayMonthDay("India Independence",           Month.AUG,  15);
-        new HolidayMonthDay("India Republic Day",           Month.JAN,  26);
-        new HolidayMonthDay("Indonesia Independence",       Month.AUG,  17);
-        new HolidayIslamic("Islamic New Year",               0);
-        new HolidayMonthDay("Italy Liberation Day",         Month.APR,  25);
-        new HolidayMonthDay("Jan Hus",                      Month.JUL,   6); // TODO: sometimes june?
-        new HolidayMonthDay("Japan Bank Holiday",           Month.MAY,   4);
-        new HolidayMonthDay("Japan Children Day",           Month.MAY,   5);
-        new HolidayMonthDay("Japan Coming of Age Day",      Month.JAN,  15);
-        new HolidayMonthDay("Japan Culture Day",            Month.NOV,   3);
-        new HolidayMonthDay("Japan Emperor Birthday",       Month.DEC,  23);
-        new HolidayMonthDay("Japan Foundation Day",         Month.FEB,  11);
-        new HolidayMonthDay("Japan Greenery Day",           Month.APR,  29);
-        new HolidayMonthDay("Japan Sports Day",             Month.OCT,  10);
-        new HolidayMonthDay("Japan Marine Day",             Month.JUL,  20);
-        new HolidayMonthDay("Japan Memorial Day",           Month.MAY,   3);
-        new HolidayMonthDay("Japan Respect Aged Day",       Month.SEP,  15);
-        new HolidayMonthDay("Japan Thanksgiving Day",       Month.NOV,  23);
-        new HolidayMonthDay("Juarez Birthday",              Month.MAR,  21);
-        new HolidayWeekday("June Bank Holiday",             Month.JUN,   1,  Weekday.MON);
-        new HolidayWeekday("Kadooment Day",                 Month.AUG,   2,  Weekday.MON); // TODO: start date?
-        new HolidayMonthDay("King Chulalongkorn Memorial",  Month.OCT,  23);
-        new HolidayMonthDay("Kuwait Liberation Day",        Month.FEB,  26);
-        new HolidayMonthDay("Kuwait National Day",          Month.FEB,  25);
-        new HolidayMonthDay("La Paz",                       Month.JUL,  16);
-        new HolidayWeekday("Labour Day",                    Month.OCT,   1,  Weekday.MON);
-        new HolidayLunar("Lunar New Year Eve",              -1);
-        new HolidayLunar("Lunar New Year",                   0);
-        new HolidayLunar("Lunar New Year II",                1);
-        new HolidayLunar("Lunar New Year III",               2);
-        new HolidayMonthDay("Luxemburg National Day",       Month.JUN,  23);
-        new HolidayMonthDay("Mahatma Gandhis Birthday",     Month.OCT,   2);
-        new HolidayMonthDay("Mahavir Jayanti",              Month.MAR,  29);
-        new HolidayMonthDay("Malaysia Federal Territory",   Month.FEB,   1);
-        new HolidayMonthDay("Malaysia National Day",        Month.AUG,  31);
-        new HolidayWeekday("Martin Luther King",            Month.JAN,  15,  Weekday.MON);
-        new HolidayMonthDay("Martyrs Day",                  Month.JAN,   9);
-        new HolidayMonthDay("May Day",                      Month.MAY,   1);
-        new HolidayMonthDay("May Day Eve",                  Month.APR,  30);
-        new HolidayWeekday("May Monday",                    Month.MAY,   1,  Weekday.MON);
-        new HolidayMonthDay("May Labour Day",               Month.MAY,   1);
-        new HolidayMonthDay("May Labour Day II",            Month.MAY,   2);
-        new HolidayMonthDay("Mexico Constitution Day",      Month.FEB,   5);
-        new HolidayMonthDay("Mexico Independence",          Month.SEP,  16);
-        new HolidayMonthDay("Mexico Revolution",            Month.NOV,  20);
-        new HolidayLunar("Mid Autumn Festival",             220);
-        new HolidayMonthDay("Mid Year Day",                 Month.JUL,   1);
-        new HolidayWeekday("Midsummer",                     Month.JUN,  22,  Weekday.TUE); // TODO: start - saw 15th & 23rd (SEK)
-        new HolidayWeekday("Midsummer Eve",                 Month.JUN,  21,  Weekday.MON); // TODO: ditto
-        new HolidayMonthDay("Morazan Day",                  Month.OCT,   3);
-        new HolidayMonthDay("Muharram",                     Month.APR,  27);
-        new HolidayMonthDay("Muttons Feast",                Month.MAR,  28);
-        new HolidayMonthDay("Nativity",                     Month.SEP,   8);
-        new HolidayMonthDay("Netherland Liberation",        Month.MAY,   5);
-        new HolidayMonthDay("Netherland Queen Birthday",    Month.APR,  30);
-        new HolidayMonthDay("New Year Day",                 Month.JAN,   1);
-        new HolidayMonthDay("New Year Day II",              Month.JAN,   2);
-        new HolidayMonthDay("New Year Day III",             Month.JAN,   3);
-        new HolidayMonthDay("New Year Eve",                 Month.DEC,  31);
-        new HolidayMonthDay("New Year Eve Eve",             Month.DEC,  30);
-        new HolidayWeekday("New Zealand Labour Day",        Month.OCT,  22,  Weekday.MON); // TODO: starting date
-        new HolidayWeekday("New Zealand Queen Day",         Month.JUN,   1,  Weekday.MON); // TODO: starting date
-        new HolidayMonthDay("Norway Constitution Day",      Month.MAY,  17);
-        new HolidayMonthDay("Nossa Senhora",                Month.OCT,  12);
-        new HolidayMonthDay("Orthodox Christmas",           Month.JAN,   7);
-        new HolidayMonthDay("Orthodox Christmas Eve",       Month.JAN,   6);
-        new HolidayMonthDay("Orthodox New Year",            Month.JAN,  14);
-        new HolidayMonthDay("Our Lady of Seven Sorrows",    Month.SEP,  15);
-        new HolidayMonthDay("Panama Announcement",          Month.NOV,  10);
-        new HolidayMonthDay("Panama Break From Spain",      Month.NOV,  28);
-        new HolidayMonthDay("Panama Independence I",        Month.NOV,   3);
-        new HolidayMonthDay("Panama Independence II",       Month.NOV,   4);
-        new HolidayMonthDay("Panama Mothers Day",           Month.DEC,   8);
-        new HolidayMonthDay("Panamerican Day",              Month.APR,  14);
-        new HolidayEaster("Pentecost",                       50);
-        new HolidayMonthDay("Peru Independence I",          Month.JUL,  28);
-        new HolidayMonthDay("Peru Independence II",         Month.JUL,  29);
-        new HolidayMonthDay("Philippine Heroes Day I",      Month.APR,   9);
-        new HolidayMonthDay("Philippine Heroes Day II",     Month.AUG,  27);
-        new HolidayMonthDay("Philippine Heroes Day III",    Month.AUG,  31);
-        new HolidayMonthDay("Philippine Independence",      Month.JUN,  12);
-        new HolidayMonthDay("Pichincha Battle",             Month.MAY,  24);
-        new HolidayMonthDay("Poland Constitution Day",      Month.MAY,   3); // TODO: is this 1st wednesday of each month
-        new HolidayMonthDay("Poland Independence",          Month.NOV,  11);
-        new HolidayMonthDay("Portugal Day",                 Month.JUN,  10);
-        new HolidayMonthDay("Portugal Independence",        Month.DEC,   1);
-        new HolidayMonthDay("Portugal Liberty Day",         Month.APR,  25);
-        new HolidayMonthDay("Portugal Republic Day",        Month.OCT,   5);
-        new HolidayEaster("Prayer Day",                      26);
-        new HolidayWeekday("Presidents Day",                Month.FEB,  15,  Weekday.MON);
-        new HolidayMonthDay("President Tchiang Kai Sek",    Month.OCT,  31);
-        new HolidayWeekday("Queen Victoria Day",            Month.MAY,  18,  Weekday.MON);
-        new HolidayMonthDay("Quitos Foundation",            Month.DEC,   6);
-        new HolidayMonthDay("Remembrance Day",              Month.NOV,  11);
-        new HolidayMonthDay("Russia Constitution Day",      Month.DEC,  12);
-        new HolidayMonthDay("Russia National Day",          Month.JUN,  12);
-        new HolidayMonthDay("Russia Revolution Day",        Month.NOV,   7);
-        new HolidayMonthDay("Russia Victory Day",           Month.MAY,   9);
-        new HolidayMonthDay("Russia Womans Day",            Month.MAR,   8);
-        new HolidayMonthDay("San Jose",                     Month.MAR,  19);
-        new HolidayMonthDay("Saudi Arabia Nature Day",      Month.APR,   1);
-        new HolidayMonthDay("Saudi Arabia Nature Day II",   Month.APR,   2);
-        new HolidayMonthDay("Saudi Arabia Unification",     Month.SEP,  24);
-        new HolidayMonthDay("Sham El Nessim",               Month.APR,  12);
-        new HolidayMonthDay("Shakri Dynasty Day",           Month.APR,   6);
-        new HolidayMonthDay("Simon Bolivar Day",            Month.JUL,  24);
-        new HolidayMonthDay("Sinai Day",                    Month.APR,  25);
-        new HolidayMonthDay("Singapore National Day",       Month.AUG,   9);
-        new HolidayMonthDay("Slovakia Constitution Day",    Month.SEP,   1);
-        new HolidayMonthDay("Slovakia Liberation",          Month.MAY,   8);
-        new HolidayMonthDay("Slovakia National Day",        Month.AUG,  29);
-        new HolidayMonthDay("Songkran Festival I",          Month.APR,  12);
-        new HolidayMonthDay("Songkran Festival II",         Month.APR,  13);
-        new HolidayMonthDay("Songkran Festival III",        Month.APR,  14);
-        new HolidayMonthDay("South Africa Freedom Day",     Month.APR,  27);
-        new HolidayMonthDay("South Africa Heritage Day",    Month.SEP,  24);
-        new HolidayMonthDay("South Africa Human Rights",    Month.MAR,  21);
-        new HolidayMonthDay("South Africa Reconciliation",  Month.DEC,  16);
-        new HolidayMonthDay("South Africa Womans Day",      Month.AUG,   9);
-        new HolidayMonthDay("South Africa Youth Day",       Month.JUN,  16);
-        new HolidayMonthDay("South Korean Constitution",    Month.JUL,  17);
-        new HolidayMonthDay("South Korean Independence",    Month.MAR,  1);
-        new HolidayMonthDay("South Korean Liberation",      Month.AUG,  15);
-        new HolidayMonthDay("South Korean Memorial Day",    Month.JUN,   6);
-        new HolidayMonthDay("South Korean National Day",    Month.OCT,   3);
-        new HolidayMonthDay("Spain Constitution Day",       Month.DEC,   6);
-        new HolidayMonthDay("Spain National Day",           Month.OCT,  12);
-        new HolidayWeekday("Spring Bank Holiday",           Month.MAY,  25,  Weekday.MON);
-        new HolidayMonthDay("St. Cyril & Methodius",        Month.JUL,   5); // TODO: sometimes june?
-        new HolidayMonthDay("St. Georges Caye Day",         Month.SEP,  10);
-        new HolidayMonthDay("St. Josephs Day",              Month.MAR,  19);
-        new HolidayMonthDay("St. Patrick Day",              Month.MAR,  17);
-        new HolidayMonthDay("St. Peter & St. Paul Day",     Month.JUN,  29);
-        new HolidayMonthDay("St. Rose of Lima",             Month.AUG,  30);
-        new HolidayMonthDay("St. Walpurgis Day",            Month.APR,  30);
-        new HolidayMonthDay("Suez Victory Day",             Month.OCT,  24);
-        new HolidayWeekday("Summer Bank Holiday",           Month.AUG,  25,  Weekday.MON);
-        new HolidayMonthDay("Sweden Flag Day",              Month.JUN,   6);
-        new HolidayMonthDay("Swiss National Day",           Month.AUG,   1);
-        new HolidayMonthDay("Taiwan Constitution Day",      Month.DEC,  25);
-        new HolidayMonthDay("Taiwan National Day",          Month.OCT,  10);
-        new HolidayMonthDay("Taiwan Peace Day",             Month.FEB,  28);
-        new HolidayMonthDay("Taiwan Retrocession",          Month.OCT,  25);
-        new HolidayMonthDay("Taiwan Woman Day",             Month.APR,   4);
-        new HolidayMonthDay("Taiwan Youth Day",             Month.MAR,  29);
-        new HolidayMonthDay("Thailand Constitution Day",    Month.DEC,  10);
-        new HolidayMonthDay("Thailand Crowning Day",        Month.MAY,   5);
-        new HolidayMonthDay("Thailand King Day",            Month.DEC,   5);
-        new HolidayMonthDay("Thailand Queen Day",           Month.AUG,  12);
-        new HolidayWeekday("Thanksgiving Day",              Month.NOV,  22,  Weekday.THU);
-        new HolidayWeekday("Thanksgiving Friday",           Month.NOV,  23,  Weekday.FRI);
-        new HolidayMonthDay("Tiradentes",                   Month.APR,  21);
-        new HolidayMonthDay("Transfiguration I",            Month.AUG,   4);
-        new HolidayMonthDay("Transfiguration II",           Month.AUG,   5);
-        new HolidayMonthDay("Transfiguration III",          Month.AUG,   6);
-        new HolidayMonthDay("Turkey Children & Sovereign",  Month.APR,  23);
-        new HolidayMonthDay("Turkey Republic Day",          Month.OCT,  29);
-        new HolidayMonthDay("Turkey Victory Day",           Month.AUG,  30);
-        new HolidayMonthDay("Turkey Youth & Sports",        Month.MAY,  19);
-        new HolidayMonthDay("United Nation Day",            Month.OCT,  24);
-        new HolidayWeekday("USA Columbus Day",              Month.OCT,   8,  Weekday.MON);
-        new HolidayMonthDay("USA Flag Day",                 Month.JUN,   1);
-        new HolidayWeekday("USA Labor Day",                 Month.SEP,   1,  Weekday.MON);
-        new HolidayWeekday("USA Memorial Day",              Month.MAY,  25,  Weekday.MON);
-        new HolidayMonthDay("USA Veterans Day",             Month.NOV,  11);
-        new HolidayMonthDay("Venezuela Independence",       Month.JUL,   5);
-        new HolidayMonthDay("Venezuela Independence II",    Month.APR,  19);
-        new HolidayEquinox("Vernal Equinox",                true, 0);
-        new HolidayEquinox("Vernal Equinox II",             true, 1);
-        new HolidayMonthDay("Waitangi Day",                 Month.FEB,   6);
-        new HolidayIslamic("Wesak Day",                      42);
-        new HolidayMonthDay("Zimbabwe Armed Forces Day",    Month.AUG,  12);
-        new HolidayMonthDay("Zimbabwe Heroes Day",          Month.AUG,  11);
-        new HolidayMonthDay("Zimbabwe Independence",        Month.APR,  18);
-        new HolidayMonthDay("Zimbabwe Public Holiday",      Month.AUG,  13);
-        new HolidayMonthDay("Zimbabwe Unity Day",           Month.DEC,  22);
-    }
-
-    /**
-     * Returns the class used to reference choices.
-     * @return Choice reference class.
-     */
-    public static Class klass() {
-        return RawHolidayChoice.class;
-    }
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-// Field Variables & Constructor
-
-    /**
-     * Invalid constructor to choice list.
-     */
-    private RawHolidayChoiceImpl() {
-    }
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-// Get & Set Methods
-
-    /**
-     * Returns the choice list for this implementation.
-     * @return Choice list.
-     */
-    public static ChoiceList choices() {
-        return _choices;
-    }
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Weekday.java b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Weekday.java
deleted file mode 100644
index b06b412df..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/currency/Weekday.java
+++ /dev/null
@@ -1,161 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.currency;
-
-import java.util.HashMap;
-import java.util.Map;
-
-/**
- * This enumeration is for the weekdays of a week.
- *
- * @author Scott R. Duchin
- */
-public enum Weekday {
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-// Static Variables & Methods
-
-    /**
-     * Defines the seven weekdays.
-     */
-    SUN(1, true), MON(2, false), TUE(3, false), WED(4, false), THU(5, false), FRI(6, false), SAT(7, true);
-
-    // static variables
-    private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };
-    private static Map<String, Weekday> _names = new HashMap<String, Weekday>(7); // lower case names to weekdays
-
-    /**
-     * Numeric value representing number of days in the week.
-     */
-    public static int DAYS_PER_WEEK = 7;
-
-    /**
-     * Array of weekday full names.
-     */
-    private static final String[] FULL_NAME = {
-        null,
-        "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"
-    };
-
-    static {
-        _names.put("Sunday",    Weekday.SUN);
-        _names.put("Monday",    Weekday.MON);
-        _names.put("Tuesday",   Weekday.TUE);
-        _names.put("Wednesday", Weekday.WED);
-        _names.put("Thursday",  Weekday.THU);
-        _names.put("Friday",    Weekday.FRI);
-        _names.put("Saturday",  Weekday.SAT);
-    }
-
-    /**
-     * Returns the weekday associated with the index.
-     * @param index Index of the weekday (1...7).
-     * @return Associated weekday.
-     */
-    public static Weekday weekday(int index) {
-        return _weekdays[index];
-    }
-
-    /**
-     * Returns the weekday associated with the name.
-     * @param str Weekday name.
-     * @return Associated weekday; <code>null</code> if invalid string.
-     */
-    public static Weekday weekday(String str) {
-        Weekday weekday;
-        if (str.length() == 3) {
-            try {
-                weekday = Enum.valueOf(Weekday.class, str.toUpperCase());
-            } catch (IllegalArgumentException iae) {
-                weekday = null;
-            }
-        } else {
-            weekday = _names.get(str.toLowerCase());
-        }
-        return weekday;
-    }
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-// Field Variables & Constructor
-
-    // private field variables
-    private final boolean               _isWeekend;         // true if weekend; false otherwise
-    private final int                   _weekday;           // index of the weekday
-
-    /**
-     * Constructor.
-     * @param   weekday     Weekday index.
-     * @param   isWeekend   <code>true</code> if weekend; <code>false</code> otherwise.
-     */
-    private Weekday(int weekday, boolean isWeekend) {
-        _weekday = weekday;
-        _isWeekend = isWeekend;
-    }
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-// Business Logic
-
-    /**
-     * Indicates if day is a weekday.
-     * @return  <code>true</code> if weekday; <code>false</code> if weekend.
-     */
-    public boolean isWeekday() {
-        return ! _isWeekend;
-    }
-
-    /**
-     * Indicates if day is a weekend.
-     * @return  <code>true</code> if weekend; <code>false</code> if weekday.
-     */
-    public boolean isWeekend() {
-        return _isWeekend;
-    }
-
-    /**
-     * Returns a string representation of the weekday.
-     * @return Weekday abbreviation.
-     */
-    public String toString() {
-        return name();
-    }
-
-///////////////////////////////////////////////////////////////////////////////////////////////////
-// Get & Set Methods
-
-    /**
-     * Returns the weekday abbreviated name.
-     * @return Weekday abbreviation (SUN, MON, ..., SAT).
-     */
-    public String getAbbrev() {
-        return name();
-    }
-
-    /**
-     * Returns the weekday full name.
-     * @return Weekday name (Sunday, Monday, ..., Saturday).
-     */
-    public String getFullName() {
-        return FULL_NAME[_weekday];
-    }
-
-    /**
-     * Returns the weekday index.
-     * @return Index of the weekday (1...7).
-     */
-    public int getValue() {
-        return _weekday;
-    }
-}
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/src/GB.xml b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/src/GB.xml
deleted file mode 100644
index 09f3c9772..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/src/GB.xml
+++ /dev/null
@@ -1,217 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  -  Copyright 2001-2005 Stephen Colebourne
-  -
-  -  Licensed under the Apache License, Version 2.0 (the "License");
-  -  you may not use this file except in compliance with the License.
-  -  You may obtain a copy of the License at
-  -
-  -      http://www.apache.org/licenses/LICENSE-2.0
-  -
-  -  Unless required by applicable law or agreed to in writing, software
-  -  distributed under the License is distributed on an "AS IS" BASIS,
-  -  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  -  See the License for the specific language governing permissions and
-  -  limitations under the License.
-  -->
-<!--
-  - Holiday information for GB locale.
-  - GB is divided into 4 nations:
-  - - GB-ENG - England
-  - - GB-WLS - Wales
-  - - GB-SCT - Scotland
-  - - GB-NIR - Northern Ireland
-  -
-  - This data is by no means authoritative, and has been collated from various
-  - sources. If you think you know better feel free to edit the file.
-  - Please send any changes or information to
-  - joda-time@lists.sourceforge.net to benefit other users.
-  -->
-<!DOCTYPE joda-holiday-information SYSTEM "joda-holiday.dtd">
-<joda-holiday-information>
-  <!-- GB -->
-  <!-- Source: http://www.dti.gov.uk/er/bankhol.htm -->
-  <!-- Source: http://www.dti.gov.uk/er/bankhis.htm -->
-  <holiday-information id="GB">
-    <week>
-      <weekendStart>6</weekendStart>
-      <weekendEnd>7</weekendEnd>
-    </week>
-    <day id="NewYear">
-      <name lang="en">New Year's Day</name>
-      <dayRule monthOfYear="1" dayOfMonth="1" />
-      <holidayRule fromYear="1974" monthOfYear="1" dayOfMonth="1" weekendAdjust="NextWeekday" />
-    </day>
-    <day id="ValentinesDay">
-      <name lang="en">Valentines Day</name>
-      <dayRule monthOfYear="2" dayOfMonth="14" />
-    </day>
-    <day id="ShroveTuesday">
-      <name lang="en">Shrove Tuesday</name>
-      <dayRule basedOn="GregorianEaster" relativeDays="-47" />
-    </day>
-    <day id="AshWednesday">
-      <name lang="en">Ash Wednesday</name>
-      <dayRule basedOn="GregorianEaster" relativeDays="-46" />
-    </day>
-    <day id="MothersDay">
-      <name lang="en">Mother's Day</name>
-      <dayRule basedOn="GregorianEaster" relativeDays="-21" />
-    </day>
-    <day id="MaundyThursday">
-      <name lang="en">Maundy Thursday</name>
-      <dayRule basedOn="GregorianEaster" relativeDays="-3" />
-    </day>
-    <day id="GoodFriday">
-      <name lang="en">Good Friday</name>
-      <dayRule basedOn="GregorianEaster" relativeDays="-2" />
-      <holidayRule fromYear="1871" />
-    </day>
-    <day id="Easter">
-      <name lang="en">Easter</name>
-      <dayRule basedOn="GregorianEaster" />
-    </day>
-    <day id="EasterMonday">
-      <name lang="en">Easter Monday</name>
-      <dayRule basedOn="GregorianEaster" relativeDays="1" />
-    </day>
-    <day id="WhitMonday">
-      <name lang="en">Whit Monday</name>
-      <dayRule basedOn="GregorianEaster" relativeDays="50" />
-    </day>
-    <day id="AprilFoolsDay">
-      <name lang="en">April Fool's Day</name>
-      <dayRule monthOfYear="4" dayOfMonth="1" />
-    </day>
-    <day id="MayDay">
-      <name lang="en">May Day</name>
-      <dayRule monthOfYear="5" dayOfMonth="1" />
-    </day>
-    <day id="EarlyMayBankHoliday">
-      <name lang="en">Early May Bank Holiday</name>
-      <holidayRule fromYear="1978" monthOfYear="5" weekOfMonth="1" dayOfWeek="1" />
-      <holidayRule year="1995" monthOfYear="5" dayOfMonth="8" />
-    </day>
-    <day id="SpringBankHoliday">
-      <name lang="en">Spring Bank Holiday</name>
-      <holidayRule fromYear="1978" monthOfYear="5" weekOfMonth="-1" dayOfWeek="1" />
-      <holidayRule year="2002" monthOfYear="6" dayOfMonth="4" />
-    </day>
-    <day id="SummerBankHoliday">
-      <name lang="en">Summer Bank Holiday</name>
-    </day>
-    <day id="Halloween">
-      <name lang="en">Halloween</name>
-      <dayRule monthOfYear="10" dayOfMonth="31" />
-    </day>
-    <day id="GuyFawkesNight">
-      <name lang="en">Guy Fawkes Night</name>
-      <dayRule monthOfYear="11" dayOfMonth="5" />
-    </day>
-    <day id="RemembranceSunday">
-      <name lang="en">Remembrance Sunday</name>
-      <dayRule monthOfYear="11" weekOfMonth="2" dayOfWeek="7" />
-    </day>
-    <day id="RemembranceDay">
-      <name lang="en">Remembrance Day</name>
-      <dayRule monthOfYear="11" dayOfMonth="11" />
-    </day>
-    <day id="ChristmasEve">
-      <name lang="en">Christmas Eve</name>
-      <dayRule monthOfYear="12" dayOfMonth="24" />
-    </day>
-    <day id="ChristmasDay">
-      <name lang="en">Christmas Day</name>
-      <dayRule monthOfYear="12" dayOfMonth="25" />
-      <holidayRule fromYear="1871" weekendAdjust="NextWeekday" />
-    </day>
-    <day id="BoxingDay">
-      <name lang="en">Boxing Day</name>
-      <dayRule monthOfYear="12" dayOfMonth="26" />
-      <holidayRule fromYear="1974" basedOn="ChristmasDay" relativeDays="1" weekendAdjust="NextWeekday" />
-    </day>
-    <day id="NewYearsEve">
-      <name lang="en">New Year's Eve</name>
-      <dayRule monthOfYear="12" dayOfMonth="31" />
-    </day>
-    <day id="MilleniumDay">
-      <name lang="en">Millenium Day</name>
-      <dayRule year="1999" monthOfYear="12" dayOfMonth="31" />
-    </day>
-    <day id="QueenElizabethGoldenJubilee">
-      <name lang="en">Queen Elizabeth II Golden Jubilee</name>
-      <dayRule year="2002" monthOfYear="6" dayOfMonth="3" />
-    </day>
-    <day id="RoyalWeddingOfCharlesAndDiana">
-      <name lang="en">Royal Wedding of Charles and Diana</name>
-      <dayRule year="1981" monthOfYear="7" dayOfMonth="29" />
-    </day>
-  </holiday-information>
-  
-  <!-- GB/England -->
-  <holiday-information id="GB-ENG" base="GB">
-    <day id="EasterMonday">
-      <holidayRule fromYear="1871" />
-    </day>
-    <day id="WhitMonday">
-      <holidayRule fromYear="1871" toYear="1966" />
-    </day>
-    <day id="StGeorgesDay">
-      <name lang="en">St George's Day</name>
-      <dayRule monthOfYear="4" dayOfMonth="23" />
-    </day>
-    <day id="SpringBankHoliday">
-      <holidayRule fromYear="1967" monthOfYear="5" weekOfMonth="-1" dayOfWeek="1" />
-      <holidayRule year="2002" monthOfYear="6" dayOfMonth="4" />
-    </day>
-    <day id="SummerBankHoliday">
-      <holidayRule fromYear="1871" toYear="1964" monthOfYear="8" weekOfMonth="1" dayOfWeek="1" />
-      <holidayRule fromYear="1965" monthOfYear="8" weekOfMonth="-1" dayOfWeek="1" />
-    </day>
-    <day id="BoxingDay">
-      <holidayRule fromYear="1871" basedOn="ChristmasDay" relativeDays="1" weekendAdjust="NextWeekday" />
-    </day>
-  </holiday-information>
-
-  <!-- GB/Wales -->
-  <holiday-information id="GB-WLS" base="GB-ENG">
-    <day id="StDavidsDay">
-      <name lang="en">St David's Day</name>
-      <dayRule monthOfYear="3" dayOfMonth="1" />
-    </day>
-  </holiday-information>
-
-  <!-- GB/Scotland -->
-  <holiday-information id="GB-SCT" base="GB">
-    <day id="NewYear">
-      <holidayRule fromYear="1871" weekendAdjust="NextWeekday" />
-      <holidayRule fromYear="1973" weekendAdjust="NextWeekday" duration="P2D" />
-    </day>
-    <day id="EarlyMayBankHoliday">
-      <holidayRule fromYear="1871" monthOfYear="5" weekOfMonth="1" dayOfWeek="1" />
-      <holidayRule year="1995" monthOfYear="5" dayOfMonth="8" />
-    </day>
-    <day id="SummerBankHoliday">
-      <holidayRule fromYear="1871" monthOfYear="8" weekOfMonth="1" dayOfWeek="1" />
-    </day>
-    <day id="StAndrewsDay">
-      <name lang="en">St Andrew's Day</name>
-      <dayRule monthOfYear="11" dayOfMonth="30" />
-    </day>
-  </holiday-information>
-
-  <!-- GB/NorthernIreland -->
-  <holiday-information id="GB-NIR" base="GB-ENG">
-    <day id="StPatricksDay">
-      <name lang="en">St Patrick's Day</name>
-      <dayRule monthOfYear="3" dayOfMonth="17" />
-      <holidayRule fromYear="1903" weekendAdjust="NextWeekday" />
-    </day>
-    <day id="BattleOfTheBoyne">
-      <name lang="en">Battle of the Boyne</name>
-      <dayRule monthOfYear="7" dayOfMonth="12" />
-      <holidayRule fromYear="1926" weekendAdjust="NextWeekday" />
-    </day>
-  </holiday-information>
-
-</joda-holiday-information>
diff --git a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/src/joda-holiday.dtd b/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/src/joda-holiday.dtd
deleted file mode 100644
index 1442ea19c..000000000
--- a/JodaTimeContrib/holiday/src/java/org/joda/time/contrib/holiday/src/joda-holiday.dtd
+++ /dev/null
@@ -1,41 +0,0 @@
-<!ELEMENT joda-holiday-information (locale-holiday-information*)>
-<!ELEMENT holiday-information (id,week?,day*)>
-<!ATTLIST holiday-information
-  id CDATA #REQUIRED
-  base CDATA #IMPLIED
-  visible (true|false) 'true'>
-<!ELEMENT week (weekendStart,weekendEnd)>
-<!ELEMENT weekendStart (#PCDATA)>
-<!ELEMENT weekendEnd (#PCDATA)>
-<!ELEMENT name (#PCDATA)>
-<!ATTLIST name lang CDATA #REQUIRED>
-<!ELEMENT day (name*,dayRule*,holidayRule*)>
-<!ATTLIST day id CDATA #REQUIRED>
-<!ELEMENT dayRule EMPTY>
-<!ATTLIST dayRule
-  repeat CDATA 'P1Y'
-  fromYear CDATA #IMPLIED
-  toYear CDATA #IMPLIED
-  year CDATA #IMPLIED
-  basedOn CDATA #IMPLIED
-  relativeDays CDATA #IMPLIED
-  monthOfYear CDATA #IMPLIED
-  dayOfMonth CDATA #IMPLIED
-  weekOfMonth CDATA #IMPLIED
-  dayOfWeek CDATA #IMPLIED
-  weekendAdjust (NextWeekday|PreviousWeekday|NearestWeekday) #IMPLIED
-  duration CDATA 'P1D'>
-<!ELEMENT holidayRule EMPTY>
-<!ATTLIST holidayRule
-  repeat CDATA 'P1Y'
-  fromYear CDATA #IMPLIED
-  toYear CDATA #IMPLIED
-  year CDATA #IMPLIED
-  basedOn CDATA #IMPLIED
-  relativeDays CDATA #IMPLIED
-  monthOfYear CDATA #IMPLIED
-  dayOfMonth CDATA #IMPLIED
-  weekOfMonth CDATA #IMPLIED
-  dayOfWeek CDATA #IMPLIED
-  weekendAdjust (NextWeekday|PreviousWeekday|NearestWeekday) #IMPLIED
-  duration CDATA 'P1D'>
diff --git a/JodaTimeContrib/holiday/src/test/org/joda/time/contrib/holiday/TestUSHolidays.java b/JodaTimeContrib/holiday/src/test/org/joda/time/contrib/holiday/TestUSHolidays.java
deleted file mode 100644
index aed6b81d8..000000000
--- a/JodaTimeContrib/holiday/src/test/org/joda/time/contrib/holiday/TestUSHolidays.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday;
-
-import java.util.List;
-
-import junit.framework.TestCase;
-
-import org.joda.time.contrib.holiday.USGovtHolidays;
-import org.joda.time.contrib.holiday.anniversary.CommonAnniversaries;
-import org.joda.time.contrib.holiday.anniversary.USAnniversaries;
-import org.joda.time.contrib.holiday.anniversary.NamedAnniversaryFactory.NamedAnniversary;
-
-/* 
- * This is basically a test to make sure that the holiday list mechanism
- * works correctly. individual dates are tested in the anniversary tests.
- */
-public class TestUSHolidays extends TestCase {
-    public void testFederalHolidays() {
-        List<NamedAnniversary> holidays = USGovtHolidays.FEDERAL.getHolidaysForYear(1995);
-
-        assertEquals(holidays.size(), 10);
-        assertEquals(holidays.get(0).getDate(),
-                USAnniversaries.NEW_YEAR_HOLIDAY.create(1995));
-        assertEquals(holidays.get(1).getDate(),
-                USAnniversaries.MARTIN_LUTHER_KING_DAY.create(1995));
-        assertEquals(holidays.get(2).getDate(),
-                USAnniversaries.WASHINGTONS_BIRTHDAY_HOLIDAY.create(1995));
-        assertEquals(holidays.get(3).getDate(),
-                USAnniversaries.MEMORIAL_DAY.create(1995));
-        assertEquals(holidays.get(4).getDate(),
-                USAnniversaries.INDEPENDENCE_DAY_HOLIDAY.create(1995));
-        assertEquals(holidays.get(5).getDate(),
-                CommonAnniversaries.LABOR_DAY.create(1995));
-        assertEquals(holidays.get(6).getDate(),
-                USAnniversaries.COLUMBUS_DAY.create(1995));
-        assertEquals(holidays.get(7).getDate(),
-                USAnniversaries.VETERANS_DAY_HOLIDAY.create(1995));
-        assertEquals(holidays.get(8).getDate(),
-                USAnniversaries.THANKSGIVING.create(1995));
-        assertEquals(holidays.get(9).getDate(),
-                USAnniversaries.CHRISTMAS_HOLIDAY.create(1995));
-    }
-}
diff --git a/JodaTimeContrib/holiday/src/test/org/joda/time/contrib/holiday/anniversary/TestCommonAnniversaries.java b/JodaTimeContrib/holiday/src/test/org/joda/time/contrib/holiday/anniversary/TestCommonAnniversaries.java
deleted file mode 100644
index 9024f30e5..000000000
--- a/JodaTimeContrib/holiday/src/test/org/joda/time/contrib/holiday/anniversary/TestCommonAnniversaries.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.anniversary;
-
-import junit.framework.TestCase;
-
-import org.joda.time.DateMidnight;
-import org.joda.time.DateTime;
-import org.joda.time.DateTimeConstants;
-import org.joda.time.contrib.holiday.anniversary.CommonAnniversaries;
-
-public class TestCommonAnniversaries extends TestCase {
-
-    /**
-     * NB: tests for good friday are automatically tests for Easter and Easter
-     * Monday.
-     */
-    public void testGoodFriday0() {
-        DateTime ymd = CommonAnniversaries.GOOD_FRIDAY.create(2005);
-        assertEquals(ymd, new DateMidnight(2005, DateTimeConstants.MARCH, 25));
-    }
-
-    public void testGoodFriday1() {
-        DateTime ymd = CommonAnniversaries.GOOD_FRIDAY.create(1993);
-        assertEquals(ymd, new DateMidnight(1993, DateTimeConstants.APRIL, 9));
-    }
-
-    public void testGoodFriday2() {
-        DateTime ymd = CommonAnniversaries.GOOD_FRIDAY.create(1997);
-        assertEquals(ymd, new DateMidnight(1997, DateTimeConstants.MARCH, 28));
-    }
-
-}
diff --git a/JodaTimeContrib/holiday/src/test/org/joda/time/contrib/holiday/anniversary/TestUSAnniversaries.java b/JodaTimeContrib/holiday/src/test/org/joda/time/contrib/holiday/anniversary/TestUSAnniversaries.java
deleted file mode 100644
index 054c3b4d3..000000000
--- a/JodaTimeContrib/holiday/src/test/org/joda/time/contrib/holiday/anniversary/TestUSAnniversaries.java
+++ /dev/null
@@ -1,135 +0,0 @@
-/*
- *  Copyright 2001-2005 Stephen Colebourne
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-package org.joda.time.contrib.holiday.anniversary;
-
-import junit.framework.TestCase;
-
-import org.joda.time.DateMidnight;
-import org.joda.time.DateTime;
-import org.joda.time.DateTimeConstants;
-import org.joda.time.contrib.holiday.anniversary.CommonAnniversaries;
-import org.joda.time.contrib.holiday.anniversary.USAnniversaries;
-
-public class TestUSAnniversaries extends TestCase {
-    public void testNewYearHoliday0() {
-        DateTime ymd = USAnniversaries.NEW_YEAR_HOLIDAY.create(2005);
-        assertEquals(ymd,
-                new DateMidnight(2004, DateTimeConstants.DECEMBER, 31));
-    }
-
-    public void testNewYearHoliday1() {
-        DateTime ymd = USAnniversaries.NEW_YEAR_HOLIDAY.create(1993);
-        assertEquals(ymd, new DateMidnight(1993, DateTimeConstants.JANUARY, 1));
-    }
-
-    public void testMartinLutherKingDay() {
-        DateTime ymd = USAnniversaries.MARTIN_LUTHER_KING_DAY.create(2005);
-        assertEquals(ymd, new DateMidnight(2005, DateTimeConstants.JANUARY, 17));
-    }
-
-    public void testWashingtonsBirthdayHoliday() {
-        DateTime ymd = USAnniversaries.WASHINGTONS_BIRTHDAY_HOLIDAY
-                .create(2005);
-        assertEquals(ymd,
-                new DateMidnight(2005, DateTimeConstants.FEBRUARY, 21));
-    }
-
-    public void testMemorialDay0() {
-        DateTime ymd = USAnniversaries.MEMORIAL_DAY.create(2005);
-        assertEquals(ymd, new DateMidnight(2005, DateTimeConstants.MAY, 30));
-    }
-
-    public void testMemorialDay1() {
-        DateTime ymd = USAnniversaries.MEMORIAL_DAY.create(1995);
-        assertEquals(ymd, new DateMidnight(1995, DateTimeConstants.MAY, 29));
-    }
-
-    public void testMemorialDay2() {
-        DateTime ymd = USAnniversaries.MEMORIAL_DAY.create(1997);
-        assertEquals(ymd, new DateMidnight(1997, DateTimeConstants.MAY, 26));
-    }
-
-    public void testIndependenceDayHoliday0() {
-        DateTime ymd = USAnniversaries.INDEPENDENCE_DAY_HOLIDAY.create(2005);
-        assertEquals(ymd, new DateMidnight(2005, DateTimeConstants.JULY, 4));
-    }
-
-    public void testIndependenceDayHoliday1() {
-        DateTime ymd = USAnniversaries.INDEPENDENCE_DAY_HOLIDAY.create(1993);
-        assertEquals(ymd, new DateMidnight(1993, DateTimeConstants.JULY, 5));
-    }
-
-    public void testLaborDay() {
-        DateTime ymd = CommonAnniversaries.LABOR_DAY.create(2005);
-        assertEquals(ymd,
-                new DateMidnight(2005, DateTimeConstants.SEPTEMBER, 5));
-    }
-
-    public void testThanksgiving0() {
-        DateTime ymd = USAnniversaries.THANKSGIVING.create(2005);
-        assertEquals(ymd,
-                new DateMidnight(2005, DateTimeConstants.NOVEMBER, 24));
-    }
-
-    public void testThanksgiving1() {
-        DateTime ymd = USAnniversaries.THANKSGIVING.create(1995);
-        assertEquals(ymd,
-                new DateMidnight(1995, DateTimeConstants.NOVEMBER, 23));
-    }
-
-    public void testColumbusDay0() {
-        DateTime ymd = USAnniversaries.COLUMBUS_DAY.create(2005);
-        assertEquals(ymd, new DateMidnight(2005, DateTimeConstants.OCTOBER, 10));
-    }
-
-    public void testColumbusDay1() {
-        DateTime ymd = USAnniversaries.COLUMBUS_DAY.create(1998);
-        assertEquals(ymd, new DateMidnight(1998, DateTimeConstants.OCTOBER, 12));
-    }
-
-    public void testChristmasHoliday0() {
-        DateTime ymd = USAnniversaries.CHRISTMAS_HOLIDAY.create(2005);
-        assertEquals(ymd,
-                new DateMidnight(2005, DateTimeConstants.DECEMBER, 26));
-    }
-
-    public void testChristmasHoliday1() {
-        DateTime ymd = USAnniversaries.CHRISTMAS_HOLIDAY.create(1995);
-        assertEquals(ymd,
-                new DateMidnight(1995, DateTimeConstants.DECEMBER, 25));
-    }
-
-    public void testElectionDay0() {
-        DateTime ymd = USAnniversaries.ELECTION_DAY.create(1996);
-        assertEquals(ymd, new DateMidnight(1996, DateTimeConstants.NOVEMBER, 5));
-    }
-
-    public void testElectionDay1() {
-        // no election in 1997
-        DateTime ymd = USAnniversaries.ELECTION_DAY.create(1997);
-        assertEquals(ymd, null);
-    }
-
-    public void testElectionDay2() {
-        DateTime ymd = USAnniversaries.ELECTION_DAY.create(2000);
-        assertEquals(ymd, new DateMidnight(2000, DateTimeConstants.NOVEMBER, 7));
-    }
-
-    public void testElectionDay3() {
-        DateTime ymd = USAnniversaries.ELECTION_DAY.create(2004);
-        assertEquals(ymd, new DateMidnight(2004, DateTimeConstants.NOVEMBER, 2));
-    }
-}
diff --git a/JodaTimeContrib/holiday/xdoc/images/joda.png b/JodaTimeContrib/holiday/xdoc/images/joda.png
deleted file mode 100644
index 435df26a39732551d2f7ed9b1fdf288be1c83875..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2919
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
Inz-Nl59h<Bq5uE@

diff --git a/JodaTimeContrib/holiday/xdoc/images/jodatime.png b/JodaTimeContrib/holiday/xdoc/images/jodatime.png
deleted file mode 100644
index 4d5d609868c392a2871e8f15100f4ba54b7e92b6..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2850
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
R4?N!j7N#hZS4Oy){{UxZaMAz(

diff --git a/JodaTimeContrib/holiday/xdoc/index.xml b/JodaTimeContrib/holiday/xdoc/index.xml
deleted file mode 100644
index 2069b72ef..000000000
--- a/JodaTimeContrib/holiday/xdoc/index.xml
+++ /dev/null
@@ -1,54 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Holidays - Home</title>
-  <author>Al Major</author>
- </properties>
-
- <body>
-
-<section name="Joda Time - Holidays">
-<p>
-This is a contribution that provides a flexible framework for
-creating lists of holidays. The package itself is remarkably small, because
-it leverages the powerful field calculations provided by the core Joda
-time classes.
-</p>
-<p>
-Version 0.1 was released on ? -
-<a href="">Download now</a>
-</p>
-</section>
-
-
-<section name="Documentation">
-<p>
-There is currently very limited documentation. This will change over the next few weeks.
-</p>
-</section>
-
-
-<section name="Releases">
-<p>
-<a href="">Release 0.1</a>
-is the current latest release.
-This release is a prototype release and may have bugs. The API is likely to change.
-</p>
-<p>
-The current dependencies are Joda-Time 1.1 and JDK 5.
-</p>
-</section>
-
-
-<section name="Support">
-<p>
-The Joda-Time Holidays library was contributed to Joda-Time by Al Major.
-</p>
-<p>
-For support on bugs, using the library or to volunteer please contact the <a href="mail-lists.html">mailing list</a>
-(or email direct to the list via <a href="mailto:joda-interest@lists.sourceforge.net">joda-interest@lists.sourceforge.net</a>).
-</p>
-</section>
-</body>
-</document>
diff --git a/JodaTimeContrib/holiday/xdoc/stylesheets/joda-theme.css b/JodaTimeContrib/holiday/xdoc/stylesheets/joda-theme.css
deleted file mode 100644
index 5d616b279..000000000
--- a/JodaTimeContrib/holiday/xdoc/stylesheets/joda-theme.css
+++ /dev/null
@@ -1,121 +0,0 @@
-body, td, select, input, li{
-  font-family: Helvetica, Arial, sans-serif;
-  font-size: 13px;
-  background-color: #fff;
-}
-a {
-  text-decoration: none;
-}
-a:link {
-  color:#009;
-}
-a:visited  {
-  color:#009;
-}
-a:active, a:hover {
-  text-decoration: underline;
-}
-a.externalLink, a.externalLink:link, a.externalLink:visited, a.externalLink:active, a.externalLink:hover {
-  background: url(../images/external.png) right center no-repeat;
-  padding-right: 15px;
-}
-a.newWindow, a.newWindow:link, a.newWindow:visited, a.newWindow:active, a.newWindow:hover {
-  background: url(../images/newwindow.png) right center no-repeat;
-  padding-right: 18px;
-}
-h2 {
-  font-family: Verdana, Helvetica, Arial, sans-serif;
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #999;
-  color: #006;
-  background-color: #eef;
-  font-weight:bold;
-  font-size: 16px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-h3 {
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #aaa;
-  color: #006;
-  background-color: #eee;
-  font-weight: normal;
-  font-size: 14px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-p, ul {
-  font-size: 13px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-#banner {
-  background-color: #eef;
-  border-bottom: 1px solid #aaa;
-}
-#organizationLogo img, #projectLogo img {
-  border: 1px solid #999;
-}
-#breadcrumbs {
-  padding-top: 1px;
-  padding-bottom: 2px;
-  border-bottom: 1px solid #aaa;
-  background-color: #ddf;
-}
-#leftColumn {
-  margin: 8px 0 8px 4px;
-  border: 1px solid #999;
-  background-color: #eef;
-}
-#navcolumn {
-  padding: 6px 4px 0 6px;
-}
-#navcolumn h5 {
-  font-size: 12px;
-  border-bottom: 1px solid #aaaaaa;
-  padding-top: 2px;
-  font-weight: normal;
-}
-#navcolumn li {
-  font-size: 12px;
-  padding-left: 12px;
-  background-color: #eef;
-}
-#navcolumn a:active, #navcolumn a:hover {
-  text-decoration: none;
-}
-#lastPublished {
-  font-size: 10px;
-}
-table.bodyTable th {
-  color: white;
-  background-color: #bbb;
-  text-align: left;
-  font-weight: bold;
-  font-size: 13px;
-}
-
-table.bodyTable th, table.bodyTable td {
-  font-size: 13px;
-}
-
-table.bodyTable tr.a {
-  background-color: #ddd;
-}
-
-table.bodyTable tr.b {
-  background-color: #eee;
-}
-
-.source {
-  border: 1px solid #999;
-  padding: 8px;
-  margin: 6px;
-}
-#footer {
-  background-color: #eef;
-  border-top: 1px solid #999;
-}
-body {
-  padding-bottom: 0px;
-}
diff --git a/JodaTimeContrib/holiday/xdoc/stylesheets/maven-theme.css b/JodaTimeContrib/holiday/xdoc/stylesheets/maven-theme.css
deleted file mode 100644
index 5d616b279..000000000
--- a/JodaTimeContrib/holiday/xdoc/stylesheets/maven-theme.css
+++ /dev/null
@@ -1,121 +0,0 @@
-body, td, select, input, li{
-  font-family: Helvetica, Arial, sans-serif;
-  font-size: 13px;
-  background-color: #fff;
-}
-a {
-  text-decoration: none;
-}
-a:link {
-  color:#009;
-}
-a:visited  {
-  color:#009;
-}
-a:active, a:hover {
-  text-decoration: underline;
-}
-a.externalLink, a.externalLink:link, a.externalLink:visited, a.externalLink:active, a.externalLink:hover {
-  background: url(../images/external.png) right center no-repeat;
-  padding-right: 15px;
-}
-a.newWindow, a.newWindow:link, a.newWindow:visited, a.newWindow:active, a.newWindow:hover {
-  background: url(../images/newwindow.png) right center no-repeat;
-  padding-right: 18px;
-}
-h2 {
-  font-family: Verdana, Helvetica, Arial, sans-serif;
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #999;
-  color: #006;
-  background-color: #eef;
-  font-weight:bold;
-  font-size: 16px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-h3 {
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #aaa;
-  color: #006;
-  background-color: #eee;
-  font-weight: normal;
-  font-size: 14px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-p, ul {
-  font-size: 13px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-#banner {
-  background-color: #eef;
-  border-bottom: 1px solid #aaa;
-}
-#organizationLogo img, #projectLogo img {
-  border: 1px solid #999;
-}
-#breadcrumbs {
-  padding-top: 1px;
-  padding-bottom: 2px;
-  border-bottom: 1px solid #aaa;
-  background-color: #ddf;
-}
-#leftColumn {
-  margin: 8px 0 8px 4px;
-  border: 1px solid #999;
-  background-color: #eef;
-}
-#navcolumn {
-  padding: 6px 4px 0 6px;
-}
-#navcolumn h5 {
-  font-size: 12px;
-  border-bottom: 1px solid #aaaaaa;
-  padding-top: 2px;
-  font-weight: normal;
-}
-#navcolumn li {
-  font-size: 12px;
-  padding-left: 12px;
-  background-color: #eef;
-}
-#navcolumn a:active, #navcolumn a:hover {
-  text-decoration: none;
-}
-#lastPublished {
-  font-size: 10px;
-}
-table.bodyTable th {
-  color: white;
-  background-color: #bbb;
-  text-align: left;
-  font-weight: bold;
-  font-size: 13px;
-}
-
-table.bodyTable th, table.bodyTable td {
-  font-size: 13px;
-}
-
-table.bodyTable tr.a {
-  background-color: #ddd;
-}
-
-table.bodyTable tr.b {
-  background-color: #eee;
-}
-
-.source {
-  border: 1px solid #999;
-  padding: 8px;
-  margin: 6px;
-}
-#footer {
-  background-color: #eef;
-  border-top: 1px solid #999;
-}
-body {
-  padding-bottom: 0px;
-}
diff --git a/JodaTimeContrib/jsptags/.classpath b/JodaTimeContrib/jsptags/.classpath
deleted file mode 100644
index df74b7ce2..000000000
--- a/JodaTimeContrib/jsptags/.classpath
+++ /dev/null
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<classpath>
-  <classpathentry excluding="" kind="src" path="src/java">
-  </classpathentry>
-  <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/joda-time/jars/joda-time-1.0.jar">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/servletapi/jars/servlet-api-2.4.jar">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/jspapi/jars/jsp-api-2.0.jar">
-  </classpathentry>
-  <classpathentry kind="var" path="MAVEN_REPO/jstl/jars/jstl-1.1.2.jar">
-  </classpathentry>
-  <classpathentry kind="output" path="target/classes">
-  </classpathentry>
-</classpath>
\ No newline at end of file
diff --git a/JodaTimeContrib/jsptags/.cvsignore b/JodaTimeContrib/jsptags/.cvsignore
deleted file mode 100644
index 9b32845b6..000000000
--- a/JodaTimeContrib/jsptags/.cvsignore
+++ /dev/null
@@ -1,3 +0,0 @@
-bin
-target
-.settings
diff --git a/JodaTimeContrib/jsptags/.project b/JodaTimeContrib/jsptags/.project
deleted file mode 100644
index 8d8823607..000000000
--- a/JodaTimeContrib/jsptags/.project
+++ /dev/null
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<projectDescription>
-  <name>joda-time-jsptags</name>
-  <comment>Contribution to Joda-Time that adds JSP tags support</comment>
-  <projects>
-  </projects>
-  <buildSpec>
-    <buildCommand>
-      <name>org.eclipse.jdt.core.javabuilder</name>
-      <arguments>
-      </arguments>
-    </buildCommand>
-  </buildSpec>
-  <natures>
-    <nature>org.eclipse.jdt.core.javanature</nature>
-  </natures>
-</projectDescription>
\ No newline at end of file
diff --git a/JodaTimeContrib/jsptags/LICENSE.txt b/JodaTimeContrib/jsptags/LICENSE.txt
deleted file mode 100644
index f49a4e16e..000000000
--- a/JodaTimeContrib/jsptags/LICENSE.txt
+++ /dev/null
@@ -1,201 +0,0 @@
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
\ No newline at end of file
diff --git a/JodaTimeContrib/jsptags/NOTICE.txt b/JodaTimeContrib/jsptags/NOTICE.txt
deleted file mode 100644
index a82c77558..000000000
--- a/JodaTimeContrib/jsptags/NOTICE.txt
+++ /dev/null
@@ -1,8 +0,0 @@
-=============================================================================
-= NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
-=============================================================================
-This product includes software developed by
-Joda.org (http://www.joda.org/).
-
-This product includes software developed by
-The Apache Software Foundation (http://www.apache.org/).
diff --git a/JodaTimeContrib/jsptags/RELEASE-NOTES.txt b/JodaTimeContrib/jsptags/RELEASE-NOTES.txt
deleted file mode 100644
index 54f00b313..000000000
--- a/JodaTimeContrib/jsptags/RELEASE-NOTES.txt
+++ /dev/null
@@ -1,121 +0,0 @@
-Joda-Time JSP tags contributed project version 1.0
---------------------------------------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is the 1.0 release of the JSP tag library support classes.
-These classes were converted from code at Jakarta Taglibs by Jim Newsham.
-Please check the NOTICE.txt for the Apache credit.
-
-
-About
------
-
-The Joda Time Tag Library is a custom tag library for formatting and parsing
-Joda dates in jsp pages.  This library works very similarly to the date-related
-tags in the jstl fmt library, so please refer to the documentation for that
-standard if you still have questions after reading this document or online help.
-
-Unlike the fmt tags which work with java.util.Date and java.util.TimeZone objects,
-the Joda tags work with Joda DateTime, ReadableInstant, ReadablePartial,
-and DateTimeZone objects.  
-
-Changes since 0.8
------------------
-Better error message in FormatSupport when object specified is of an incorrect type
-
-Build
------
-
-Build-time dependencies are Joda 1.1, the Servlet 2.4 API, the
-JSP 2.0 API, and JSTL 1.1 API. A source build can be achieved from ant or maven.
-
-Setup
------
-
-You'll need a servlet container which supports Servlet 2.4, JSP 2.0, JSTL 1.1.
-Copy the joda-time-1.1.jar and joda-time-tags.jar to the WEB-INF/lib directory of
-your web application.  Declare the library as follows in your jsp pages:
-
-<%@taglib prefix="joda" uri="http://www.joda.org/joda/time/tags"%>
-
-Tags
-----
-
-FORMAT.  
-
-Example: 
-  <% pageContext.setAttribute("now", new org.joda.time.DateTime()); %>
-  <joda:format value="${now}" style="SM"/>
-
-Formats ReadableInstant (including DateTime) and ReadablePartial (including YearMonthDay and TimeOfDay) objects.  The var and scope attributes can be used to set the value of a variable instead of printing the result.  The time zone may be specified using an attribute, en enclosing <joda:dateTimeZone/> tag,  preceding <joda:timeZone/> tag, or via the "org.joda.time.dateTimeZone" scoped variable.
-
-Attributes:
-
-value (required).  Must be a ReadableInstant or ReadablePartial.
-var.  The scoped variable to set.
-scope.  The scope of the variable to set.
-locale.  The locale to use for formatting.
-style.  The style to use for formatting (see Joda format documentation for recognized style strings)
-pattern.  The pattern to use for formatting (see Joda format documentation for recognized pattern strings)
-dateTimeZone.  The time zone to use for formatting.
-
-
-PARSEDATETIME.
-
-Example: 
-  <joda:parseDateTime var="parsed" pattern="yy/M/d" value="05/11/19"/>
-  <joda:format value="${parsed}" style="L-"/>
-
-Parses a string into a DateTime object.  The var and scope attributes can be used to set the value of a variable instead of printing the result.  The time zone may be specified using an attribute, en enclosing <joda:dateTimeZone/> tag,  preceding <joda:timeZone/> tag, or via the "org.joda.time.dateTimeZone" scoped variable.
-
-Attributes:
-
-value (required; unless value is nested within tag).  Must be a string which can be parsed into a DateTime according to the parsing options specified.
-var.  The scoped variable to set.
-scope.  The scope of the variable to set.
-locale.  The locale to use for parsing.
-style.  The style to use for parsing (see Joda format documentation for recognized style strings)
-pattern.  The pattern to use for parsing (see Joda format documentation for recognized pattern strings)
-dateTimeZone.  The time zone to use for formatting.
-
-
-DATETIMEZONE.
-
-Example:
-  <% pageContext.setAttribute("now", new DateTime()); %>
-  <% pageContext.setAttribute("bkk", DateTimeZone.forID("Asia/Bangkok")); %>
-  <joda:dateTimeZone value="${bkk}">
-    <joda:format value="${datetime}"/>
-  </joda:dateTimeZone>
-
-Provides a default time zone to all <joda:format/> tags which are nested within it.  The <joda:format/> tag may override this value with an explicit dateTimeZone attribute.
-
-Attributes:
-
-value (required).  The default time zone for nested <joda:format/> tags to use.
-
-
-SETDATETIMEZONE.
-
-Example.
-  <% pageContext.setAttribute("now", new DateTime()); %>
-  <% pageContext.setAttribute("bkk", DateTimeZone.forID("Asia/Bangkok")); %>
-  <joda:dateTimeZone value="${bkk}"/>
-  <joda:format value="${datetime}"/>
-
-Sets the time zone object in the given scoped variable.  If var is not specified, it will be stored in a scoped variable called "org.joda.time.dateTimeZone".  The <joda:format/> tag will default to using a time zone stored under this name if it does not have a dateTimeZone attribute and is not nested within a <joda:dateTimeZone/> tag.
-
-Attributes:
-
-value (required).  The time zone to set.
-var.  The scoped variable to set.
-scope.  The scope of the variable to set.
-
-
-Feedback
---------
-All feedback is welcomed at joda-interest@lists.sourceforge.net.
-
-The Joda team
diff --git a/JodaTimeContrib/jsptags/build.xml b/JodaTimeContrib/jsptags/build.xml
deleted file mode 100644
index a198e6281..000000000
--- a/JodaTimeContrib/jsptags/build.xml
+++ /dev/null
@@ -1,217 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--build.xml generated by maven from project.xml version 0.9-dev
-  on date December 19 2005, time 2348-->
-
-<project default="jar" name="joda-time-jsptags" basedir=".">
-  <!--Load local and user build preferences-->
-
-  <property file="build.properties">
-  </property>
-  <property file="${user.home}/build.properties">
-  </property>
-  <!--Build properties-->
-
-  <property name="defaulttargetdir" value="${basedir}/target">
-  </property>
-  <property name="libdir" value="${user.home}/.maven/repository">
-  </property>
-  <property name="classesdir" value="${basedir}/target/classes">
-  </property>
-  <property name="distdir" value="${basedir}/dist">
-  </property>
-  <property name="javadocdir" value="${basedir}/dist/docs/api">
-  </property>
-  <property name="final.name" value="joda-time-jsptags-0.9-dev">
-  </property>
-  <property name="proxy.host" value="">
-  </property>
-  <property name="proxy.port" value="">
-  </property>
-  <property name="proxy.username" value="">
-  </property>
-  <property name="proxy.password" value="">
-  </property>
-  <path id="build.classpath">
-    <pathelement location="${libdir}/joda-time/jars/joda-time-1.1.jar">
-    </pathelement>
-    <pathelement location="${libdir}/servletapi/jars/servlet-api-2.4.jar">
-    </pathelement>
-    <pathelement location="${libdir}/jspapi/jars/jsp-api-2.0.jar">
-    </pathelement>
-    <pathelement location="${libdir}/jstl/jars/jstl-1.1.2.jar">
-    </pathelement>
-  </path>
-  <target name="init" description="o Initializes some properties">
-    <mkdir dir="${libdir}">
-    </mkdir>
-    <condition property="noget">
-      <equals arg2="only" arg1="${build.sysclasspath}">
-      </equals>
-    </condition>
-    <!--Test if JUNIT is present in ANT classpath-->
-
-    <available property="Junit.present" classname="junit.framework.Test">
-    </available>
-    <!--Test if user defined a proxy-->
-
-    <condition property="useProxy">
-      <and>
-        <isset property="proxy.host">
-        </isset>
-        <not>
-          <equals trim="true" arg2="" arg1="${proxy.host}">
-          </equals>
-        </not>
-      </and>
-    </condition>
-  </target>
-  <target name="compile" description="o Compile the code" depends="get-deps">
-    <mkdir dir="${classesdir}">
-    </mkdir>
-    <javac destdir="${classesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
-      <src>
-        <pathelement location="${basedir}/src/java">
-        </pathelement>
-      </src>
-      <classpath refid="build.classpath">
-      </classpath>
-    </javac>
-    <mkdir dir="${classesdir}/META-INF">
-    </mkdir>
-    <copy todir="${classesdir}/META-INF">
-      <fileset dir="${basedir}/.">
-        <include name="NOTICE.txt">
-        </include>
-      </fileset>
-    </copy>
-    <mkdir dir="${classesdir}/META-INF">
-    </mkdir>
-    <copy todir="${classesdir}/META-INF">
-      <fileset dir="${basedir}/src/conf">
-        <include name="joda.tld">
-        </include>
-      </fileset>
-    </copy>
-  </target>
-  <target name="jar" description="o Create the jar" depends="compile,test">
-    <jar jarfile="${defaulttargetdir}/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}">
-    </jar>
-  </target>
-  <target name="clean" description="o Clean up the generated directories">
-    <delete dir="${defaulttargetdir}">
-    </delete>
-    <delete dir="${distdir}">
-    </delete>
-  </target>
-  <target name="dist" description="o Create a distribution" depends="jar, javadoc">
-    <mkdir dir="dist">
-    </mkdir>
-    <copy todir="dist">
-      <fileset dir="${defaulttargetdir}" includes="*.jar">
-      </fileset>
-      <fileset dir="${basedir}" includes="LICENSE*, README*">
-      </fileset>
-    </copy>
-  </target>
-  <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
-    <fail message="There were test failures.">
-    </fail>
-  </target>
-  <target name="internal-test" if="Junit.present" depends="junit-present,compile-tests">
-  </target>
-  <target name="junit-present" unless="Junit.present" depends="init">
-    <echo>================================= WARNING ================================</echo>
-    <echo>Junit isn't present in your ${ANT_HOME}/lib directory. Tests not executed.</echo>
-    <echo>==========================================================================</echo>
-  </target>
-  <target name="compile-tests" if="Junit.present" depends="junit-present,compile">
-  </target>
-  <target name="javadoc" description="o Generate javadoc" depends="get-deps">
-    <mkdir dir="${javadocdir}">
-    </mkdir>
-    <tstamp>
-      <format pattern="2005-yyyy" property="year">
-      </format>
-    </tstamp>
-    <property name="copyright" value="Copyright &amp;copy;  Joda.org. All Rights Reserved.">
-    </property>
-    <property name="title" value="Joda time JSP tags support 0.9-dev API">
-    </property>
-    <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="${basedir}/src/java" packagenames="org.joda.time.contrib.jsptag.*">
-      <classpath>
-        <path refid="build.classpath">
-        </path>
-      </classpath>
-    </javadoc>
-  </target>
-  <target name="get-dep-joda-time.jar" description="o Download the dependency : joda-time.jar" unless="joda-time.jar" depends="init,setProxy,noProxy,get-custom-dep-joda-time.jar">
-    <mkdir dir="${libdir}/joda-time/jars/">
-    </mkdir>
-    <get dest="${libdir}/joda-time/jars/joda-time-1.1.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/joda-time/jars/joda-time-1.1.jar">
-    </get>
-  </target>
-  <target name="get-custom-dep-joda-time.jar" if="joda-time.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/joda-time/jars/">
-    </mkdir>
-    <get dest="${libdir}/joda-time/jars/joda-time-1.1.jar" usetimestamp="true" ignoreerrors="true" src="${joda-time.jar}">
-    </get>
-  </target>
-  <target name="get-dep-servlet-api.jar" description="o Download the dependency : servlet-api.jar" unless="servlet-api.jar" depends="init,setProxy,noProxy,get-custom-dep-servlet-api.jar">
-    <mkdir dir="${libdir}/servletapi/jars/">
-    </mkdir>
-    <get dest="${libdir}/servletapi/jars/servlet-api-2.4.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/servletapi/jars/servlet-api-2.4.jar">
-    </get>
-  </target>
-  <target name="get-custom-dep-servlet-api.jar" if="servlet-api.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/servletapi/jars/">
-    </mkdir>
-    <get dest="${libdir}/servletapi/jars/servlet-api-2.4.jar" usetimestamp="true" ignoreerrors="true" src="${servlet-api.jar}">
-    </get>
-  </target>
-  <target name="get-dep-jsp-api.jar" description="o Download the dependency : jsp-api.jar" unless="jsp-api.jar" depends="init,setProxy,noProxy,get-custom-dep-jsp-api.jar">
-    <mkdir dir="${libdir}/jspapi/jars/">
-    </mkdir>
-    <get dest="${libdir}/jspapi/jars/jsp-api-2.0.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/jspapi/jars/jsp-api-2.0.jar">
-    </get>
-  </target>
-  <target name="get-custom-dep-jsp-api.jar" if="jsp-api.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/jspapi/jars/">
-    </mkdir>
-    <get dest="${libdir}/jspapi/jars/jsp-api-2.0.jar" usetimestamp="true" ignoreerrors="true" src="${jsp-api.jar}">
-    </get>
-  </target>
-  <target name="get-dep-jstl.jar" description="o Download the dependency : jstl.jar" unless="jstl.jar" depends="init,setProxy,noProxy,get-custom-dep-jstl.jar">
-    <mkdir dir="${libdir}/jstl/jars/">
-    </mkdir>
-    <get dest="${libdir}/jstl/jars/jstl-1.1.2.jar" usetimestamp="true" ignoreerrors="true" src="http://www.ibiblio.org/maven/jstl/jars/jstl-1.1.2.jar">
-    </get>
-  </target>
-  <target name="get-custom-dep-jstl.jar" if="jstl.jar" depends="init,setProxy,noProxy">
-    <mkdir dir="${libdir}/jstl/jars/">
-    </mkdir>
-    <get dest="${libdir}/jstl/jars/jstl-1.1.2.jar" usetimestamp="true" ignoreerrors="true" src="${jstl.jar}">
-    </get>
-  </target>
-  <target name="get-deps" unless="noget" depends="get-dep-joda-time.jar,get-dep-servlet-api.jar,get-dep-jsp-api.jar,get-dep-jstl.jar">
-  </target>
-  <target name="setProxy" if="useProxy" depends="init">
-    <!--Proxy settings works only with a JDK 1.2 and higher.-->
-
-    <echo>Proxy used :</echo>
-    <echo>Proxy host [${proxy.host}]</echo>
-    <echo>Proxy port [${proxy.port}]</echo>
-    <echo>Proxy user [${proxy.username}]</echo>
-    <setproxy proxyuser="${proxy.username}" proxyport="${proxy.port}" proxypassword="${proxy.password}" proxyhost="${proxy.host}">
-    </setproxy>
-  </target>
-  <target name="noProxy" unless="useProxy" depends="init">
-    <echo>Proxy not used.</echo>
-  </target>
-  <target name="install-maven">
-    <get dest="${user.home}/maven-install-latest.jar" usetimestamp="true" src="${repo}/maven/maven-install-latest.jar">
-    </get>
-    <unjar dest="${maven.home}" src="${user.home}/maven-install-latest.jar">
-    </unjar>
-  </target>
-</project>
\ No newline at end of file
diff --git a/JodaTimeContrib/jsptags/checkstyle.xml b/JodaTimeContrib/jsptags/checkstyle.xml
deleted file mode 100644
index 37326e2f0..000000000
--- a/JodaTimeContrib/jsptags/checkstyle.xml
+++ /dev/null
@@ -1,81 +0,0 @@
-<?xml version="1.0"?>
-
-<!DOCTYPE module PUBLIC
-    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
-    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">
-
-<!-- customization of default Checkstyle behavior -->
-<module name="Checker">
-  <property name="localeLanguage" value="en"/>
-  <!--module name="PackageHtml"/-->
-  <module name="TreeWalker">
-    <module name="MemberName">
-      <property name="format" value="^[a-zA-Z][a-zA-Z0-9]*$"/>
-    </module>
-    <module name="LocalVariableName">
-      <property name="format" value="^ex[0-9]*$"/>
-      <property name="tokens" value="PARAMETER_DEF"/>
-    </module>
-    <module name="AvoidStarImport"/>
-    <module name="RedundantImport"/>
-    <module name="UnusedImports"/>
-    
-    <module name="TabCharacter"/>
-    <module name="NeedBraces"/>
-    <!--module name="TypecastParenPad"/-->
-    <module name="WhitespaceAfter"/>
-    <module name="WhitespaceAround"/>
-    <module name="ModifierOrder"/>
-    <module name="RedundantModifier"/>
-    
-    <module name="EmptyBlock"/>
-    <module name="LeftCurly"/>
-    <module name="NeedBraces"/>
-    <module name="RightCurly"/>
-    <!--module name="AvoidNestedBlocks">
-      <property name="allowInSwitchCase" value="true"/>
-    </module-->
-    
-    <!--module name="ArrayTrailingComma"/-->
-    <!--module name="CovariantEquals"/-->
-    <module name="DoubleCheckedLocking"/>
-    <module name="EmptyStatement"/>
-    <module name="EqualsHashCode"/>
-    <!--module name="HiddenField">
-      <property name="ignoreConstructorParameter" value="true"/>
-      <property name="ignoreSetter" value="true"/>
-    </module-->
-    <module name="IllegalInstantiation">
-      <property name="classes" value="java.lang.Boolean"/>
-    </module>
-    <!--module name="SuperClone"/-->
-    <!--module name="ExplicitInitialization"/-->
-              
-    <module name="GenericIllegalRegexp">
-      <property name="format" value="System\.out\.println"/>
-    </module>
-    <module name="GenericIllegalRegexp">
-      <property name="format" value="System\.err\.println"/>
-    </module>
-    <module name="TodoComment"/>
-    <module name="UpperEll"/>
-    <module name="ArrayTypeStyle"/>
-    <!--module name="Indentation"/-->
-          
-    <module name="RedundantThrows">
-      <property name="allowUnchecked" value="true"/>
-    </module>
-    <module name="LineLength">
-      <property name="max" value="120"/>
-    </module>
-    <module name="JavadocVariable">
-      <property name="excludeScope" value="private"/>
-    </module>
-    <module name="JavadocMethod">
-      <property name="excludeScope" value="private"/>
-      <property name="allowUndeclaredRTE" value="true"/>
-    </module>
- </module>
-</module>
-                        
-
diff --git a/JodaTimeContrib/jsptags/maven.xml b/JodaTimeContrib/jsptags/maven.xml
deleted file mode 100644
index 58eed5607..000000000
--- a/JodaTimeContrib/jsptags/maven.xml
+++ /dev/null
@@ -1,47 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project
-    default="java:jar"
-    xmlns:j="jelly:core"
-    xmlns:license="license"
-    xmlns:maven="jelly:maven"
-    xmlns:util="jelly:util"
-    xmlns:ant="jelly:ant">
-
-  <postGoal name="dist:prepare-bin-filesystem">
-    <j:set var="maven.dist.bin.assembly.dir" value="${pom.getPluginContext('maven-dist-plugin').getVariable('maven.dist.bin.assembly.dir')}" />
-    
-    <!-- Copy Files -->
-    <ant:copy todir="${maven.dist.bin.assembly.dir}">
-      <ant:fileset dir=".">
-        <ant:include name="NOTICE.txt"/>
-        <ant:include name="RELEASE-NOTES.txt"/>
-      </ant:fileset>
-    </ant:copy>
-  </postGoal>
-
-  <postGoal name="dist:prepare-src-filesystem">
-    <j:set var="maven.dist.src.assembly.dir" value="${pom.getPluginContext('maven-dist-plugin').getVariable('maven.dist.src.assembly.dir')}" />
-    
-    <!-- Copy Files -->
-    <ant:copy todir="${maven.dist.src.assembly.dir}">
-      <ant:fileset dir=".">
-        <ant:include name="NOTICE.txt"/>
-        <ant:include name="RELEASE-NOTES.txt"/>
-        <ant:include name="checkstyle.xml"/>
-      </ant:fileset>
-    </ant:copy>
-    
-    <!-- Copy Jars -->
-    <ant:copy todir="${maven.dist.src.assembly.dir}">
-      <ant:fileset dir="${maven.build.dir}">
-        <ant:include name="*.jar"/>
-      </ant:fileset>
-    </ant:copy>
-    
-    <!-- Copy XDocs -->
-    <ant:copy todir="${maven.dist.src.assembly.dir}/xdocs">
-      <ant:fileset dir="xdocs" />
-    </ant:copy>
-  </postGoal>
-
-</project>
diff --git a/JodaTimeContrib/jsptags/project.properties b/JodaTimeContrib/jsptags/project.properties
deleted file mode 100644
index 095e4504c..000000000
--- a/JodaTimeContrib/jsptags/project.properties
+++ /dev/null
@@ -1,17 +0,0 @@
-#show data on the breadcrumbs line
-maven.xdoc.date = navigation-bottom
-maven.xdoc.date.format = yyyy-MM-dd
-# maven.xdoc.version = ${pom.currentVersion}
-maven.xdoc.legend = false;
-maven.xdoc.theme.url = ./style/joda-theme.css
-
-maven.checkstyle.properties=checkstyle.xml
-maven.junit.fork=true
-maven.xdoc.poweredby.image=maven-feather.png
-maven.javadoc.links=http://java.sun.com/products/j2se/1.4/docs/api, http://java.sun.com/j2ee/1.4/docs/api, http://joda-time.sourceforge.net/api-release
-maven.javadoc.public=true
-maven.javadoc.package=false
-maven.javadoc.private=false
-
-maven.jar.manifest=src/conf/manifest-additions.txt
-maven.dist.src.assembly.dir=${maven.dist.assembly.dir}/src/${maven.final.name}-src
diff --git a/JodaTimeContrib/jsptags/project.xml b/JodaTimeContrib/jsptags/project.xml
deleted file mode 100644
index 961417717..000000000
--- a/JodaTimeContrib/jsptags/project.xml
+++ /dev/null
@@ -1,146 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project>
-  <pomVersion>3</pomVersion>
-  <id>joda-time-jsptags</id>
-  <groupId>joda-time</groupId>
-  <name>Joda time JSP tags support</name>
-  <currentVersion>0.9-dev</currentVersion>
-  <shortDescription>Joda-Time JSP tags support</shortDescription>
-  <description>
-    Contribution to Joda-Time that adds JSP tags support
-  </description>
-
-  <url>http://joda-time.sourceforge.net/contrib/jsptags</url>
-  <logo>/images/jodatime.png</logo>
-  <issueTrackingUrl>http://sourceforge.net/tracker/?atid=617889&amp;group_id=97367&amp;func=browse</issueTrackingUrl>
-  <inceptionYear>2005</inceptionYear>
-
-  <siteAddress>shell.sourceforge.net</siteAddress>
-  <siteDirectory>/home/groups/j/jo/joda-time/htdocs/contrib/jsptags</siteDirectory>
-
-  <mailingLists>
-    <mailingList>
-      <name>Joda Interest list</name>
-      <subscribe>http://sourceforge.net/mail/?group_id=47291</subscribe>
-      <unsubscribe>http://sourceforge.net/mail/?group_id=47291</unsubscribe>
-      <archive>http://sourceforge.net/mailarchive/forum.php?forum_id=8530</archive>
-    </mailingList>
-  </mailingLists>
-
-  <developers>
-    <developer>
-      <name>Jim Newsham</name>
-      <id>jimnewsham</id>
-      <email></email>
-      <roles>
-        <role>Lead developer</role>
-      </roles>
-    </developer>
-    <developer>
-      <name>Stephen Colebourne</name>
-      <id>scolebourne</id>
-      <email></email>
-      <roles>
-        <role>Website and Release manager</role>
-      </roles>
-    </developer>
-  </developers>
-
-  <licenses>
-    <license>
-      <name>Apache 2</name>
-      <url>http://www.apache.org/licenses/</url>
-      <distribution>repo</distribution>
-    </license>
-  </licenses>
-
-  <versions>
-    <version>
-      <id>0.8</id>
-      <name>0.8</name>
-      <tag>v0_8_000</tag>
-    </version>
-  </versions>
-
-  <repository>
-    <connection>scm:cvs:pserver:anonymous@cvs.sourceforge.net:/cvsroot/joda-time:JodaTimeContrib/jsptags</connection>
-    <url>http://cvs.sourceforge.net/viewcvs.py/joda-time/JodaTimeContrib/jsptags/</url>
-  </repository>
-
-  <organization>
-    <name>Joda.org</name>
-    <url>http://www.joda.org</url>
-    <logo>/images/joda.png</logo>
-  </organization>
-  <package>org.joda.time.contrib.jsptag</package>
-
-  <build>
-    <sourceDirectory>src/java</sourceDirectory>
-    <unitTestSourceDirectory>src/test</unitTestSourceDirectory>
-    <unitTest>
-      <includes>
-        <include>org/joda/time/contrib/jsptags/**/Test*.java</include>
-      </includes>
-    </unitTest>
-    <resources>
-      <resource>
-        <targetPath>META-INF</targetPath>
-        <includes>
-          <include>NOTICE.txt</include>
-        </includes>
-      </resource>
-      <resource>
-        <targetPath>META-INF</targetPath>
-        <directory>src/conf</directory>
-        <includes>
-          <include>joda.tld</include>
-        </includes>
-      </resource>
-    </resources>
-  </build>
-
-  <dependencies>
-    <dependency>
-      <groupId>joda-time</groupId>
-      <artifactId>joda-time</artifactId>
-      <version>1.1</version>
-    </dependency>
-
-    <dependency>
-      <groupId>servletapi</groupId>
-      <artifactId>servlet-api</artifactId>
-      <version>2.4</version>
-    </dependency>
-
-    <dependency>
-      <groupId>jspapi</groupId>
-      <artifactId>jsp-api</artifactId>
-      <version>2.0</version>
-    </dependency>
-
-    <dependency>
-      <groupId>jstl</groupId>
-      <artifactId>jstl</artifactId>
-      <version>1.1.2</version>
-    </dependency>
-  </dependencies>
-
-  <reports>
-     <report>maven-changelog-plugin</report>
-     <report>maven-changes-plugin</report>
-     <report>maven-checkstyle-plugin</report>
-     <!-- <report>maven-clover-plugin</report> -->
-     <!-- <report>maven-jcoverage-plugin</report> -->
-     <report>maven-developer-activity-plugin</report>
-     <report>maven-file-activity-plugin</report>
-     <report>maven-javadoc-plugin</report>
-     <!-- <report>maven-jellydoc-plugin</report> -->
-     <!-- <report>maven-junit-report-plugin</report> -->
-     <report>maven-jxr-plugin</report>
-     <report>maven-license-plugin</report>
-     <!--report>maven-linkcheck-plugin</report-->
-     <!--report>maven-statcvs-plugin</report-->
-     <!--report>maven-tasklist-plugin</report-->
-  </reports>
-
-</project>
diff --git a/JodaTimeContrib/jsptags/src/conf/joda.tld b/JodaTimeContrib/jsptags/src/conf/joda.tld
deleted file mode 100644
index e3ccda6db..000000000
--- a/JodaTimeContrib/jsptags/src/conf/joda.tld
+++ /dev/null
@@ -1,231 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-
-<taglib xmlns="http://java.sun.com/xml/ns/j2ee"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd"
-    version="2.0">
-    
-  <description>Joda Time Tag Library</description>
-  <display-name>Joda Time</display-name>
-  <tlib-version>1.1</tlib-version>
-  <short-name>joda</short-name>
-  <uri>http://www.joda.org/joda/time/tags</uri>
-
-  <validator>
-    <description>
-        Provides core validation features for JSTL tags.
-    </description>
-    <validator-class>
-        org.joda.time.contrib.jsptag.JodaTagLibraryValidator
-    </validator-class>
-  </validator>
-
-  <tag>
-    <description>
-        Specifies the time zone for any time formatting or parsing actions
-        nested in its body
-    </description>
-    <name>dateTimeZone</name>
-    <tag-class>org.joda.time.contrib.jsptag.DateTimeZoneTag</tag-class>
-    <body-content>JSP</body-content>
-    <attribute>
-        <description>
-The time zone. A String value is interpreted as
-a time zone ID. This may be one of the time zone
-IDs supported by the Joda. See
-org.joda.time.DateTimeZone for more information on
-supported time zone formats.
-        </description>
-        <name>value</name>
-        <required>true</required>
-        <rtexprvalue>true</rtexprvalue>
-    </attribute>
-  </tag>
-
-  <tag>
-    <description>
-        Stores the given time zone in the time zone configuration variable
-    </description>
-    <name>setDateTimeZone</name>
-    <tag-class>org.joda.time.contrib.jsptag.SetDateTimeZoneTag</tag-class>
-    <body-content>empty</body-content>
-    <attribute>
-        <description>
-The time zone. A String value is interpreted as
-a time zone ID. This may be one of the time zone
-IDs supported by the Joda. See
-org.joda.time.DateTimeZone for more information on
-supported time zone formats.
-        </description>
-        <name>value</name>
-        <required>true</required>
-        <rtexprvalue>true</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Name of the exported scoped variable which
-stores the time zone of type
-java.util.DateTimeZone.
-        </description>
-        <name>var</name>
-        <required>false</required>
-        <rtexprvalue>false</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Scope of var or the time zone configuration
-variable.
-        </description>
-        <name>scope</name>
-        <required>false</required>
-        <rtexprvalue>false</rtexprvalue>
-    </attribute>
-  </tag>
-
-  <tag>
-    <description>
-        Formats a Joda instant or partial using the supplied style or pattern
-    </description>
-    <name>format</name>
-    <tag-class>org.joda.time.contrib.jsptag.FormatTag</tag-class>
-    <body-content>empty</body-content>
-    <attribute>
-        <description>
-ReadableInstant or ReadablePartial to be formatted.
-        </description>
-        <name>value</name>
-        <required>true</required>
-        <rtexprvalue>true</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Formatting style to apply.  See 
-org.joda.time.format.DateTimeFormat#forStyle()
-for more information on supported styles.
-        </description>
-        <name>style</name>
-        <required>false</required>
-        <rtexprvalue>true</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Formatting pattern to apply.  See 
-org.joda.time.format.DateTimeFormat#forPattern()
-for more information on supported patterns.
-        </description>
-        <name>pattern</name>
-        <required>false</required>
-        <rtexprvalue>true</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Time zone in which to represent the formatted
-time.
-        </description>
-        <name>dateTimeZone</name>
-        <required>false</required>
-        <rtexprvalue>true</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Name of the exported scoped variable which
-stores the formatted result as a String.
-        </description>
-        <name>var</name>
-        <required>false</required>
-        <rtexprvalue>false</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Scope of var.
-        </description>
-        <name>scope</name>
-        <required>false</required>
-        <rtexprvalue>false</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Locale whose predefined formatting styles
-for dates and times are to be used for
-formatting.
-        </description>
-        <name>locale</name>
-        <required>false</required>
-        <rtexprvalue>true</rtexprvalue>
-    </attribute>
-  </tag>
-
-  <tag>
-    <description>
-        Parses the string representation of a date/time
-    </description>
-    <name>parseDateTime</name>
-    <tag-class>org.joda.time.contrib.jsptag.ParseDateTimeTag</tag-class>
-    <body-content>JSP</body-content>
-    <attribute>
-        <description>
-Date/time to be parsed.
-        </description>
-        <name>value</name>
-        <required>true</required>
-        <rtexprvalue>true</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Formatting style to use.  See 
-org.joda.time.format.DateTimeFormat#forStyle()
-for more information on supported styles.
-        </description>
-        <name>style</name>
-        <required>false</required>
-        <rtexprvalue>true</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Formatting pattern to use.  See 
-org.joda.time.format.DateTimeFormat#forPattern()
-for more information on supported patterns.
-        </description>
-        <name>pattern</name>
-        <required>false</required>
-        <rtexprvalue>true</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Time zone in which to parse the date/time.
-        </description>
-        <name>dateTimeZone</name>
-        <required>false</required>
-        <rtexprvalue>true</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Locale whose predefined formatting styles
-for dates and times are to be used to
-parse.
-        </description>
-        <name>locale</name>
-        <required>false</required>
-        <rtexprvalue>true</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Name of the exported scoped variable in
-which the parsing result (of type
-org.joda.time.DateTime) is stored.
-        </description>
-        <name>var</name>
-        <required>false</required>
-        <rtexprvalue>false</rtexprvalue>
-    </attribute>
-    <attribute>
-        <description>
-Scope of var.
-        </description>
-        <name>scope</name>
-        <required>false</required>
-        <rtexprvalue>false</rtexprvalue>
-    </attribute>
-  </tag>
-
-</taglib>
diff --git a/JodaTimeContrib/jsptags/src/conf/manifest-additions.txt b/JodaTimeContrib/jsptags/src/conf/manifest-additions.txt
deleted file mode 100644
index 43ee15558..000000000
--- a/JodaTimeContrib/jsptags/src/conf/manifest-additions.txt
+++ /dev/null
@@ -1,2 +0,0 @@
-Specification-Version: 1.0
-Implementation-Vendor-Id: org.joda
\ No newline at end of file
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/DateTimeZoneSupport.java b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/DateTimeZoneSupport.java
deleted file mode 100644
index e1c5927ec..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/DateTimeZoneSupport.java
+++ /dev/null
@@ -1,136 +0,0 @@
-/*
- * Copyright 1999-2004 The Apache Software Foundation.
- * Modifications, Copyright 2005 Stephen Colebourne
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.joda.time.contrib.jsptag;
-
-import java.io.IOException;
-
-import javax.servlet.jsp.JspException;
-import javax.servlet.jsp.JspTagException;
-import javax.servlet.jsp.PageContext;
-import javax.servlet.jsp.jstl.core.Config;
-import javax.servlet.jsp.tagext.BodyTagSupport;
-import javax.servlet.jsp.tagext.Tag;
-
-import org.joda.time.DateTimeZone;
-
-/**
- * Support for tag handlers for &lt;timeZone&gt;.
- * 
- * @author Jan Luehe
- * @author Jim Newsham
- */
-public abstract class DateTimeZoneSupport extends BodyTagSupport {
-
-    /** The config key for the time zone. */
-    public static final String FMT_TIME_ZONE = "org.joda.time.dateTimeZone";
-
-    /** The value attribute. */
-    protected Object value;
-
-    /** The zone. */
-    private DateTimeZone dateTimeZone;
-
-    /**
-     * Constructor.
-     */
-    public DateTimeZoneSupport() {
-        super();
-        init();
-    }
-
-    private void init() {
-        value = null;
-    }
-
-    public DateTimeZone getDateTimeZone() {
-        return dateTimeZone;
-    }
-
-    public int doStartTag() throws JspException {
-        if (value == null) {
-            dateTimeZone = DateTimeZone.UTC;
-        } else if (value instanceof String) {
-            try {
-                dateTimeZone = DateTimeZone.forID((String) value);
-            } catch (IllegalArgumentException iae) {
-                dateTimeZone = DateTimeZone.UTC;
-            }
-        } else {
-            dateTimeZone = (DateTimeZone) value;
-        }
-        return EVAL_BODY_BUFFERED;
-    }
-
-    public int doEndTag() throws JspException {
-        try {
-            pageContext.getOut().print(bodyContent.getString());
-        } catch (IOException ioe) {
-            throw new JspTagException(ioe.toString(), ioe);
-        }
-        return EVAL_PAGE;
-    }
-
-    // Releases any resources we may have (or inherit)
-    public void release() {
-        init();
-    }
-
-    /**
-     * Determines and returns the time zone to be used by the given action.
-     * <p>
-     * If the given action is nested inside a &lt;dateTimeZone&gt; action,
-     * the time zone is taken from the enclosing &lt;dateTimeZone&gt; action.
-     * <p>
-     * Otherwise, the time zone configuration setting
-     * <tt>org.joda.time.FMT_TIME_ZONE</tt> is used.
-     * 
-     * @param pc  the page containing the action for which the time zone
-     *  needs to be determined
-     * @param fromTag  the action for which the time zone needs to be determined
-     * 
-     * @return the time zone, or <tt> null </tt> if the given action is not
-     * nested inside a &lt;dateTimeZone&gt; action and no time zone configuration
-     * setting exists
-     */
-    static DateTimeZone getDateTimeZone(PageContext pc, Tag fromTag) {
-        DateTimeZone tz = null;
-
-        Tag t = findAncestorWithClass(fromTag, DateTimeZoneSupport.class);
-        if (t != null) {
-            // use time zone from parent <timeZone> tag
-            DateTimeZoneSupport parent = (DateTimeZoneSupport) t;
-            tz = parent.getDateTimeZone();
-        } else {
-            // get time zone from configuration setting
-            Object obj = Config.find(pc, FMT_TIME_ZONE);
-            if (obj != null) {
-                if (obj instanceof DateTimeZone) {
-                    tz = (DateTimeZone) obj;
-                } else {
-                    try {
-                        tz = DateTimeZone.forID((String) obj);
-                    } catch (IllegalArgumentException iae) {
-                        tz = DateTimeZone.UTC;
-                    }
-                }
-            }
-        }
-
-        return tz;
-    }
-
-}
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/DateTimeZoneTag.java b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/DateTimeZoneTag.java
deleted file mode 100644
index 3b6a5d425..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/DateTimeZoneTag.java
+++ /dev/null
@@ -1,34 +0,0 @@
-/*
- * Copyright 1999-2004 The Apache Software Foundation.
- * Modifications, Copyright 2005 Stephen Colebourne
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.joda.time.contrib.jsptag;
-
-import javax.servlet.jsp.JspTagException;
-
-/**
- * A handler for &lt;dateTimeZone&gt.
- * 
- * @author Jan Luehe
- * @author Jim Newsham
- */
-public class DateTimeZoneTag extends DateTimeZoneSupport {
-
-    // for tag attribute
-    public void setValue(Object value) throws JspTagException {
-        this.value = value;
-    }
-
-}
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/FormatSupport.java b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/FormatSupport.java
deleted file mode 100644
index a4f3eeb7e..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/FormatSupport.java
+++ /dev/null
@@ -1,155 +0,0 @@
-/*
- * Copyright 1999-2004 The Apache Software Foundation.
- * Modifications, Copyright 2005 Stephen Colebourne
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */ 
-package org.joda.time.contrib.jsptag;
-
-import java.io.IOException;
-import java.text.DateFormat;
-import java.util.Locale;
-
-import javax.servlet.jsp.JspException;
-import javax.servlet.jsp.JspTagException;
-import javax.servlet.jsp.PageContext;
-import javax.servlet.jsp.tagext.TagSupport;
-
-import org.joda.time.DateTimeZone;
-import org.joda.time.ReadableInstant;
-import org.joda.time.ReadablePartial;
-import org.joda.time.format.DateTimeFormat;
-import org.joda.time.format.DateTimeFormatter;
-
-/**
- * Support for tag handlers for &lt;formatDate&gt;, the date and time
- * formatting tag in JSTL 1.0.
- *
- * @author Jan Luehe
- * @author Jim Newsham
- */
-public abstract class FormatSupport extends TagSupport {
-
-    /** The value attribute. */
-    protected Object value;
-    /** The pattern attribute. */
-    protected String pattern;
-    /** The style attribute. */
-    protected String style;
-    /** The dateTimeZone attribute. */
-    protected DateTimeZone dateTimeZone;
-    /** The locale attribute. */
-    protected Locale locale;
-    /** The var attribute. */
-    private String var;
-    /** The scope attribute. */
-    private int scope;
-
-    /**
-     * Constructor.
-     */
-    public FormatSupport() {
-        super();
-        init();
-    }
-
-    private void init() {
-        var = null;
-        value = null;
-        pattern = null;
-        style = null;
-        dateTimeZone = null;
-        locale = null;
-        scope = PageContext.PAGE_SCOPE;
-    }
-
-    public void setVar(String var) {
-        this.var = var;
-    }
-
-    public void setScope(String scope) {
-        this.scope = Util.getScope(scope);
-    }
-
-    /*
-     * Formats the given instant or partial.
-     */
-    public int doEndTag() throws JspException {
-        if (value == null) {
-            if (var != null) {
-                pageContext.removeAttribute(var, scope);
-            }
-            return EVAL_PAGE;
-        }
-
-        // Create formatter
-        DateTimeFormatter formatter;
-        if (pattern != null) {
-            formatter = DateTimeFormat.forPattern(pattern);
-        } else if (style != null) {
-            formatter = DateTimeFormat.forStyle(style);
-        } else {
-            // use a medium date (no time) style by default; same as jstl
-            formatter = DateTimeFormat.mediumDate();
-        }
-
-        // set formatter locale
-        Locale locale = this.locale;
-        if (locale == null) {
-            locale = Util.getFormattingLocale(pageContext, this, true,
-                    DateFormat.getAvailableLocales());
-        }
-        if (locale != null) {
-            formatter = formatter.withLocale(locale);
-        }
-
-        // set formatter timezone
-        DateTimeZone tz = this.dateTimeZone;
-        if (tz == null) {
-            tz = DateTimeZoneSupport.getDateTimeZone(pageContext, this);
-        }
-        if (tz != null) {
-            formatter = formatter.withZone(tz);
-        }
-
-        // format value
-        String formatted;
-        if (value instanceof ReadableInstant) {
-            formatted = formatter.print((ReadableInstant) value);
-        } else if (value instanceof ReadablePartial) {
-            formatted = formatter.print((ReadablePartial) value);
-        } else {
-            throw new JspException(
-                "value attribute of format tag must be a ReadableInstant or ReadablePartial," +
-                " was: " + value.getClass().getName()); 
-        }
-
-        if (var != null) {
-            pageContext.setAttribute(var, formatted, scope);
-        } else {
-            try {
-                pageContext.getOut().print(formatted);
-            } catch (IOException ioe) {
-                throw new JspTagException(ioe.toString(), ioe);
-            }
-        }
-
-        return EVAL_PAGE;
-    }
-
-    // Releases any resources we may have (or inherit)
-    public void release() {
-        init();
-    }
-
-}
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/FormatTag.java b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/FormatTag.java
deleted file mode 100644
index 5e3f37516..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/FormatTag.java
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Copyright 1999-2004 The Apache Software Foundation.
- * Modifications, Copyright 2005 Stephen Colebourne
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.joda.time.contrib.jsptag;
-
-import java.util.Locale;
-
-import javax.servlet.jsp.JspTagException;
-
-import org.joda.time.DateTimeZone;
-
-/**
- * <p>
- * A handler for &lt;format&gt; that supports rtexprvalue-based attributes.
- * </p>
- * 
- * @author Jan Luehe
- * @author Jim Newsham
- */
-public class FormatTag extends FormatSupport {
-
-    /**
-     * Sets the value attribute.
-     * 
-     * @param value  the value
-     */
-    public void setValue(Object value) throws JspTagException {
-        this.value = value;
-    }
-
-    /**
-     * Sets the style attribute.
-     * 
-     * @param style  the style
-     */
-    public void setStyle(String style) throws JspTagException {
-        this.style = style;
-    }
-
-    /**
-     * Sets the pattern attribute.
-     * 
-     * @param pattern  the pattern
-     */
-    public void setPattern(String pattern) throws JspTagException {
-        this.pattern = pattern;
-    }
-
-    /**
-     * Sets the zone attribute.
-     * 
-     * @param dtz  the zone
-     */
-    public void setDateTimeZone(Object dtz) throws JspTagException {
-        if (dtz == null || dtz instanceof String
-                && ((String) dtz).length() == 0) {
-            this.dateTimeZone = null;
-        } else if (dtz instanceof DateTimeZone) {
-            this.dateTimeZone = (DateTimeZone) dtz;
-        } else {
-            try {
-                this.dateTimeZone = DateTimeZone.forID((String) dtz);
-            } catch (IllegalArgumentException iae) {
-                this.dateTimeZone = DateTimeZone.UTC;
-            }
-        }
-    }
-
-    /**
-     * Sets the style attribute.
-     * 
-     * @param loc  the locale
-     */
-    public void setLocale(Object loc) throws JspTagException {
-        if (loc == null
-                || (loc instanceof String && ((String) loc).length() == 0)) {
-            this.locale = null;
-        } else if (loc instanceof Locale) {
-            this.locale = (Locale) loc;
-        } else {
-            this.locale = Util.parseLocale((String) loc);
-        }
-    }
-
-}
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/JodaTagLibraryValidator.java b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/JodaTagLibraryValidator.java
deleted file mode 100644
index d6ad384ed..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/JodaTagLibraryValidator.java
+++ /dev/null
@@ -1,409 +0,0 @@
-/*
- * Copyright 1999-2004 The Apache Software Foundation.
- * Modifications, Copyright 2005 Stephen Colebourne
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.joda.time.contrib.jsptag;
-
-import java.io.IOException;
-import java.util.Vector;
-
-import javax.servlet.jsp.tagext.PageData;
-import javax.servlet.jsp.tagext.TagLibraryValidator;
-import javax.servlet.jsp.tagext.ValidationMessage;
-import javax.xml.parsers.ParserConfigurationException;
-import javax.xml.parsers.SAXParser;
-import javax.xml.parsers.SAXParserFactory;
-
-import org.xml.sax.Attributes;
-import org.xml.sax.SAXException;
-import org.xml.sax.helpers.DefaultHandler;
-
-/**
- * <p>
- * A SAX-based TagLibraryValidator for the Joda tags. Currently implements the
- * following checks:
- * </p>
- * 
- * <ul>
- * <li>Tag bodies that must either be empty or non-empty given particular
- * attributes.</li>
- * <li>Expression syntax validation (NOTE: this has been disabled; per my
- * understanding, it shouldn't be needed in JSP 2.0+ containers; see notes in
- * source code for more information).
- * </ul>
- * 
- * @author Shawn Bayern
- * @author Jan Luehe
- * @author Jim Newsham
- */
-public class JodaTagLibraryValidator extends TagLibraryValidator {
-
-    /*
-     * Expression syntax validation has been disabled since when I ported this
-     * code over from Jakarta Taglib, I wanted to reduce dependencies. As I
-     * understand it, JSP 2.0 containers take over the responsibility of
-     * handling EL code (both in attribute tags, and externally), so this
-     * shouldn't be a problem unless you're using something old. If you want to
-     * restore this validation, you must uncomment the various lines in this
-     * source, include the Jakarta Taglib's standard.jar library at build and
-     * runtime, and (I believe, but don't know specifically) make a legacy-style
-     * tld which describes which attributes should be validated. Have a look at
-     * fmt.tld, fmt-1.0.tld, fmt-1.0-rt.tld in standard.jar for an example of
-     * this.
-     */
-
-    // *********************************************************************
-    // Implementation Overview
-    /*
-     * We essentially just run the page through a SAX parser, handling the
-     * callbacks that interest us. We collapse <jsp:text> elements into the text
-     * they contain, since this simplifies processing somewhat. Even a quick
-     * glance at the implementation shows its necessary, tree-oriented nature:
-     * multiple Stacks, an understanding of 'depth', and so on all are important
-     * as we recover necessary state upon each callback. This TLV demonstrates
-     * various techniques, from the general "how do I use a SAX parser for a
-     * TLV?" to "how do I read my init parameters and then validate?" But also,
-     * the specific SAX methodology was kept as general as possible to allow for
-     * experimentation and flexibility.
-     */
-
-    // *********************************************************************
-    // Constants
-    // tag names
-    private static final String SET_DATETIMEZONE = "setDateTimeZone";
-
-    private static final String PARSE_DATETIME = "parseDateTime";
-
-    private static final String JSP_TEXT = "jsp:text";
-
-    // attribute names
-    private static final String VALUE = "value";
-
-    // parameter names
-    // private final String EXP_ATT_PARAM = "expressionAttributes";
-
-    // attributes
-    private static final String VAR = "var";
-
-    private static final String SCOPE = "scope";
-
-    // scopes
-    private static final String PAGE_SCOPE = "page";
-
-    private static final String REQUEST_SCOPE = "request";
-
-    private static final String SESSION_SCOPE = "session";
-
-    private static final String APPLICATION_SCOPE = "application";
-
-    // Relevant URIs
-    private final String JSP = "http://java.sun.com/JSP/Page";
-
-    // *********************************************************************
-    // Validation and configuration state (protected)
-
-    private String uri; // our taglib's uri (as passed by JSP container on XML
-                        // View)
-
-    private String prefix; // our taglib's prefix
-
-    private Vector messageVector; // temporary error messages
-
-//    private Map config; // configuration (Map of Sets)
-//
-//    private boolean failed; // have we failed >0 times?
-
-    private String lastElementId; // the last element we've seen
-
-    // *********************************************************************
-    // Constructor and lifecycle management
-
-    public JodaTagLibraryValidator() {
-        init();
-    }
-
-    private void init() {
-        messageVector = null;
-        prefix = null;
-//        config = null;
-    }
-
-    public void release() {
-        super.release();
-        init();
-    }
-
-    public synchronized ValidationMessage[] validate(String prefix, String uri,
-            PageData page) {
-        try {
-            this.uri = uri;
-            // initialize
-            messageVector = new Vector();
-
-            // save the prefix
-            this.prefix = prefix;
-
-            // parse parameters if necessary
-            /*
-             * try { if (config == null) { configure((String)
-             * getInitParameters().get(EXP_ATT_PARAM)); } } catch
-             * (NoSuchElementException ex) { // parsing error return
-             * vmFromString(Resources.getMessage("TLV_PARAMETER_ERROR",
-             * EXP_ATT_PARAM)); }
-             */
-
-            DefaultHandler h = new Handler();
-
-            // parse the page
-            SAXParserFactory f = SAXParserFactory.newInstance();
-            f.setValidating(false);
-            f.setNamespaceAware(true);
-            SAXParser p = f.newSAXParser();
-            p.parse(page.getInputStream(), h);
-
-            if (messageVector.size() == 0) {
-                return null;
-            } else {
-                return vmFromVector(messageVector);
-            }
-        } catch (SAXException ex) {
-            return vmFromString(ex.toString());
-        } catch (ParserConfigurationException ex) {
-            return vmFromString(ex.toString());
-        } catch (IOException ex) {
-            return vmFromString(ex.toString());
-        }
-    }
-
-    /*
-     * // delegate validation to the appropriate expression language private
-     * String validateExpression(String elem, String att, String expr) { //
-     * let's just use the cache kept by the ExpressionEvaluatorManager
-     * ExpressionEvaluator current; try { current =
-     * ExpressionEvaluatorManager.getEvaluatorByName(
-     * ExpressionEvaluatorManager.EVALUATOR_CLASS); } catch (JspException ex) { //
-     * (using JspException here feels ugly, but it's what EEM uses) return
-     * ex.getMessage(); } String response = current.validate(att, expr); return
-     * (response == null) ? null : "tag = '" + elem + "' / attribute = '" + att +
-     * "': " + response; }
-     */
-
-    // utility methods to help us match elements in our tagset
-    private boolean isTag(String tagUri, String tagLn, String matchUri,
-            String matchLn) {
-        if (tagUri == null || tagLn == null || matchUri == null
-                || matchLn == null) {
-            return false;
-        }
-        // match beginning of URI since some suffix *_rt tags can
-        // be nested in EL enabled tags as defined by the spec
-        if (tagUri.length() > matchUri.length()) {
-            return (tagUri.startsWith(matchUri) && tagLn.equals(matchLn));
-        } else {
-            return (matchUri.startsWith(tagUri) && tagLn.equals(matchLn));
-        }
-    }
-
-//    private boolean isJspTag(String tagUri, String tagLn, String target) {
-//        return isTag(tagUri, tagLn, JSP, target);
-//    }
-
-    private boolean isJodaTag(String tagUri, String tagLn, String target) {
-        return isTag(tagUri, tagLn, this.uri, target);
-    }
-
-    // utility method to determine if an attribute exists
-    private boolean hasAttribute(Attributes a, String att) {
-        return (a.getValue(att) != null);
-    }
-
-    /*
-     * method to assist with failure [ as if it's not easy enough already :-) ]
-     */
-    private void fail(String message) {
-//        failed = true;
-        messageVector.add(new ValidationMessage(lastElementId, message));
-    }
-
-//    // returns true if the given attribute name is specified, false otherwise
-//    private boolean isSpecified(TagData data, String attributeName) {
-//        return (data.getAttribute(attributeName) != null);
-//    }
-
-    // returns true if the 'scope' attribute is valid
-    protected boolean hasNoInvalidScope(Attributes a) {
-        String scope = a.getValue(SCOPE);
-        if ((scope != null) && !scope.equals(PAGE_SCOPE)
-                && !scope.equals(REQUEST_SCOPE) && !scope.equals(SESSION_SCOPE)
-                && !scope.equals(APPLICATION_SCOPE)) {
-            return false;
-        }
-        return true;
-    }
-
-    // returns true if the 'var' attribute is empty
-    protected boolean hasEmptyVar(Attributes a) {
-        return "".equals(a.getValue(VAR));
-    }
-
-    // returns true if the 'scope' attribute is present without 'var'
-    protected boolean hasDanglingScope(Attributes a) {
-        return (a.getValue(SCOPE) != null && a.getValue(VAR) == null);
-    }
-
-    // retrieves the local part of a QName
-    protected String getLocalPart(String qname) {
-        int colon = qname.indexOf(":");
-        return (colon == -1) ? qname : qname.substring(colon + 1);
-    }
-
-    // parses our configuration parameter for element:attribute pairs
-    /*
-     * private void configure(String info) { // construct our configuration map
-     * config = new HashMap();
-     *  // leave the map empty if we have nothing to configure if (info == null) {
-     * return; }
-     *  // separate parameter into space-separated tokens and store them
-     * StringTokenizer st = new StringTokenizer(info); while
-     * (st.hasMoreTokens()) { String pair = st.nextToken(); StringTokenizer
-     * pairTokens = new StringTokenizer(pair, ":"); String element =
-     * pairTokens.nextToken(); String attribute = pairTokens.nextToken(); Object
-     * atts = config.get(element); if (atts == null) { atts = new HashSet();
-     * config.put(element, atts); } ((Set) atts).add(attribute); } }
-     */
-
-    // constructs a ValidationMessage[] from a single String and no ID
-    private static ValidationMessage[] vmFromString(String message) {
-        return new ValidationMessage[] { new ValidationMessage(null, message) };
-    }
-
-    // constructs a ValidationMessage[] from a ValidationMessage Vector
-    private static ValidationMessage[] vmFromVector(Vector v) {
-        ValidationMessage[] vm = new ValidationMessage[v.size()];
-        for (int i = 0; i < vm.length; i++) {
-            vm[i] = (ValidationMessage) v.get(i);
-        }
-        return vm;
-    }
-
-    /**
-     * SAX event handler.
-     */
-    private class Handler extends DefaultHandler {
-        // parser state
-        private int depth = 0;
-
-        private String lastElementName = null;
-
-        private boolean bodyNecessary = false;
-
-        private boolean bodyIllegal = false;
-
-        // process under the existing context (state), then modify it
-        public void startElement(String ns, String ln, String qn, Attributes a) {
-            // substitute our own parsed 'ln' if it's not provided
-            if (ln == null) {
-                ln = getLocalPart(qn);
-            }
-
-            // for simplicity, we can ignore <jsp:text> for our purposes
-            // (don't bother distinguishing between it and its characters)
-            if (qn.equals(JSP_TEXT)) {
-                return;
-            }
-
-            // check body-related constraint
-            if (bodyIllegal) {
-                fail(Resources.getMessage("TLV_ILLEGAL_BODY", lastElementName));
-            }
-
-            // validate expression syntax if we need to
-            /*
-             * Set expAtts; if (qn.startsWith(prefix + ":") && (expAtts = (Set)
-             * config.get(ln)) != null) { for (int i = 0; i < a.getLength();
-             * i++) { String attName = a.getLocalName(i); if
-             * (expAtts.contains(attName)) { String vMsg =
-             * validateExpression(ln, attName, a.getValue(i)); if (vMsg != null) {
-             * fail(vMsg); } } } }
-             */
-
-            // validate attributes
-            if (qn.startsWith(prefix + ":") && !hasNoInvalidScope(a)) {
-                fail(Resources.getMessage("TLV_INVALID_ATTRIBUTE", SCOPE, qn, a
-                        .getValue(SCOPE)));
-            }
-            if (qn.startsWith(prefix + ":") && hasEmptyVar(a)) {
-                fail(Resources.getMessage("TLV_EMPTY_VAR", qn));
-            }
-            if (qn.startsWith(prefix + ":")
-                    && !isJodaTag(ns, ln, SET_DATETIMEZONE)
-                    && hasDanglingScope(a)) {
-                fail(Resources.getMessage("TLV_DANGLING_SCOPE", qn));
-            }
-
-            // now, modify state
-
-            // set up a check against illegal attribute/body combinations
-            bodyIllegal = false;
-            bodyNecessary = false;
-            if (isJodaTag(ns, ln, PARSE_DATETIME)) {
-                if (hasAttribute(a, VALUE)) {
-                    bodyIllegal = true;
-                } else {
-                    bodyNecessary = true;
-                }
-            }
-
-            // record the most recent tag (for error reporting)
-            lastElementName = qn;
-            lastElementId = a.getValue(JSP, "id");
-
-            // we're a new element, so increase depth
-            depth++;
-        }
-
-        public void characters(char[] ch, int start, int length) {
-            bodyNecessary = false; // body is no longer necessary!
-
-            // ignore strings that are just whitespace
-            String s = new String(ch, start, length).trim();
-            if (s.equals("")) {
-                return;
-            }
-
-            // check and update body-related constraints
-            if (bodyIllegal) {
-                fail(Resources.getMessage("TLV_ILLEGAL_BODY", lastElementName));
-            }
-        }
-
-        public void endElement(String ns, String ln, String qn) {
-            // consistently, we ignore JSP_TEXT
-            if (qn.equals(JSP_TEXT)) {
-                return;
-            }
-
-            // handle body-related invariant
-            if (bodyNecessary) {
-                fail(Resources.getMessage("TLV_MISSING_BODY", lastElementName));
-            }
-            bodyIllegal = false; // reset: we've left the tag
-
-            // update our depth
-            depth--;
-        }
-    }
-
-}
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/ParseDateTimeSupport.java b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/ParseDateTimeSupport.java
deleted file mode 100644
index d452738ee..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/ParseDateTimeSupport.java
+++ /dev/null
@@ -1,162 +0,0 @@
-/*
- * Copyright 1999-2004 The Apache Software Foundation.
- * Modifications, Copyright 2005 Stephen Colebourne
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.joda.time.contrib.jsptag;
-
-import java.io.IOException;
-import java.text.DateFormat;
-import java.util.Locale;
-
-import javax.servlet.jsp.JspException;
-import javax.servlet.jsp.JspTagException;
-import javax.servlet.jsp.PageContext;
-import javax.servlet.jsp.tagext.BodyTagSupport;
-
-import org.joda.time.DateTime;
-import org.joda.time.DateTimeZone;
-import org.joda.time.format.DateTimeFormat;
-import org.joda.time.format.DateTimeFormatter;
-
-/**
- * Support for tag handlers for &lt;parseDate&gt;, the date and time parsing tag
- * in JSTL 1.0.
- * 
- * @author Jan Luehe
- * @author Jim Newsham
- */
-public abstract class ParseDateTimeSupport extends BodyTagSupport {
-
-    /** The value attribute. */
-    protected String value;
-    /** Status of the value. */
-    protected boolean valueSpecified;
-    /** The pattern attribute. */
-    protected String pattern;
-    /** The style attribute. */
-    protected String style;
-    /** The zone attribute. */
-    protected DateTimeZone dateTimeZone;
-    /** The locale attribute. */
-    protected Locale locale;
-    /** The var attribute. */
-    private String var;
-    /** The scope attribute. */
-    private int scope;
-
-    /**
-     * Constructor.
-     */
-    public ParseDateTimeSupport() {
-        super();
-        init();
-    }
-
-    private void init() {
-        value = null;
-        valueSpecified = false;
-        pattern = null;
-        style = null;
-        dateTimeZone = null;
-        locale = null;
-        scope = PageContext.PAGE_SCOPE;
-    }
-
-    public void setVar(String var) {
-        this.var = var;
-    }
-
-    public void setScope(String scope) {
-        this.scope = Util.getScope(scope);
-    }
-
-    public int doEndTag() throws JspException {
-        String input = null;
-
-        // determine the input by...
-        if (valueSpecified) {
-            // ... reading 'value' attribute
-            input = value;
-        } else {
-            // ... retrieving and trimming our body
-            if (bodyContent != null && bodyContent.getString() != null) {
-                input = bodyContent.getString().trim();
-            }
-        }
-
-        if ((input == null) || input.equals("")) {
-            if (var != null) {
-                pageContext.removeAttribute(var, scope);
-            }
-            return EVAL_PAGE;
-        }
-
-        // Create formatter
-        DateTimeFormatter formatter;
-        if (pattern != null) {
-            formatter = DateTimeFormat.forPattern(pattern);
-        } else if (style != null) {
-            formatter = DateTimeFormat.forStyle(style);
-        } else {
-            formatter = DateTimeFormat.fullDateTime();
-        }
-
-        // set formatter locale
-        Locale locale = this.locale;
-        if (locale == null) {
-            locale = Util.getFormattingLocale(pageContext, this, true,
-                    DateFormat.getAvailableLocales());
-        }
-        if (locale != null) {
-            formatter = formatter.withLocale(locale);
-        }
-
-        // set formatter timezone
-        DateTimeZone tz = this.dateTimeZone;
-        if (tz == null) {
-            tz = DateTimeZoneSupport.getDateTimeZone(pageContext, this);
-        }
-        if (tz != null) {
-            formatter = formatter.withZone(tz);
-        }
-
-        // Parse date
-        DateTime parsed = null;
-        try {
-            parsed = formatter.parseDateTime(input);
-        } catch (IllegalArgumentException iae) {
-            throw new JspException(Resources.getMessage(
-                    "PARSE_DATE_PARSE_ERROR", input), iae);
-        }
-
-        if (var != null) {
-            pageContext.setAttribute(var, parsed, scope);
-        } else {
-            try {
-                pageContext.getOut().print(parsed);
-            } catch (IOException ioe) {
-                throw new JspTagException(ioe.toString(), ioe);
-            }
-        }
-
-        return EVAL_PAGE;
-    }
-
-    // Releases any resources we may have (or inherit)
-    public void release() {
-        init();
-    }
-
-}
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/ParseDateTimeTag.java b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/ParseDateTimeTag.java
deleted file mode 100644
index 27cf44755..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/ParseDateTimeTag.java
+++ /dev/null
@@ -1,100 +0,0 @@
-/*
- * Copyright 1999-2004 The Apache Software Foundation.
- * Modifications, Copyright 2005 Stephen Colebourne
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.joda.time.contrib.jsptag;
-
-import java.util.Locale;
-
-import javax.servlet.jsp.JspTagException;
-
-import org.joda.time.DateTimeZone;
-
-/**
- * <p>
- * A handler for &lt;parseDate&gt; that supports rtexprvalue-based attributes.
- * </p>
- * 
- * @author Jan Luehe
- * @author Jim Newsham
- */
-
-public class ParseDateTimeTag extends ParseDateTimeSupport {
-
-    /**
-     * Sets the value attribute.
-     * 
-     * @param value  the value
-     */
-    public void setValue(String value) throws JspTagException {
-        this.value = value;
-        this.valueSpecified = true;
-    }
-
-    /**
-     * Sets the style attribute.
-     * 
-     * @param style  the style
-     */
-    public void setStyle(String style) throws JspTagException {
-        this.style = style;
-    }
-
-    /**
-     * Sets the pattern attribute.
-     * 
-     * @param pattern  the pattern
-     */
-    public void setPattern(String pattern) throws JspTagException {
-        this.pattern = pattern;
-    }
-
-    /**
-     * Sets the zone attribute.
-     * 
-     * @param dtz  the zone
-     */
-    public void setDateTimeZone(Object dtz) throws JspTagException {
-        if (dtz == null || dtz instanceof String
-                && ((String) dtz).length() == 0) {
-            this.dateTimeZone = null;
-        } else if (dtz instanceof DateTimeZone) {
-            this.dateTimeZone = (DateTimeZone) dtz;
-        } else {
-            try {
-                this.dateTimeZone = DateTimeZone.forID((String) dtz);
-            } catch (IllegalArgumentException iae) {
-                this.dateTimeZone = DateTimeZone.UTC;
-            }
-        }
-    }
-
-    /**
-     * Sets the style attribute.
-     * 
-     * @param loc  the locale
-     */
-    public void setLocale(Object loc) throws JspTagException {
-        if (loc == null
-                || (loc instanceof String && ((String) loc).length() == 0)) {
-            this.locale = null;
-        } else if (loc instanceof Locale) {
-            this.locale = (Locale) loc;
-        } else {
-            locale = Util.parseLocale((String) loc);
-        }
-    }
-
-}
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Resources.java b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Resources.java
deleted file mode 100644
index bf05b9b71..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Resources.java
+++ /dev/null
@@ -1,124 +0,0 @@
-/*
- * Copyright 1999-2004 The Apache Software Foundation.
- * Modifications, Copyright 2005 Stephen Colebourne
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */ 
-package org.joda.time.contrib.jsptag;
-
-import java.text.MessageFormat;
-import java.util.MissingResourceException;
-import java.util.ResourceBundle;
-
-/**
- * <p>Provides locale-neutral access to string resources.  Only the
- * documentation and code are in English. :-)
- *
- * <p>The major goal, aside from globalization, is convenience.
- * Access to resources with no parameters is made in the form:</p>
- * <pre>
- *     Resources.getMessage(MESSAGE_NAME);
- * </pre>
- *
- * <p>Access to resources with one parameter works like</p>
- * <pre>
- *     Resources.getMessage(MESSAGE_NAME, arg1);
- * </pre>
- *
- * <p>... and so on.</p>
- *
- * @author Shawn Bayern
- */
-public class Resources {
-
-    //*********************************************************************
-    // Static data
-
-    /** The location of our resources. */
-    private static final String RESOURCE_LOCATION = "org.joda.time.contrib.jsptag.Resources";
-
-    /** Our class-wide ResourceBundle. */
-    private static ResourceBundle rb = ResourceBundle.getBundle(RESOURCE_LOCATION);
-
-
-    //*********************************************************************
-    // Public static methods
-
-    /** Retrieves a message with no arguments. */
-    public static String getMessage(String name)
-      throws MissingResourceException {
-        return rb.getString(name);
-    }
-
-    /** Retrieves a message with arbitrarily many arguments. */
-    public static String getMessage(String name, Object[] a)
-      throws MissingResourceException {
-        String res = rb.getString(name);
-        return MessageFormat.format(res, a);
-    }
-
-    /** Retrieves a message with one argument. */
-    public static String getMessage(String name, Object a1)
-      throws MissingResourceException {
-        return getMessage(name, new Object[] { a1 });
-    }
-
-    /** Retrieves a message with two arguments. */
-    public static String getMessage(String name, Object a1, Object a2)
-      throws MissingResourceException {
-        return getMessage(name, new Object[] { a1, a2 });
-    }
-
-    /** Retrieves a message with three arguments. */
-    public static String getMessage(String name,
-            Object a1,
-            Object a2,
-            Object a3)
-      throws MissingResourceException {
-        return getMessage(name, new Object[] { a1, a2, a3 });
-    }
-
-    /** Retrieves a message with four arguments. */
-    public static String getMessage(String name,
-             Object a1,
-            Object a2,
-            Object a3,
-            Object a4)
-      throws MissingResourceException {
-        return getMessage(name, new Object[] { a1, a2, a3, a4 });
-    }
-
-    /** Retrieves a message with five arguments. */
-    public static String getMessage(String name,
-            Object a1,
-            Object a2,
-            Object a3,
-            Object a4,
-            Object a5)
-      throws MissingResourceException {
-        return getMessage(name, new Object[] { a1, a2, a3, a4, a5 });
-    }
-
-    /** Retrieves a message with six arguments. */
-    public static String getMessage(String name,
-            Object a1,
-            Object a2,
-            Object a3,
-            Object a4,
-            Object a5,
-            Object a6)
-      throws MissingResourceException {
-        return getMessage(name, new Object[] { a1, a2, a3, a4, a5, a6 });
-    }
-
-}
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Resources.properties b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Resources.properties
deleted file mode 100644
index 2bee78168..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Resources.properties
+++ /dev/null
@@ -1,304 +0,0 @@
-#########################################################################
-# Conventions:
-# - For error messages from particular tags, the resource should
-#     - (a) have a name beginning with TAGNAME_
-#     - (b) contain the name of the tag within the message
-# - Generic tag messages -- i.e., those used in more than one tag --
-#   should begin with TAG_
-# - Errors for TagLibraryValidators should begin with TLV_
-#########################################################################
-
-
-#########################################################################
-# Generic tag error messages
-#########################################################################
-
-TAG_NULL_ATTRIBUTE=\
-    The "{0}" attribute illegally evaluated to "null" or "" in &lt;{1}&gt;
-
-#########################################################################
-# Specific tag error messages
-#########################################################################
-
-# CORE
-
-CHOOSE_EXCLUSIVITY=\
-    Only one (or is it two?) &lt;choose&gt; subtag may evaluate its body
-
-EXPR_BAD_VALUE=\
-    In &lt;expr&gt;, attribute value="{0}" didn't evaluate successfully, \
-    but there was no "default" attribute and no non-whitespace content \
-    for the tag.
-
-FOREACH_STEP_NO_RESULTSET=\
-    Step cannot be > 1 when iterating over a ResultSet with &lt;forEach&gt;
-
-FOREACH_BAD_ITEMS=\
-    Don't know how to iterate over supplied "items" in &lt;forEach&gt;
-
-IMPORT_BAD_RELATIVE=\
-    In URL tags, when the "context" attribute is specified, \
-    values of both "context" and "url" must start with "/".
-
-IMPORT_REL_WITHOUT_HTTP=\
-    Relative &lt;import&gt; from non-HTTP request not allowed
-    
-IMPORT_REL_WITHOUT_DISPATCHER=\
-    Unable to get RequestDispatcher for Context: "{0}" and URL: "{1}". \
-    Verify values and/or enable cross context access.
-
-IMPORT_IO=\
-    I/O error in &lt;import&gt; occurred reading "{0}"
-
-IMPORT_ILLEGAL_STREAM=\
-    Unexpected internal error during &lt;import&gt: \
-    Target servlet called getWriter(), then getOutputStream()
-
-IMPORT_ILLEGAL_WRITER=\
-    Unexpected internal error during &lt;import&gt: \
-    Target servlet called getOutputStream(), then getWriter()
-
-#IMPORT_ILLEGAL_GETSTRING=\
-#    Unexpected internal error during &lt;import&gt: \
-#    Target servlet called neither getOutputStream() nor getWriter()
-
-PARAM_OUTSIDE_PARENT=\
-    &lt;param&gt; outside &lt;import&gt; or &lt;urlEncode&gt;
-
-PARAM_ENCODE_BOOLEAN=\
-    In &lt;param&gt;, "encode" must be "true" or "false".  Got "{0}" instead.
-
-SET_BAD_SCOPE=\
-    Invalid "scope" attribute for &lt;set&gt;:  "{0}"
-
-SET_INVALID_PROPERTY=\
-    Invalid property in &lt;set&gt;:  "{0}"
-
-SET_INVALID_TARGET=\
-    Attempt to set the property of an invalid object in &lt;set&gt;.
-
-SET_NO_VALUE=\
-    Need either non-whitespace body or "value" attribute in &lt;set&gt;
-
-URLENCODE_NO_VALUE=\
-    Need either non-whitespace body or "value" attribute in &lt;urlEncode&gt;
-
-WHEN_OUTSIDE_CHOOSE=\
-    Illegal use of &lt;when&gt;-style tag without &lt;choose&gt; as its \
-    direct parent
-
-# I18N
-
-LOCALE_NO_LANGUAGE=\
-    Missing language component in 'value' attribute in &lt;setLocale&gt; 
-
-LOCALE_EMPTY_COUNTRY=\
-    Empty country component in 'value' attribute in &lt;setLocale&gt;
-
-PARAM_OUTSIDE_MESSAGE=\
-    &lt;param&gt; outside &lt;message&gt;
-
-MESSAGE_NO_KEY=\
-    &lt;message&gt; needs 'key' attribute or non-whitespace body
-
-FORMAT_NUMBER_INVALID_TYPE=\
-    In &lt;formatNumber&gt;, invalid 'type' attribute: "{0}"
-
-FORMAT_NUMBER_NO_VALUE=\
-    &lt;formatNumber&gt; needs 'value' attribute or non-whitespace body
-
-FORMAT_NUMBER_PARSE_ERROR=\
-    In &lt;formatNumber&gt;, 'value' attribute can not be parsed into java.lang.Number: "{0}"
-
-FORMAT_NUMBER_CURRENCY_ERROR=\
-    In &lt;formatNumber&gt;, unable to set currency
-
-PARSE_NUMBER_INVALID_TYPE=\
-    In &lt;parseNumber&gt;, invalid 'type' attribute: "{0}"
-
-PARSE_NUMBER_NO_VALUE=\
-    &lt;parseNumber&gt; needs 'value' attribute or non-whitespace body
-
-PARSE_NUMBER_NO_PARSE_LOCALE=\
-    In &lt;parseNumber&gt;, a parse locale can not be established
-
-PARSE_NUMBER_PARSE_ERROR=\
-    In &lt;parseNumber&gt;, 'value' attribute can not be parsed: "{0}"
-
-FORMAT_DATE_INVALID_TYPE=\
-    In &lt;formatDate&gt;, invalid 'type' attribute: "{0}"
-
-FORMAT_DATE_BAD_TIMEZONE=\
-    In &lt;formatDate&gt;, 'timeZone' must be an instance of java.lang.String or java.util.TimeZone
-
-FORMAT_DATE_INVALID_DATE_STYLE=\
-    In &lt;formatDate&gt;, invalid 'dateStyle' attribute: "{0}"
-
-FORMAT_DATE_INVALID_TIME_STYLE=\
-    In &lt;formatDate&gt;, invalid 'timeStyle' attribute: "{0}"
-
-PARSE_DATE_INVALID_TYPE=\
-    In &lt;parseDate&gt;, invalid 'type' attribute: "{0}"
-
-PARSE_DATE_BAD_TIMEZONE=\
-    In &lt;parseDate&gt;, 'timeZone' must be an instance of java.lang.String or java.util.TimeZone
-
-PARSE_DATE_INVALID_DATE_STYLE=\
-    In &lt;parseDate&gt;, invalid 'dateStyle' attribute: "{0}"
-
-PARSE_DATE_INVALID_TIME_STYLE=\
-    In &lt;parseDate&gt;, invalid 'timeStyle' attribute: "{0}"
-
-PARSE_DATE_NO_VALUE=\
-    &lt;parseDate&gt; needs 'value' attribute or non-whitespace body
-
-PARSE_DATE_PARSE_ERROR=\
-    In &lt;parseDate&gt;, 'value' attribute can not be parsed: "{0}"
-
-PARSE_DATE_NO_PARSE_LOCALE=\
-    In &lt;parseDate&gt;, a parse locale can not be established
-
-# SQL
-
-DRIVER_INVALID_CLASS=\
-    In &lt;driver&gt;, invalid driver class name: "{0}"
-
-DATASOURCE_INVALID=\
-    Unable to get connection, DataSource invalid: "{0}"
- 
-JDBC_PARAM_COUNT=\
-    Invalid number of JDBC parameters specified.
-
-PARAM_BAD_VALUE=\
-    Invalid or out of bounds value specified in parameter.
- 
-TRANSACTION_NO_SUPPORT=\
-    In &lt;transaction&gt;, datasource does not support transactions
-
-TRANSACTION_COMMIT_ERROR=\
-    In &lt;transaction&gt;, error committing transaction: "{0}"
-
-TRANSACTION_INVALID_ISOLATION=\
-    In &lt;transaction&gt;, invalid transaction isolation
-
-NOT_SUPPORTED=\
-    Not supported
-
-ERROR_GET_CONNECTION=\
-    Error getting connection: "{0}"
-
-ERROR_NESTED_DATASOURCE=\
-    It is illegal to specify a DataSource when nested within a &lt;transaction&gt;
-
-SQL_PARAM_OUTSIDE_PARENT=\
-    &lt;param&gt; or &lt;dateParam&gt; must be subtag of SQLExecutionTag actions like &lt;query&gt; or &lt;update&gt;
-
-SQL_NO_STATEMENT=\
-    No SQL statement specified
-
-SQL_PROCESS_ERROR=\
-    Error processing SQL: "{0}"
-
-SQL_DATASOURCE_INVALID_TYPE=\
-    'dataSource' is neither a String nor a javax.sql.DataSource
-
-SQL_DATASOURCE_NULL=\
-    'dataSource' is null
-
-SQL_MAXROWS_PARSE_ERROR=\
-    Error parsing 'javax.servlet.jsp.jstl.sql.maxRows' configuration setting: "{0}"
-
-SQL_MAXROWS_INVALID=\
-    'javax.servlet.jsp.jstl.sql.maxRows' configuration setting neither an Integer nor a String
-
-SQL_DATE_PARAM_INVALID_TYPE=\
-    In &lt;dateParam&gt;, invalid 'type' attribute: "{0}"
-
-# XML
-
-FOREACH_NOT_NODESET=\
-    &lt;forEach&gt; can't iterate over XPath expressions that don't return a node-set
-
-PARAM_NO_VALUE=\
-    &lt;param&gt; needs 'value' attribute or non-whitespace body
-
-PARAM_OUTSIDE_TRANSFORM=\
-    &lt;param&gt; outside &lt;transform&gt;
-
-PARSE_INVALID_SOURCE=\
-    Unrecognized object supplied as 'xml' attribute to &lt;parse&gt;
-
-PARSE_NO_SAXTRANSFORMER=\
-    Filter supplied to &lt;parse&gt;, but default TransformerFactory \
-    does not support SAX.
-
-TRANSFORM_NO_TRANSFORMER=\
-    &lt;transform&gt; was not passed an XSLT stylesheet
-
-TRANSFORM_SOURCE_INVALID_LIST=\
-    &lt;transform&gt; encountered an invalid java.util.List while processing 'xml' attribute.  This error is typically caused if you pass a node-set with more than one node to &lt;transform&gt;'s 'xml' attribute.
-
-TRANSFORM_SOURCE_UNRECOGNIZED=\
-    &lt;transform&gt; encountered an unknown type while processing 'xml' attribute
-
-TRANSFORM_XSLT_UNRECOGNIZED=\
-    &lt;transform&gt; encountered an unknown type while processing 'xslt' attribute
-
-UNABLE_TO_RESOLVE_ENTITY=\
-    Could not resolve entity reference: "{0}"
-
-#########################################################################
-# JSTL core TLV messages
-#########################################################################
-
-# Parameters 
-
-TLV_PARAMETER_ERROR=\
-    Invalid value for "{0}" validator parameter in TLD
-
-# Generic errors
-
-TLV_ILLEGAL_BODY=\
-    Encountered illegal body of tag "{0}" tag, given its attributes.
-
-TLV_MISSING_BODY=\
-    A body is necessary inside the "{0}" tag, given its attributes.
-
-TLV_ILLEGAL_CHILD_TAG=\
-    Illegal child tag in "{0}:{1}" tag: "{2}" tag
-
-TLV_ILLEGAL_TEXT_BODY=\
-    Illegal text inside "{0}:{1}" tag: "{2}...".
-
-TLV_INVALID_ATTRIBUTE=\
-    Invalid "{0}" attribute in "{1}" tag: "{2}"
-
-TLV_ILLEGAL_ORPHAN=\
-    Invalid use of "{0}" tag outside legitimate parent tag
-
-TLV_PARENT_WITHOUT_SUBTAG=\
-    Illegal "{0}" without child "{1}" tag
-
-# Errors customized to particular tags (sort of)  :-)
-
-TLV_ILLEGAL_ORDER=\
-    Illegal "{0}" after "{1}:{2}" tag in "{1}:{3}" tag.
-
-TLV_ILLEGAL_PARAM=\
-    Illegal "{0}:{1}" tag within "{0}:{2} {3}='...'" tag
-
-TLV_DANGLING_SCOPE=\
-    Illegal 'scope' attribute without 'var' in "{0}" tag.
-
-TLV_EMPTY_VAR=\
-    Empty 'var' attribute in "{0}" tag.
-
-SET_NO_SETTER_METHOD=No setter method in &lt;set&gt; for property "{0}"
-
-IMPORT_ABS_ERROR=Problem accessing the absolute URL "{0}". {1}
-
-XPATH_ERROR_EVALUATING_EXPR=Error evaluating XPath expression "{0}": {1}
-
-XPATH_ILLEGAL_ARG_EVALUATING_EXPR=Illegal argument evaluating XPath expression "{0}": {1}
-
-XPATH_ERROR_XOBJECT=Error accessing data in XObject: {0}
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Resources_ja.properties b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Resources_ja.properties
deleted file mode 100644
index 8452ff888..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Resources_ja.properties
+++ /dev/null
@@ -1,297 +0,0 @@
-#########################################################################
-# Conventions:
-# - For error messages from particular tags, the resource should
-#     - (a) have a name beginning with TAGNAME_
-#     - (b) contain the name of the tag within the message
-# - Generic tag messages -- i.e., those used in more than one tag --
-#   should begin with TAG_
-# - Errors for TagLibraryValidators should begin with TLV_
-#########################################################################
-
-
-#########################################################################
-# Generic tag error messages
-#########################################################################
-
-TAG_NULL_ATTRIBUTE=\
-    &lt;{1}&gt; \u5185\u306b\u3042\u308b "{0}" \u5c5e\u6027\u304c "null" \u3082\u3057\u304f\u306f "" \u3067\u3042\u308b\u3068\u4e0d\u6b63\u306b\u8a55\u4fa1\u3057\u307e\u3057\u305f\u3002
-
-#########################################################################
-# Specific tag error messages
-#########################################################################
-
-# CORE
-
-CHOOSE_EXCLUSIVITY=\
-    \uff11\u3064\u3057\u304b\u5b58\u5728\u306a\u3044 &lt;choose&gt; \u306e\u4e0b\u4f4d\u30bf\u30b0\u306f\u30dc\u30c7\u30a3\u306e\u4e2d\u8eab\u3092\u305d\u306e\u307e\u307e\u8a55\u4fa1\u3057\u307e\u3059
-
-EXPR_BAD_VALUE=\
-    &lt;expr&gt; \u5185\u3067\u3001\u5c5e\u6027\u5024="{0}" \u304c\u6b63\u3057\u304f\u8a55\u4fa1\u3055\u308c\u305a\u3001"default" \u5c5e\u6027\u3084\u30db\u30ef\u30a4\u30c8\u30b9\u30da\u30fc\u30b9\u306e\u306a\u3044\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u30bf\u30b0\u306e\u4e2d\u306b\u5b58\u5728\u3057\u307e\u305b\u3093
-
-FOREACH_STEP_NO_RESULTSET=\
-    &lt;forEach&gt; \u3067 ResultSet \u3092\u53cd\u5fa9\u51e6\u7406\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u3053\u308d\u3001step \u306e\u5024\u3092 1 \u3088\u308a\u5927\u304d\u304f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093
-
-FOREACH_BAD_ITEMS=\
-    &lt;forEach&gt; \u5185\u3067\u4f9b\u7d66\u3055\u308c\u305f "items" \u3092\u53cd\u5fa9\u51e6\u7406\u3059\u308b\u65b9\u6cd5\u304c\u4e0d\u660e\u3067\u3059
-
-IMPORT_BAD_RELATIVE=\
-    URL \u30bf\u30b0\u3067 "context" \u5c5e\u6027\u3092\u6307\u5b9a\u3059\u308b\u969b\u3001"context" \u304a\u3088\u3073 "url" \u306e\u4e21\u65b9\u306e\u5024\u306f "/" \u3067\u59cb\u307e\u3063\u3066\u3044\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093
-
-IMPORT_REL_WITHOUT_HTTP=\
-    \u975e HTTP \u8981\u6c42\u3067\u306f\u3001URL\u3092\u76f8\u5bfe\u6307\u5b9a\u3059\u308b &lt;import&gt; \u3092\u8a31\u53ef\u3057\u3066\u3044\u307e\u305b\u3093
-
-IMPORT_REL_WITHOUT_DISPATCHER=\
-    Context: "{0}" \u304a\u3088\u3073 URL: "{1}" \u306b\u5bfe\u3057\u3066 RequestDispatcher \u3092\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093\u3002\u6307\u5b9a\u3057\u305f\u5024\u3092\u78ba\u8a8d\u3059\u308b\u304b\u3001\u3082\u3057\u304f\u306f\u3001Context \u3092\u76f8\u4e92\u7684\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044
-
-IMPORT_IO=\
-    &lt;import&gt; \u3067\u3001"{0}" \u3092\u8aad\u307f\u8fbc\u307f\u4e2d\u306b\u5165\u51fa\u529b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f
-
-IMPORT_ILLEGAL_STREAM=\
-    &lt;import&gt \u5185\u3067\u4e88\u671f\u305b\u306c\u5185\u90e8\u30a8\u30e9\u30fc: \u5bfe\u8c61\u3068\u306a\u3063\u305f Servlet \u3067 getWriter() \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u306e\u306b getOutputStream() \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u305d\u3046\u3068\u3057\u307e\u3057\u305f
-
-IMPORT_ILLEGAL_WRITER=\
-    &lt;import&gt \u5185\u3067\u4e88\u671f\u305b\u306c\u5185\u90e8\u30a8\u30e9\u30fc: \u5bfe\u8c61\u3068\u306a\u3063\u305f Servlet \u3067 getOutputStream() \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u306e\u306b getWriter() \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u305d\u3046\u3068\u3057\u307e\u3057\u305f
-
-#IMPORT_ILLEGAL_GETSTRING=\
-#    Unexpected internal error during &lt;import&gt: \
-#    Target servlet called neither getOutputStream() nor getWriter()
-
-PARAM_OUTSIDE_PARENT=\
-    &lt;import&gt; \u3082\u3057\u304f\u306f &lt;urlEncode&gt; \u306e\u5916\u5074\u306b &lt;param&gt; \u304c\u3042\u308a\u307e\u3059
-
-PARAM_ENCODE_BOOLEAN=\
-    &lt;param&gt; \u3067\u306f\u3001"encode" \u306f "true" \u3082\u3057\u304f\u306f "false" \u3067\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\u4ee3\u308f\u308a\u306b "{0}" \u3092\u53d6\u5f97\u3057\u307e\u3057\u305f
-
-SET_BAD_SCOPE=\
-    &lt;set&gt; \u306b\u5bfe\u3057\u3001\u7121\u52b9\u306a "scope" \u5c5e\u6027\u3067\u3059:  "{0}"
-
-SET_INVALID_PROPERTY=\
-    &lt;set&gt; \u306b\u5bfe\u3057\u3001\u7121\u52b9\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u3059:  "{0}"
-
-SET_INVALID_TARGET=\
-    &lt;set&gt; \u306b\u5bfe\u3057\u3001\u7121\u52b9\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30bb\u30c3\u30c8\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059
-
-SET_NO_VALUE=\
-    &lt;set&gt; \u3067\u306f\u3001\u30db\u30ef\u30a4\u30c8\u30b9\u30da\u30fc\u30b9\u306e\u306a\u3044\u30dc\u30c7\u30a3\u3082\u3057\u304f\u306f "value" \u5c5e\u6027\u304c\u5fc5\u8981\u3067\u3059
-
-URLENCODE_NO_VALUE=\
-    &lt;urlEncode&gt; \u3067\u306f\u3001\u30db\u30ef\u30a4\u30c8\u30b9\u30da\u30fc\u30b9\u306e\u306a\u3044\u30dc\u30c7\u30a3\u3082\u3057\u304f\u306f "value" \u5c5e\u6027\u304c\u5fc5\u8981\u3067\u3059
-
-WHEN_OUTSIDE_CHOOSE=\
-    \u76f4\u8fd1\u306e\u89aa\u30bf\u30b0\u3067\u3042\u308b &lt;choose&gt; \u3092\u30bb\u30c3\u30c8\u305b\u305a\u306b &lt;when&gt; \u30b9\u30bf\u30a4\u30eb\u30fb\u30bf\u30b0\u3092\u4f7f\u3046\u3053\u3068\u306f\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093
-
-# I18N
-
-LOCALE_NO_LANGUAGE=\
-    &lt;setLocale&gt; \u3067\u3001'value' \u5c5e\u6027\u306b\u6307\u5b9a\u3057\u305f\u8a00\u8a9e\u30b3\u30fc\u30c9\u304c\u307e\u3061\u304c\u3063\u3066\u3044\u307e\u3059
-
-LOCALE_EMPTY_COUNTRY=\
-    &lt;setLocale&gt; \u3067\u3001'value' \u5c5e\u6027\u306b\u6307\u5b9a\u3057\u305f\u56fd\u30b3\u30fc\u30c9\u304c\u5b58\u5728\u3057\u307e\u305b\u3093
-
-PARAM_OUTSIDE_MESSAGE=\
-    &lt;message&gt; \u306e\u5916\u5074\u306b &lt;param&gt; \u304c\u3042\u308a\u307e\u3059
-
-MESSAGE_NO_KEY=\
-    &lt;message&gt; \u3067\u306f 'key' \u5c5e\u6027\u3082\u3057\u304f\u306f\u30db\u30ef\u30a4\u30c8\u30b9\u30da\u30fc\u30b9\u306e\u306a\u3044\u30dc\u30c7\u30a3\u304c\u5fc5\u8981\u3067\u3059
-
-FORMAT_NUMBER_INVALID_TYPE=\
-    &lt;formatNumber&gt; \u3067\u3001\u7121\u52b9\u306a 'type' \u5c5e\u6027\u3067\u3059: "{0}"
-
-FORMAT_NUMBER_NO_VALUE=\
-    &lt;formatNumber&gt; \u3067\u306f 'value' \u5c5e\u6027\u3082\u3057\u304f\u306f\u30db\u30ef\u30a4\u30c8\u30b9\u30da\u30fc\u30b9\u306e\u306a\u3044\u30dc\u30c7\u30a3\u304c\u5fc5\u8981\u3067\u3059
-
-FORMAT_NUMBER_PARSE_ERROR=\
-    &lt;formatNumber&gt; \u5185\u306b\u3042\u308b\u3001'value' \u5c5e\u6027\u3092 java.lang.Number \u578b\u3067\u89e3\u6790\u3067\u304d\u307e\u305b\u3093: "{0}"
-
-FORMAT_NUMBER_CURRENCY_ERROR=\
-    &lt;formatNumber&gt; \u3067\u3001\u901a\u8ca8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u30bb\u30c3\u30c8\u3067\u304d\u307e\u305b\u3093
-
-PARSE_NUMBER_INVALID_TYPE=\
-    &lt;parseNumber&gt; \u3067\u3001\u7121\u52b9\u306a 'type' \u5c5e\u6027\u3067\u3059: "{0}"
-
-PARSE_NUMBER_NO_VALUE=\
-    &lt;parseNumber&gt; \u3067\u306f 'value' \u5c5e\u6027\u3082\u3057\u304f\u306f\u30db\u30ef\u30a4\u30c8\u30b9\u30da\u30fc\u30b9\u306e\u306a\u3044\u30dc\u30c7\u30a3\u304c\u5fc5\u8981\u3067\u3059
-
-PARSE_NUMBER_NO_PARSE_LOCALE=\
-    &lt;parseNumber&gt; \u5185\u3067\u3001\u89e3\u6790\u3055\u308c\u305f\u30ed\u30b1\u30fc\u30eb\u3092\u78ba\u5b9a\u3067\u304d\u307e\u305b\u3093
-
-PARSE_NUMBER_PARSE_ERROR=\
-    &lt;parseNumber&gt; \u5185\u306b\u3042\u308b\u3001'value' \u5c5e\u6027\u3092\u89e3\u6790\u3067\u304d\u307e\u305b\u3093: "{0}"
-
-FORMAT_DATE_INVALID_TYPE=\
-    &lt;formatDate&gt; \u3067\u3001\u7121\u52b9\u306a 'type' \u5c5e\u6027\u3067\u3059: "{0}"
-
-FORMAT_DATE_BAD_TIMEZONE=\
-    &lt;formatDate&gt; \u3067\u306f\u3001'timeZone' \u306f java.lang.String \u578b\u3082\u3057\u304f\u306f java.util.TimeZone \u578b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093
-
-FORMAT_DATE_INVALID_DATE_STYLE=\
-    &lt;formatDate&gt; \u3067\u3001\u7121\u52b9\u306a 'dateStyle' \u5c5e\u6027\u3067\u3059: "{0}"
-
-FORMAT_DATE_INVALID_TIME_STYLE=\
-    &lt;formatDate&gt; \u3067\u3001\u7121\u52b9\u306a 'timeStyle' \u5c5e\u6027\u3067\u3059: "{0}"
-
-PARSE_DATE_INVALID_TYPE=\
-    &lt;parseDate&gt; \u3067\u3001\u7121\u52b9\u306a 'type' \u5c5e\u6027\u3067\u3059: "{0}"
-
-PARSE_DATE_BAD_TIMEZONE=\
-    &lt;parseDate&gt; \u5185\u306b\u3042\u308b\u3001'timeZone' \u306f java.lang.String \u578b\u3082\u3057\u304f\u306f java.util.TimeZone \u578b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093
-
-PARSE_DATE_INVALID_DATE_STYLE=\
-    &lt;parseDate&gt; \u3067\u3001\u7121\u52b9\u306a 'dateStyle' \u5c5e\u6027\u3067\u3059: "{0}"
-
-PARSE_DATE_INVALID_TIME_STYLE=\
-    &lt;parseDate&gt; \u3067\u3001\u7121\u52b9\u306a 'timeStyle' \u5c5e\u6027\u3067\u3059: "{0}"
-
-PARSE_DATE_NO_VALUE=\
-    &lt;parseDate&gt; \u3067\u306f 'value' \u5c5e\u6027\u3082\u3057\u304f\u306f\u30db\u30ef\u30a4\u30c8\u30b9\u30da\u30fc\u30b9\u306e\u306a\u3044\u30dc\u30c7\u30a3\u304c\u5fc5\u8981\u3067\u3059
-
-PARSE_DATE_PARSE_ERROR=\
-    &lt;parseDate&gt; \u5185\u306b\u3042\u308b\u3001'value' \u5c5e\u6027\u3092\u89e3\u6790\u3067\u304d\u307e\u305b\u3093: "{0}"
-
-PARSE_DATE_NO_PARSE_LOCALE=\
-    &lt;parseDate&gt; \u5185\u3067\u3001\u89e3\u6790\u3055\u308c\u305f\u30ed\u30b1\u30fc\u30eb\u3092\u78ba\u5b9a\u3067\u304d\u307e\u305b\u3093
-
-# SQL
-
-DRIVER_INVALID_CLASS=\
-    &lt;driver&gt; \u3067\u3001\u7121\u52b9\u306a\u30c9\u30e9\u30a4\u30d0\u30fb\u30af\u30e9\u30b9\u540d\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f: "{0}"
-
-DATASOURCE_INVALID=\
-    DataSource \u304c\u7121\u52b9\u3067\u3042\u308b\u305f\u3081\u3001Connection \u3092\u53d6\u5f97\u3067\u304d\u307e\u305b\u3093: "{0}"
-
-JDBC_PARAM_COUNT=\
-    \u6307\u5b9a\u3057\u305f JDBC \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u304c\u7121\u52b9\u3067\u3059
-
-PARAM_BAD_VALUE=\
-    \u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u6307\u5b9a\u3057\u305f\u5024\u304c\u7121\u52b9\u3067\u3042\u308b\u304b\u7bc4\u56f2\u5916\u3067\u3059
-
-TRANSACTION_NO_SUPPORT=\
-    &lt;transaction&gt; \u5185\u306b\u3042\u308b\u3001DataSource \u306f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093
-
-TRANSACTION_COMMIT_ERROR=\
-    &lt;transaction&gt; \u306b\u304a\u3044\u3066\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30b3\u30df\u30c3\u30c8\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: "{0}"
-
-TRANSACTION_INVALID_ISOLATION=\
-    &lt;transaction&gt; \u306b\u304a\u3044\u3066\u3001\u7121\u52b9\u306a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u906e\u65ad\u30ec\u30d9\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f
-
-NOT_SUPPORTED=\
-    \u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093
-
-ERROR_GET_CONNECTION=\
-    Connection \u306e\u53d6\u5f97\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: "{0}"
-
-ERROR_NESTED_DATASOURCE=\
-    &lt;transaction&gt; \u306e\u4e2d\u3067\u5165\u308c\u5b50\u3068\u306a\u3063\u305f\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u4e0d\u6b63\u3067\u3059
-
-SQL_PARAM_OUTSIDE_PARENT=\
-    &lt;param&gt; \u307e\u305f\u306f &lt;dateParam&gt; \u306f &lt;query&gt; \u3082\u3057\u304f\u306f &lt;update&gt; \u306e\u3088\u3046\u306b SQLExecutionTag \u547d\u4ee4\u306e\u4e0b\u4f4d\u30bf\u30b0\u3067\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093
-
-SQL_NO_STATEMENT=\
-    SQL \u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093
-
-SQL_PROCESS_ERROR=\
-    SQL \u306e\u51e6\u7406\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: "{0}"
-
-SQL_DATASOURCE_INVALID_TYPE=\
-    'dataSource' \u304c String \u578b \u3067\u3082 javax.sql.DataSource \u578b\u306e\u3069\u3061\u3089\u3067\u3082\u3042\u308a\u307e\u305b\u3093
-
-SQL_DATASOURCE_NULL=\
-    'dataSource' \u304c null \u3067\u3059
-
-SQL_MAXROWS_PARSE_ERROR=\
-    'javax.servlet.jsp.jstl.sql.maxRows' \u306e\u74b0\u5883\u8a2d\u5b9a\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: "{0}"
-
-SQL_MAXROWS_INVALID=\
-    'javax.servlet.jsp.jstl.sql.maxRows' \u3067\u74b0\u5883\u8a2d\u5b9a\u3057\u305f\u5024\u306f Integer \u578b \u3067\u3082 String \u578b\u306e\u3069\u3061\u3089\u3067\u3082\u3042\u308a\u307e\u305b\u3093
-
-SQL_DATE_PARAM_INVALID_TYPE=\
-    &lt;dateParam&gt; \u3067\u3001\u7121\u52b9\u306a 'type' \u5c5e\u6027\u3067\u3059: "{0}"
-
-# XML
-
-FOREACH_NOT_NODESET=\
-    \u30ce\u30fc\u30c9\u30bb\u30c3\u30c8\u306e\u8fd4\u3055\u308c\u306a\u3044 XPath \u8868\u73fe\u306b\u5bfe\u3057 &lt;forEach&gt; \u306f\u53cd\u5fa9\u51e6\u7406\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093
-
-PARAM_NO_VALUE=\
-    &lt;param&gt; \u3067\u306f 'value' \u5c5e\u6027\u3082\u3057\u304f\u306f\u30db\u30ef\u30a4\u30c8\u30b9\u30da\u30fc\u30b9\u306e\u306a\u3044\u30dc\u30c7\u30a3\u304c\u5fc5\u8981\u3067\u3059
-
-PARAM_OUTSIDE_TRANSFORM=\
-    &lt;transform&gt; \u306e\u5916\u5074\u306b &lt;param&gt; \u304c\u3042\u308a\u307e\u3059
-
-PARSE_INVALID_SOURCE=\
-    &lt;parse&gt; \u306b\u5bfe\u3057 'xml' \u5c5e\u6027\u3068\u3057\u3066\u4f9b\u7d66\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8a8d\u8b58\u3067\u304d\u307e\u305b\u3093
-
-PARSE_NO_SAXTRANSFORMER=\
-    &lt;parse&gt; \u306b\u5bfe\u3057\u30d5\u30a3\u30eb\u30bf\u30fc\u304c\u4f9b\u7d66\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e TransformerFactory \u304c SAX \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093
-
-TRANSFORM_NO_TRANSFORMER=\
-    &lt;transform&gt; \u306b\u5bfe\u3057 XSLT \u30b9\u30bf\u30a4\u30eb\u30b7\u30fc\u30c8\u304c\u901a\u308a\u307e\u305b\u3093
-
-TRANSFORM_SOURCE_INVALID_LIST=\
-    &lt;transform&gt; \u5185\u3067 'xml' \u5c5e\u6027\u306e\u51e6\u7406\u4e2d\u306b\u7121\u52b9\u306a java.util.List \u3068\u906d\u9047\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001&lt;transform&gt; \u5185\u306e 'xml' \u5c5e\u6027\u306b\u5bfe\u3057\u3066 1 \u4ee5\u4e0a\u306e\u30ce\u30fc\u30c9\u3067\u69cb\u6210\u3055\u308c\u308b\u30ce\u30fc\u30c9\u30bb\u30c3\u30c8\u3092\u901a\u3055\u306a\u3044\u5834\u5408\u306b\u767a\u751f\u3059\u308b\u5178\u578b\u7684\u306a\u30a8\u30e9\u30fc\u3067\u3059
-
-TRANSFORM_SOURCE_UNRECOGNIZED=\
-    &lt;transform&gt; \u5185\u3067 'xml' \u5c5e\u6027\u306e\u51e6\u7406\u4e2d\u306b\u672a\u77e5\u306e\u578b\u3068\u906d\u9047\u3057\u307e\u3057\u305f
-
-TRANSFORM_XSLT_UNRECOGNIZED=\
-    &lt;transform&gt; \u5185\u3067 'xslt' \u5c5e\u6027\u306e\u51e6\u7406\u4e2d\u306b\u672a\u77e5\u306e\u578b\u3068\u906d\u9047\u3057\u307e\u3057\u305f
-
-UNABLE_TO_RESOLVE_ENTITY=\
-    \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u53c2\u7167\u3092\u89e3\u6c7a\u3067\u304d\u307e\u305b\u3093: "{0}"
-
-#########################################################################
-# JSTL core TLV messages
-#########################################################################
-
-# Parameters
-
-TLV_PARAMETER_ERROR=\
-    TLD \u306b\u3088\u308b\u3068 "{0}" \u6709\u52b9\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u304c\u7121\u52b9\u3067\u3059
-
-# Generic errors
-
-TLV_ILLEGAL_BODY=\
-    \u5c5e\u6027\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f\u304c\u3001"{0}" \u30bf\u30b0\u3067\u4e0d\u6b63\u306a\u30dc\u30c7\u30a3\u306b\u906d\u9047\u3057\u307e\u3057\u305f
-
-TLV_MISSING_BODY=\
-    \u5c5e\u6027\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f\u304c\u3001\u30dc\u30c7\u30a3\u306f "{0}" \u30bf\u30b0\u306e\u4e2d\u306b\u5fc5\u8981\u3067\u3059
-
-TLV_ILLEGAL_CHILD_TAG=\
-    "{0}:{1}" \u30bf\u30b0\u306b\u4e0d\u6b63\u306a\u4e0b\u4f4d\u30bf\u30b0\u304c\u3042\u308a\u307e\u3059: "{2}" \u30bf\u30b0
-
-TLV_ILLEGAL_TEXT_BODY=\
-    "{0}:{1}" \u30bf\u30b0\u306e\u4e2d\u306b\u4e0d\u6b63\u306a\u30c6\u30ad\u30b9\u30c8\u304c\u3042\u308a\u307e\u3059: "{2}...".
-
-TLV_INVALID_ATTRIBUTE=\
-    "{1}" \u306b\u7121\u52b9\u306a "{0}" \u5c5e\u6027\u304c\u3042\u308a\u307e\u3059: "{2}"
-
-TLV_ILLEGAL_ORPHAN=\
-    \u9069\u5207\u306a\u89aa\u30bf\u30b0\u306e\u5916\u5074\u306b\u3042\u308b "{0}" \u30bf\u30b0\u306e\u4f7f\u3044\u65b9\u306f\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093
-
-TLV_PARENT_WITHOUT_SUBTAG=\
-    \u4e0b\u4f4d\u3067\u3042\u308b "{1}" \u30bf\u30b0\u306e\u306a\u3044 "{0}" \u306f\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093
-
-# Errors customized to particular tags (sort of)  :-)
-
-TLV_ILLEGAL_ORDER=\
-    "{1}:{3}" \u30bf\u30b0\u3067\u306f\u3001"{1}:{2}" \u30bf\u30b0\u306e\u5f8c\u306b\u3042\u308b "{0}" \u306f\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093
-
-TLV_ILLEGAL_PARAM=\
-    "{0}:{2} {3}='...'" \u30bf\u30b0\u306e\u4e2d\u306b\u3042\u308b "{0}:{1}" \u30bf\u30b0\u306f\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093
-
-TLV_DANGLING_SCOPE=\
-    "{0}" \u30bf\u30b0\u3067 'var' \u304c\u5b58\u5728\u3057\u306a\u3044\u306e\u306b 'scope' \u5c5e\u6027\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093
-
-TLV_EMPTY_VAR=\
-    "{0}" \u30bf\u30b0\u3067 'var' \u5c5e\u6027\u304c\u7a7a\u3067\u3059
-
-SET_NO_SETTER_METHOD=\
-    &lt;set&gt; \u306b\u304a\u3044\u3066\u3001\u30d7\u30ed\u30d1\u30c6\u30a3 "{0}" \u306b\u5bfe\u5fdc\u3059\u308b setter \u30e1\u30bd\u30c3\u30c9\u304c\u5b58\u5728\u3057\u307e\u305b\u3093
-
-IMPORT_ABS_ERROR=Problem accessing the absolute URL "{0}". {1}
-
-XPATH_ERROR_EVALUATING_EXPR=Error evaluating XPath expression "{0}": {1}
-
-XPATH_ILLEGAL_ARG_EVALUATING_EXPR=Illegal argument evaluating XPath expression "{0}": {1}
-
-XPATH_ERROR_XOBJECT=Error accessing data in XObject: {0}
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/SetDateTimeZoneSupport.java b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/SetDateTimeZoneSupport.java
deleted file mode 100644
index 6148b28b8..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/SetDateTimeZoneSupport.java
+++ /dev/null
@@ -1,93 +0,0 @@
-/*
- * Copyright 1999-2004 The Apache Software Foundation.
- * Modifications, Copyright 2005 Stephen Colebourne
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.joda.time.contrib.jsptag;
-
-import javax.servlet.jsp.JspException;
-import javax.servlet.jsp.PageContext;
-import javax.servlet.jsp.jstl.core.Config;
-import javax.servlet.jsp.tagext.TagSupport;
-
-import org.joda.time.DateTimeZone;
-
-/**
- * Support for tag handlers for &lt;setDateTimeZone&gt;.
- * 
- * @author Jan Luehe
- * @author Jim Newsham
- */
-public abstract class SetDateTimeZoneSupport extends TagSupport {
-
-    /** The value attribute. */
-    protected Object value;
-    /** The scope attribute. */
-    private int scope;
-    /** The var attribute. */
-    private String var;
-
-    /**
-     * Constructor.
-     */
-    public SetDateTimeZoneSupport() {
-        super();
-        init();
-    }
-
-    // resets local state
-    private void init() {
-        value = null;
-        var = null;
-        scope = PageContext.PAGE_SCOPE;
-    }
-
-    public void setScope(String scope) {
-        this.scope = Util.getScope(scope);
-    }
-
-    public void setVar(String var) {
-        this.var = var;
-    }
-
-    public int doEndTag() throws JspException {
-        DateTimeZone dateTimeZone = null;
-        if (value == null) {
-            dateTimeZone = DateTimeZone.UTC;
-        } else if (value instanceof String) {
-            try {
-                dateTimeZone = DateTimeZone.forID((String) value);
-            } catch (IllegalArgumentException iae) {
-                dateTimeZone = DateTimeZone.UTC;
-            }
-        } else {
-            dateTimeZone = (DateTimeZone) value;
-        }
-
-        if (var != null) {
-            pageContext.setAttribute(var, dateTimeZone, scope);
-        } else {
-            Config.set(pageContext, DateTimeZoneSupport.FMT_TIME_ZONE,
-                    dateTimeZone, scope);
-        }
-
-        return EVAL_PAGE;
-    }
-
-    // Releases any resources we may have (or inherit)
-    public void release() {
-        init();
-    }
-
-}
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/SetDateTimeZoneTag.java b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/SetDateTimeZoneTag.java
deleted file mode 100644
index 4fd804f2f..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/SetDateTimeZoneTag.java
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Copyright 1999-2004 The Apache Software Foundation.
- * Modifications, Copyright 2005 Stephen Colebourne
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.joda.time.contrib.jsptag;
-
-import javax.servlet.jsp.JspTagException;
-
-/**
- * <p>
- * A handler for &lt;setDateTimeZone&gt; that supports rtexprvalue-based
- * attributes.
- * </p>
- * 
- * @author Jan Luehe
- * @author Jim Newsham
- */
-public class SetDateTimeZoneTag extends SetDateTimeZoneSupport {
-
-    /**
-     * Sets the value attribute.
-     * 
-     * @param value  the value
-     */
-    public void setValue(Object value) throws JspTagException {
-        this.value = value;
-    }
-
-}
diff --git a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Util.java b/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Util.java
deleted file mode 100644
index 8740c8de5..000000000
--- a/JodaTimeContrib/jsptags/src/java/org/joda/time/contrib/jsptag/Util.java
+++ /dev/null
@@ -1,636 +0,0 @@
-/*
- * Copyright 1999-2004 The Apache Software Foundation.
- * Modifications, Copyright 2005 Stephen Colebourne
- * 
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- *      http://www.apache.org/licenses/LICENSE-2.0
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.joda.time.contrib.jsptag;
-
-import java.text.DateFormat;
-import java.text.NumberFormat;
-import java.util.Enumeration;
-import java.util.Locale;
-import java.util.MissingResourceException;
-import java.util.ResourceBundle;
-import java.util.Vector;
-
-import javax.servlet.ServletResponse;
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.jsp.PageContext;
-import javax.servlet.jsp.jstl.core.Config;
-import javax.servlet.jsp.jstl.fmt.LocalizationContext;
-import javax.servlet.jsp.tagext.Tag;
-
-/**
- * <p>
- * Utilities in support of tag-handler classes.
- * </p>
- * 
- * @author Jan Luehe
- * @author Jim Newsham
- */
-public class Util {
-
-    private static final String REQUEST = "request";
-
-    private static final String SESSION = "session";
-
-    private static final String APPLICATION = "application";
-
-    private static final char HYPHEN = '-';
-
-    private static final char UNDERSCORE = '_';
-
-    private static final Locale EMPTY_LOCALE = new Locale("", "");
-
-    static final String REQUEST_CHAR_SET = "javax.servlet.jsp.jstl.fmt.request.charset";
-
-    /**
-     * Converts the given string description of a scope to the corresponding
-     * PageContext constant.
-     * 
-     * The validity of the given scope has already been checked by the
-     * appropriate TLV.
-     * 
-     * @param scope String description of scope
-     * 
-     * @return PageContext constant corresponding to given scope description
-     */
-    public static int getScope(String scope) {
-        int ret = PageContext.PAGE_SCOPE; // default
-
-        if (REQUEST.equalsIgnoreCase(scope)) {
-            ret = PageContext.REQUEST_SCOPE;
-        } else if (SESSION.equalsIgnoreCase(scope)) {
-            ret = PageContext.SESSION_SCOPE;
-        } else if (APPLICATION.equalsIgnoreCase(scope)) {
-            ret = PageContext.APPLICATION_SCOPE;
-        }
-        return ret;
-    }
-
-    /**
-     * HttpServletRequest.getLocales() returns the server's default locale if
-     * the request did not specify a preferred language. We do not want this
-     * behavior, because it prevents us from using the fallback locale. We
-     * therefore need to return an empty Enumeration if no preferred locale has
-     * been specified. This way, the logic for the fallback locale will be able
-     * to kick in.
-     */
-    public static Enumeration getRequestLocales(HttpServletRequest request) {
-        Enumeration values = request.getHeaders("accept-language");
-        if (values.hasMoreElements()) {
-            // At least one "accept-language". Simply return
-            // the enumeration returned by request.getLocales().
-            // System.out.println("At least one accept-language");
-            return request.getLocales();
-        } else {
-            // No header for "accept-language". Simply return
-            // the empty enumeration.
-            // System.out.println("No accept-language");
-            return values;
-        }
-    }
-
-    /**
-     * See parseLocale(String, String) for details.
-     */
-    public static Locale parseLocale(String locale) {
-        return parseLocale(locale, null);
-    }
-
-    /**
-     * Parses the given locale string into its language and (optionally) country
-     * components, and returns the corresponding <tt>java.util.Locale</tt>
-     * object.
-     * 
-     * If the given locale string is null or empty, the runtime's default locale
-     * is returned.
-     * 
-     * @param locale the locale string to parse
-     * @param variant the variant
-     * 
-     * @return <tt>java.util.Locale</tt> object corresponding to the given
-     * locale string, or the runtime's default locale if the locale string is
-     * null or empty
-     * 
-     * @throws IllegalArgumentException if the given locale does not have a
-     * language component or has an empty country component
-     */
-    public static Locale parseLocale(String locale, String variant) {
-        Locale ret = null;
-        String language = locale;
-        String country = null;
-        int index = -1;
-
-        if (((index = locale.indexOf(HYPHEN)) > -1)
-                || ((index = locale.indexOf(UNDERSCORE)) > -1)) {
-            language = locale.substring(0, index);
-            country = locale.substring(index + 1);
-        }
-
-        if ((language == null) || (language.length() == 0)) {
-            throw new IllegalArgumentException(Resources
-                    .getMessage("LOCALE_NO_LANGUAGE"));
-        }
-
-        if (country == null) {
-            if (variant != null) {
-                ret = new Locale(language, "", variant);
-            } else {
-                ret = new Locale(language, "");
-            }
-        } else if (country.length() > 0) {
-            if (variant != null) {
-                ret = new Locale(language, country, variant);
-            } else {
-                ret = new Locale(language, country);
-            }
-        } else {
-            throw new IllegalArgumentException(Resources
-                    .getMessage("LOCALE_EMPTY_COUNTRY"));
-        }
-
-        return ret;
-    }
-
-    /**
-     * Stores the given locale in the response object of the given page context,
-     * and stores the locale's associated charset in the
-     * javax.servlet.jsp.jstl.fmt.request.charset session attribute, which may
-     * be used by the <requestEncoding> action in a page invoked by a form
-     * included in the response to set the request charset to the same as the
-     * response charset (this makes it possible for the container to decode the
-     * form parameter values properly, since browsers typically encode form
-     * field values using the response's charset).
-     * 
-     * @param pc the page context whose response object is assigned the
-     * given locale
-     * @param locale the response locale
-     */
-    static void setResponseLocale(PageContext pc, Locale locale) {
-        // set response locale
-        ServletResponse response = pc.getResponse();
-        response.setLocale(locale);
-
-        // get response character encoding and store it in session attribute
-        if (pc.getSession() != null) {
-            try {
-                pc.setAttribute(REQUEST_CHAR_SET, response
-                        .getCharacterEncoding(), PageContext.SESSION_SCOPE);
-            } catch (IllegalStateException ex) {
-                // invalidated session ignored
-            }
-        }
-    }
-
-    /**
-     * Returns the formatting locale to use with the given formatting action in
-     * the given page.
-     * 
-     * @param pc The page context containing the formatting action @param
-     * fromTag The formatting action @param format <tt>true</tt> if the
-     * formatting action is of type <formatXXX> (as opposed to <parseXXX>), and
-     * <tt>false</tt> otherwise (if set to <tt>true</tt>, the formatting
-     * locale that is returned by this method is used to set the response
-     * locale).
-     * 
-     * @param avail the array of available locales
-     * 
-     * @return the formatting locale to use
-     */
-    static Locale getFormattingLocale(PageContext pc, Tag fromTag,
-            boolean format, Locale[] avail) {
-
-        LocalizationContext locCtxt = null;
-
-        /*
-         * // Get formatting locale from enclosing <fmt:bundle> Tag parent =
-         * findAncestorWithClass(fromTag, BundleSupport.class); if (parent !=
-         * null) { /* use locale from localization context established by parent
-         * <fmt:bundle> action, unless that locale is null / locCtxt =
-         * ((BundleSupport) parent).getLocalizationContext(); if
-         * (locCtxt.getLocale() != null) { if (format) { setResponseLocale(pc,
-         * locCtxt.getLocale()); } return locCtxt.getLocale(); } }
-         */
-
-        // Use locale from default I18N localization context, unless it is null
-        if ((locCtxt = getLocalizationContext(pc)) != null) {
-            if (locCtxt.getLocale() != null) {
-                if (format) {
-                    setResponseLocale(pc, locCtxt.getLocale());
-                }
-                return locCtxt.getLocale();
-            }
-        }
-
-        /*
-         * Establish formatting locale by comparing the preferred locales (in
-         * order of preference) against the available formatting locales, and
-         * determining the best matching locale.
-         */
-        Locale match = null;
-        Locale pref = getLocale(pc, Config.FMT_LOCALE);
-        if (pref != null) {
-            // Preferred locale is application-based
-            match = findFormattingMatch(pref, avail);
-        } else {
-            // Preferred locales are browser-based
-            match = findFormattingMatch(pc, avail);
-        }
-        if (match == null) {
-            // Use fallback locale.
-            pref = getLocale(pc, Config.FMT_FALLBACK_LOCALE);
-            if (pref != null) {
-                match = findFormattingMatch(pref, avail);
-            }
-        }
-        if (format && (match != null)) {
-            setResponseLocale(pc, match);
-        }
-
-        return match;
-    }
-
-    /**
-     * Setup the available formatting locales that will be used by
-     * getFormattingLocale(PageContext).
-     */
-    static Locale[] availableFormattingLocales;
-    static {
-        Locale[] dateLocales = DateFormat.getAvailableLocales();
-        Locale[] numberLocales = NumberFormat.getAvailableLocales();
-        Vector vec = new Vector(dateLocales.length);
-        for (int i = 0; i < dateLocales.length; i++) {
-            for (int j = 0; j < numberLocales.length; j++) {
-                if (dateLocales[i].equals(numberLocales[j])) {
-                    vec.add(dateLocales[i]);
-                    break;
-                }
-            }
-        }
-        availableFormattingLocales = new Locale[vec.size()];
-        availableFormattingLocales = (Locale[]) vec
-                .toArray(availableFormattingLocales);
-        /*
-         * for (int i=0; i<availableFormattingLocales.length; i++) {
-         * System.out.println("AvailableLocale[" + i + "] " +
-         * availableFormattingLocales[i]); }
-         */
-    }
-
-    /**
-     * Returns the formatting locale to use when <fmt:message> is used with a
-     * locale-less localization context.
-     * 
-     * @param pc The page context containing the formatting action @return the
-     * formatting locale to use
-     */
-    static Locale getFormattingLocale(PageContext pc) {
-        /*
-         * Establish formatting locale by comparing the preferred locales (in
-         * order of preference) against the available formatting locales, and
-         * determining the best matching locale.
-         */
-        Locale match = null;
-        Locale pref = getLocale(pc, Config.FMT_LOCALE);
-        if (pref != null) {
-            // Preferred locale is application-based
-            match = findFormattingMatch(pref, availableFormattingLocales);
-        } else {
-            // Preferred locales are browser-based
-            match = findFormattingMatch(pc, availableFormattingLocales);
-        }
-        if (match == null) {
-            // Use fallback locale.
-            pref = getLocale(pc, Config.FMT_FALLBACK_LOCALE);
-            if (pref != null) {
-                match = findFormattingMatch(pref, availableFormattingLocales);
-            }
-        }
-        if (match != null) {
-            setResponseLocale(pc, match);
-        }
-
-        return match;
-    }
-
-    /**
-     * Returns the locale specified by the named scoped attribute or context
-     * configuration parameter.
-     * 
-     * <p> The named scoped attribute is searched in the page, request, session
-     * (if valid), and application scope(s) (in this order). If no such
-     * attribute exists in any of the scopes, the locale is taken from the named
-     * context configuration parameter.
-     * 
-     * @param pageContext the page in which to search for the named scoped
-     * attribute or context configuration parameter @param name the name of the
-     * scoped attribute or context configuration parameter
-     * 
-     * @return the locale specified by the named scoped attribute or context
-     * configuration parameter, or <tt>null</tt> if no scoped attribute or
-     * configuration parameter with the given name exists
-     */
-    static Locale getLocale(PageContext pageContext, String name) {
-        Locale loc = null;
-
-        Object obj = Config.find(pageContext, name);
-        if (obj != null) {
-            if (obj instanceof Locale) {
-                loc = (Locale) obj;
-            } else {
-                loc = parseLocale((String) obj);
-            }
-        }
-
-        return loc;
-    }
-
-    // *********************************************************************
-    // Private utility methods
-
-    /**
-     * Determines the client's preferred locales from the request, and compares
-     * each of the locales (in order of preference) against the available
-     * locales in order to determine the best matching locale.
-     * 
-     * @param pageContext Page containing the formatting action @param avail
-     * Available formatting locales
-     * 
-     * @return Best matching locale, or <tt>null</tt> if no match was found
-     */
-    private static Locale findFormattingMatch(PageContext pageContext,
-            Locale[] avail) {
-        Locale match = null;
-        for (Enumeration enum_ = Util
-                .getRequestLocales((HttpServletRequest) pageContext
-                        .getRequest()); enum_.hasMoreElements();) {
-            Locale locale = (Locale) enum_.nextElement();
-            match = findFormattingMatch(locale, avail);
-            if (match != null) {
-                break;
-            }
-        }
-
-        return match;
-    }
-
-    /**
-     * Returns the best match between the given preferred locale and the given
-     * available locales.
-     * 
-     * The best match is given as the first available locale that exactly
-     * matches the given preferred locale ("exact match"). If no exact match
-     * exists, the best match is given to an available locale that meets the
-     * following criteria (in order of priority): - available locale's variant
-     * is empty and exact match for both language and country - available
-     * locale's variant and country are empty, and exact match for language.
-     * 
-     * @param pref the preferred locale @param avail the available formatting
-     * locales
-     * 
-     * @return Available locale that best matches the given preferred locale, or
-     * <tt>null</tt> if no match exists
-     */
-    private static Locale findFormattingMatch(Locale pref, Locale[] avail) {
-        Locale match = null;
-        boolean langAndCountryMatch = false;
-        for (int i = 0; i < avail.length; i++) {
-            if (pref.equals(avail[i])) {
-                // Exact match
-                match = avail[i];
-                break;
-            } else if (!"".equals(pref.getVariant())
-                    && "".equals(avail[i].getVariant())
-                    && pref.getLanguage().equals(avail[i].getLanguage())
-                    && pref.getCountry().equals(avail[i].getCountry())) {
-                // Language and country match; different variant
-                match = avail[i];
-                langAndCountryMatch = true;
-            } else if (!langAndCountryMatch
-                    && pref.getLanguage().equals(avail[i].getLanguage())
-                    && ("".equals(avail[i].getCountry()))) {
-                // Language match
-                if (match == null) {
-                    match = avail[i];
-                }
-            }
-        }
-        return match;
-    }
-
-    /**
-     * Gets the default I18N localization context.
-     * 
-     * @param pc Page in which to look up the default I18N localization context
-     */
-    public static LocalizationContext getLocalizationContext(PageContext pc) {
-        LocalizationContext locCtxt = null;
-
-        Object obj = Config.find(pc, Config.FMT_LOCALIZATION_CONTEXT);
-        if (obj == null) {
-            return null;
-        }
-
-        if (obj instanceof LocalizationContext) {
-            locCtxt = (LocalizationContext) obj;
-        } else {
-            // localization context is a bundle basename
-            locCtxt = getLocalizationContext(pc, (String) obj);
-        }
-
-        return locCtxt;
-    }
-
-    /**
-     * Gets the resource bundle with the given base name, whose locale is
-     * determined as follows:
-     * 
-     * Check if a match exists between the ordered set of preferred locales and
-     * the available locales, for the given base name. The set of preferred
-     * locales consists of a single locale (if the
-     * <tt>javax.servlet.jsp.jstl.fmt.locale</tt> configuration setting is
-     * present) or is equal to the client's preferred locales determined from
-     * the client's browser settings.
-     * 
-     * <p>
-     * If no match was found in the previous step, check if a match exists
-     * between the fallback locale (given by the
-     * <tt>javax.servlet.jsp.jstl.fmt.fallbackLocale</tt> configuration
-     * setting) and the available locales, for the given base name.
-     * 
-     * @param pc Page in which the resource bundle with the given base
-     * name is requested
-     * @param basename Resource bundle base name
-     * 
-     * @return Localization context containing the resource bundle with the
-     * given base name and the locale that led to the resource bundle match, or
-     * the empty localization context if no resource bundle match was found
-     */
-    public static LocalizationContext getLocalizationContext(PageContext pc,
-            String basename) {
-        LocalizationContext locCtxt = null;
-        ResourceBundle bundle = null;
-
-        if ((basename == null) || basename.equals("")) {
-            return new LocalizationContext();
-        }
-
-        // Try preferred locales
-        Locale pref = getLocale(pc, Config.FMT_LOCALE);
-        if (pref != null) {
-            // Preferred locale is application-based
-            bundle = findMatch(basename, pref);
-            if (bundle != null) {
-                locCtxt = new LocalizationContext(bundle, pref);
-            }
-        } else {
-            // Preferred locales are browser-based
-            locCtxt = findMatch(pc, basename);
-        }
-
-        if (locCtxt == null) {
-            // No match found with preferred locales, try using fallback locale
-            pref = getLocale(pc, Config.FMT_FALLBACK_LOCALE);
-            if (pref != null) {
-                bundle = findMatch(basename, pref);
-                if (bundle != null) {
-                    locCtxt = new LocalizationContext(bundle, pref);
-                }
-            }
-        }
-
-        if (locCtxt == null) {
-            // try using the root resource bundle with the given basename
-            try {
-                bundle = ResourceBundle.getBundle(basename, EMPTY_LOCALE,
-                        Thread.currentThread().getContextClassLoader());
-                if (bundle != null) {
-                    locCtxt = new LocalizationContext(bundle, null);
-                }
-            } catch (MissingResourceException mre) {
-                // do nothing
-            }
-        }
-
-        if (locCtxt != null) {
-            // set response locale
-            if (locCtxt.getLocale() != null) {
-                setResponseLocale(pc, locCtxt.getLocale());
-            }
-        } else {
-            // create empty localization context
-            locCtxt = new LocalizationContext();
-        }
-
-        return locCtxt;
-    }
-
-    /**
-     * Determines the client's preferred locales from the request, and compares
-     * each of the locales (in order of preference) against the available
-     * locales in order to determine the best matching locale.
-     * 
-     * @param pageContext the page in which the resource bundle with the given
-     * base name is requested @param basename the resource bundle's base name
-     * 
-     * @return the localization context containing the resource bundle with the
-     * given base name and best matching locale, or <tt>null</tt> if no
-     * resource bundle match was found
-     */
-    private static LocalizationContext findMatch(PageContext pageContext,
-            String basename) {
-        LocalizationContext locCtxt = null;
-
-        // Determine locale from client's browser settings.
-        for (Enumeration enum_ = Util
-                .getRequestLocales((HttpServletRequest) pageContext
-                        .getRequest()); enum_.hasMoreElements();) {
-            Locale pref = (Locale) enum_.nextElement();
-            ResourceBundle match = findMatch(basename, pref);
-            if (match != null) {
-                locCtxt = new LocalizationContext(match, pref);
-                break;
-            }
-        }
-
-        return locCtxt;
-    }
-
-    /**
-     * Gets the resource bundle with the given base name and preferred locale.
-     * 
-     * This method calls java.util.ResourceBundle.getBundle(), but ignores its
-     * return value unless its locale represents an exact or language match with
-     * the given preferred locale.
-     * 
-     * @param basename the resource bundle base name @param pref the preferred
-     * locale
-     * 
-     * @return the requested resource bundle, or <tt>null</tt> if no resource
-     * bundle with the given base name exists or if there is no exact- or
-     * language-match between the preferred locale and the locale of the bundle
-     * returned by java.util.ResourceBundle.getBundle().
-     */
-    private static ResourceBundle findMatch(String basename, Locale pref) {
-        ResourceBundle match = null;
-
-        try {
-            ResourceBundle bundle = ResourceBundle.getBundle(basename, pref,
-                    Thread.currentThread().getContextClassLoader());
-            Locale avail = bundle.getLocale();
-            if (pref.equals(avail)) {
-                // Exact match
-                match = bundle;
-            } else {
-                /*
-                 * We have to make sure that the match we got is for the
-                 * specified locale. The way ResourceBundle.getBundle() works,
-                 * if a match is not found with (1) the specified locale, it
-                 * tries to match with (2) the current default locale as
-                 * returned by Locale.getDefault() or (3) the root resource
-                 * bundle (basename). We must ignore any match that could have
-                 * worked with (2) or (3). So if an exact match is not found, we
-                 * make the following extra tests: - avail locale must be equal
-                 * to preferred locale - avail country must be empty or equal to
-                 * preferred country (the equality match might have failed on
-                 * the variant)
-                 */
-                if (pref.getLanguage().equals(avail.getLanguage())
-                        && ("".equals(avail.getCountry()) || pref.getCountry()
-                                .equals(avail.getCountry()))) {
-                    /*
-                     * Language match. By making sure the available locale does
-                     * not have a country and matches the preferred locale's
-                     * language, we rule out "matches" based on the container's
-                     * default locale. For example, if the preferred locale is
-                     * "en-US", the container's default locale is "en-UK", and
-                     * there is a resource bundle (with the requested base name)
-                     * available for "en-UK", ResourceBundle.getBundle() will
-                     * return it, but even though its language matches that of
-                     * the preferred locale, we must ignore it, because matches
-                     * based on the container's default locale are not portable
-                     * across different containers with different default
-                     * locales.
-                     */
-                    match = bundle;
-                }
-            }
-        } catch (MissingResourceException mre) {
-        }
-
-        return match;
-    }
-
-}
diff --git a/JodaTimeContrib/jsptags/xdocs/images/joda.png b/JodaTimeContrib/jsptags/xdocs/images/joda.png
deleted file mode 100644
index 435df26a39732551d2f7ed9b1fdf288be1c83875..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2919
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
Inz-Nl59h<Bq5uE@

diff --git a/JodaTimeContrib/jsptags/xdocs/images/jodatime.png b/JodaTimeContrib/jsptags/xdocs/images/jodatime.png
deleted file mode 100644
index 4d5d609868c392a2871e8f15100f4ba54b7e92b6..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2850
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
R4?N!j7N#hZS4Oy){{UxZaMAz(

diff --git a/JodaTimeContrib/jsptags/xdocs/index.xml b/JodaTimeContrib/jsptags/xdocs/index.xml
deleted file mode 100644
index 3420b8910..000000000
--- a/JodaTimeContrib/jsptags/xdocs/index.xml
+++ /dev/null
@@ -1,76 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - JSP tags - Home</title>
-  <author email="scolebourne@users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Joda Time - JSP tags">
-<p>
-<a href="/index.html">Joda-Time</a> provides a complete quality alternative
-to the JDK date and time classes.
-However, this causes issues when working with other libraries that expect
-a JDK object, such as the JSTL JSP tag library.
-</p>
-<p>
-To solve this problem, the Joda-Time JSP tags contributed project provides
-a JSTL-like set of tags that format and parse Joda-Time based date and time
-objects instead of JDK based objects.
-</p>
-<p>
-As a flavour of the tags, here's how to format a Joda-Time object in JSP:
-<source>
-  &lt;%@taglib prefix="joda" uri="http://www.joda.org/joda/time/tags" %&gt;
-  &lt;% pageContext.setAttribute("now", new org.joda.time.DateTime()); %&gt;
-  <b>&lt;joda:format value="${now}" style="SM" /&gt;</b>
-</source>
-Version 0.8 was released on 2005-08-21 -
-<a href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=161360">Download now</a>
-</p>
-</section>
-
-
-<section name="Documentation">
-<p>
-Various documentation is available:
-<ul>
-<li>The user guide and tag description - <a href="userguide.html">user guide</a></li>
-<li>The javadoc for the <a href="api-release/index.html">current release</a></li>
-<li>The javadoc for the <a href="apidocs/index.html">latest CVS</a></li>
-<!--li>A <a href="faq.html">FAQ</a> list</li-->
-<li>The <a href="http://cvs.sourceforge.net/viewcvs.py/joda-time/JodaTimeContrib/jsptags">CVS repository</a></li>
-</ul>
-</p>
-</section>
-
-
-<section name="Releases">
-<p>
-<a href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=161360">Release 0.8</a>
-is the current latest release.
-This release is a beta release and may have bugs.
-</p>
-<p>
-The dependencies are Joda-Time 1.1, the Servlet 2.4 API, the JSP 2.0 API,
-and JSTL 1.1 API.
-We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
-</p>
-</section>
-
-
-<section name="Support">
-<p>
-The Joda-Time JSP tags library was contributed to Joda-Time by Jim Newsham.
-It is based on the code at <a href="http://jakarta.apache.org/taglibs">Jakarta Taglibs</a>.
-</p>
-<p>
-For support on bugs, using the library or to volunteer please contact the <a href="mail-lists.html">mailing list</a>
-(or email direct to the list via <a href="mailto:joda-interest@lists.sourceforge.net">joda-interest@lists.sourceforge.net</a>).
-</p>
-</section>
-</body>
-</document>
diff --git a/JodaTimeContrib/jsptags/xdocs/licensecover.xml b/JodaTimeContrib/jsptags/xdocs/licensecover.xml
deleted file mode 100644
index f697b44c7..000000000
--- a/JodaTimeContrib/jsptags/xdocs/licensecover.xml
+++ /dev/null
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - JSP tags - License</title>
-  <author email="scolebourne@joda.org">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="License information">
-<p>
-Joda-Time source code is released under the business-friendly
-<a href="license.html">Apache 2.0 license</a>.
-This is the same license as <a href="http://ant.apache.org">Ant</a>,
-<a href="http://www.springframework.org">Spring</a>,
-<a href="http://tomcat.apache.org">Tomcat</a> and
-<a href="http://jakarta.apache.org">Jakarta</a>.
-</p>
-<p>
-The JSP tags contributed library is an edited version of code originally
-from <a href="http://jakarta.apache.org/taglibs">Jakarta Taglibs</a>.
-As a result, the NOTICE file contains the Apache information clause
-as well as the Joda-Time information clause as follows:
-<source>
-=============================================================================
-= NOTICE file corresponding to section 4d of the Apache License Version 2.0 =
-=============================================================================
-This product includes software developed by
-The Apache Software Foundation (http://www.apache.org/).
-This product includes software developed by
-Joda.org (http://www.joda.org/).
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTimeContrib/jsptags/xdocs/navigation.xml b/JodaTimeContrib/jsptags/xdocs/navigation.xml
deleted file mode 100644
index 3bd4f2313..000000000
--- a/JodaTimeContrib/jsptags/xdocs/navigation.xml
+++ /dev/null
@@ -1,42 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<project name="Joda Time">
-
-  <title>Joda Time</title>
-  <organizationLogo href="">Joda.org</organizationLogo>
-
-  <body>
-    <links>
-      <item name="Joda-Time" href="../../index.html"/>
-      <item name="JSP tags" href="/index.html"/>
-      <item name="Hibernate" href="../hibernate/index.html"/>
-    </links>
-    <menu name="Joda Time JSP tags">
-      <item name="Overview" href="index.html"/>
-      <item name="User guide" href="userguide.html"/>
-      <item name="Javadoc (Release)" href="/api-release/index.html"/>
-      <item name="License" href="licensecover.html"/>
-      <item name="Download" href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=161360"/>
-    </menu>
-    <menu name="Development">
-      <item name="Sourceforge" href="http://sourceforge.net/projects/joda-time/"/>
-      <item name="Mailing lists" href="mail-lists.html"/>
-      <item name="Tasks" href="tasks.html"/>
-      <item name="CVS" href="http://cvs.sourceforge.net/viewcvs.py/joda-time/JodaTimeContrib/jsptags/"/>
-      <item name="Javadoc (CVS)" href="apidocs/index.html"/>
-    </menu>
-
-    <menu name="Joda">
-      <item name="Joda home" href="http://joda.sourceforge.net"/>
-      <item name="Time" href="http://joda-time.sourceforge.net/index.html"/>
-      <item name="Beans" href="http://joda.sourceforge.net/beans.html"/>
-      <item name="Primitives" href="http://joda-primitives.sourceforge.net/index.html"/>
-    </menu>
-
-    <footer>
-      <a href="http://sourceforge.net">
-        <img src="http://sourceforge.net/sflogo.php?group_id=97367&amp;type=2" width="125" height="37" border="0" alt="SourceForge.net Logo" />
-      </a>
-    </footer>
-  </body>
-</project>
diff --git a/JodaTimeContrib/jsptags/xdocs/stylesheets/joda-theme.css b/JodaTimeContrib/jsptags/xdocs/stylesheets/joda-theme.css
deleted file mode 100644
index 5d616b279..000000000
--- a/JodaTimeContrib/jsptags/xdocs/stylesheets/joda-theme.css
+++ /dev/null
@@ -1,121 +0,0 @@
-body, td, select, input, li{
-  font-family: Helvetica, Arial, sans-serif;
-  font-size: 13px;
-  background-color: #fff;
-}
-a {
-  text-decoration: none;
-}
-a:link {
-  color:#009;
-}
-a:visited  {
-  color:#009;
-}
-a:active, a:hover {
-  text-decoration: underline;
-}
-a.externalLink, a.externalLink:link, a.externalLink:visited, a.externalLink:active, a.externalLink:hover {
-  background: url(../images/external.png) right center no-repeat;
-  padding-right: 15px;
-}
-a.newWindow, a.newWindow:link, a.newWindow:visited, a.newWindow:active, a.newWindow:hover {
-  background: url(../images/newwindow.png) right center no-repeat;
-  padding-right: 18px;
-}
-h2 {
-  font-family: Verdana, Helvetica, Arial, sans-serif;
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #999;
-  color: #006;
-  background-color: #eef;
-  font-weight:bold;
-  font-size: 16px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-h3 {
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #aaa;
-  color: #006;
-  background-color: #eee;
-  font-weight: normal;
-  font-size: 14px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-p, ul {
-  font-size: 13px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-#banner {
-  background-color: #eef;
-  border-bottom: 1px solid #aaa;
-}
-#organizationLogo img, #projectLogo img {
-  border: 1px solid #999;
-}
-#breadcrumbs {
-  padding-top: 1px;
-  padding-bottom: 2px;
-  border-bottom: 1px solid #aaa;
-  background-color: #ddf;
-}
-#leftColumn {
-  margin: 8px 0 8px 4px;
-  border: 1px solid #999;
-  background-color: #eef;
-}
-#navcolumn {
-  padding: 6px 4px 0 6px;
-}
-#navcolumn h5 {
-  font-size: 12px;
-  border-bottom: 1px solid #aaaaaa;
-  padding-top: 2px;
-  font-weight: normal;
-}
-#navcolumn li {
-  font-size: 12px;
-  padding-left: 12px;
-  background-color: #eef;
-}
-#navcolumn a:active, #navcolumn a:hover {
-  text-decoration: none;
-}
-#lastPublished {
-  font-size: 10px;
-}
-table.bodyTable th {
-  color: white;
-  background-color: #bbb;
-  text-align: left;
-  font-weight: bold;
-  font-size: 13px;
-}
-
-table.bodyTable th, table.bodyTable td {
-  font-size: 13px;
-}
-
-table.bodyTable tr.a {
-  background-color: #ddd;
-}
-
-table.bodyTable tr.b {
-  background-color: #eee;
-}
-
-.source {
-  border: 1px solid #999;
-  padding: 8px;
-  margin: 6px;
-}
-#footer {
-  background-color: #eef;
-  border-top: 1px solid #999;
-}
-body {
-  padding-bottom: 0px;
-}
diff --git a/JodaTimeContrib/jsptags/xdocs/stylesheets/maven-theme.css b/JodaTimeContrib/jsptags/xdocs/stylesheets/maven-theme.css
deleted file mode 100644
index 5d616b279..000000000
--- a/JodaTimeContrib/jsptags/xdocs/stylesheets/maven-theme.css
+++ /dev/null
@@ -1,121 +0,0 @@
-body, td, select, input, li{
-  font-family: Helvetica, Arial, sans-serif;
-  font-size: 13px;
-  background-color: #fff;
-}
-a {
-  text-decoration: none;
-}
-a:link {
-  color:#009;
-}
-a:visited  {
-  color:#009;
-}
-a:active, a:hover {
-  text-decoration: underline;
-}
-a.externalLink, a.externalLink:link, a.externalLink:visited, a.externalLink:active, a.externalLink:hover {
-  background: url(../images/external.png) right center no-repeat;
-  padding-right: 15px;
-}
-a.newWindow, a.newWindow:link, a.newWindow:visited, a.newWindow:active, a.newWindow:hover {
-  background: url(../images/newwindow.png) right center no-repeat;
-  padding-right: 18px;
-}
-h2 {
-  font-family: Verdana, Helvetica, Arial, sans-serif;
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #999;
-  color: #006;
-  background-color: #eef;
-  font-weight:bold;
-  font-size: 16px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-h3 {
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #aaa;
-  color: #006;
-  background-color: #eee;
-  font-weight: normal;
-  font-size: 14px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-p, ul {
-  font-size: 13px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-#banner {
-  background-color: #eef;
-  border-bottom: 1px solid #aaa;
-}
-#organizationLogo img, #projectLogo img {
-  border: 1px solid #999;
-}
-#breadcrumbs {
-  padding-top: 1px;
-  padding-bottom: 2px;
-  border-bottom: 1px solid #aaa;
-  background-color: #ddf;
-}
-#leftColumn {
-  margin: 8px 0 8px 4px;
-  border: 1px solid #999;
-  background-color: #eef;
-}
-#navcolumn {
-  padding: 6px 4px 0 6px;
-}
-#navcolumn h5 {
-  font-size: 12px;
-  border-bottom: 1px solid #aaaaaa;
-  padding-top: 2px;
-  font-weight: normal;
-}
-#navcolumn li {
-  font-size: 12px;
-  padding-left: 12px;
-  background-color: #eef;
-}
-#navcolumn a:active, #navcolumn a:hover {
-  text-decoration: none;
-}
-#lastPublished {
-  font-size: 10px;
-}
-table.bodyTable th {
-  color: white;
-  background-color: #bbb;
-  text-align: left;
-  font-weight: bold;
-  font-size: 13px;
-}
-
-table.bodyTable th, table.bodyTable td {
-  font-size: 13px;
-}
-
-table.bodyTable tr.a {
-  background-color: #ddd;
-}
-
-table.bodyTable tr.b {
-  background-color: #eee;
-}
-
-.source {
-  border: 1px solid #999;
-  padding: 8px;
-  margin: 6px;
-}
-#footer {
-  background-color: #eef;
-  border-top: 1px solid #999;
-}
-body {
-  padding-bottom: 0px;
-}
diff --git a/JodaTimeContrib/jsptags/xdocs/tasks.xml b/JodaTimeContrib/jsptags/xdocs/tasks.xml
deleted file mode 100644
index 7fbaa135d..000000000
--- a/JodaTimeContrib/jsptags/xdocs/tasks.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0"?>
-
-<document>
- <properties>
-  <title>Java date and time API - JSP tags - Tasks outstanding</title>
-  <author email="scolebourne@users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Tasks outstanding">
-<p>
-The project needs a release!
-Contact the mailing lists for more details or to help.
-</p>
-</section>
-
- </body>
-</document>
diff --git a/JodaTimeContrib/jsptags/xdocs/userguide.xml b/JodaTimeContrib/jsptags/xdocs/userguide.xml
deleted file mode 100644
index 6badaebff..000000000
--- a/JodaTimeContrib/jsptags/xdocs/userguide.xml
+++ /dev/null
@@ -1,235 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - JSP tags - User Guide</title>
-  <author email="newsham@hawaii.rr.com">Jim Newsham</author>
-  <author email="scolebourne@users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-<body>
-
-<!-- ========================================================================= -->
-
-<section name="Introduction">
-<p>
-<a href="/index.html">Joda-Time</a> JSP tags provide a JSTL-like set of tags to format and parse
-Joda-Time based date and time objects.
-</p>
-<p>
-The JSTL fmt tags work with java.util.Date and java.util.TimeZone objects.
-The tags in this library work with Joda-Time DateTime, ReadableInstant,
-ReadablePartial, and DateTimeZone objects.
-Otherwise, the two libraries are very similar, thus you can refer to standard
-JSTL books and documentation to supplement this document.
-</p>
-
-<!-- ========================================================================= -->
-
-<subsection name="Setup">
-<p>
-You will need a servlet container which supports Servlet 2.4, JSP 2.0, JSTL 1.1.
-One such container is <a href="http://tomcat.apache.org">Tomcat 5</a>.
-</p>
-<p>
-The simplest setup is to copy the joda-time-1.1.jar and joda-time-jsptags-0.8.jar
-to the WEB-INF/lib directory of your web application.
-</p>
-<p>
-You then need to declare the library as follows at the top of your jsp pages:
-<source>
-&lt;%@taglib prefix="joda" uri="http://www.joda.org/joda/time/tags" %&gt;
-</source>
-</p>
-</subsection>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Format tag">
-<p>
-This tag formats ReadableInstant (including DateTime) and ReadablePartial
-(including YearMonthDay and TimeOfDay) objects.
-The time zone may be specified using an attribute, an enclosing &lt;joda:dateTimeZone/&gt; tag,
-preceding &lt;joda:timeZone/&gt; tag, or via the "org.joda.time.dateTimeZone" scoped variable.
-</p>
-<p>
-The tag may be used in one of two ways.
-The simplest way is to output directly to the HTTP response.
-The second way is to set the var and scope attributes and set the value of a variable.
-</p>
-<p>
-Example: 
-<source>
-  &lt;% pageContext.setAttribute("now", new org.joda.time.DateTime()); %&gt;
-  &lt;joda:format value="${now}" style="SM" /&gt;
-</source>
-</p>
-<p>
-<table>
-<tr>
- <th colspan="2">Attributes</th>
-</tr>
-<tr>
- <td>value (required)</td>
- <td>Must be a ReadableInstant or ReadablePartial</td>
-</tr>
-<tr>
- <td>var</td>
- <td>The scoped variable to set</td>
-</tr>
-<tr>
- <td>scope</td>
- <td>The scope of the variable to set</td>
-</tr>
-<tr>
- <td>locale</td>
- <td>The locale to use for formatting</td>
-</tr>
-<tr>
- <td>style</td>
- <td>The style to use for formatting (two characters, one for date, one for time, from S=Short, M=Medium, L=Long, F=Full, -=None)</td>
-</tr>
-<tr>
- <td>pattern</td>
- <td>The pattern to use for formatting (see Joda format documentation for recognized pattern strings)</td>
-</tr>
-<tr>
- <td>dateTimeZone</td>
- <td>The time zone to use for formatting</td>
-</tr>
-</table>
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="ParseDateTime tag">
-<p>
-This tag parses a String into a DateTime object.
-The time zone may be specified using an attribute, an enclosing &lt;joda:dateTimeZone/&gt; tag,
-preceding &lt;joda:timeZone/&gt; tag, or via the "org.joda.time.dateTimeZone" scoped variable.
-</p>
-<p>
-The tag may be used in one of two ways.
-The simplest way is to parse the input and then directly format the output to the HTTP response.
-The second way, and more usual way, is to set the var and scope attributes and
-set the value of a variable with the results of the parse.
-</p>
-<p>
-Example: 
-<source>
-  &lt;joda:parseDateTime var="parsed" pattern="yy/M/d" value="05/11/19" /&gt;
-  &lt;joda:format value="${parsed}" style="L-" /&gt;
-</source>
-</p>
-<p>
-<table>
-<tr>
- <th colspan="2">Attributes</th>
-</tr>
-<tr>
- <td>value (required; unless value is nested within tag)</td>
- <td>Must be a string which can be parsed into a DateTime according to the parsing options specified</td>
-</tr>
-<tr>
- <td>var</td>
- <td>The scoped variable to set</td>
-</tr>
-<tr>
- <td>scope</td>
- <td>The scope of the variable to set</td>
-</tr>
-<tr>
- <td>locale</td>
- <td>The locale to use for parsing</td>
-</tr>
-<tr>
- <td>style</td>
- <td>The style to use for parsing (two characters, one for date, one for time, from S=Short, M=Medium, L=Long, F=Full, -=None)</td>
-</tr>
-<tr>
- <td>pattern</td>
- <td>The pattern to use for parsing (see Joda format documentation for recognized pattern strings)</td>
-</tr>
-<tr>
- <td>dateTimeZone</td>
- <td>The time zone to use for parsing</td>
-</tr>
-</table>
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="DateTimeZone tag">
-<p>
-This tag sets the default time zone to use for all nested tags.
-The &lt;joda:format /&gt; tag may override this value with an explicit dateTimeZone attribute.
-</p>
-<p>
-Example: 
-<source>
-  &lt;% pageContext.setAttribute("now", new DateTime()); %&gt;
-  &lt;% pageContext.setAttribute("bkk", DateTimeZone.forID("Asia/Bangkok")); %&gt;
-  &lt;joda:dateTimeZone value="${bkk}"&gt;
-    &lt;joda:format value="${datetime}" /&gt;
-  &lt;/joda:dateTimeZone&gt;
-</source>
-</p>
-<p>
-<table>
-<tr>
- <th colspan="2">Attributes</th>
-</tr>
-<tr>
- <td>value (required)</td>
- <td>Must be a DateTimeZone object, or an id of a zone</td>
-</tr>
-</table>
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="SetDateTimeZone tag">
-<p>
-This tag sets the default time zone, either for the remainder of the page, or to a variable.
-If var is not specified, the zone will be stored in a scoped variable called "org.joda.time.dateTimeZone".
-This acts as a default for all the other tags.
-It will be overridden by a &lt;joda:datetimezone /&gt; tag, or by
-an explicit dateTimeZone attribute on &lt;joda:format /&gt;.
-</p>
-<p>
-Example: 
-<source>
-  &lt;% pageContext.setAttribute("now", new DateTime()); %&gt;
-  &lt;% pageContext.setAttribute("bkk", DateTimeZone.forID("Asia/Bangkok")); %&gt;
-  &lt;joda:dateTimeZone value="${bkk}" /&gt;
-  &lt;joda:format value="${datetime}" /&gt;
-</source>
-</p>
-<p>
-<table>
-<tr>
- <th colspan="2">Attributes</th>
-</tr>
-<tr>
- <td>value (required)</td>
- <td>Must be a DateTimeZone object, or an id of a zone</td>
-</tr>
-<tr>
- <td>var</td>
- <td>The scoped variable to set</td>
-</tr>
-<tr>
- <td>scope</td>
- <td>The scope of the variable to set</td>
-</tr>
-</table>
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-</body>
-</document>
diff --git a/JodaTimeContrib/presentation/JodaTime.sxi b/JodaTimeContrib/presentation/JodaTime.sxi
deleted file mode 100644
index d7872ad0aca8881d213d107452c18950fed9d7b8..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 12525
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

diff --git a/JodaTimeContrib/presentation/JodaTimeBeJUG.sxi b/JodaTimeContrib/presentation/JodaTimeBeJUG.sxi
deleted file mode 100644
index 6be83867d965718c763b3c6bce0daf098258e310..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 108944
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
Wu%{gk4h#0Tj0gu8n+F>J;QkL~%@TwF


From d9ac79b7fd0be47f06076396c13e24b5ce82cd16 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Fri, 10 Feb 2006 22:42:45 +0000
Subject: [PATCH 2/5] Update to 2006a

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_2_000_BRANCH@1024 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 .../src/java/org/joda/time/tz/src/Readme.txt  |   2 +-
 JodaTime/src/java/org/joda/time/tz/src/africa |   3 +-
 .../src/java/org/joda/time/tz/src/antarctica  |   3 +-
 JodaTime/src/java/org/joda/time/tz/src/asia   |  15 +-
 .../src/java/org/joda/time/tz/src/australasia |   4 +-
 .../src/java/org/joda/time/tz/src/backward    |   9 +-
 JodaTime/src/java/org/joda/time/tz/src/europe |   3 +-
 .../java/org/joda/time/tz/src/northamerica    | 283 +++++++++++++-----
 .../java/org/joda/time/tz/src/southamerica    |   3 +-
 9 files changed, 235 insertions(+), 90 deletions(-)

diff --git a/JodaTime/src/java/org/joda/time/tz/src/Readme.txt b/JodaTime/src/java/org/joda/time/tz/src/Readme.txt
index 02d90ee3b..1d8494773 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/Readme.txt
+++ b/JodaTime/src/java/org/joda/time/tz/src/Readme.txt
@@ -1,2 +1,2 @@
 The data files in this directory were obtained from the public tz database,
-http://www.twinsun.com/tz/tz-link.htm, version 2005q.
+http://www.twinsun.com/tz/tz-link.htm, version 2006a.
diff --git a/JodaTime/src/java/org/joda/time/tz/src/africa b/JodaTime/src/java/org/joda/time/tz/src/africa
index 88a1e4280..4baf6dde8 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/africa
+++ b/JodaTime/src/java/org/joda/time/tz/src/africa
@@ -1,4 +1,5 @@
-# @(#)africa	7.39
+# @(#)africa	7.40
+# <pre>
 
 # This data is by no means authoritative; if you think you know better,
 # go ahead and edit the file (and please send any changes to
diff --git a/JodaTime/src/java/org/joda/time/tz/src/antarctica b/JodaTime/src/java/org/joda/time/tz/src/antarctica
index 835a14ba0..bfe894143 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/antarctica
+++ b/JodaTime/src/java/org/joda/time/tz/src/antarctica
@@ -1,4 +1,5 @@
-# @(#)antarctica	7.29
+# @(#)antarctica	7.30
+# <pre>
 
 # From Paul Eggert (1999-11-15):
 # To keep things manageable, we list only locations occupied year-round; see
diff --git a/JodaTime/src/java/org/joda/time/tz/src/asia b/JodaTime/src/java/org/joda/time/tz/src/asia
index c4d543b9e..22247bd45 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/asia
+++ b/JodaTime/src/java/org/joda/time/tz/src/asia
@@ -1,4 +1,5 @@
-# @(#)asia	7.89
+# @(#)asia	7.91
+# <pre>
 
 # This data is by no means authoritative; if you think you know better,
 # go ahead and edit the file (and please send any changes to
@@ -933,6 +934,10 @@ Zone	Asia/Tokyo	9:18:59	-	LMT	1887 Dec 31 15:00u
 # From Paul Eggert (2005-11-22):
 # Starting 2003 transitions are from Steffen Thorsen's web site timeanddate.com.
 #
+# From Steffen Thorsen (2005-11-23):
+# For Jordan I have received multiple independent user reports every year
+# about DST end dates, as the end-rule is different every year.
+#
 # Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
 Rule	Jordan	1973	only	-	Jun	6	0:00	1:00	S
 Rule	Jordan	1973	1975	-	Oct	1	0:00	0	-
@@ -1432,6 +1437,12 @@ Zone	Asia/Karachi	4:28:12 -	LMT	1907
 # From Paul Eggert (2005-11-22):
 # Starting 2004 transitions are from Steffen Thorsen's web site timeanddate.com.
 
+# From Steffen Thorsen (2005-11-23):
+# A user from Gaza reported that Gaza made the change early because of
+# the Ramadan.  Next year Ramadan will be even earlier, so I think
+# there is a good chance next year's end date will be around two weeks
+# earlier--the same goes for Jordan.
+
 # The rules for Egypt are stolen from the `africa' file.
 # Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
 Rule EgyptAsia	1957	only	-	May	10	0:00	1:00	S
@@ -1444,7 +1455,7 @@ Rule EgyptAsia	1966	only	-	Oct	 1	3:00	0	-
 Rule Palestine	1999	max	-	Apr	Fri>=15	0:00	1:00	S
 Rule Palestine	1999	2003	-	Oct	Fri>=15	0:00	0	-
 Rule Palestine	2004	only	-	Oct	 1	1:00	0	-
-Rule Palestine	2005	max	-	Oct	 4	1:00	0	-
+Rule Palestine	2005	max	-	Oct	 4	2:00	0	-
 
 # Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
 Zone	Asia/Gaza	2:17:52	-	LMT	1900 Oct
diff --git a/JodaTime/src/java/org/joda/time/tz/src/australasia b/JodaTime/src/java/org/joda/time/tz/src/australasia
index f5addd40f..55252ce7c 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/australasia
+++ b/JodaTime/src/java/org/joda/time/tz/src/australasia
@@ -1,4 +1,6 @@
-# @(#)australasia	7.77
+# @(#)australasia	7.78
+# <pre>
+
 # This file also includes Pacific islands.
 
 # Notes are at the end of this file
diff --git a/JodaTime/src/java/org/joda/time/tz/src/backward b/JodaTime/src/java/org/joda/time/tz/src/backward
index e34f405e1..4f2b4d598 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/backward
+++ b/JodaTime/src/java/org/joda/time/tz/src/backward
@@ -1,4 +1,4 @@
-# @(#)backward	7.29
+# @(#)backward	7.30
 
 # This file provides links between current names for time zones
 # and their old names.  Many names changed in late 1993.
@@ -42,7 +42,6 @@ Link	America/Rio_Branco	Brazil/Acre
 Link	America/Noronha		Brazil/DeNoronha
 Link	America/Sao_Paulo	Brazil/East
 Link	America/Manaus		Brazil/West
-Link	America/Chicago		CST6CDT
 Link	America/Halifax		Canada/Atlantic
 Link	America/Winnipeg	Canada/Central
 Link	America/Regina		Canada/East-Saskatchewan
@@ -55,8 +54,6 @@ Link	America/Whitehorse	Canada/Yukon
 Link	America/Santiago	Chile/Continental
 Link	Pacific/Easter		Chile/EasterIsland
 Link	America/Havana		Cuba
-Link	America/Panama		EST
-Link	America/New_York	EST5EDT
 Link	Africa/Cairo		Egypt
 Link	Europe/Dublin		Eire
 Link	Europe/London		Europe/Belfast
@@ -67,7 +64,6 @@ Link	Etc/GMT			GMT+0
 Link	Etc/GMT			GMT-0
 Link	Etc/GMT			GMT0
 Link	Etc/GMT			Greenwich
-Link	Pacific/Honolulu	HST
 Link	Asia/Hong_Kong		Hongkong
 Link	Atlantic/Reykjavik	Iceland
 Link	Asia/Tehran		Iran
@@ -76,8 +72,6 @@ Link	America/Jamaica		Jamaica
 Link	Asia/Tokyo		Japan
 Link	Pacific/Kwajalein	Kwajalein
 Link	Africa/Tripoli		Libya
-Link	America/Phoenix		MST
-Link	America/Denver		MST7MDT
 Link	America/Tijuana		Mexico/BajaNorte
 Link	America/Mazatlan	Mexico/BajaSur
 Link	America/Mexico_City	Mexico/General
@@ -85,7 +79,6 @@ Link	Pacific/Auckland	NZ
 Link	Pacific/Chatham		NZ-CHAT
 Link	America/Denver		Navajo
 Link	Asia/Shanghai		PRC
-Link	America/Los_Angeles	PST8PDT
 Link	Pacific/Pago_Pago	Pacific/Samoa
 Link	Pacific/Truk		Pacific/Yap
 Link	Europe/Warsaw		Poland
diff --git a/JodaTime/src/java/org/joda/time/tz/src/europe b/JodaTime/src/java/org/joda/time/tz/src/europe
index 6f8f8d1e3..443721129 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/europe
+++ b/JodaTime/src/java/org/joda/time/tz/src/europe
@@ -1,4 +1,5 @@
-# @(#)europe	7.95
+# @(#)europe	7.96
+# <pre>
 
 # This data is by no means authoritative; if you think you know better,
 # go ahead and edit the file (and please send any changes to
diff --git a/JodaTime/src/java/org/joda/time/tz/src/northamerica b/JodaTime/src/java/org/joda/time/tz/src/northamerica
index d1984d944..13a2ec2fa 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/northamerica
+++ b/JodaTime/src/java/org/joda/time/tz/src/northamerica
@@ -1,4 +1,6 @@
-# @(#)northamerica	7.82
+# @(#)northamerica	7.88
+# <pre>
+
 # also includes Central America and the Caribbean
 
 # This data is by no means authoritative; if you think you know better,
@@ -131,6 +133,26 @@ Rule	US	1987	2006	-	Apr	Sun>=1	2:00	1:00	D
 Rule	US	2007	max	-	Mar	Sun>=8	2:00	1:00	D
 Rule	US	2007	max	-	Nov	Sun>=1	2:00	0	S
 
+# From Arthur David Olson, 2005-12-19
+# We generate the files specified below to guard against old files with
+# obsolete information being left in the time zone binary directory.
+# We limit the list to names that have appeared in previous versions of
+# this time zone package.
+# We do these as separate Zones rather than as Links to avoid problems if
+# a particular place changes whether it observes DST.
+# We put these specifications here in the northamerica file both to
+# increase the chances that they'll actually get compiled and to
+# avoid the need to duplicate the US rules in another file.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	EST		 -5:00	-	EST
+Zone	MST		 -7:00	-	MST
+Zone	HST		-10:00	-	HST
+Zone	EST5EDT		 -5:00	US	E%sT
+Zone	CST6CDT		 -6:00	US	C%sT
+Zone	MST7MDT		 -7:00	US	M%sT
+Zone	PST8PDT		 -8:00	US	P%sT
+
 # From Bob Devine (1988-01-28):
 # ...Alaska (and Hawaii) had the timezone names changed in 1967.
 #    old			 new
@@ -299,6 +321,14 @@ Zone America/Chicago	-5:50:36 -	LMT	1883 Nov 18 12:09:24
 Zone America/North_Dakota/Center -6:45:12 - LMT	1883 Nov 18 12:14:48
 			-7:00	US	M%sT	1992 Oct 25 02:00
 			-6:00	US	C%sT
+# From Paul Eggert (2006-01-20):
+# The following is not implemented yet.
+# What is the most populous city in that area?
+# From http://www.statoids.com/tus.html (2006-01-20):
+# 2003-10-26 02:00: All of Morton County, ND, and the part of Sioux
+# County, ND east of ND route 31 moved from MT to CT.  (The area
+# around Fort Yates in Sioux County and the area around Mandan in
+# Morton County were already in CT.)
 
 # US mountain time, represented by Denver
 #
@@ -497,9 +527,9 @@ Zone America/Boise	-7:44:49 -	LMT	1883 Nov 18 12:15:11
 # For a map of Indiana's time zone regions, see:
 # <a href="http://www.mccsc.edu/time.html">
 # What time is it in Indiana?
-# </a> (2005-05-03)
+# </a> (2005-10-30)
 #
-# From Paul Eggert (2005-08-22):
+# From Paul Eggert (2006-01-20):
 # Since 1970, most of Indiana has been like America/Indiana/Indianapolis,
 # with the following exceptions:
 #
@@ -511,11 +541,14 @@ Zone America/Boise	-7:44:49 -	LMT	1883 Nov 18 12:15:11
 # - Clark, Floyd, and Harrison counties have been like
 #   America/Kentucky/Louisville.
 #
-# - Crawford, Starke, and Switzerland counties have their own time zone
+# - Daviess, Dubois, Knox, Martin, Perry, and Pulaski counties
+#   have been like America/Indiana/Vincennes.
+#
+# - Crawford, Pike, Starke, and Switzerland counties have their own time zone
 #   histories as noted below.
 #
-# Shanks partitions Indiana into 345 regions, each with its own time history,
-# and writes ``Even newspaper reports present contradictory information.''
+# Shanks partitioned Indiana into 345 regions, each with its own time history,
+# and wrote ``Even newspaper reports present contradictory information.''
 # Fortunately, most of the complexity occurred before our cutoff date of 1970.
 #
 # Other than Indianapolis, the Indiana place names are so nondescript
@@ -523,11 +556,19 @@ Zone America/Boise	-7:44:49 -	LMT	1883 Nov 18 12:15:11
 # So we reluctantly put them all in a subdirectory `America/Indiana'.
 
 # From Paul Eggert (2005-08-16):
-# http://www.mccsc.edu/time.html says that Indiana will use DST starting 2006,
-# and that many counties may switch either to Central or to Eastern time.
-# The county-by-county decisions have not been made yet, so for now assume
-# that no counties will switch: this assumption is most likely wrong,
-# but it's the best we can do for now.
+# http://www.mccsc.edu/time.html says that Indiana will use DST starting 2006.
+
+# From Deborah Goldsmith (2006-01-18):
+# http://dmses.dot.gov/docimages/pdf95/382329_web.pdf
+# From Paul Eggert (2006-01-20):
+# It says "DOT is relocating the time zone boundary in Indiana to move Starke,
+# Pulaski, Knox, Daviess, Martin, Pike, Dubois, and Perry Counties from the
+# Eastern Time Zone to the Central Time Zone.... The effective date of
+# this rule is 2:OO a.m. EST Sunday, April 2, 2006, which is the
+# changeover date from standard time to Daylight Saving Time."
+# Strictly speaking, this means the affected counties will change their
+# clocks twice that night, but this obviously is in error.  The intent
+# is that 01:59:59 EST be followed by 02:00:00 CDT.
 
 # Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
 Rule Indianapolis 1941	only	-	Jun	22	2:00	1:00	D
@@ -546,8 +587,8 @@ Zone America/Indiana/Indianapolis -5:44:38 - LMT 1883 Nov 18 12:15:22
 			-5:00	-	EST	2006
 			-5:00	US	E%sT
 #
-# Part of Crawford County, Indiana, last observed DST in 1975,
-# and left its clocks alone in 1974.
+# Eastern Crawford County, Indiana, left its clocks alone in 1974,
+# as well as from 1976 through 2005.
 # Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
 Rule	Marengo	1951	only	-	Apr	lastSun	2:00	1:00	D
 Rule	Marengo	1951	only	-	Sep	lastSun	2:00	0	S
@@ -564,7 +605,45 @@ Zone America/Indiana/Marengo -5:45:23 -	LMT	1883 Nov 18 12:14:37
 			-5:00	-	EST	2006
 			-5:00	US	E%sT
 #
-# Starke County, Indiana
+# Daviess, Dubois, Knox, Martin, Perry, and Pulaski Counties, Indiana,
+# switched from eastern to central time in April 2006.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule Vincennes	1946	only	-	Apr	lastSun	2:00	1:00	D
+Rule Vincennes	1946	only	-	Sep	lastSun	2:00	0	S
+Rule Vincennes	1953	1954	-	Apr	lastSun	2:00	1:00	D
+Rule Vincennes	1953	1959	-	Sep	lastSun	2:00	0	S
+Rule Vincennes	1955	only	-	May	 1	0:00	1:00	D
+Rule Vincennes	1956	1963	-	Apr	lastSun	2:00	1:00	D
+Rule Vincennes	1960	only	-	Oct	lastSun	2:00	0	S
+Rule Vincennes	1961	only	-	Sep	lastSun	2:00	0	S
+Rule Vincennes	1962	1963	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Indiana/Vincennes -5:50:07 - LMT	1883 Nov 18 12:09:53
+			-6:00	US	C%sT	1946
+			-6:00 Vincennes	C%sT	1964 Apr 26 2:00
+			-5:00	-	EST	1969
+			-5:00	US	E%sT	1971
+			-5:00	-	EST	2006 Apr  2 2:00
+			-6:00	US	C%sT
+# 
+# Pike County, Indiana moved from central to eastern time in 1977,
+# then switched back in 2006.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule	Pike	1955	only	-	May	 1	0:00	1:00	D
+Rule	Pike	1955	1960	-	Sep	lastSun	2:00	0	S
+Rule	Pike	1956	1964	-	Apr	lastSun	2:00	1:00	D
+Rule	Pike	1961	1964	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Indiana/Petersburg -5:49:07 - LMT	1883 Nov 18 12:10:53
+			-6:00	US	C%sT	1955
+			-6:00	Pike	C%sT	1965 Apr 25 2:00
+			-5:00	-	EST	1966 Oct 30 2:00
+			-6:00	US	C%sT	1977 Oct 30 2:00
+			-5:00	-	EST	2006 Apr  2 2:00
+			-6:00	US	C%sT
+#
+# Starke County, Indiana moved from central to eastern time in 1991,
+# then switched back in 2006.
 # From Arthur David Olson (1991-10-28):
 # An article on page A3 of the Sunday, 1991-10-27 Washington Post
 # notes that Starke County switched from Central time to Eastern time as of
@@ -581,10 +660,10 @@ Zone America/Indiana/Knox -5:46:30 -	LMT	1883 Nov 18 12:13:30
 			-6:00	Starke	C%sT	1962 Apr 29 2:00
 			-5:00	-	EST	1963 Oct 27 2:00
 			-6:00	US	C%sT	1991 Oct 27 2:00
-			-5:00	-	EST	2006
-			-5:00	US	E%sT
+			-5:00	-	EST	2006 Apr  2 2:00
+			-6:00	US	C%sT
 #
-# Switzerland County, Indiana, last observed DST in 1972.
+# Switzerland County, Indiana, did not observe DST from 1973 through 2005.
 # Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
 Zone America/Indiana/Vevay -5:40:16 -	LMT	1883 Nov 18 12:19:44
 			-6:00	US	C%sT	1954 Apr 25 2:00
@@ -614,7 +693,7 @@ Zone America/Kentucky/Louisville -5:43:02 -	LMT	1883 Nov 18 12:16:58
 			-6:00	1:00	CDT	1974 Oct 27 2:00
 			-5:00	US	E%sT
 #
-# Wayne, Clinton, and Russell Counties, Kentucky
+# Wayne County, Kentucky
 #
 # From
 # <a href="http://www.lake-cumberland.com/life/archive/news990129time.shtml">
@@ -711,7 +790,8 @@ Zone America/Detroit	-5:32:11 -	LMT	1905
 			-5:00	-	EST	1975 Apr 27 2:00
 			-5:00	US	E%sT
 #
-# The Michigan border with Wisconsin switched from EST to CST/CDT in 1973.
+# Dickinson, Gogebic, Iron, and Menominee Counties, Michigan,
+# switched from EST to CST/CDT in 1973.
 # Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
 Rule Menominee	1946	only	-	Apr	lastSun	2:00	1:00	D
 Rule Menominee	1946	only	-	Sep	lastSun	2:00	0	S
@@ -800,18 +880,37 @@ Zone America/Menominee	-5:50:27 -	LMT	1885 Sep 18 12:00
 
 # Unless otherwise specified, the data for Canada are all from Shanks.
 
-# From Paul Eggert (2000-10-02):
+# From Paul Eggert (2005-12-21):
 # H. David Matthews and Mary Vincent's map
-# <a href="http://www.canadiangeographic.ca/SO98/geomap.htm">
+# <a href="http://www.canadiangeographic.ca/Magazine/SO98/geomap.asp">
 # "It's about TIME", _Canadian Geographic_ (September-October 1998)
 # </a> contains detailed boundaries for regions observing nonstandard
 # time and daylight saving time arrangements in Canada circa 1998.
 #
-# INMS, the Institute for National Measurement Standards in Ottawa, has
-# <a href="http://www.nrc.ca/inms/time/tze.html">
+# INMS, the Institute for National Measurement Standards in Ottawa, has <a
+# href="http://inms-ienm.nrc-cnrc.gc.ca/en/time_services/daylight_saving_e.php">
 # information about standard and daylight saving time zones in Canada.
 # </a> (updated periodically).
 # Its unofficial information is often taken from Matthews and Vincent.
+#
+# CBC News reported that Ontario and Manitoba have announced plans to
+# follow the US change, and that Nova Scotia is considering it; see
+# <http://www.cbc.ca/news/background/daylightsavingtime/> (2005-10-21).
+# CBC news also reported that Prince Edward Island is the first
+# province in Atlantic Canada to follow the US change, and that Quebec
+# had agreed; see <http://www.cbc.ca/pei/story/pe_daylight_20051207.html>
+# (2005-12-07).
+#
+# To reflect all this, the Canada and Winn rules have been adjusted to
+# agree with the 2007 US change.  This means we assume most of Canada
+# will fall into line.  However, Alberta, British Columbia,
+# Newfoundland, Northwest Territories, and Yukon already have separate
+# rules in our database, so for now we'll leave them alone, which
+# means that we currently assume these regions will not change their
+# rules and will disagree with the US starting in 2007.  This
+# assumption is probably incorrect, with the possible exception of
+# Newfoundland.  We plan to adjust the Edm, Vanc, StJohns, and NT_YK
+# rules as the corresponding provinces make their announcements.
 
 # Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
 Rule	Canada	1918	only	-	Apr	14	2:00	1:00	D
@@ -820,8 +919,10 @@ Rule	Canada	1942	only	-	Feb	 9	2:00	1:00	W # War
 Rule	Canada	1945	only	-	Aug	14	23:00u	1:00	P # Peace
 Rule	Canada	1945	only	-	Sep	30	2:00	0	S
 Rule	Canada	1974	1986	-	Apr	lastSun	2:00	1:00	D
-Rule	Canada	1974	max	-	Oct	lastSun	2:00	0	S
-Rule	Canada	1987	max	-	Apr	Sun>=1	2:00	1:00	D
+Rule	Canada	1974	2006	-	Oct	lastSun	2:00	0	S
+Rule	Canada	1987	2006	-	Apr	Sun>=1	2:00	1:00	D
+Rule	Canada	2007	max	-	Mar	Sun>=8	2:00	1:00	D
+Rule	Canada	2007	max	-	Nov	Sun>=1	2:00	0	S
 
 
 # Newfoundland (and far southeast Labrador)
@@ -886,7 +987,7 @@ Zone America/Goose_Bay	-4:01:40 -	LMT	1884 # Happy Valley-Goose Bay
 			-4:00	StJohns	A%sT
 
 
-# west Labrador, New Brunswick, Nova Scotia, Prince Edward I
+# west Labrador, Nova Scotia, Prince Edward I
 
 # From Paul Eggert (1996-06-12):
 # Shanks writes that since 1970 most of this region has been like Halifax.
@@ -895,53 +996,48 @@ Zone America/Goose_Bay	-4:01:40 -	LMT	1884 # Happy Valley-Goose Bay
 # Shanks also writes that Liverpool, NS was the only town in Canada to observe
 # DST in 1971 but not 1970; for now we'll assume this is a typo.
 
-# From Paul Eggert (2000-10-02):
-# INMS (2000-09-12) says that, since 1988 at least, New Brunswick switches
-# at 00:01 local time.  FIXME: verify and create a new Zone for this.
-
-
 # Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule Halifax	1916	only	-	Apr	 1	0:00	1:00	D
-Rule Halifax	1916	only	-	Oct	 1	0:00	0	S
-Rule Halifax	1920	only	-	May	 9	0:00	1:00	D
-Rule Halifax	1920	only	-	Aug	29	0:00	0	S
-Rule Halifax	1921	only	-	May	 6	0:00	1:00	D
-Rule Halifax	1921	1922	-	Sep	 5	0:00	0	S
-Rule Halifax	1922	only	-	Apr	30	0:00	1:00	D
-Rule Halifax	1923	1925	-	May	Sun>=1	0:00	1:00	D
-Rule Halifax	1923	only	-	Sep	 4	0:00	0	S
-Rule Halifax	1924	only	-	Sep	15	0:00	0	S
-Rule Halifax	1925	only	-	Sep	28	0:00	0	S
-Rule Halifax	1926	only	-	May	16	0:00	1:00	D
-Rule Halifax	1926	only	-	Sep	13	0:00	0	S
-Rule Halifax	1927	only	-	May	 1	0:00	1:00	D
-Rule Halifax	1927	only	-	Sep	26	0:00	0	S
-Rule Halifax	1928	1931	-	May	Sun>=8	0:00	1:00	D
-Rule Halifax	1928	only	-	Sep	 9	0:00	0	S
-Rule Halifax	1929	only	-	Sep	 3	0:00	0	S
-Rule Halifax	1930	only	-	Sep	15	0:00	0	S
-Rule Halifax	1931	1932	-	Sep	Mon>=24	0:00	0	S
-Rule Halifax	1932	only	-	May	 1	0:00	1:00	D
-Rule Halifax	1933	only	-	Apr	30	0:00	1:00	D
-Rule Halifax	1933	only	-	Oct	 2	0:00	0	S
-Rule Halifax	1934	only	-	May	20	0:00	1:00	D
-Rule Halifax	1934	only	-	Sep	16	0:00	0	S
-Rule Halifax	1935	only	-	Jun	 2	0:00	1:00	D
-Rule Halifax	1935	only	-	Sep	30	0:00	0	S
-Rule Halifax	1936	only	-	Jun	 1	0:00	1:00	D
-Rule Halifax	1936	only	-	Sep	14	0:00	0	S
-Rule Halifax	1937	1938	-	May	Sun>=1	0:00	1:00	D
-Rule Halifax	1937	1941	-	Sep	Mon>=24	0:00	0	S
-Rule Halifax	1939	only	-	May	28	0:00	1:00	D
-Rule Halifax	1940	1941	-	May	Sun>=1	0:00	1:00	D
-Rule Halifax	1946	1949	-	Sep	lastSun	2:00	0	S
-Rule Halifax	1946	1949	-	Apr	lastSun	2:00	1:00	D
-Rule Halifax	1951	1954	-	Sep	lastSun	2:00	0	S
-Rule Halifax	1951	1954	-	Apr	lastSun	2:00	1:00	D
-Rule Halifax	1956	1959	-	Sep	lastSun	2:00	0	S
-Rule Halifax	1956	1959	-	Apr	lastSun	2:00	1:00	D
-Rule Halifax	1962	1973	-	Apr	lastSun	2:00	1:00	D
-Rule Halifax	1962	1973	-	Oct	lastSun	2:00	0	S
+Rule	Halifax	1916	only	-	Apr	 1	0:00	1:00	D
+Rule	Halifax	1916	only	-	Oct	 1	0:00	0	S
+Rule	Halifax	1920	only	-	May	 9	0:00	1:00	D
+Rule	Halifax	1920	only	-	Aug	29	0:00	0	S
+Rule	Halifax	1921	only	-	May	 6	0:00	1:00	D
+Rule	Halifax	1921	1922	-	Sep	 5	0:00	0	S
+Rule	Halifax	1922	only	-	Apr	30	0:00	1:00	D
+Rule	Halifax	1923	1925	-	May	Sun>=1	0:00	1:00	D
+Rule	Halifax	1923	only	-	Sep	 4	0:00	0	S
+Rule	Halifax	1924	only	-	Sep	15	0:00	0	S
+Rule	Halifax	1925	only	-	Sep	28	0:00	0	S
+Rule	Halifax	1926	only	-	May	16	0:00	1:00	D
+Rule	Halifax	1926	only	-	Sep	13	0:00	0	S
+Rule	Halifax	1927	only	-	May	 1	0:00	1:00	D
+Rule	Halifax	1927	only	-	Sep	26	0:00	0	S
+Rule	Halifax	1928	1931	-	May	Sun>=8	0:00	1:00	D
+Rule	Halifax	1928	only	-	Sep	 9	0:00	0	S
+Rule	Halifax	1929	only	-	Sep	 3	0:00	0	S
+Rule	Halifax	1930	only	-	Sep	15	0:00	0	S
+Rule	Halifax	1931	1932	-	Sep	Mon>=24	0:00	0	S
+Rule	Halifax	1932	only	-	May	 1	0:00	1:00	D
+Rule	Halifax	1933	only	-	Apr	30	0:00	1:00	D
+Rule	Halifax	1933	only	-	Oct	 2	0:00	0	S
+Rule	Halifax	1934	only	-	May	20	0:00	1:00	D
+Rule	Halifax	1934	only	-	Sep	16	0:00	0	S
+Rule	Halifax	1935	only	-	Jun	 2	0:00	1:00	D
+Rule	Halifax	1935	only	-	Sep	30	0:00	0	S
+Rule	Halifax	1936	only	-	Jun	 1	0:00	1:00	D
+Rule	Halifax	1936	only	-	Sep	14	0:00	0	S
+Rule	Halifax	1937	1938	-	May	Sun>=1	0:00	1:00	D
+Rule	Halifax	1937	1941	-	Sep	Mon>=24	0:00	0	S
+Rule	Halifax	1939	only	-	May	28	0:00	1:00	D
+Rule	Halifax	1940	1941	-	May	Sun>=1	0:00	1:00	D
+Rule	Halifax	1946	1949	-	Apr	lastSun	2:00	1:00	D
+Rule	Halifax	1946	1949	-	Sep	lastSun	2:00	0	S
+Rule	Halifax	1951	1954	-	Apr	lastSun	2:00	1:00	D
+Rule	Halifax	1951	1954	-	Sep	lastSun	2:00	0	S
+Rule	Halifax	1956	1959	-	Apr	lastSun	2:00	1:00	D
+Rule	Halifax	1956	1959	-	Sep	lastSun	2:00	0	S
+Rule	Halifax	1962	1973	-	Apr	lastSun	2:00	1:00	D
+Rule	Halifax	1962	1973	-	Oct	lastSun	2:00	0	S
 # Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
 Zone America/Halifax	-4:14:24 -	LMT	1902 Jun 15
 			-4:00	Halifax	A%sT	1918
@@ -957,6 +1053,43 @@ Zone America/Glace_Bay	-3:59:48 -	LMT	1902 Jun 15
 			-4:00	Halifax	A%sT	1974
 			-4:00	Canada	A%sT
 
+# New Brunswick
+
+# From Paul Eggert (2006-01-20):
+# New Brunswick's Time Definition Act
+# <http://www.gnb.ca/0062/PDF-acts/t-06.pdf> says they change at 00:01, and
+# <http://www.canlii.org/nb/laws/sta/t-6/20030127/whole.html> makes it
+# clear that this has been the case since at least 1993.
+# For now, assume it started in 1993.  The Office of the Premier announced
+# <http://www.gnb.ca/cnb/news/pre/2005e1737pr.htm> (2005-12-23)
+# that they will bring forward proposed amendments to harmonize with the US;
+# for now assume that this will happen, but they'll still switch at 00:01.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Moncton	1933	1935	-	Jun	Sun>=8	1:00	1:00	D
+Rule	Moncton	1933	1935	-	Sep	Sun>=8	1:00	0	S
+Rule	Moncton	1936	1938	-	Jun	Sun>=1	1:00	1:00	D
+Rule	Moncton	1936	1938	-	Sep	Sun>=1	1:00	0	S
+Rule	Moncton	1939	only	-	May	27	1:00	1:00	D
+Rule	Moncton	1939	1941	-	Sep	Sat>=21	1:00	0	S
+Rule	Moncton	1940	only	-	May	19	1:00	1:00	D
+Rule	Moncton	1941	only	-	May	 4	1:00	1:00	D
+Rule	Moncton	1946	1972	-	Apr	lastSun	2:00	1:00	D
+Rule	Moncton	1946	1956	-	Sep	lastSun	2:00	0	S
+Rule	Moncton	1956	1972	-	Oct	lastSun	2:00	0	S
+Rule	Moncton	1993	2006	-	Apr	Sun>=1	0:01	1:00	D
+Rule	Moncton	1993	2006	-	Oct	lastSun	0:01	0	S
+Rule	Moncton	2007	max	-	Mar	Sun>=8	0:01	1:00	D
+Rule	Moncton	2007	max	-	Nov	Sun>=1	0:01	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Moncton	-4:19:08 -	LMT	1883 Dec  9
+			-5:00	-	EST	1902 Jun 15
+			-4:00	Canada	A%sT	1933
+			-4:00	Moncton	A%sT	1942
+			-4:00	Canada	A%sT	1946
+			-4:00	Moncton	A%sT	1973
+			-4:00	Canada	A%sT	1993
+			-4:00	Moncton	A%sT
 
 # Ontario, Quebec
 
@@ -1147,11 +1280,13 @@ Rule	Winn	1963	only	-	Apr	lastSun	2:00	1:00	D
 Rule	Winn	1963	only	-	Sep	22	2:00	0	S
 Rule	Winn	1966	1986	-	Apr	lastSun	2:00	1:00	D
 Rule	Winn	1966	1986	-	Oct	lastSun	2:00	0	S
-Rule	Winn	1987	max	-	Apr	Sun>=1	2:00	1:00	D
+Rule	Winn	1987	2006	-	Apr	Sun>=1	2:00s	1:00	D
 # From Paul Eggert (2000-10-02):
 # INMS (2000-09-12) says that, since 1988 at least, Manitoba switches from
 # DST at 03:00 local time.  For now, assume it started in 1987.
-Rule	Winn	1987	max	-	Oct	lastSun	2:00s	0	S
+Rule	Winn	1987	2006	-	Oct	lastSun	2:00s	0	S
+Rule	Winn	2007	max	-	Mar	Sun>=8	2:00s	1:00	D
+Rule	Winn	2007	max	-	Nov	Sun>=1	2:00s	0	S
 # Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
 Zone America/Winnipeg	-6:28:36 -	LMT	1887 Jul 16
 			-6:00	Winn	C%sT
diff --git a/JodaTime/src/java/org/joda/time/tz/src/southamerica b/JodaTime/src/java/org/joda/time/tz/src/southamerica
index be2602916..3355f1d0d 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/southamerica
+++ b/JodaTime/src/java/org/joda/time/tz/src/southamerica
@@ -1,4 +1,5 @@
-# @(#)southamerica	7.65
+# @(#)southamerica	7.66
+# <pre>
 
 # This data is by no means authoritative; if you think you know better,
 # go ahead and edit the file (and please send any changes to

From efc2923455049b8c4f4644e3345b8d380dcf7bc7 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Fri, 10 Feb 2006 22:43:35 +0000
Subject: [PATCH 3/5] Fix estimated parse length

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_2_000_BRANCH@1025 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 .../java/org/joda/time/format/DateTimeFormatterBuilder.java   | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java b/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java
index 3372c2bcb..591162993 100644
--- a/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java
+++ b/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java
@@ -1,5 +1,5 @@
 /*
- *  Copyright 2001-2005 Stephen Colebourne
+ *  Copyright 2001-2006 Stephen Colebourne
  *
  *  Licensed under the Apache License, Version 2.0 (the "License");
  *  you may not use this file except in compliance with the License.
@@ -2444,7 +2444,7 @@ private void addArrayToList(List list, Object[] array) {
                 if (parser != null) {
                     int len = parser.estimateParsedLength();
                     if (len > est) {
-                        len = est;
+                        est = len;
                     }
                 }
             }

From 17e9acea20a40206076f2acd222a9b8a74019da1 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Fri, 10 Feb 2006 23:18:19 +0000
Subject: [PATCH 4/5] Fix to ensure that zone is not lost on toDateTime et al

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_2_000_BRANCH@1026 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/RELEASE-NOTES.txt                    | 112 ++++--------------
 JodaTime/src/java/org/joda/time/Instant.java  |  81 ++++++++++++-
 .../org/joda/time/base/AbstractInstant.java   |  34 +++---
 .../joda/time/TestDateMidnight_Basics.java    |  22 ++--
 .../org/joda/time/TestDateTime_Basics.java    |  12 +-
 .../org/joda/time/TestInstant_Basics.java     |   3 +-
 .../joda/time/TestMutableDateTime_Basics.java |  18 +--
 7 files changed, 148 insertions(+), 134 deletions(-)

diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt
index c1c878fa8..a6d1a1c51 100644
--- a/JodaTime/RELEASE-NOTES.txt
+++ b/JodaTime/RELEASE-NOTES.txt
@@ -1,11 +1,12 @@
-Joda-Time version 1.2
----------------------
+Joda-Time version 1.2.1
+-----------------------
 
 Joda-Time is a date and time handling library that seeks to replace the JDK
 Date and Calendar classes.
 
-This is the third full release of Joda-Time.
-This release focuses on bug fixes, with a few new features.
+This is a patch release for Joda-Time 1.2.
+This release only contains bug fixes.
+We recommend all users of 1.2 upgrade to 1.2.1.
 
 We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
 
@@ -17,108 +18,41 @@ of restrictions. If the license causes you problems please contact the mailing l
 ** Please also check out the JSP and Hibernate contributed projects **
 
 
-Incompatible changes since 1.1
+Incompatible changes since 1.2
 ------------------------------
-Binary compatible - Yes, except
-  - The internal classes BaseGJChronology and CommonGJChronology have been removed
-    They were implementation classes and you should not have been using them
-    Please contact the mailing list if this causes you problems
+Binary compatible - Yes
 
 Source compatible - Yes
-  - v1.1 and v1.2 are source compatible in their public and protected API
+  - A bug fix has changed the effect of some toXxx() methods if you use time zones
 
 Serialization compatible - Yes
-  - Chronology serialization has changed, however the two formats are compatible
-  - v1.1 did not serialize the Chronology minimum days in first week field properly, v1.2 does
 
 Data compatible - Yes
-  - DateTimeZone data updated to version 2005q
+  - DateTimeZone data updated to version 2006a
 
 
-Deprecations since 1.1
+Deprecations since 1.2
 ----------------------
-- Chronology factory methods, such as getISO() and getCopticUTC()
-  You should now use the chrono package directly:
-    Chronology.getCoptic(zone)   is replaced by
-    CopticChronology.getInstance(zone)
-  These factory methods have been removed as they were unable to scale
-  suitably as more and more chronologies are added
+- None
 
 
-Bug fixes since 1.1
+Bug fixes since 1.2
 -------------------
-- ZonedChronology
-  getMaximumValue(ReadablePartial)/getMinimumValue(ReadablePartial)
-  Methods returned incorrect result
+- DateTime/DateMidnight/MutableDateTime/AbstractInstant
+   Conversion methods toDateTime, toDateTimeISO, toMutableDateTime, and
+    toMutableDateTimeISO now preserve the time zone.
+    Previously calling any of these four methods would convert the result to
+    the default time zone. This was incorrect.
+    The methods have been changed to preserve the time zone.
+   The similarly named methods on Instant have not changed behaviour.
 
-- ZonedChronology
-  Better detection and handling of offset calculation overflow, throwing
-  an ArithmeticException.
+- DateTimeFormatterBuilder.MatchingParser
+   Previously didn't estimate parsed length correctly
 
-- DateTimeZone
-  Handles offset calculation overflow errors for instants near Long.MAX_VALUE,
-  ending the offset transition sequence.
 
-- DateTimeFormatter
-  Reverts to UTC if time zone offset calculation causes overflow. This allows at least
-  the time of day fields to be printed for instants near Long.MIN_VALUE or Long.MAX_VALUE.
-
-- CopticChronology
-  Fixed regression in month of year calculation which affected getMaximumValue
-  on dayOfMonth field.
-
-- CopticChronology
-  Fixed month duration field to handle short 13th month correctly.
-
-- ZonedChronology
-  Fixed getting text values for fields from getAs[Short]Text(int value, Locale locale).
-
-- Gregorian, Julian, GJ and Coptic
-  These Chronology classes did not correctly store the minimum days in first week
-  during serialization
-
-- DateTimeFormatter
-  Fixed printing of time zone name near DST transition
-
-- YearMonthDay
-  Fixed addition where date starts on a leap day
-  Fixed addition in the GJChronology
-
-- DateTimeFormat
-  Pattern letter 'K' was using the wrong underlying implementation
-
-
-Enhancements since 1.1
+Enhancements since 1.2
 ----------------------
-- IslamicChronology
-- EthiopicChronology
-  New Chronologies
-
-- DateTime.Property.withMaximumValue() (also DateMidnight/YearMonthDay etc)
-- DateTime.Property.withMinimumValue()
-  Returns a copy of the base datetime with the specified field set to
-  the maximum or minimum value. This is useful to get the last day of the month.
-  - DateTime lastDayOfMonth = dt.dayOfMonth().withMaximumValue();
-
-- DateTime.Property.toInterval() (also DateMidnight/MutableDateTime)
-  New method to convert return an Interval object over the span of the property
-  Thus dt.monthOfYear().toInterval() returns an interval from the start to
-  the end of the month
-
-- MutableDateTime.property(DateTimeFieldType)
-  Gets the property by type. Complements the method already on DateTime/DateMidnight.
-
-- YearMonthDay.fromCalendarFields()
-- YearMonthDay.fromDateFields()
-- TimeOfDay.fromCalendarFields()
-- TimeOfDay.fromDateFields()
-  New factory methods to create a YearMonthDay/TimeOfDay using exactly the same
-  field values as the JDK objects, thus ignoring time zone effects
-
-- FieldUtils
-  Performance optimization when adding by scalars of one or negative one. The
-  overflow detecting multiplication skips the multiply and divide check for
-  these values.
+- None
 
 
 Feedback
diff --git a/JodaTime/src/java/org/joda/time/Instant.java b/JodaTime/src/java/org/joda/time/Instant.java
index f63a3217b..ba1bd7055 100644
--- a/JodaTime/src/java/org/joda/time/Instant.java
+++ b/JodaTime/src/java/org/joda/time/Instant.java
@@ -1,5 +1,5 @@
 /*
- *  Copyright 2001-2005 Stephen Colebourne
+ *  Copyright 2001-2006 Stephen Colebourne
  *
  *  Licensed under the Apache License, Version 2.0 (the "License");
  *  you may not use this file except in compliance with the License.
@@ -221,4 +221,83 @@ public Chronology getChronology() {
         return ISOChronology.getInstanceUTC();
     }
 
+    //-----------------------------------------------------------------------
+    /**
+     * Get this object as a DateTime using ISOChronology in the default zone.
+     * <p>
+     * This method returns a DateTime object in the default zone.
+     * This differs from the similarly named method on DateTime, DateMidnight
+     * or MutableDateTime which retains the time zone. The difference is
+     * because Instant really represents a time <i>without</i> a zone,
+     * thus calling this method we really have no zone to 'retain' and
+     * hence expect to switch to the default zone.
+     * <p>
+     * This method definition preserves compatability with earlier versions
+     * of Joda-Time.
+     *
+     * @return a DateTime using the same millis
+     */
+    public DateTime toDateTime() {
+        return new DateTime(getMillis(), ISOChronology.getInstance());
+    }
+
+    /**
+     * Get this object as a DateTime using ISOChronology in the default zone.
+     * This method is identical to <code>toDateTime()</code>.
+     * <p>
+     * This method returns a DateTime object in the default zone.
+     * This differs from the similarly named method on DateTime, DateMidnight
+     * or MutableDateTime which retains the time zone. The difference is
+     * because Instant really represents a time <i>without</i> a zone,
+     * thus calling this method we really have no zone to 'retain' and
+     * hence expect to switch to the default zone.
+     * <p>
+     * This method definition preserves compatability with earlier versions
+     * of Joda-Time.
+     *
+     * @return a DateTime using the same millis with ISOChronology
+     */
+    public DateTime toDateTimeISO() {
+        return toDateTime();
+    }
+
+    /**
+     * Get this object as a MutableDateTime using ISOChronology in the default zone.
+     * <p>
+     * This method returns a MutableDateTime object in the default zone.
+     * This differs from the similarly named method on DateTime, DateMidnight
+     * or MutableDateTime which retains the time zone. The difference is
+     * because Instant really represents a time <i>without</i> a zone,
+     * thus calling this method we really have no zone to 'retain' and
+     * hence expect to switch to the default zone.
+     * <p>
+     * This method definition preserves compatability with earlier versions
+     * of Joda-Time.
+     *
+     * @return a MutableDateTime using the same millis
+     */
+    public MutableDateTime toMutableDateTime() {
+        return new MutableDateTime(getMillis(), ISOChronology.getInstance());
+    }
+
+    /**
+     * Get this object as a MutableDateTime using ISOChronology in the default zone.
+     * This method is identical to <code>toMutableDateTime()</code>.
+     * <p>
+     * This method returns a MutableDateTime object in the default zone.
+     * This differs from the similarly named method on DateTime, DateMidnight
+     * or MutableDateTime which retains the time zone. The difference is
+     * because Instant really represents a time <i>without</i> a zone,
+     * thus calling this method we really have no zone to 'retain' and
+     * hence expect to switch to the default zone.
+     * <p>
+     * This method definition preserves compatability with earlier versions
+     * of Joda-Time.
+     *
+     * @return a MutableDateTime using the same millis with ISOChronology
+     */
+    public MutableDateTime toMutableDateTimeISO() {
+        return toMutableDateTime();
+    }
+
 }
diff --git a/JodaTime/src/java/org/joda/time/base/AbstractInstant.java b/JodaTime/src/java/org/joda/time/base/AbstractInstant.java
index 06e024716..6d6f2a8cb 100644
--- a/JodaTime/src/java/org/joda/time/base/AbstractInstant.java
+++ b/JodaTime/src/java/org/joda/time/base/AbstractInstant.java
@@ -1,5 +1,5 @@
 /*
- *  Copyright 2001-2005 Stephen Colebourne
+ *  Copyright 2001-2006 Stephen Colebourne
  *
  *  Licensed under the Apache License, Version 2.0 (the "License");
  *  you may not use this file except in compliance with the License.
@@ -136,21 +136,21 @@ public Instant toInstant() {
     }
 
     /**
-     * Get this object as a DateTime.
-     * 
+     * Get this object as a DateTime in the same zone.
+     *
      * @return a DateTime using the same millis
      */
     public DateTime toDateTime() {
-        return new DateTime(getMillis());
+        return new DateTime(getMillis(), getZone());
     }
 
     /**
-     * Get this object as a DateTime using ISOChronology in the default zone.
-     * 
-     * @return a DateTime using the same millis with ISOChronology in the default zone.
+     * Get this object as a DateTime using ISOChronology in the same zone.
+     *
+     * @return a DateTime using the same millis with ISOChronology
      */
     public DateTime toDateTimeISO() {
-        return new DateTime(getMillis(), ISOChronology.getInstance());
+        return new DateTime(getMillis(), ISOChronology.getInstance(getZone()));
     }
 
     /**
@@ -166,7 +166,7 @@ public DateTime toDateTime(DateTimeZone zone) {
     }
 
     /**
-     * Get this object as a DateTime.
+     * Get this object as a DateTime using the given chronology and its zone.
      * 
      * @param chronology chronology to apply, or ISOChronology if null
      * @return a DateTime using the same millis
@@ -181,21 +181,21 @@ public DateTime toDateTime(Chronology chronology) {
     // returning a copy prevents this.
 
     /**
-     * Get this object as a MutableDateTime.
-     * 
+     * Get this object as a MutableDateTime in the same zone.
+     *
      * @return a MutableDateTime using the same millis
      */
     public MutableDateTime toMutableDateTime() {
-        return new MutableDateTime(getMillis());
+        return new MutableDateTime(getMillis(), getZone());
     }
 
     /**
-     * Get this object as a MutableDateTime using ISOChronology in the default zone.
-     * 
-     * @return a MutableDateTime using the same millis with ISOChronology in the default zone.
+     * Get this object as a MutableDateTime using ISOChronology in the same zone.
+     *
+     * @return a MutableDateTime using the same millis with ISOChronology
      */
     public MutableDateTime toMutableDateTimeISO() {
-        return new MutableDateTime(getMillis(), ISOChronology.getInstance());
+        return new MutableDateTime(getMillis(), ISOChronology.getInstance(getZone()));
     }
 
     /**
@@ -211,7 +211,7 @@ public MutableDateTime toMutableDateTime(DateTimeZone zone) {
     }
 
     /**
-     * Get this object as a MutableDateTime.
+     * Get this object as a MutableDateTime using the given chronology and its zone.
      * 
      * @param chronology chronology to apply, or ISOChronology if null
      * @return a MutableDateTime using the same millis
diff --git a/JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java b/JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java
index 04f05e03f..1245377d2 100644
--- a/JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java
+++ b/JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java
@@ -1,5 +1,5 @@
 /*
- *  Copyright 2001-2005 Stephen Colebourne
+ *  Copyright 2001-2006 Stephen Colebourne
  *
  *  Licensed under the Apache License, Version 2.0 (the "License");
  *  you may not use this file except in compliance with the License.
@@ -434,21 +434,21 @@ public void testToInstant() {
         assertEquals(TEST_TIME1_LONDON, result.getMillis());
     }
 
-    public void testToDateMidnight() {
-        DateMidnight test = new DateMidnight(TEST_TIME1_UTC);
+    public void testToDateTime() {
+        DateMidnight test = new DateMidnight(TEST_TIME1_UTC, PARIS);
         DateTime result = test.toDateTime();
         assertEquals(test.getMillis(), result.getMillis());
-        assertEquals(TEST_TIME1_LONDON, result.getMillis());
-        assertEquals(LONDON, result.getZone());
+        assertEquals(TEST_TIME1_PARIS, result.getMillis());
+        assertEquals(PARIS, result.getZone());
     }
 
     public void testToDateTimeISO() {
-        DateMidnight test = new DateMidnight(TEST_TIME1_UTC);
+        DateMidnight test = new DateMidnight(TEST_TIME1_UTC, PARIS);
         DateTime result = test.toDateTimeISO();
         assertSame(DateTime.class, result.getClass());
         assertSame(ISOChronology.class, result.getChronology().getClass());
         assertEquals(test.getMillis(), result.getMillis());
-        assertEquals(ISOChronology.getInstance(), result.getChronology());
+        assertEquals(ISOChronology.getInstance(PARIS), result.getChronology());
     }
 
     public void testToDateTime_DateTimeZone() {
@@ -504,19 +504,19 @@ public void testToDateTime_Chronology() {
     }
 
     public void testToMutableDateTime() {
-        DateMidnight test = new DateMidnight(TEST_TIME1_UTC);
+        DateMidnight test = new DateMidnight(TEST_TIME1_UTC, PARIS);
         MutableDateTime result = test.toMutableDateTime();
         assertEquals(test.getMillis(), result.getMillis());
-        assertEquals(ISOChronology.getInstance(), result.getChronology());
+        assertEquals(ISOChronology.getInstance(PARIS), result.getChronology());
     }
 
     public void testToMutableDateTimeISO() {
-        DateMidnight test = new DateMidnight(TEST_TIME1_UTC);
+        DateMidnight test = new DateMidnight(TEST_TIME1_UTC, PARIS);
         MutableDateTime result = test.toMutableDateTimeISO();
         assertSame(MutableDateTime.class, result.getClass());
         assertSame(ISOChronology.class, result.getChronology().getClass());
         assertEquals(test.getMillis(), result.getMillis());
-        assertEquals(ISOChronology.getInstance(), result.getChronology());
+        assertEquals(ISOChronology.getInstance(PARIS), result.getChronology());
     }
 
     public void testToMutableDateTime_DateTimeZone() {
diff --git a/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java b/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java
index bfa1cb25c..b9bf6ec52 100644
--- a/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java
+++ b/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java
@@ -1,5 +1,5 @@
 /*
- *  Copyright 2001-2005 Stephen Colebourne
+ *  Copyright 2001-2006 Stephen Colebourne
  *
  *  Licensed under the Apache License, Version 2.0 (the "License");
  *  you may not use this file except in compliance with the License.
@@ -505,7 +505,7 @@ public void testToDateTimeISO() {
         assertSame(DateTime.class, result.getClass());
         assertSame(ISOChronology.class, result.getChronology().getClass());
         assertEquals(test.getMillis(), result.getMillis());
-        assertEquals(ISOChronology.getInstance(), result.getChronology());
+        assertEquals(ISOChronology.getInstance(PARIS), result.getChronology());
         assertNotSame(test, result);
         
         test = new DateTime(TEST_TIME1, BuddhistChronology.getInstance());
@@ -566,19 +566,19 @@ public void testToDateTime_Chronology() {
     }
 
     public void testToMutableDateTime() {
-        DateTime test = new DateTime(TEST_TIME1);
+        DateTime test = new DateTime(TEST_TIME1, PARIS);
         MutableDateTime result = test.toMutableDateTime();
         assertEquals(test.getMillis(), result.getMillis());
-        assertEquals(ISOChronology.getInstance(), result.getChronology());
+        assertEquals(ISOChronology.getInstance(PARIS), result.getChronology());
     }
 
     public void testToMutableDateTimeISO() {
-        DateTime test = new DateTime(TEST_TIME1);
+        DateTime test = new DateTime(TEST_TIME1, PARIS);
         MutableDateTime result = test.toMutableDateTimeISO();
         assertSame(MutableDateTime.class, result.getClass());
         assertSame(ISOChronology.class, result.getChronology().getClass());
         assertEquals(test.getMillis(), result.getMillis());
-        assertEquals(ISOChronology.getInstance(), result.getChronology());
+        assertEquals(ISOChronology.getInstance(PARIS), result.getChronology());
     }
 
     public void testToMutableDateTime_DateTimeZone() {
diff --git a/JodaTime/src/test/org/joda/time/TestInstant_Basics.java b/JodaTime/src/test/org/joda/time/TestInstant_Basics.java
index 7799917a2..4fac72ea8 100644
--- a/JodaTime/src/test/org/joda/time/TestInstant_Basics.java
+++ b/JodaTime/src/test/org/joda/time/TestInstant_Basics.java
@@ -1,5 +1,5 @@
 /*
- *  Copyright 2001-2005 Stephen Colebourne
+ *  Copyright 2001-2006 Stephen Colebourne
  *
  *  Licensed under the Apache License, Version 2.0 (the "License");
  *  you may not use this file except in compliance with the License.
@@ -395,6 +395,7 @@ public void testToDateTime() {
         Instant test = new Instant(TEST_TIME1);
         DateTime result = test.toDateTime();
         assertEquals(TEST_TIME1, result.getMillis());
+        assertEquals(ISOChronology.getInstance(), result.getChronology());
     }
 
     public void testToDateTimeISO() {
diff --git a/JodaTime/src/test/org/joda/time/TestMutableDateTime_Basics.java b/JodaTime/src/test/org/joda/time/TestMutableDateTime_Basics.java
index 180e59d7b..c1e06baa7 100644
--- a/JodaTime/src/test/org/joda/time/TestMutableDateTime_Basics.java
+++ b/JodaTime/src/test/org/joda/time/TestMutableDateTime_Basics.java
@@ -1,5 +1,5 @@
 /*
- *  Copyright 2001-2005 Stephen Colebourne
+ *  Copyright 2001-2006 Stephen Colebourne
  *
  *  Licensed under the Apache License, Version 2.0 (the "License");
  *  you may not use this file except in compliance with the License.
@@ -439,19 +439,19 @@ public void testToInstant() {
     }
 
     public void testToDateTime() {
-        MutableDateTime test = new MutableDateTime(TEST_TIME1);
+        MutableDateTime test = new MutableDateTime(TEST_TIME1, PARIS);
         DateTime result = test.toDateTime();
         assertEquals(test.getMillis(), result.getMillis());
-        assertEquals(test.getChronology(), result.getChronology());
+        assertEquals(ISOChronology.getInstance(PARIS), result.getChronology());
     }
 
     public void testToDateTimeISO() {
-        MutableDateTime test = new MutableDateTime(TEST_TIME1);
+        MutableDateTime test = new MutableDateTime(TEST_TIME1, PARIS);
         DateTime result = test.toDateTimeISO();
         assertSame(DateTime.class, result.getClass());
         assertSame(ISOChronology.class, result.getChronology().getClass());
         assertEquals(test.getMillis(), result.getMillis());
-        assertEquals(ISOChronology.getInstance(), result.getChronology());
+        assertEquals(ISOChronology.getInstance(PARIS), result.getChronology());
     }
 
     public void testToDateTime_DateTimeZone() {
@@ -506,20 +506,20 @@ public void testToDateTime_Chronology() {
     }
 
     public void testToMutableDateTime() {
-        MutableDateTime test = new MutableDateTime(TEST_TIME1);
+        MutableDateTime test = new MutableDateTime(TEST_TIME1, PARIS);
         MutableDateTime result = test.toMutableDateTime();
         assertTrue(test != result);
         assertEquals(test.getMillis(), result.getMillis());
-        assertEquals(ISOChronology.getInstance(), result.getChronology());
+        assertEquals(ISOChronology.getInstance(PARIS), result.getChronology());
     }
 
     public void testToMutableDateTimeISO() {
-        MutableDateTime test = new MutableDateTime(TEST_TIME1);
+        MutableDateTime test = new MutableDateTime(TEST_TIME1, PARIS);
         MutableDateTime result = test.toMutableDateTimeISO();
         assertSame(MutableDateTime.class, result.getClass());
         assertSame(ISOChronology.class, result.getChronology().getClass());
         assertEquals(test.getMillis(), result.getMillis());
-        assertEquals(ISOChronology.getInstance(), result.getChronology());
+        assertEquals(ISOChronology.getInstance(PARIS), result.getChronology());
         assertNotSame(test, result);
     }
 

From e3c39e2428010dba373d9f1aec9cb9169f06aa62 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 12 Feb 2006 20:56:55 +0000
Subject: [PATCH 5/5] Release 1.2.1

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_2_000_BRANCH@1028 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/build.xml              |  4 +-
 JodaTime/project.properties     | 12 ++++++
 JodaTime/project.xml            |  2 +-
 JodaTime/xdocs/index.xml        |  4 +-
 JodaTime/xdocs/installation.xml |  5 ++-
 JodaTime/xdocs/tasks.xml        |  2 +-
 JodaTime/xdocs/upgradeto121.xml | 76 +++++++++++++++++++++++++++++++++
 7 files changed, 97 insertions(+), 8 deletions(-)
 create mode 100644 JodaTime/xdocs/upgradeto121.xml

diff --git a/JodaTime/build.xml b/JodaTime/build.xml
index 0e07a8559..e0d2508e1 100644
--- a/JodaTime/build.xml
+++ b/JodaTime/build.xml
@@ -27,8 +27,8 @@
   <property name="component.title"         value="Joda date and time"/>
 
   <!-- The current version number of this component -->
-  <property name="component.version"       value="1.2"/>
-  <property name="previous.version"        value="1.1"/>
+  <property name="component.version"       value="1.2.1"/>
+  <property name="previous.version"        value="1.2"/>
 
   <!-- The current version number of this component -->
   <property name="component.fullname"      value="${component.name}-${component.version}"/>
diff --git a/JodaTime/project.properties b/JodaTime/project.properties
index 10dd48422..5a599e46e 100644
--- a/JodaTime/project.properties
+++ b/JodaTime/project.properties
@@ -15,3 +15,15 @@ maven.javadoc.package=false
 maven.javadoc.private=false
 
 maven.jdiff.old.tag=v1_1_000
+
+#maven.jar.manifest=src/conf/manifest-additions.txt
+maven.dist.src.assembly.dir=${maven.dist.assembly.dir}/src/${maven.final.name}-src
+
+maven.changes.issue.template=http://sourceforge.net/support/tracker.php?aid=%ISSUE%
+
+maven.sourceforge.project.name=joda-time
+maven.sourceforge.project.groupId=97367
+maven.sourceforge.project.packageName=joda-time
+maven.sourceforge.project.releaseNotes=RELEASE-NOTES.txt
+maven.sourceforge.project.sendEmailNotice=true
+maven.sourceforge.project.submitNewsItem=false
diff --git a/JodaTime/project.xml b/JodaTime/project.xml
index a11443fa0..938d40de1 100644
--- a/JodaTime/project.xml
+++ b/JodaTime/project.xml
@@ -7,7 +7,7 @@
   <groupId>joda-time</groupId>
   <artifactId>joda-time</artifactId>
   <name>Joda time</name>
-  <currentVersion>1.2</currentVersion>
+  <currentVersion>1.2.1</currentVersion>
   <organization>
     <name>Joda.org</name>
     <url>http://www.joda.org</url>
diff --git a/JodaTime/xdocs/index.xml b/JodaTime/xdocs/index.xml
index 175ada87d..554748e93 100644
--- a/JodaTime/xdocs/index.xml
+++ b/JodaTime/xdocs/index.xml
@@ -35,7 +35,7 @@ public String getBirthMonthText(<b>YearMonthDay</b> dateOfBirth) {
   return dateOfBirth.monthOfYear().getAsText(Locale.ENGLISH);
 }
 </source>
-Version 1.2 was released on 2005-12-21 -
+Version 1.2.1 was released on 2006-02-12 -
 <a href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=104212">Download now</a>
 </p>
 </section>
@@ -105,7 +105,7 @@ Various documentation is available:
 
 <section name="Releases">
 <p>
-<a href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=104212">Release 1.2</a>
+<a href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=104212">Release 1.2.1</a>
 is the current latest release.
 This release is considered stable and worthy of the 1.x tag.
 It has extensive testing suites and has been used in production.
diff --git a/JodaTime/xdocs/installation.xml b/JodaTime/xdocs/installation.xml
index 14f533d32..74f178092 100644
--- a/JodaTime/xdocs/installation.xml
+++ b/JodaTime/xdocs/installation.xml
@@ -12,16 +12,17 @@
 <p>
 To use Joda-Time you need to
 <a href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=104212">download the latest version</a>.
-The download will contain the joda-time-1.2.jar.
+The download will contain the joda-time-1.2.1.jar.
 Once you add this to your classpath you will be able to use Joda-Time.
 </p>
 <p>
-The binary download also includes joda-time-1.2-src-ide.zip, which is a zip file
+The binary download also includes joda-time-1.2.1-src-ide.zip, which is a zip file
 of the source code suitable for linking to the jar file in IDEs such as Eclipse.
 </p>
 <p>
 The release notes for upgraders can be found here:
 <ul>
+<li><a href="upgradeto121.html">Version 1.2 to Version 1.2.1</a></li>
 <li><a href="upgradeto120.html">Version 1.1 to Version 1.2</a></li>
 <li><a href="upgradeto110.html">Version 1.0 to Version 1.1</a></li>
 <li><a href="upgradeto100.html">Version 0.99 to Version 1.0</a></li>
diff --git a/JodaTime/xdocs/tasks.xml b/JodaTime/xdocs/tasks.xml
index b55b43fb7..bb79832f8 100644
--- a/JodaTime/xdocs/tasks.xml
+++ b/JodaTime/xdocs/tasks.xml
@@ -16,7 +16,7 @@ The following tasks are on the possible TODO list - contact the mailing lists fo
 </p>
 
 <ul>
-<li>Add more chronologies - Hebrew, Islamic, Persian, Hindu, Thai, Chinese, Japanese,...</li>
+<li>Add more chronologies - Hebrew, Persian, Hindu, Thai, Chinese, Japanese,...</li>
 <li>Consider formatting ordinal numbers, like 1st, 2nd, 3rd</li>
 <li>Consider allowing the text output to be altered</li>
 <li>Formatter switching by locale</li>
diff --git a/JodaTime/xdocs/upgradeto121.xml b/JodaTime/xdocs/upgradeto121.xml
new file mode 100644
index 000000000..0622e1e90
--- /dev/null
+++ b/JodaTime/xdocs/upgradeto121.xml
@@ -0,0 +1,76 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 1.2 to 1.2.1</title>
+  <author email="scolebourne@joda.org">Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 1.2 to version 1.2.1.
+<source>
+Joda-Time version 1.2.1
+-----------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is a patch release for Joda-Time 1.2.
+This release only contains bug fixes.
+We recommend all users of 1.2 upgrade to 1.2.1.
+
+We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license causes you problems please contact the mailing list.
+
+** Please also check out the JSP and Hibernate contributed projects **
+
+
+Incompatible changes since 1.2
+------------------------------
+Binary compatible - Yes
+
+Source compatible - Yes
+  - A bug fix has changed the effect of some toXxx() methods if you use time zones
+
+Serialization compatible - Yes
+
+Data compatible - Yes
+  - DateTimeZone data updated to version 2006a
+
+
+Deprecations since 1.2
+----------------------
+- None
+
+
+Bug fixes since 1.2
+-------------------
+- DateTime/DateMidnight/MutableDateTime/AbstractInstant
+   Conversion methods toDateTime, toDateTimeISO, toMutableDateTime, and
+    toMutableDateTimeISO now preserve the time zone.
+    Previously calling any of these four methods would convert the result to
+    the default time zone. This was incorrect.
+    The methods have been changed to preserve the time zone.
+   The similarly named methods on Instant have not changed behaviour.
+
+- DateTimeFormatterBuilder.MatchingParser
+   Previously didn't estimate parsed length correctly
+
+
+Enhancements since 1.2
+----------------------
+- None
+</source>
+</p>
+</section>
+
+</body>
+</document>