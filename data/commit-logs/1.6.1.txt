From c467636af28aaceab303bf0e5876954dc7547752 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sat, 7 Aug 2010 22:40:01 +0000
Subject: [PATCH 01/36] Update timezone data to 2010k

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1495 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 .../src/java/org/joda/time/tz/src/Readme.txt  |    2 +-
 JodaTime/src/java/org/joda/time/tz/src/africa | 1888 +++---
 .../src/java/org/joda/time/tz/src/antarctica  |  738 ++-
 JodaTime/src/java/org/joda/time/tz/src/asia   | 4616 ++++++++------
 .../src/java/org/joda/time/tz/src/australasia | 2993 ++++-----
 .../src/java/org/joda/time/tz/src/backward    |  230 +-
 .../src/java/org/joda/time/tz/src/etcetera    |  163 +-
 JodaTime/src/java/org/joda/time/tz/src/europe | 5318 ++++++++--------
 .../java/org/joda/time/tz/src/northamerica    | 5548 +++++++++--------
 .../src/java/org/joda/time/tz/src/pacificnew  |   55 +-
 .../java/org/joda/time/tz/src/southamerica    | 2996 ++++-----
 .../src/java/org/joda/time/tz/src/systemv     |   75 +-
 12 files changed, 13030 insertions(+), 11592 deletions(-)

diff --git a/JodaTime/src/java/org/joda/time/tz/src/Readme.txt b/JodaTime/src/java/org/joda/time/tz/src/Readme.txt
index d45aa6003..ba9f69112 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/Readme.txt
+++ b/JodaTime/src/java/org/joda/time/tz/src/Readme.txt
@@ -1,2 +1,2 @@
 The data files in this directory were obtained from the public tz database,
-http://www.twinsun.com/tz/tz-link.htm, version 2008i.
+http://www.twinsun.com/tz/tz-link.htm, version 2010k.
diff --git a/JodaTime/src/java/org/joda/time/tz/src/africa b/JodaTime/src/java/org/joda/time/tz/src/africa
index 39d02ad77..0c37506a2 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/africa
+++ b/JodaTime/src/java/org/joda/time/tz/src/africa
@@ -1,840 +1,1048 @@
-# @(#)africa	8.17
-# <pre>
-
-# This data is by no means authoritative; if you think you know better,
-# go ahead and edit the file (and please send any changes to
-# tz@elsie.nci.nih.gov for general use in the future).
-
-# From Paul Eggert (2006-03-22):
-#
-# A good source for time zone historical data outside the U.S. is
-# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),
-# San Diego: ACS Publications, Inc. (2003).
-#
-# Gwillim Law writes that a good source
-# for recent time zone data is the International Air Transport
-# Association's Standard Schedules Information Manual (IATA SSIM),
-# published semiannually.  Law sent in several helpful summaries
-# of the IATA's data after 1990.
-#
-# Except where otherwise noted, Shanks & Pottenger is the source for
-# entries through 1990, and IATA SSIM is the source for entries afterwards.
-#
-# Another source occasionally used is Edward W. Whitman, World Time Differences,
-# Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated), which
-# I found in the UCLA library.
-#
-# A reliable and entertaining source about time zones is
-# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).
-#
-# Previous editions of this database used WAT, CAT, SAT, and EAT
-# for +0:00 through +3:00, respectively,
-# but Mark R V Murray reports that
-# `SAST' is the official abbreviation for +2:00 in the country of South Africa,
-# `CAT' is commonly used for +2:00 in countries north of South Africa, and
-# `WAT' is probably the best name for +1:00, as the common phrase for
-# the area that includes Nigeria is ``West Africa''.
-# He has heard of ``Western Sahara Time'' for +0:00 but can find no reference.
-#
-# To make things confusing, `WAT' seems to have been used for -1:00 long ago;
-# I'd guess that this was because people needed _some_ name for -1:00,
-# and at the time, far west Africa was the only major land area in -1:00.
-# This usage is now obsolete, as the last use of -1:00 on the African
-# mainland seems to have been 1976 in Western Sahara.
-#
-# To summarize, the following abbreviations seem to have some currency:
-#	-1:00	WAT	West Africa Time (no longer used)
-#	 0:00	GMT	Greenwich Mean Time
-#	 2:00	CAT	Central Africa Time
-#	 2:00	SAST	South Africa Standard Time
-# and Murray suggests the following abbreviation:
-#	 1:00	WAT	West Africa Time
-# I realize that this leads to `WAT' being used for both -1:00 and 1:00
-# for times before 1976, but this is the best I can think of
-# until we get more information.
-#
-# I invented the following abbreviations; corrections are welcome!
-#	 2:00	WAST	West Africa Summer Time
-#	 2:30	BEAT	British East Africa Time (no longer used)
-#	 2:44:45 BEAUT	British East Africa Unified Time (no longer used)
-#	 3:00	CAST	Central Africa Summer Time (no longer used)
-#	 3:00	SAST	South Africa Summer Time (no longer used)
-#	 3:00	EAT	East Africa Time
-#	 4:00	EAST	East Africa Summer Time (no longer used)
-
-# Algeria
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Algeria	1916	only	-	Jun	14	23:00s	1:00	S
-Rule	Algeria	1916	1919	-	Oct	Sun>=1	23:00s	0	-
-Rule	Algeria	1917	only	-	Mar	24	23:00s	1:00	S
-Rule	Algeria	1918	only	-	Mar	 9	23:00s	1:00	S
-Rule	Algeria	1919	only	-	Mar	 1	23:00s	1:00	S
-Rule	Algeria	1920	only	-	Feb	14	23:00s	1:00	S
-Rule	Algeria	1920	only	-	Oct	23	23:00s	0	-
-Rule	Algeria	1921	only	-	Mar	14	23:00s	1:00	S
-Rule	Algeria	1921	only	-	Jun	21	23:00s	0	-
-Rule	Algeria	1939	only	-	Sep	11	23:00s	1:00	S
-Rule	Algeria	1939	only	-	Nov	19	 1:00	0	-
-Rule	Algeria	1944	1945	-	Apr	Mon>=1	 2:00	1:00	S
-Rule	Algeria	1944	only	-	Oct	 8	 2:00	0	-
-Rule	Algeria	1945	only	-	Sep	16	 1:00	0	-
-Rule	Algeria	1971	only	-	Apr	25	23:00s	1:00	S
-Rule	Algeria	1971	only	-	Sep	26	23:00s	0	-
-Rule	Algeria	1977	only	-	May	 6	 0:00	1:00	S
-Rule	Algeria	1977	only	-	Oct	21	 0:00	0	-
-Rule	Algeria	1978	only	-	Mar	24	 1:00	1:00	S
-Rule	Algeria	1978	only	-	Sep	22	 3:00	0	-
-Rule	Algeria	1980	only	-	Apr	25	 0:00	1:00	S
-Rule	Algeria	1980	only	-	Oct	31	 2:00	0	-
-# Shanks & Pottenger give 0:09:20 for Paris Mean Time; go with Howse's
-# more precise 0:09:21.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Algiers	0:12:12 -	LMT	1891 Mar 15 0:01
-			0:09:21	-	PMT	1911 Mar 11    # Paris Mean Time
-			0:00	Algeria	WE%sT	1940 Feb 25 2:00
-			1:00	Algeria	CE%sT	1946 Oct  7
-			0:00	-	WET	1956 Jan 29
-			1:00	-	CET	1963 Apr 14
-			0:00	Algeria	WE%sT	1977 Oct 21
-			1:00	Algeria	CE%sT	1979 Oct 26
-			0:00	Algeria	WE%sT	1981 May
-			1:00	-	CET
-
-# Angola
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Luanda	0:52:56	-	LMT	1892
-			0:52:04	-	AOT	1911 May 26 # Angola Time
-			1:00	-	WAT
-
-# Benin
-# Whitman says they switched to 1:00 in 1946, not 1934;
-# go with Shanks & Pottenger.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Africa/Porto-Novo	0:10:28	-	LMT	1912
-			0:00	-	GMT	1934 Feb 26
-			1:00	-	WAT
-
-# Botswana
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Gaborone	1:43:40 -	LMT	1885
-			2:00	-	CAT	1943 Sep 19 2:00
-			2:00	1:00	CAST	1944 Mar 19 2:00
-			2:00	-	CAT
-
-# Burkina Faso
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Africa/Ouagadougou	-0:06:04 -	LMT	1912
-			 0:00	-	GMT
-
-# Burundi
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Africa/Bujumbura	1:57:28	-	LMT	1890
-			2:00	-	CAT
-
-# Cameroon
-# Whitman says they switched to 1:00 in 1920; go with Shanks & Pottenger.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Douala	0:38:48	-	LMT	1912
-			1:00	-	WAT
-
-# Cape Verde
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Atlantic/Cape_Verde -1:34:04 -	LMT	1907			# Praia
-			-2:00	-	CVT	1942 Sep
-			-2:00	1:00	CVST	1945 Oct 15
-			-2:00	-	CVT	1975 Nov 25 2:00
-			-1:00	-	CVT
-
-# Central African Republic
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Bangui	1:14:20	-	LMT	1912
-			1:00	-	WAT
-
-# Chad
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Ndjamena	1:00:12 -	LMT	1912
-			1:00	-	WAT	1979 Oct 14
-			1:00	1:00	WAST	1980 Mar  8
-			1:00	-	WAT
-
-# Comoros
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Indian/Comoro	2:53:04 -	LMT	1911 Jul   # Moroni, Gran Comoro
-			3:00	-	EAT
-
-# Democratic Republic of Congo
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Africa/Kinshasa	1:01:12 -	LMT	1897 Nov 9
-			1:00	-	WAT
-Zone Africa/Lubumbashi	1:49:52 -	LMT	1897 Nov 9
-			2:00	-	CAT
-
-# Republic of the Congo
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Africa/Brazzaville	1:01:08 -	LMT	1912
-			1:00	-	WAT
-
-# Cote D'Ivoire
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Abidjan	-0:16:08 -	LMT	1912
-			 0:00	-	GMT
-
-# Djibouti
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Djibouti	2:52:36 -	LMT	1911 Jul
-			3:00	-	EAT
-
-###############################################################################
-
-# Egypt
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Egypt	1940	only	-	Jul	15	0:00	1:00	S
-Rule	Egypt	1940	only	-	Oct	 1	0:00	0	-
-Rule	Egypt	1941	only	-	Apr	15	0:00	1:00	S
-Rule	Egypt	1941	only	-	Sep	16	0:00	0	-
-Rule	Egypt	1942	1944	-	Apr	 1	0:00	1:00	S
-Rule	Egypt	1942	only	-	Oct	27	0:00	0	-
-Rule	Egypt	1943	1945	-	Nov	 1	0:00	0	-
-Rule	Egypt	1945	only	-	Apr	16	0:00	1:00	S
-Rule	Egypt	1957	only	-	May	10	0:00	1:00	S
-Rule	Egypt	1957	1958	-	Oct	 1	0:00	0	-
-Rule	Egypt	1958	only	-	May	 1	0:00	1:00	S
-Rule	Egypt	1959	1981	-	May	 1	1:00	1:00	S
-Rule	Egypt	1959	1965	-	Sep	30	3:00	0	-
-Rule	Egypt	1966	1994	-	Oct	 1	3:00	0	-
-Rule	Egypt	1982	only	-	Jul	25	1:00	1:00	S
-Rule	Egypt	1983	only	-	Jul	12	1:00	1:00	S
-Rule	Egypt	1984	1988	-	May	 1	1:00	1:00	S
-Rule	Egypt	1989	only	-	May	 6	1:00	1:00	S
-Rule	Egypt	1990	1994	-	May	 1	1:00	1:00	S
-# IATA (after 1990) says transitions are at 0:00.
-# Go with IATA starting in 1995, except correct 1995 entry from 09-30 to 09-29.
-Rule	Egypt	1995	max	-	Apr	lastFri	 0:00s	1:00	S
-Rule	Egypt	1995	2005	-	Sep	lastThu	23:00s	0	-
-# From Steffen Thorsen (2006-09-19):
-# The Egyptian Gazette, issue 41,090 (2006-09-18), page 1, reports:
-# Egypt will turn back clocks by one hour at the midnight of Thursday
-# after observing the daylight saving time since May.
-# http://news.gom.com.eg/gazette/pdf/2006/09/18/01.pdf
-Rule	Egypt	2006	only	-	Sep	21	23:00s	0	-
-# From Dirk Losch (2007-08-14):
-# I received a mail from an airline which says that the daylight
-# saving time in Egypt will end in the night of 2007-09-06 to 2007-09-07.
-# From Jesper Norgaard Welen (2007-08-15): [The following agree:]
-# http://www.nentjes.info/Bill/bill5.htm 
-# http://www.timeanddate.com/worldclock/city.html?n=53
-# From Steffen Thorsen (2007-09-04): The official information...:
-# http://www.sis.gov.eg/En/EgyptOnline/Miscellaneous/000002/0207000000000000001580.htm
-Rule	Egypt	2007	only	-	Sep	Thu>=1	23:00s	0	-
-# From Abdelrahman Hassan (2007-09-06):
-# Due to the Hijri (lunar Islamic calendar) year being 11 days shorter
-# than the year of the Gregorian calendar, Ramadan shifts earlier each
-# year. This year it will be observed September 13 (September is quite
-# hot in Egypt), and the idea is to make fasting easier for workers by
-# shifting business hours one hour out of daytime heat. Consequently,
-# unless discontinued, next DST may end Thursday 28 August 2008.
-# From Paul Eggert (2007-08-17):
-# For lack of better info, assume the new rule is last Thursday in August.
-Rule	Egypt	2008	max	-	Aug	lastThu	23:00s	0	-
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Cairo	2:05:00 -	LMT	1900 Oct
-			2:00	Egypt	EE%sT
-
-# Equatorial Guinea
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Malabo	0:35:08 -	LMT	1912
-			0:00	-	GMT	1963 Dec 15
-			1:00	-	WAT
-
-# Eritrea
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Asmara	2:35:32 -	LMT	1870
-			2:35:32	-	AMT	1890	      # Asmara Mean Time
-			2:35:20	-	ADMT	1936 May 5    # Adis Dera MT
-			3:00	-	EAT
-
-# Ethiopia
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger write that Ethiopia had six narrowly-spaced time zones
-# between 1870 and 1890, and that they merged to 38E50 (2:35:20) in 1890.
-# We'll guess that 38E50 is for Adis Dera.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Africa/Addis_Ababa	2:34:48 -	LMT	1870
-			2:35:20	-	ADMT	1936 May 5    # Adis Dera MT
-			3:00	-	EAT
-
-# Gabon
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Africa/Libreville	0:37:48 -	LMT	1912
-			1:00	-	WAT
-
-# Gambia
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Banjul	-1:06:36 -	LMT	1912
-			-1:06:36 -	BMT	1935	# Banjul Mean Time
-			-1:00	-	WAT	1964
-			 0:00	-	GMT
-
-# Ghana
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-# Whitman says DST was observed from 1931 to ``the present'';
-# go with Shanks & Pottenger.
-Rule	Ghana	1936	1942	-	Sep	 1	0:00	0:20	GHST
-Rule	Ghana	1936	1942	-	Dec	31	0:00	0	GMT
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Accra	-0:00:52 -	LMT	1918
-			 0:00	Ghana	%s
-
-# Guinea
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Conakry	-0:54:52 -	LMT	1912
-			 0:00	-	GMT	1934 Feb 26
-			-1:00	-	WAT	1960
-			 0:00	-	GMT
-
-# Guinea-Bissau
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Bissau	-1:02:20 -	LMT	1911 May 26
-			-1:00	-	WAT	1975
-			 0:00	-	GMT
-
-# Kenya
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Nairobi	2:27:16	-	LMT	1928 Jul
-			3:00	-	EAT	1930
-			2:30	-	BEAT	1940
-			2:44:45	-	BEAUT	1960
-			3:00	-	EAT
-
-# Lesotho
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Maseru	1:50:00 -	LMT	1903 Mar
-			2:00	-	SAST	1943 Sep 19 2:00
-			2:00	1:00	SAST	1944 Mar 19 2:00
-			2:00	-	SAST
-
-# Liberia
-# From Paul Eggert (2006-03-22):
-# In 1972 Liberia was the last country to switch
-# from a UTC offset that was not a multiple of 15 or 20 minutes.
-# Howse reports that it was in honor of their president's birthday.
-# Shank & Pottenger report the date as May 1, whereas Howse reports Jan;
-# go with Shanks & Pottenger.
-# For Liberia before 1972, Shanks & Pottenger report -0:44, whereas Howse and
-# Whitman each report -0:44:30; go with the more precise figure.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Monrovia	-0:43:08 -	LMT	1882
-			-0:43:08 -	MMT	1919 Mar # Monrovia Mean Time
-			-0:44:30 -	LRT	1972 May # Liberia Time
-			 0:00	-	GMT
-
-###############################################################################
-
-# Libya
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Libya	1951	only	-	Oct	14	2:00	1:00	S
-Rule	Libya	1952	only	-	Jan	 1	0:00	0	-
-Rule	Libya	1953	only	-	Oct	 9	2:00	1:00	S
-Rule	Libya	1954	only	-	Jan	 1	0:00	0	-
-Rule	Libya	1955	only	-	Sep	30	0:00	1:00	S
-Rule	Libya	1956	only	-	Jan	 1	0:00	0	-
-Rule	Libya	1982	1984	-	Apr	 1	0:00	1:00	S
-Rule	Libya	1982	1985	-	Oct	 1	0:00	0	-
-Rule	Libya	1985	only	-	Apr	 6	0:00	1:00	S
-Rule	Libya	1986	only	-	Apr	 4	0:00	1:00	S
-Rule	Libya	1986	only	-	Oct	 3	0:00	0	-
-Rule	Libya	1987	1989	-	Apr	 1	0:00	1:00	S
-Rule	Libya	1987	1989	-	Oct	 1	0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Tripoli	0:52:44 -	LMT	1920
-			1:00	Libya	CE%sT	1959
-			2:00	-	EET	1982
-			1:00	Libya	CE%sT	1990 May  4
-# The following entries are from Shanks & Pottenger;
-# the IATA SSIM data contain some obvious errors.
-			2:00	-	EET	1996 Sep 30
-			1:00	-	CET	1997 Apr  4
-			1:00	1:00	CEST	1997 Oct  4
-			2:00	-	EET
-
-# Madagascar
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Indian/Antananarivo 3:10:04 -	LMT	1911 Jul
-			3:00	-	EAT	1954 Feb 27 23:00s
-			3:00	1:00	EAST	1954 May 29 23:00s
-			3:00	-	EAT
-
-# Malawi
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Blantyre	2:20:00 -	LMT	1903 Mar
-			2:00	-	CAT
-
-# Mali
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Bamako	-0:32:00 -	LMT	1912
-			 0:00	-	GMT	1934 Feb 26
-			-1:00	-	WAT	1960 Jun 20
-			 0:00	-	GMT
-
-# Mauritania
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Africa/Nouakchott	-1:03:48 -	LMT	1912
-			 0:00	-	GMT	1934 Feb 26
-			-1:00	-	WAT	1960 Nov 28
-			 0:00	-	GMT
-
-# Mauritius
-
-# From Steffen Thorsen (2008-06-25):
-# Mauritius plans to observe DST from 2008-11-01 to 2009-03-31 on a trial
-# basis....
-# It seems that Mauritius observed daylight saving time from 1982-10-10 to 
-# 1983-03-20 as well, but that was not successful....
-# http://www.timeanddate.com/news/time/mauritius-daylight-saving-time.html
-
-# From Alex Krivenyshev (2008-06-25):
-# http://economicdevelopment.gov.mu/portal/site/Mainhomepage/menuitem.a42b24128104d9845dabddd154508a0c/?content_id=0a7cee8b5d69a110VgnVCM1000000a04a8c0RCRD
-
-# From Arthur David Olson (2008-06-30):
-# The www.timeanddate.com article cited by Steffen Thorsen notes that "A
-# final decision has yet to be made on the times that daylight saving
-# would begin and end on these dates." As a place holder, use midnight.
-
-# From Paul Eggert (2008-06-30):
-# Follow Thorsen on DST in 1982/1983, instead of Shanks & Pottenger.
-
-# From Steffen Thorsen (2008-07-10):
-# According to
-# <a href="http://www.lexpress.mu/display_article.php?news_id=111216">
-# http://www.lexpress.mu/display_article.php?news_id=111216
-# </a>
-# (in French), Mauritius will start and end their DST a few days earlier
-# than previously announced (2008-11-01 to 2009-03-31).  The new start
-# date is 2008-10-26 at 02:00 and the new end date is 2009-03-27 (no time
-# given, but it is probably at either 2 or 3 wall clock time).
-# 
-# A little strange though, since the article says that they moved the date 
-# to align itself with Europe and USA which also change time on that date, 
-# but that means they have not paid attention to what happened in 
-# USA/Canada last year (DST ends first Sunday in November). I also wonder 
-# why that they end on a Friday, instead of aligning with Europe which 
-# changes two days later.
-
-# From Alex Krivenyshev (2008-07-11):
-# Seems that English language article "The revival of daylight saving
-# time:  Energy conservation?"-# No. 16578 (07/11/2008) was originally
-# published on Monday, June 30, 2008...
-#
-# I guess that article in French "Le gouvernement avance l'introduction
-# de l'heure d'ete" stating that DST in Mauritius starting on October 26
-# and ending on March 27, 2009 is the most recent one.
-# ...
-# <a href="http://www.worldtimezone.com/dst_news/dst_news_mauritius02.html">
-# http://www.worldtimezone.com/dst_news/dst_news_mauritius02.html
-# </a>
-
-# From Riad M. Hossen Ally (2008-08-03):
-# The Government of Mauritius weblink
-# <a href="http://www.gov.mu/portal/site/pmosite/menuitem.4ca0efdee47462e7440a600248a521ca/?content_id=3D4728ca68b2a5b110VgnVCM1000000a04a8c0RCRD">
-# http://www.gov.mu/portal/site/pmosite/menuitem.4ca0efdee47462e7440a600248a521ca/?content_id=3D4728ca68b2a5b110VgnVCM1000000a04a8c0RCRD
-# </a>
-# Cabinet Decision of July 18th, 2008 states as follows:
-#
-# 4. ...Cabinet has agreed to the introduction into the National Assembly
-# of the Time Bill which provides for the introduction of summer time in
-# Mauritius. The summer time period which will be of one hour ahead of
-# the standard time, will be aligned with that in Europe and the United
-# States of America. It will start at two o'clock in the morning on the
-# last Sunday of October and will end at two o'clock in the morning on
-# the last Sunday of March the following year. The summer time for the
-# year 2008 - 2009 will, therefore, be effective as from 26 October 2008
-# and end on 29 March 2009.
-
-# From Ed Maste (2008-10-07):
-# THE TIME BILL (No. XXVII of 2008) Explanatory Memorandum states the
-# beginning / ending of summer time is 2 o'clock standard time in the
-# morning of the last Sunday of October / last Sunday of March.
-# <a href="http://www.gov.mu/portal/goc/assemblysite/file/bill2708.pdf">
-# http://www.gov.mu/portal/goc/assemblysite/file/bill2708.pdf
-# </a>
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule Mauritius	1982	only	-	Oct	10	0:00	1:00	S
-Rule Mauritius	1983	only	-	Mar	21	0:00	0	-
-Rule Mauritius	2008	max	-	Oct	lastSun	2:00s	1:00	S
-Rule Mauritius	2009	max	-	Mar	lastSun	2:00s	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Indian/Mauritius	3:50:00 -	LMT	1907		# Port Louis
-			4:00 Mauritius	MU%sT	# Mauritius Time
-# Agalega Is, Rodriguez
-# no information; probably like Indian/Mauritius
-
-# Mayotte
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Indian/Mayotte	3:00:56 -	LMT	1911 Jul	# Mamoutzou
-			3:00	-	EAT
-
-# Morocco
-# See the `europe' file for Spanish Morocco (Africa/Ceuta).
-
-# From Alex Krivenyshev (2008-05-09):
-# Here is an article that Morocco plan to introduce Daylight Saving Time between
-# 1 June, 2008 and 27 September, 2008.
-#
-# "... Morocco is to save energy by adjusting its clock during summer so it will
-# be one hour ahead of GMT between 1 June and 27 September, according to
-# Communication Minister and Gov ernment Spokesman, Khalid Naciri...."
-#
-# <a href="http://www.worldtimezone.net/dst_news/dst_news_morocco01.html">
-# http://www.worldtimezone.net/dst_news/dst_news_morocco01.html
-# </a>
-# OR
-# <a href="http://en.afrik.com/news11892.html">
-# http://en.afrik.com/news11892.html
-# </a>
-
-# From Alex Krivenyshev (2008-05-09):
-# The Morocco time change can be confirmed on Morocco web site Maghreb Arabe Presse:
-# <a href="http://www.map.ma/eng/sections/box3/morocco_shifts_to_da/view">
-# http://www.map.ma/eng/sections/box3/morocco_shifts_to_da/view
-# </a>
-#
-# Morocco shifts to daylight time on June 1st through September 27, Govt.
-# spokesman.
-
-# From Patrice Scattolin (2008-05-09):
-# According to this article:
-# <a href="http://www.avmaroc.com/actualite/heure-dete-comment-a127896.html">
-# http://www.avmaroc.com/actualite/heure-dete-comment-a127896.html
-# </a>
-# (and republished here:
-# <a href="http://www.actu.ma/heure-dete-comment_i127896_0.html">
-# http://www.actu.ma/heure-dete-comment_i127896_0.html
-# </a>
-# )
-# the changes occurs at midnight:
-#
-# saturday night may 31st at midnight (which in french is to be
-# intrepreted as the night between saturday and sunday)
-# sunday night the 28th  at midnight
-#
-# Seeing that the 28th is monday, I am guessing that she intends to say
-# the midnight of the 28th which is the midnight between sunday and
-# monday, which jives with other sources that say that it's inclusive
-# june1st to sept 27th.
-#
-# The decision was taken by decree *2-08-224 *but I can't find the decree
-# published on the web.
-#
-# It's also confirmed here:
-# <a href="http://www.maroc.ma/NR/exeres/FACF141F-D910-44B0-B7FA-6E03733425D1.htm">
-# http://www.maroc.ma/NR/exeres/FACF141F-D910-44B0-B7FA-6E03733425D1.htm
-# </a>
-# on a government portal as being  between june 1st and sept 27th (not yet
-# posted in english).
-#
-# The following google query will generate many relevant hits:
-# <a href="http://www.google.com/search?hl=en&q=Conseil+de+gouvernement+maroc+heure+avance&btnG=Search">
-# http://www.google.com/search?hl=en&q=Conseil+de+gouvernement+maroc+heure+avance&btnG=Search
-# </a>
-
-# From Alex Krivenyshev (2008-05-09):
-# Is Western Sahara (part which administrated by Morocco) going to follow
-# Morocco DST changes?  Any information?  What about other part of
-# Western Sahara - under administration of POLISARIO Front (also named
-# SADR Saharawi Arab Democratic Republic)?
-
-# From Arthur David Olson (2008-05-09):
-# XXX--guess that it is only Morocco for now; guess only 2008 for now.
-
-# From Steffen Thorsen (2008-08-27):
-# Morocco will change the clocks back on the midnight between August 31 
-# and September 1. They originally planned to observe DST to near the end 
-# of September:
-#
-# One article about it (in French):
-# <a href="http://www.menara.ma/fr/Actualites/Maroc/Societe/ci.retour_a_l_heure_gmt_a_partir_du_dimanche_31_aout_a_minuit_officiel_.default">
-# http://www.menara.ma/fr/Actualites/Maroc/Societe/ci.retour_a_l_heure_gmt_a_partir_du_dimanche_31_aout_a_minuit_officiel_.default
-# </a>
-#
-# We have some further details posted here:
-# <a href="http://www.timeanddate.com/news/time/morocco-ends-dst-early-2008.html">
-# http://www.timeanddate.com/news/time/morocco-ends-dst-early-2008.html
-# </a>
-# RULE	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-
-Rule	Morocco	1939	only	-	Sep	12	 0:00	1:00	S
-Rule	Morocco	1939	only	-	Nov	19	 0:00	0	-
-Rule	Morocco	1940	only	-	Feb	25	 0:00	1:00	S
-Rule	Morocco	1945	only	-	Nov	18	 0:00	0	-
-Rule	Morocco	1950	only	-	Jun	11	 0:00	1:00	S
-Rule	Morocco	1950	only	-	Oct	29	 0:00	0	-
-Rule	Morocco	1967	only	-	Jun	 3	12:00	1:00	S
-Rule	Morocco	1967	only	-	Oct	 1	 0:00	0	-
-Rule	Morocco	1974	only	-	Jun	24	 0:00	1:00	S
-Rule	Morocco	1974	only	-	Sep	 1	 0:00	0	-
-Rule	Morocco	1976	1977	-	May	 1	 0:00	1:00	S
-Rule	Morocco	1976	only	-	Aug	 1	 0:00	0	-
-Rule	Morocco	1977	only	-	Sep	28	 0:00	0	-
-Rule	Morocco	1978	only	-	Jun	 1	 0:00	1:00	S
-Rule	Morocco	1978	only	-	Aug	 4	 0:00	0	-
-Rule	Morocco	2008	only	-	Jun	 1	 0:00	1:00	S
-Rule	Morocco	2008	only	-	Sep	 1	 0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Africa/Casablanca	-0:30:20 -	LMT	1913 Oct 26
-			 0:00	Morocco	WE%sT	1984 Mar 16
-			 1:00	-	CET	1986
-			 0:00	Morocco	WE%sT
-# Western Sahara
-Zone Africa/El_Aaiun	-0:52:48 -	LMT	1934 Jan
-			-1:00	-	WAT	1976 Apr 14
-			 0:00	-	WET
-
-# Mozambique
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Maputo	2:10:20 -	LMT	1903 Mar
-			2:00	-	CAT
-
-# Namibia
-# The 1994-04-03 transition is from Shanks & Pottenger.
-# Shanks & Pottenger report no DST after 1998-04; go with IATA.
-
-# From Petronella Sibeene (2007-03-30) in
-# <http://allafrica.com/stories/200703300178.html>:
-# While the entire country changes its time, Katima Mulilo and other
-# settlements in Caprivi unofficially will not because the sun there
-# rises and sets earlier compared to other regions.  Chief of
-# Forecasting Riaan van Zyl explained that the far eastern parts of
-# the country are close to 40 minutes earlier in sunrise than the rest
-# of the country.
-# 
-# From Paul Eggert (2007-03-31):
-# Apparently the Caprivi Strip informally observes Botswana time, but
-# we have no details.  In the meantime people there can use Africa/Gaborone.
-
-# RULE	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Namibia	1994	max	-	Sep	Sun>=1	2:00	1:00	S
-Rule	Namibia	1995	max	-	Apr	Sun>=1	2:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Windhoek	1:08:24 -	LMT	1892 Feb 8
-			1:30	-	SWAT	1903 Mar	# SW Africa Time
-			2:00	-	SAST	1942 Sep 20 2:00
-			2:00	1:00	SAST	1943 Mar 21 2:00
-			2:00	-	SAST	1990 Mar 21 # independence
-			2:00	-	CAT	1994 Apr  3
-			1:00	Namibia	WA%sT
-
-# Niger
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Niamey	 0:08:28 -	LMT	1912
-			-1:00	-	WAT	1934 Feb 26
-			 0:00	-	GMT	1960
-			 1:00	-	WAT
-
-# Nigeria
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Lagos	0:13:36 -	LMT	1919 Sep
-			1:00	-	WAT
-
-# Reunion
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Indian/Reunion	3:41:52 -	LMT	1911 Jun	# Saint-Denis
-			4:00	-	RET	# Reunion Time
-#
-# Scattered Islands (Iles Eparses) administered from Reunion are as follows.
-# The following information about them is taken from
-# Iles Eparses (www.outre-mer.gouv.fr/domtom/ile.htm, 1997-07-22, in French;
-# no longer available as of 1999-08-17).
-# We have no info about their time zone histories.
-#
-# Bassas da India - uninhabited
-# Europa Island - inhabited from 1905 to 1910 by two families
-# Glorioso Is - inhabited until at least 1958
-# Juan de Nova - uninhabited
-# Tromelin - inhabited until at least 1958
-
-# Rwanda
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Kigali	2:00:16 -	LMT	1935 Jun
-			2:00	-	CAT
-
-# St Helena
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Atlantic/St_Helena	-0:22:48 -	LMT	1890		# Jamestown
-			-0:22:48 -	JMT	1951	# Jamestown Mean Time
-			 0:00	-	GMT
-# The other parts of the St Helena territory are similar:
-#	Tristan da Cunha: on GMT, say Whitman and the CIA
-#	Ascension: on GMT, says usno1995 and the CIA
-#	Gough (scientific station since 1955; sealers wintered previously):
-#		on GMT, says the CIA
-#	Inaccessible, Nightingale: no information, but probably GMT
-
-# Sao Tome and Principe
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Sao_Tome	 0:26:56 -	LMT	1884
-			-0:36:32 -	LMT	1912	# Lisbon Mean Time
-			 0:00	-	GMT
-
-# Senegal
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Dakar	-1:09:44 -	LMT	1912
-			-1:00	-	WAT	1941 Jun
-			 0:00	-	GMT
-
-# Seychelles
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Indian/Mahe	3:41:48 -	LMT	1906 Jun	# Victoria
-			4:00	-	SCT	# Seychelles Time
-# From Paul Eggert (2001-05-30):
-# Aldabra, Farquhar, and Desroches, originally dependencies of the
-# Seychelles, were transferred to the British Indian Ocean Territory
-# in 1965 and returned to Seychelles control in 1976.  We don't know
-# whether this affected their time zone, so omit this for now.
-# Possibly the islands were uninhabited.
-
-# Sierra Leone
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-# Whitman gives Mar 31 - Aug 31 for 1931 on; go with Shanks & Pottenger.
-Rule	SL	1935	1942	-	Jun	 1	0:00	0:40	SLST
-Rule	SL	1935	1942	-	Oct	 1	0:00	0	WAT
-Rule	SL	1957	1962	-	Jun	 1	0:00	1:00	SLST
-Rule	SL	1957	1962	-	Sep	 1	0:00	0	GMT
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Freetown	-0:53:00 -	LMT	1882
-			-0:53:00 -	FMT	1913 Jun # Freetown Mean Time
-			-1:00	SL	%s	1957
-			 0:00	SL	%s
-
-# Somalia
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Africa/Mogadishu	3:01:28 -	LMT	1893 Nov
-			3:00	-	EAT	1931
-			2:30	-	BEAT	1957
-			3:00	-	EAT
-
-# South Africa
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	SA	1942	1943	-	Sep	Sun>=15	2:00	1:00	-
-Rule	SA	1943	1944	-	Mar	Sun>=15	2:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Africa/Johannesburg 1:52:00 -	LMT	1892 Feb 8
-			1:30	-	SAST	1903 Mar
-			2:00	SA	SAST
-# Marion and Prince Edward Is
-# scientific station since 1947
-# no information
-
-# Sudan
-#
-# From <a href="http://www.sunanews.net/sn13jane.html">
-# Sudan News Agency (2000-01-13)
-# </a>, also reported by Michael De Beukelaer-Dossche via Steffen Thorsen:
-# Clocks will be moved ahead for 60 minutes all over the Sudan as of noon
-# Saturday....  This was announced Thursday by Caretaker State Minister for
-# Manpower Abdul-Rahman Nur-Eddin.
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Sudan	1970	only	-	May	 1	0:00	1:00	S
-Rule	Sudan	1970	1985	-	Oct	15	0:00	0	-
-Rule	Sudan	1971	only	-	Apr	30	0:00	1:00	S
-Rule	Sudan	1972	1985	-	Apr	lastSun	0:00	1:00	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Khartoum	2:10:08 -	LMT	1931
-			2:00	Sudan	CA%sT	2000 Jan 15 12:00
-			3:00	-	EAT
-
-# Swaziland
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Mbabane	2:04:24 -	LMT	1903 Mar
-			2:00	-	SAST
-
-# Tanzania
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Africa/Dar_es_Salaam 2:37:08 -	LMT	1931
-			3:00	-	EAT	1948
-			2:44:45	-	BEAUT	1961
-			3:00	-	EAT
-
-# Togo
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Lome	0:04:52 -	LMT	1893
-			0:00	-	GMT
-
-# Tunisia
-
-# From Gwillim Law (2005-04-30):
-# My correspondent, Risto Nykanen, has alerted me to another adoption of DST,
-# this time in Tunisia.  According to Yahoo France News
-# <http://fr.news.yahoo.com/050426/5/4dumk.html>, in a story attributed to AP
-# and dated 2005-04-26, "Tunisia has decided to advance its official time by
-# one hour, starting on Sunday, May 1.  Henceforth, Tunisian time will be
-# UTC+2 instead of UTC+1.  The change will take place at 23:00 UTC next
-# Saturday."  (My translation)
-#
-# From Oscar van Vlijmen (2005-05-02):
-# LaPresse, the first national daily newspaper ...
-# <http://www.lapresse.tn/archives/archives280405/actualites/lheure.html>
-# ... DST for 2005: on: Sun May 1 0h standard time, off: Fri Sept. 30,
-# 1h standard time.
-#
-# From Atef Loukil (2006-03-28):
-# The daylight saving time will be the same each year:
-# Beginning      : the last Sunday of March at 02:00
-# Ending         : the last Sunday of October at 03:00 ...
-# http://www.tap.info.tn/en/index.php?option=com_content&task=view&id=1188&Itemid=50
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Tunisia	1939	only	-	Apr	15	23:00s	1:00	S
-Rule	Tunisia	1939	only	-	Nov	18	23:00s	0	-
-Rule	Tunisia	1940	only	-	Feb	25	23:00s	1:00	S
-Rule	Tunisia	1941	only	-	Oct	 6	 0:00	0	-
-Rule	Tunisia	1942	only	-	Mar	 9	 0:00	1:00	S
-Rule	Tunisia	1942	only	-	Nov	 2	 3:00	0	-
-Rule	Tunisia	1943	only	-	Mar	29	 2:00	1:00	S
-Rule	Tunisia	1943	only	-	Apr	17	 2:00	0	-
-Rule	Tunisia	1943	only	-	Apr	25	 2:00	1:00	S
-Rule	Tunisia	1943	only	-	Oct	 4	 2:00	0	-
-Rule	Tunisia	1944	1945	-	Apr	Mon>=1	 2:00	1:00	S
-Rule	Tunisia	1944	only	-	Oct	 8	 0:00	0	-
-Rule	Tunisia	1945	only	-	Sep	16	 0:00	0	-
-Rule	Tunisia	1977	only	-	Apr	30	 0:00s	1:00	S
-Rule	Tunisia	1977	only	-	Sep	24	 0:00s	0	-
-Rule	Tunisia	1978	only	-	May	 1	 0:00s	1:00	S
-Rule	Tunisia	1978	only	-	Oct	 1	 0:00s	0	-
-Rule	Tunisia	1988	only	-	Jun	 1	 0:00s	1:00	S
-Rule	Tunisia	1988	1990	-	Sep	lastSun	 0:00s	0	-
-Rule	Tunisia	1989	only	-	Mar	26	 0:00s	1:00	S
-Rule	Tunisia	1990	only	-	May	 1	 0:00s	1:00	S
-Rule	Tunisia	2005	only	-	May	 1	 0:00s	1:00	S
-Rule	Tunisia	2005	only	-	Sep	30	 1:00s	0	-
-Rule	Tunisia	2006	max	-	Mar	lastSun	 2:00s	1:00	S
-Rule	Tunisia	2006	max	-	Oct	lastSun	 2:00s	0	-
-# Shanks & Pottenger give 0:09:20 for Paris Mean Time; go with Howse's
-# more precise 0:09:21.
-# Shanks & Pottenger say the 1911 switch was on Mar 9; go with Howse's Mar 11.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Tunis	0:40:44 -	LMT	1881 May 12
-			0:09:21	-	PMT	1911 Mar 11    # Paris Mean Time
-			1:00	Tunisia	CE%sT
-
-# Uganda
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Kampala	2:09:40 -	LMT	1928 Jul
-			3:00	-	EAT	1930
-			2:30	-	BEAT	1948
-			2:44:45	-	BEAUT	1957
-			3:00	-	EAT
-
-# Zambia
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Lusaka	1:53:08 -	LMT	1903 Mar
-			2:00	-	CAT
-
-# Zimbabwe
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Africa/Harare	2:04:12 -	LMT	1903 Mar
-			2:00	-	CAT
+# <pre>
+# @(#)africa	8.27
+# This file is in the public domain, so clarified as of
+# 2009-05-17 by Arthur David Olson.
+
+# This data is by no means authoritative; if you think you know better,
+# go ahead and edit the file (and please send any changes to
+# tz@elsie.nci.nih.gov for general use in the future).
+
+# From Paul Eggert (2006-03-22):
+#
+# A good source for time zone historical data outside the U.S. is
+# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),
+# San Diego: ACS Publications, Inc. (2003).
+#
+# Gwillim Law writes that a good source
+# for recent time zone data is the International Air Transport
+# Association's Standard Schedules Information Manual (IATA SSIM),
+# published semiannually.  Law sent in several helpful summaries
+# of the IATA's data after 1990.
+#
+# Except where otherwise noted, Shanks & Pottenger is the source for
+# entries through 1990, and IATA SSIM is the source for entries afterwards.
+#
+# Another source occasionally used is Edward W. Whitman, World Time Differences,
+# Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated), which
+# I found in the UCLA library.
+#
+# A reliable and entertaining source about time zones is
+# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).
+#
+# Previous editions of this database used WAT, CAT, SAT, and EAT
+# for +0:00 through +3:00, respectively,
+# but Mark R V Murray reports that
+# `SAST' is the official abbreviation for +2:00 in the country of South Africa,
+# `CAT' is commonly used for +2:00 in countries north of South Africa, and
+# `WAT' is probably the best name for +1:00, as the common phrase for
+# the area that includes Nigeria is ``West Africa''.
+# He has heard of ``Western Sahara Time'' for +0:00 but can find no reference.
+#
+# To make things confusing, `WAT' seems to have been used for -1:00 long ago;
+# I'd guess that this was because people needed _some_ name for -1:00,
+# and at the time, far west Africa was the only major land area in -1:00.
+# This usage is now obsolete, as the last use of -1:00 on the African
+# mainland seems to have been 1976 in Western Sahara.
+#
+# To summarize, the following abbreviations seem to have some currency:
+#	-1:00	WAT	West Africa Time (no longer used)
+#	 0:00	GMT	Greenwich Mean Time
+#	 2:00	CAT	Central Africa Time
+#	 2:00	SAST	South Africa Standard Time
+# and Murray suggests the following abbreviation:
+#	 1:00	WAT	West Africa Time
+# I realize that this leads to `WAT' being used for both -1:00 and 1:00
+# for times before 1976, but this is the best I can think of
+# until we get more information.
+#
+# I invented the following abbreviations; corrections are welcome!
+#	 2:00	WAST	West Africa Summer Time
+#	 2:30	BEAT	British East Africa Time (no longer used)
+#	 2:44:45 BEAUT	British East Africa Unified Time (no longer used)
+#	 3:00	CAST	Central Africa Summer Time (no longer used)
+#	 3:00	SAST	South Africa Summer Time (no longer used)
+#	 3:00	EAT	East Africa Time
+#	 4:00	EAST	East Africa Summer Time (no longer used)
+
+# Algeria
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Algeria	1916	only	-	Jun	14	23:00s	1:00	S
+Rule	Algeria	1916	1919	-	Oct	Sun>=1	23:00s	0	-
+Rule	Algeria	1917	only	-	Mar	24	23:00s	1:00	S
+Rule	Algeria	1918	only	-	Mar	 9	23:00s	1:00	S
+Rule	Algeria	1919	only	-	Mar	 1	23:00s	1:00	S
+Rule	Algeria	1920	only	-	Feb	14	23:00s	1:00	S
+Rule	Algeria	1920	only	-	Oct	23	23:00s	0	-
+Rule	Algeria	1921	only	-	Mar	14	23:00s	1:00	S
+Rule	Algeria	1921	only	-	Jun	21	23:00s	0	-
+Rule	Algeria	1939	only	-	Sep	11	23:00s	1:00	S
+Rule	Algeria	1939	only	-	Nov	19	 1:00	0	-
+Rule	Algeria	1944	1945	-	Apr	Mon>=1	 2:00	1:00	S
+Rule	Algeria	1944	only	-	Oct	 8	 2:00	0	-
+Rule	Algeria	1945	only	-	Sep	16	 1:00	0	-
+Rule	Algeria	1971	only	-	Apr	25	23:00s	1:00	S
+Rule	Algeria	1971	only	-	Sep	26	23:00s	0	-
+Rule	Algeria	1977	only	-	May	 6	 0:00	1:00	S
+Rule	Algeria	1977	only	-	Oct	21	 0:00	0	-
+Rule	Algeria	1978	only	-	Mar	24	 1:00	1:00	S
+Rule	Algeria	1978	only	-	Sep	22	 3:00	0	-
+Rule	Algeria	1980	only	-	Apr	25	 0:00	1:00	S
+Rule	Algeria	1980	only	-	Oct	31	 2:00	0	-
+# Shanks & Pottenger give 0:09:20 for Paris Mean Time; go with Howse's
+# more precise 0:09:21.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Algiers	0:12:12 -	LMT	1891 Mar 15 0:01
+			0:09:21	-	PMT	1911 Mar 11    # Paris Mean Time
+			0:00	Algeria	WE%sT	1940 Feb 25 2:00
+			1:00	Algeria	CE%sT	1946 Oct  7
+			0:00	-	WET	1956 Jan 29
+			1:00	-	CET	1963 Apr 14
+			0:00	Algeria	WE%sT	1977 Oct 21
+			1:00	Algeria	CE%sT	1979 Oct 26
+			0:00	Algeria	WE%sT	1981 May
+			1:00	-	CET
+
+# Angola
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Luanda	0:52:56	-	LMT	1892
+			0:52:04	-	AOT	1911 May 26 # Angola Time
+			1:00	-	WAT
+
+# Benin
+# Whitman says they switched to 1:00 in 1946, not 1934;
+# go with Shanks & Pottenger.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Africa/Porto-Novo	0:10:28	-	LMT	1912
+			0:00	-	GMT	1934 Feb 26
+			1:00	-	WAT
+
+# Botswana
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Gaborone	1:43:40 -	LMT	1885
+			2:00	-	CAT	1943 Sep 19 2:00
+			2:00	1:00	CAST	1944 Mar 19 2:00
+			2:00	-	CAT
+
+# Burkina Faso
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Africa/Ouagadougou	-0:06:04 -	LMT	1912
+			 0:00	-	GMT
+
+# Burundi
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Africa/Bujumbura	1:57:28	-	LMT	1890
+			2:00	-	CAT
+
+# Cameroon
+# Whitman says they switched to 1:00 in 1920; go with Shanks & Pottenger.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Douala	0:38:48	-	LMT	1912
+			1:00	-	WAT
+
+# Cape Verde
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Atlantic/Cape_Verde -1:34:04 -	LMT	1907			# Praia
+			-2:00	-	CVT	1942 Sep
+			-2:00	1:00	CVST	1945 Oct 15
+			-2:00	-	CVT	1975 Nov 25 2:00
+			-1:00	-	CVT
+
+# Central African Republic
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Bangui	1:14:20	-	LMT	1912
+			1:00	-	WAT
+
+# Chad
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Ndjamena	1:00:12 -	LMT	1912
+			1:00	-	WAT	1979 Oct 14
+			1:00	1:00	WAST	1980 Mar  8
+			1:00	-	WAT
+
+# Comoros
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Indian/Comoro	2:53:04 -	LMT	1911 Jul   # Moroni, Gran Comoro
+			3:00	-	EAT
+
+# Democratic Republic of Congo
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Africa/Kinshasa	1:01:12 -	LMT	1897 Nov 9
+			1:00	-	WAT
+Zone Africa/Lubumbashi	1:49:52 -	LMT	1897 Nov 9
+			2:00	-	CAT
+
+# Republic of the Congo
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Africa/Brazzaville	1:01:08 -	LMT	1912
+			1:00	-	WAT
+
+# Cote D'Ivoire
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Abidjan	-0:16:08 -	LMT	1912
+			 0:00	-	GMT
+
+# Djibouti
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Djibouti	2:52:36 -	LMT	1911 Jul
+			3:00	-	EAT
+
+###############################################################################
+
+# Egypt
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Egypt	1940	only	-	Jul	15	0:00	1:00	S
+Rule	Egypt	1940	only	-	Oct	 1	0:00	0	-
+Rule	Egypt	1941	only	-	Apr	15	0:00	1:00	S
+Rule	Egypt	1941	only	-	Sep	16	0:00	0	-
+Rule	Egypt	1942	1944	-	Apr	 1	0:00	1:00	S
+Rule	Egypt	1942	only	-	Oct	27	0:00	0	-
+Rule	Egypt	1943	1945	-	Nov	 1	0:00	0	-
+Rule	Egypt	1945	only	-	Apr	16	0:00	1:00	S
+Rule	Egypt	1957	only	-	May	10	0:00	1:00	S
+Rule	Egypt	1957	1958	-	Oct	 1	0:00	0	-
+Rule	Egypt	1958	only	-	May	 1	0:00	1:00	S
+Rule	Egypt	1959	1981	-	May	 1	1:00	1:00	S
+Rule	Egypt	1959	1965	-	Sep	30	3:00	0	-
+Rule	Egypt	1966	1994	-	Oct	 1	3:00	0	-
+Rule	Egypt	1982	only	-	Jul	25	1:00	1:00	S
+Rule	Egypt	1983	only	-	Jul	12	1:00	1:00	S
+Rule	Egypt	1984	1988	-	May	 1	1:00	1:00	S
+Rule	Egypt	1989	only	-	May	 6	1:00	1:00	S
+Rule	Egypt	1990	1994	-	May	 1	1:00	1:00	S
+# IATA (after 1990) says transitions are at 0:00.
+# Go with IATA starting in 1995, except correct 1995 entry from 09-30 to 09-29.
+Rule	Egypt	1995	max	-	Apr	lastFri	 0:00s	1:00	S
+Rule	Egypt	1995	2005	-	Sep	lastThu	23:00s	0	-
+# From Steffen Thorsen (2006-09-19):
+# The Egyptian Gazette, issue 41,090 (2006-09-18), page 1, reports:
+# Egypt will turn back clocks by one hour at the midnight of Thursday
+# after observing the daylight saving time since May.
+# http://news.gom.com.eg/gazette/pdf/2006/09/18/01.pdf
+Rule	Egypt	2006	only	-	Sep	21	23:00s	0	-
+# From Dirk Losch (2007-08-14):
+# I received a mail from an airline which says that the daylight
+# saving time in Egypt will end in the night of 2007-09-06 to 2007-09-07.
+# From Jesper Norgaard Welen (2007-08-15): [The following agree:]
+# http://www.nentjes.info/Bill/bill5.htm 
+# http://www.timeanddate.com/worldclock/city.html?n=53
+# From Steffen Thorsen (2007-09-04): The official information...:
+# http://www.sis.gov.eg/En/EgyptOnline/Miscellaneous/000002/0207000000000000001580.htm
+Rule	Egypt	2007	only	-	Sep	Thu>=1	23:00s	0	-
+# From Abdelrahman Hassan (2007-09-06):
+# Due to the Hijri (lunar Islamic calendar) year being 11 days shorter
+# than the year of the Gregorian calendar, Ramadan shifts earlier each
+# year. This year it will be observed September 13 (September is quite
+# hot in Egypt), and the idea is to make fasting easier for workers by
+# shifting business hours one hour out of daytime heat. Consequently,
+# unless discontinued, next DST may end Thursday 28 August 2008.
+# From Paul Eggert (2007-08-17):
+# For lack of better info, assume the new rule is last Thursday in August.
+
+# From Petr Machata (2009-04-06):
+# The following appeared in Red Hat bugzilla[1] (edited):
+#
+# > $ zdump -v /usr/share/zoneinfo/Africa/Cairo | grep 2009
+# > /usr/share/zoneinfo/Africa/Cairo  Thu Apr 23 21:59:59 2009 UTC = Thu =
+# Apr 23
+# > 23:59:59 2009 EET isdst=0 gmtoff=7200
+# > /usr/share/zoneinfo/Africa/Cairo  Thu Apr 23 22:00:00 2009 UTC = Fri =
+# Apr 24
+# > 01:00:00 2009 EEST isdst=1 gmtoff=10800
+# > /usr/share/zoneinfo/Africa/Cairo  Thu Aug 27 20:59:59 2009 UTC = Thu =
+# Aug 27
+# > 23:59:59 2009 EEST isdst=1 gmtoff=10800
+# > /usr/share/zoneinfo/Africa/Cairo  Thu Aug 27 21:00:00 2009 UTC = Thu =
+# Aug 27
+# > 23:00:00 2009 EET isdst=0 gmtoff=7200
+#
+# > end date should be Thu Sep 24 2009 (Last Thursday in September at 23:59=
+# :59)
+# > http://support.microsoft.com/kb/958729/
+#
+# timeanddate[2] and another site I've found[3] also support that.
+#
+# [1] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=492263">
+# https://bugzilla.redhat.com/show_bug.cgi?id=492263
+# </a>
+# [2] <a href="http://www.timeanddate.com/worldclock/clockchange.html?n=53">
+# http://www.timeanddate.com/worldclock/clockchange.html?n=53
+# </a>
+# [3] <a href="http://wwp.greenwichmeantime.com/time-zone/africa/egypt/">
+# http://wwp.greenwichmeantime.com/time-zone/africa/egypt/
+# </a>
+
+# From Arthur David Olson (2009-04-20):
+# In 2009 (and for the next several years), Ramadan ends before the fourth
+# Thursday in September; Egypt is expected to revert to the last Thursday
+# in September.
+
+# From Steffen Thorsen (2009-08-11):
+# We have been able to confirm the August change with the Egyptian Cabinet 
+# Information and Decision Support Center:
+# <a href="http://www.timeanddate.com/news/time/egypt-dst-ends-2009.html">
+# http://www.timeanddate.com/news/time/egypt-dst-ends-2009.html
+# </a>
+# 
+# The Middle East News Agency
+# <a href="http://www.mena.org.eg/index.aspx">
+# http://www.mena.org.eg/index.aspx
+# </a>
+# also reports "Egypt starts winter time on August 21"
+# today in article numbered "71, 11/08/2009 12:25 GMT." 
+# Only the title above is available without a subscription to their service,
+# and can be found by searching for "winter" in their search engine
+# (at least today).
+
+# From Alexander Krivenyshev (2010-07-20):
+# According to News from Egypt -  Al-Masry Al-Youm Egypt's cabinet has
+# decided that Daylight Saving Time will not be used in Egypt during
+# Ramadan.
+#
+# Arabic translation:
+# "Clocks to go back during Ramadan--and then forward again"
+# <a href="http://www.almasryalyoum.com/en/news/clocks-go-back-during-ramadan-and-then-forward-again">
+# http://www.almasryalyoum.com/en/news/clocks-go-back-during-ramadan-and-then-forward-again
+# </a>
+# or
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_egypt02.html">
+# http://www.worldtimezone.com/dst_news/dst_news_egypt02.html
+# </a>
+
+Rule	Egypt	2008	only	-	Aug	lastThu	23:00s	0	-
+Rule	Egypt	2009	only	-	Aug	20	23:00s	0	-
+Rule	Egypt	2010	only	-	Aug	10	23:00s	0	-
+Rule	Egypt	2010	only	-	Sep	9	0:00s	1:00	S
+Rule	Egypt	2010	max	-	Sep	lastThu	23:00s	0	-
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Cairo	2:05:00 -	LMT	1900 Oct
+			2:00	Egypt	EE%sT
+
+# Equatorial Guinea
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Malabo	0:35:08 -	LMT	1912
+			0:00	-	GMT	1963 Dec 15
+			1:00	-	WAT
+
+# Eritrea
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Asmara	2:35:32 -	LMT	1870
+			2:35:32	-	AMT	1890	      # Asmara Mean Time
+			2:35:20	-	ADMT	1936 May 5    # Adis Dera MT
+			3:00	-	EAT
+
+# Ethiopia
+# From Paul Eggert (2006-03-22):
+# Shanks & Pottenger write that Ethiopia had six narrowly-spaced time zones
+# between 1870 and 1890, and that they merged to 38E50 (2:35:20) in 1890.
+# We'll guess that 38E50 is for Adis Dera.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Africa/Addis_Ababa	2:34:48 -	LMT	1870
+			2:35:20	-	ADMT	1936 May 5    # Adis Dera MT
+			3:00	-	EAT
+
+# Gabon
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Africa/Libreville	0:37:48 -	LMT	1912
+			1:00	-	WAT
+
+# Gambia
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Banjul	-1:06:36 -	LMT	1912
+			-1:06:36 -	BMT	1935	# Banjul Mean Time
+			-1:00	-	WAT	1964
+			 0:00	-	GMT
+
+# Ghana
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+# Whitman says DST was observed from 1931 to ``the present'';
+# go with Shanks & Pottenger.
+Rule	Ghana	1936	1942	-	Sep	 1	0:00	0:20	GHST
+Rule	Ghana	1936	1942	-	Dec	31	0:00	0	GMT
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Accra	-0:00:52 -	LMT	1918
+			 0:00	Ghana	%s
+
+# Guinea
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Conakry	-0:54:52 -	LMT	1912
+			 0:00	-	GMT	1934 Feb 26
+			-1:00	-	WAT	1960
+			 0:00	-	GMT
+
+# Guinea-Bissau
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Bissau	-1:02:20 -	LMT	1911 May 26
+			-1:00	-	WAT	1975
+			 0:00	-	GMT
+
+# Kenya
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Nairobi	2:27:16	-	LMT	1928 Jul
+			3:00	-	EAT	1930
+			2:30	-	BEAT	1940
+			2:44:45	-	BEAUT	1960
+			3:00	-	EAT
+
+# Lesotho
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Maseru	1:50:00 -	LMT	1903 Mar
+			2:00	-	SAST	1943 Sep 19 2:00
+			2:00	1:00	SAST	1944 Mar 19 2:00
+			2:00	-	SAST
+
+# Liberia
+# From Paul Eggert (2006-03-22):
+# In 1972 Liberia was the last country to switch
+# from a UTC offset that was not a multiple of 15 or 20 minutes.
+# Howse reports that it was in honor of their president's birthday.
+# Shank & Pottenger report the date as May 1, whereas Howse reports Jan;
+# go with Shanks & Pottenger.
+# For Liberia before 1972, Shanks & Pottenger report -0:44, whereas Howse and
+# Whitman each report -0:44:30; go with the more precise figure.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Monrovia	-0:43:08 -	LMT	1882
+			-0:43:08 -	MMT	1919 Mar # Monrovia Mean Time
+			-0:44:30 -	LRT	1972 May # Liberia Time
+			 0:00	-	GMT
+
+###############################################################################
+
+# Libya
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Libya	1951	only	-	Oct	14	2:00	1:00	S
+Rule	Libya	1952	only	-	Jan	 1	0:00	0	-
+Rule	Libya	1953	only	-	Oct	 9	2:00	1:00	S
+Rule	Libya	1954	only	-	Jan	 1	0:00	0	-
+Rule	Libya	1955	only	-	Sep	30	0:00	1:00	S
+Rule	Libya	1956	only	-	Jan	 1	0:00	0	-
+Rule	Libya	1982	1984	-	Apr	 1	0:00	1:00	S
+Rule	Libya	1982	1985	-	Oct	 1	0:00	0	-
+Rule	Libya	1985	only	-	Apr	 6	0:00	1:00	S
+Rule	Libya	1986	only	-	Apr	 4	0:00	1:00	S
+Rule	Libya	1986	only	-	Oct	 3	0:00	0	-
+Rule	Libya	1987	1989	-	Apr	 1	0:00	1:00	S
+Rule	Libya	1987	1989	-	Oct	 1	0:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Tripoli	0:52:44 -	LMT	1920
+			1:00	Libya	CE%sT	1959
+			2:00	-	EET	1982
+			1:00	Libya	CE%sT	1990 May  4
+# The following entries are from Shanks & Pottenger;
+# the IATA SSIM data contain some obvious errors.
+			2:00	-	EET	1996 Sep 30
+			1:00	-	CET	1997 Apr  4
+			1:00	1:00	CEST	1997 Oct  4
+			2:00	-	EET
+
+# Madagascar
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Indian/Antananarivo 3:10:04 -	LMT	1911 Jul
+			3:00	-	EAT	1954 Feb 27 23:00s
+			3:00	1:00	EAST	1954 May 29 23:00s
+			3:00	-	EAT
+
+# Malawi
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Blantyre	2:20:00 -	LMT	1903 Mar
+			2:00	-	CAT
+
+# Mali
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Bamako	-0:32:00 -	LMT	1912
+			 0:00	-	GMT	1934 Feb 26
+			-1:00	-	WAT	1960 Jun 20
+			 0:00	-	GMT
+
+# Mauritania
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Africa/Nouakchott	-1:03:48 -	LMT	1912
+			 0:00	-	GMT	1934 Feb 26
+			-1:00	-	WAT	1960 Nov 28
+			 0:00	-	GMT
+
+# Mauritius
+
+# From Steffen Thorsen (2008-06-25):
+# Mauritius plans to observe DST from 2008-11-01 to 2009-03-31 on a trial
+# basis....
+# It seems that Mauritius observed daylight saving time from 1982-10-10 to 
+# 1983-03-20 as well, but that was not successful....
+# http://www.timeanddate.com/news/time/mauritius-daylight-saving-time.html
+
+# From Alex Krivenyshev (2008-06-25):
+# http://economicdevelopment.gov.mu/portal/site/Mainhomepage/menuitem.a42b24128104d9845dabddd154508a0c/?content_id=0a7cee8b5d69a110VgnVCM1000000a04a8c0RCRD
+
+# From Arthur David Olson (2008-06-30):
+# The www.timeanddate.com article cited by Steffen Thorsen notes that "A
+# final decision has yet to be made on the times that daylight saving
+# would begin and end on these dates." As a place holder, use midnight.
+
+# From Paul Eggert (2008-06-30):
+# Follow Thorsen on DST in 1982/1983, instead of Shanks & Pottenger.
+
+# From Steffen Thorsen (2008-07-10):
+# According to
+# <a href="http://www.lexpress.mu/display_article.php?news_id=111216">
+# http://www.lexpress.mu/display_article.php?news_id=111216
+# </a>
+# (in French), Mauritius will start and end their DST a few days earlier
+# than previously announced (2008-11-01 to 2009-03-31).  The new start
+# date is 2008-10-26 at 02:00 and the new end date is 2009-03-27 (no time
+# given, but it is probably at either 2 or 3 wall clock time).
+# 
+# A little strange though, since the article says that they moved the date 
+# to align itself with Europe and USA which also change time on that date, 
+# but that means they have not paid attention to what happened in 
+# USA/Canada last year (DST ends first Sunday in November). I also wonder 
+# why that they end on a Friday, instead of aligning with Europe which 
+# changes two days later.
+
+# From Alex Krivenyshev (2008-07-11):
+# Seems that English language article "The revival of daylight saving
+# time:  Energy conservation?"-# No. 16578 (07/11/2008) was originally
+# published on Monday, June 30, 2008...
+#
+# I guess that article in French "Le gouvernement avance l'introduction
+# de l'heure d'ete" stating that DST in Mauritius starting on October 26
+# and ending on March 27, 2009 is the most recent one.
+# ...
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_mauritius02.html">
+# http://www.worldtimezone.com/dst_news/dst_news_mauritius02.html
+# </a>
+
+# From Riad M. Hossen Ally (2008-08-03):
+# The Government of Mauritius weblink
+# <a href="http://www.gov.mu/portal/site/pmosite/menuitem.4ca0efdee47462e7440a600248a521ca/?content_id=4728ca68b2a5b110VgnVCM1000000a04a8c0RCRD">
+# http://www.gov.mu/portal/site/pmosite/menuitem.4ca0efdee47462e7440a600248a521ca/?content_id=4728ca68b2a5b110VgnVCM1000000a04a8c0RCRD
+# </a>
+# Cabinet Decision of July 18th, 2008 states as follows:
+#
+# 4. ...Cabinet has agreed to the introduction into the National Assembly
+# of the Time Bill which provides for the introduction of summer time in
+# Mauritius. The summer time period which will be of one hour ahead of
+# the standard time, will be aligned with that in Europe and the United
+# States of America. It will start at two o'clock in the morning on the
+# last Sunday of October and will end at two o'clock in the morning on
+# the last Sunday of March the following year. The summer time for the
+# year 2008 - 2009 will, therefore, be effective as from 26 October 2008
+# and end on 29 March 2009.
+
+# From Ed Maste (2008-10-07):
+# THE TIME BILL (No. XXVII of 2008) Explanatory Memorandum states the
+# beginning / ending of summer time is 2 o'clock standard time in the
+# morning of the last Sunday of October / last Sunday of March.
+# <a href="http://www.gov.mu/portal/goc/assemblysite/file/bill2708.pdf">
+# http://www.gov.mu/portal/goc/assemblysite/file/bill2708.pdf
+# </a>
+
+# From Steffen Thorsen (2009-06-05):
+# According to several sources, Mauritius will not continue to observe
+# DST the coming summer...
+#
+# Some sources, in French:
+# <a href="http://www.defimedia.info/news/946/Rashid-Beebeejaun-:-%C2%AB-L%E2%80%99heure-d%E2%80%99%C3%A9t%C3%A9-ne-sera-pas-appliqu%C3%A9e-cette-ann%C3%A9e-%C2%BB">
+# http://www.defimedia.info/news/946/Rashid-Beebeejaun-:-%C2%AB-L%E2%80%99heure-d%E2%80%99%C3%A9t%C3%A9-ne-sera-pas-appliqu%C3%A9e-cette-ann%C3%A9e-%C2%BB
+# </a>
+# <a href="http://lexpress.mu/Story/3398~Beebeejaun---Les-objectifs-d-%C3%A9conomie-d-%C3%A9nergie-de-l-heure-d-%C3%A9t%C3%A9-ont-%C3%A9t%C3%A9-atteints-">
+# http://lexpress.mu/Story/3398~Beebeejaun---Les-objectifs-d-%C3%A9conomie-d-%C3%A9nergie-de-l-heure-d-%C3%A9t%C3%A9-ont-%C3%A9t%C3%A9-atteints-
+# </a>
+#
+# Our wrap-up:
+# <a href="http://www.timeanddate.com/news/time/mauritius-dst-will-not-repeat.html">
+# http://www.timeanddate.com/news/time/mauritius-dst-will-not-repeat.html
+# </a>
+
+# From Arthur David Olson (2009-07-11):
+# The "mauritius-dst-will-not-repeat" wrapup includes this: 
+# "The trial ended on March 29, 2009, when the clocks moved back by one hour
+# at 2am (or 02:00) local time..."
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule Mauritius	1982	only	-	Oct	10	0:00	1:00	S
+Rule Mauritius	1983	only	-	Mar	21	0:00	0	-
+Rule Mauritius	2008	only	-	Oct	lastSun	2:00	1:00	S
+Rule Mauritius	2009	only	-	Mar	lastSun	2:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Indian/Mauritius	3:50:00 -	LMT	1907		# Port Louis
+			4:00 Mauritius	MU%sT	# Mauritius Time
+# Agalega Is, Rodriguez
+# no information; probably like Indian/Mauritius
+
+# Mayotte
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Indian/Mayotte	3:00:56 -	LMT	1911 Jul	# Mamoutzou
+			3:00	-	EAT
+
+# Morocco
+# See the `europe' file for Spanish Morocco (Africa/Ceuta).
+
+# From Alex Krivenyshev (2008-05-09):
+# Here is an article that Morocco plan to introduce Daylight Saving Time between
+# 1 June, 2008 and 27 September, 2008.
+#
+# "... Morocco is to save energy by adjusting its clock during summer so it will
+# be one hour ahead of GMT between 1 June and 27 September, according to
+# Communication Minister and Gov ernment Spokesman, Khalid Naciri...."
+#
+# <a href="http://www.worldtimezone.net/dst_news/dst_news_morocco01.html">
+# http://www.worldtimezone.net/dst_news/dst_news_morocco01.html
+# </a>
+# OR
+# <a href="http://en.afrik.com/news11892.html">
+# http://en.afrik.com/news11892.html
+# </a>
+
+# From Alex Krivenyshev (2008-05-09):
+# The Morocco time change can be confirmed on Morocco web site Maghreb Arabe Presse:
+# <a href="http://www.map.ma/eng/sections/box3/morocco_shifts_to_da/view">
+# http://www.map.ma/eng/sections/box3/morocco_shifts_to_da/view
+# </a>
+#
+# Morocco shifts to daylight time on June 1st through September 27, Govt.
+# spokesman.
+
+# From Patrice Scattolin (2008-05-09):
+# According to this article:
+# <a href="http://www.avmaroc.com/actualite/heure-dete-comment-a127896.html">
+# http://www.avmaroc.com/actualite/heure-dete-comment-a127896.html
+# </a>
+# (and republished here:
+# <a href="http://www.actu.ma/heure-dete-comment_i127896_0.html">
+# http://www.actu.ma/heure-dete-comment_i127896_0.html
+# </a>
+# )
+# the changes occurs at midnight:
+#
+# saturday night may 31st at midnight (which in french is to be
+# intrepreted as the night between saturday and sunday)
+# sunday night the 28th  at midnight
+#
+# Seeing that the 28th is monday, I am guessing that she intends to say
+# the midnight of the 28th which is the midnight between sunday and
+# monday, which jives with other sources that say that it's inclusive
+# june1st to sept 27th.
+#
+# The decision was taken by decree *2-08-224 *but I can't find the decree
+# published on the web.
+#
+# It's also confirmed here:
+# <a href="http://www.maroc.ma/NR/exeres/FACF141F-D910-44B0-B7FA-6E03733425D1.htm">
+# http://www.maroc.ma/NR/exeres/FACF141F-D910-44B0-B7FA-6E03733425D1.htm
+# </a>
+# on a government portal as being  between june 1st and sept 27th (not yet
+# posted in english).
+#
+# The following google query will generate many relevant hits:
+# <a href="http://www.google.com/search?hl=en&q=Conseil+de+gouvernement+maroc+heure+avance&btnG=Search">
+# http://www.google.com/search?hl=en&q=Conseil+de+gouvernement+maroc+heure+avance&btnG=Search
+# </a>
+
+# From Alex Krivenyshev (2008-05-09):
+# Is Western Sahara (part which administrated by Morocco) going to follow
+# Morocco DST changes?  Any information?  What about other part of
+# Western Sahara - under administration of POLISARIO Front (also named
+# SADR Saharawi Arab Democratic Republic)?
+
+# From Arthur David Olson (2008-05-09):
+# XXX--guess that it is only Morocco for now; guess only 2008 for now.
+
+# From Steffen Thorsen (2008-08-27):
+# Morocco will change the clocks back on the midnight between August 31 
+# and September 1. They originally planned to observe DST to near the end 
+# of September:
+#
+# One article about it (in French):
+# <a href="http://www.menara.ma/fr/Actualites/Maroc/Societe/ci.retour_a_l_heure_gmt_a_partir_du_dimanche_31_aout_a_minuit_officiel_.default">
+# http://www.menara.ma/fr/Actualites/Maroc/Societe/ci.retour_a_l_heure_gmt_a_partir_du_dimanche_31_aout_a_minuit_officiel_.default
+# </a>
+#
+# We have some further details posted here:
+# <a href="http://www.timeanddate.com/news/time/morocco-ends-dst-early-2008.html">
+# http://www.timeanddate.com/news/time/morocco-ends-dst-early-2008.html
+# </a>
+
+# From Steffen Thorsen (2009-03-17):
+# Morocco will observe DST from 2009-06-01 00:00 to 2009-08-21 00:00 according
+# to many sources, such as
+# <a href="http://news.marweb.com/morocco/entertainment/morocco-daylight-saving.html">
+# http://news.marweb.com/morocco/entertainment/morocco-daylight-saving.html
+# </a>
+# <a href="http://www.medi1sat.ma/fr/depeche.aspx?idp=2312">
+# http://www.medi1sat.ma/fr/depeche.aspx?idp=2312
+# </a>
+# (French)
+#
+# Our summary:
+# <a href="http://www.timeanddate.com/news/time/morocco-starts-dst-2009.html">
+# http://www.timeanddate.com/news/time/morocco-starts-dst-2009.html
+# </a>
+
+# From Alexander Krivenyshev (2009-03-17):
+# Here is a link to official document from Royaume du Maroc Premier Ministre,
+# Ministere de la Modernisation des Secteurs Publics
+#
+# Under Article 1 of Royal Decree No. 455-67 of Act 23 safar 1387 (2 june 1967)
+# concerning the amendment of the legal time, the Ministry of Modernization of
+# Public Sectors announced that the official time in the Kingdom will be
+# advanced 60 minutes from Sunday 31 May 2009 at midnight.
+#
+# <a href="http://www.mmsp.gov.ma/francais/Actualites_fr/PDF_Actualites_Fr/HeureEte_FR.pdf">
+# http://www.mmsp.gov.ma/francais/Actualites_fr/PDF_Actualites_Fr/HeureEte_FR.pdf
+# </a>
+#
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_morocco03.html">
+# http://www.worldtimezone.com/dst_news/dst_news_morocco03.html
+# </a>
+
+# From Steffen Thorsen (2010-04-13):
+# Several news media in Morocco report that the Ministry of Modernization
+# of Public Sectors has announced that Morocco will have DST from
+# 2010-05-02 to 2010-08-08.
+#
+# Example:
+# <a href="http://www.lavieeco.com/actualites/4099-le-maroc-passera-a-l-heure-d-ete-gmt1-le-2-mai.html">
+# http://www.lavieeco.com/actualites/4099-le-maroc-passera-a-l-heure-d-ete-gmt1-le-2-mai.html
+# </a>
+# (French)
+# Our page:
+# <a href="http://www.timeanddate.com/news/time/morocco-starts-dst-2010.html">
+# http://www.timeanddate.com/news/time/morocco-starts-dst-2010.html
+# </a>
+
+# RULE	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+
+Rule	Morocco	1939	only	-	Sep	12	 0:00	1:00	S
+Rule	Morocco	1939	only	-	Nov	19	 0:00	0	-
+Rule	Morocco	1940	only	-	Feb	25	 0:00	1:00	S
+Rule	Morocco	1945	only	-	Nov	18	 0:00	0	-
+Rule	Morocco	1950	only	-	Jun	11	 0:00	1:00	S
+Rule	Morocco	1950	only	-	Oct	29	 0:00	0	-
+Rule	Morocco	1967	only	-	Jun	 3	12:00	1:00	S
+Rule	Morocco	1967	only	-	Oct	 1	 0:00	0	-
+Rule	Morocco	1974	only	-	Jun	24	 0:00	1:00	S
+Rule	Morocco	1974	only	-	Sep	 1	 0:00	0	-
+Rule	Morocco	1976	1977	-	May	 1	 0:00	1:00	S
+Rule	Morocco	1976	only	-	Aug	 1	 0:00	0	-
+Rule	Morocco	1977	only	-	Sep	28	 0:00	0	-
+Rule	Morocco	1978	only	-	Jun	 1	 0:00	1:00	S
+Rule	Morocco	1978	only	-	Aug	 4	 0:00	0	-
+Rule	Morocco	2008	only	-	Jun	 1	 0:00	1:00	S
+Rule	Morocco	2008	only	-	Sep	 1	 0:00	0	-
+Rule	Morocco	2009	only	-	Jun	 1	 0:00	1:00	S
+Rule	Morocco	2009	only	-	Aug	 21	 0:00	0	-
+Rule	Morocco	2010	only	-	May	 2	 0:00	1:00	S
+Rule	Morocco	2010	only	-	Aug	 8	 0:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Africa/Casablanca	-0:30:20 -	LMT	1913 Oct 26
+			 0:00	Morocco	WE%sT	1984 Mar 16
+			 1:00	-	CET	1986
+			 0:00	Morocco	WE%sT
+# Western Sahara
+Zone Africa/El_Aaiun	-0:52:48 -	LMT	1934 Jan
+			-1:00	-	WAT	1976 Apr 14
+			 0:00	-	WET
+
+# Mozambique
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Maputo	2:10:20 -	LMT	1903 Mar
+			2:00	-	CAT
+
+# Namibia
+# The 1994-04-03 transition is from Shanks & Pottenger.
+# Shanks & Pottenger report no DST after 1998-04; go with IATA.
+
+# From Petronella Sibeene (2007-03-30) in
+# <http://allafrica.com/stories/200703300178.html>:
+# While the entire country changes its time, Katima Mulilo and other
+# settlements in Caprivi unofficially will not because the sun there
+# rises and sets earlier compared to other regions.  Chief of
+# Forecasting Riaan van Zyl explained that the far eastern parts of
+# the country are close to 40 minutes earlier in sunrise than the rest
+# of the country.
+# 
+# From Paul Eggert (2007-03-31):
+# Apparently the Caprivi Strip informally observes Botswana time, but
+# we have no details.  In the meantime people there can use Africa/Gaborone.
+
+# RULE	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Namibia	1994	max	-	Sep	Sun>=1	2:00	1:00	S
+Rule	Namibia	1995	max	-	Apr	Sun>=1	2:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Windhoek	1:08:24 -	LMT	1892 Feb 8
+			1:30	-	SWAT	1903 Mar	# SW Africa Time
+			2:00	-	SAST	1942 Sep 20 2:00
+			2:00	1:00	SAST	1943 Mar 21 2:00
+			2:00	-	SAST	1990 Mar 21 # independence
+			2:00	-	CAT	1994 Apr  3
+			1:00	Namibia	WA%sT
+
+# Niger
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Niamey	 0:08:28 -	LMT	1912
+			-1:00	-	WAT	1934 Feb 26
+			 0:00	-	GMT	1960
+			 1:00	-	WAT
+
+# Nigeria
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Lagos	0:13:36 -	LMT	1919 Sep
+			1:00	-	WAT
+
+# Reunion
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Indian/Reunion	3:41:52 -	LMT	1911 Jun	# Saint-Denis
+			4:00	-	RET	# Reunion Time
+#
+# Scattered Islands (Iles Eparses) administered from Reunion are as follows.
+# The following information about them is taken from
+# Iles Eparses (www.outre-mer.gouv.fr/domtom/ile.htm, 1997-07-22, in French;
+# no longer available as of 1999-08-17).
+# We have no info about their time zone histories.
+#
+# Bassas da India - uninhabited
+# Europa Island - inhabited from 1905 to 1910 by two families
+# Glorioso Is - inhabited until at least 1958
+# Juan de Nova - uninhabited
+# Tromelin - inhabited until at least 1958
+
+# Rwanda
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Kigali	2:00:16 -	LMT	1935 Jun
+			2:00	-	CAT
+
+# St Helena
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Atlantic/St_Helena	-0:22:48 -	LMT	1890		# Jamestown
+			-0:22:48 -	JMT	1951	# Jamestown Mean Time
+			 0:00	-	GMT
+# The other parts of the St Helena territory are similar:
+#	Tristan da Cunha: on GMT, say Whitman and the CIA
+#	Ascension: on GMT, says usno1995 and the CIA
+#	Gough (scientific station since 1955; sealers wintered previously):
+#		on GMT, says the CIA
+#	Inaccessible, Nightingale: no information, but probably GMT
+
+# Sao Tome and Principe
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Sao_Tome	 0:26:56 -	LMT	1884
+			-0:36:32 -	LMT	1912	# Lisbon Mean Time
+			 0:00	-	GMT
+
+# Senegal
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Dakar	-1:09:44 -	LMT	1912
+			-1:00	-	WAT	1941 Jun
+			 0:00	-	GMT
+
+# Seychelles
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Indian/Mahe	3:41:48 -	LMT	1906 Jun	# Victoria
+			4:00	-	SCT	# Seychelles Time
+# From Paul Eggert (2001-05-30):
+# Aldabra, Farquhar, and Desroches, originally dependencies of the
+# Seychelles, were transferred to the British Indian Ocean Territory
+# in 1965 and returned to Seychelles control in 1976.  We don't know
+# whether this affected their time zone, so omit this for now.
+# Possibly the islands were uninhabited.
+
+# Sierra Leone
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+# Whitman gives Mar 31 - Aug 31 for 1931 on; go with Shanks & Pottenger.
+Rule	SL	1935	1942	-	Jun	 1	0:00	0:40	SLST
+Rule	SL	1935	1942	-	Oct	 1	0:00	0	WAT
+Rule	SL	1957	1962	-	Jun	 1	0:00	1:00	SLST
+Rule	SL	1957	1962	-	Sep	 1	0:00	0	GMT
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Freetown	-0:53:00 -	LMT	1882
+			-0:53:00 -	FMT	1913 Jun # Freetown Mean Time
+			-1:00	SL	%s	1957
+			 0:00	SL	%s
+
+# Somalia
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Africa/Mogadishu	3:01:28 -	LMT	1893 Nov
+			3:00	-	EAT	1931
+			2:30	-	BEAT	1957
+			3:00	-	EAT
+
+# South Africa
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	SA	1942	1943	-	Sep	Sun>=15	2:00	1:00	-
+Rule	SA	1943	1944	-	Mar	Sun>=15	2:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Africa/Johannesburg 1:52:00 -	LMT	1892 Feb 8
+			1:30	-	SAST	1903 Mar
+			2:00	SA	SAST
+# Marion and Prince Edward Is
+# scientific station since 1947
+# no information
+
+# Sudan
+#
+# From <a href="http://www.sunanews.net/sn13jane.html">
+# Sudan News Agency (2000-01-13)
+# </a>, also reported by Michael De Beukelaer-Dossche via Steffen Thorsen:
+# Clocks will be moved ahead for 60 minutes all over the Sudan as of noon
+# Saturday....  This was announced Thursday by Caretaker State Minister for
+# Manpower Abdul-Rahman Nur-Eddin.
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Sudan	1970	only	-	May	 1	0:00	1:00	S
+Rule	Sudan	1970	1985	-	Oct	15	0:00	0	-
+Rule	Sudan	1971	only	-	Apr	30	0:00	1:00	S
+Rule	Sudan	1972	1985	-	Apr	lastSun	0:00	1:00	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Khartoum	2:10:08 -	LMT	1931
+			2:00	Sudan	CA%sT	2000 Jan 15 12:00
+			3:00	-	EAT
+
+# Swaziland
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Mbabane	2:04:24 -	LMT	1903 Mar
+			2:00	-	SAST
+
+# Tanzania
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Africa/Dar_es_Salaam 2:37:08 -	LMT	1931
+			3:00	-	EAT	1948
+			2:44:45	-	BEAUT	1961
+			3:00	-	EAT
+
+# Togo
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Lome	0:04:52 -	LMT	1893
+			0:00	-	GMT
+
+# Tunisia
+
+# From Gwillim Law (2005-04-30):
+# My correspondent, Risto Nykanen, has alerted me to another adoption of DST,
+# this time in Tunisia.  According to Yahoo France News
+# <http://fr.news.yahoo.com/050426/5/4dumk.html>, in a story attributed to AP
+# and dated 2005-04-26, "Tunisia has decided to advance its official time by
+# one hour, starting on Sunday, May 1.  Henceforth, Tunisian time will be
+# UTC+2 instead of UTC+1.  The change will take place at 23:00 UTC next
+# Saturday."  (My translation)
+#
+# From Oscar van Vlijmen (2005-05-02):
+# LaPresse, the first national daily newspaper ...
+# <http://www.lapresse.tn/archives/archives280405/actualites/lheure.html>
+# ... DST for 2005: on: Sun May 1 0h standard time, off: Fri Sept. 30,
+# 1h standard time.
+#
+# From Atef Loukil (2006-03-28):
+# The daylight saving time will be the same each year:
+# Beginning      : the last Sunday of March at 02:00
+# Ending         : the last Sunday of October at 03:00 ...
+# http://www.tap.info.tn/en/index.php?option=com_content&task=view&id=1188&Itemid=50
+
+# From Steffen Thorsen (2009-03-16):
+# According to several news sources, Tunisia will not observe DST this year.
+# (Arabic)
+# <a href="http://www.elbashayer.com/?page=viewn&nid=42546">
+# http://www.elbashayer.com/?page=viewn&nid=42546
+# </a>
+# <a href="http://www.babnet.net/kiwidetail-15295.asp">
+# http://www.babnet.net/kiwidetail-15295.asp
+# </a>
+#
+# We have also confirmed this with the US embassy in Tunisia.
+# We have a wrap-up about this on the following page:
+# <a href="http://www.timeanddate.com/news/time/tunisia-cancels-dst-2009.html">
+# http://www.timeanddate.com/news/time/tunisia-cancels-dst-2009.html
+# </a>
+
+# From Alexander Krivenyshev (2009-03-17):
+# Here is a link to Tunis Afrique Presse News Agency
+#
+# Standard time to be kept the whole year long (tap.info.tn):
+#
+# (in English)
+# <a href="http://www.tap.info.tn/en/index.php?option=com_content&task=view&id=26813&Itemid=157">
+# http://www.tap.info.tn/en/index.php?option=com_content&task=view&id=26813&Itemid=157
+# </a>
+#
+# (in Arabic)
+# <a href="http://www.tap.info.tn/ar/index.php?option=com_content&task=view&id=61240&Itemid=1">
+# http://www.tap.info.tn/ar/index.php?option=com_content&task=view&id=61240&Itemid=1
+# </a>
+
+# From Arthur David Olson (2009--3-18):
+# The Tunis Afrique Presse News Agency notice contains this: "This measure is due to the fact
+# that the fasting month of ramadan coincides with the period concerned by summer time.
+# Therefore, the standard time will be kept unchanged the whole year long."
+# So foregoing DST seems to be an exception (albeit one that may be repeated in the  future).
+
+# From Alexander Krivenyshev (2010-03-27):
+# According to some news reports Tunis confirmed not to use DST in 2010
+#
+# (translation):
+# "The Tunisian government has decided to abandon DST, which was scheduled on
+# Sunday...
+# Tunisian authorities had suspended the DST for the first time last year also
+# coincided with the month of Ramadan..."
+#
+# (in Arabic)
+# <a href="http://www.moheet.com/show_news.aspx?nid=358861&pg=1">
+# http://www.moheet.com/show_news.aspx?nid=358861&pg=1
+# <a href="http://www.almadenahnews.com/newss/news.php?c=118&id=38036">
+# http://www.almadenahnews.com/newss/news.php?c=118&id=38036
+# or
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_tunis02.html">
+# http://www.worldtimezone.com/dst_news/dst_news_tunis02.html
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Tunisia	1939	only	-	Apr	15	23:00s	1:00	S
+Rule	Tunisia	1939	only	-	Nov	18	23:00s	0	-
+Rule	Tunisia	1940	only	-	Feb	25	23:00s	1:00	S
+Rule	Tunisia	1941	only	-	Oct	 6	 0:00	0	-
+Rule	Tunisia	1942	only	-	Mar	 9	 0:00	1:00	S
+Rule	Tunisia	1942	only	-	Nov	 2	 3:00	0	-
+Rule	Tunisia	1943	only	-	Mar	29	 2:00	1:00	S
+Rule	Tunisia	1943	only	-	Apr	17	 2:00	0	-
+Rule	Tunisia	1943	only	-	Apr	25	 2:00	1:00	S
+Rule	Tunisia	1943	only	-	Oct	 4	 2:00	0	-
+Rule	Tunisia	1944	1945	-	Apr	Mon>=1	 2:00	1:00	S
+Rule	Tunisia	1944	only	-	Oct	 8	 0:00	0	-
+Rule	Tunisia	1945	only	-	Sep	16	 0:00	0	-
+Rule	Tunisia	1977	only	-	Apr	30	 0:00s	1:00	S
+Rule	Tunisia	1977	only	-	Sep	24	 0:00s	0	-
+Rule	Tunisia	1978	only	-	May	 1	 0:00s	1:00	S
+Rule	Tunisia	1978	only	-	Oct	 1	 0:00s	0	-
+Rule	Tunisia	1988	only	-	Jun	 1	 0:00s	1:00	S
+Rule	Tunisia	1988	1990	-	Sep	lastSun	 0:00s	0	-
+Rule	Tunisia	1989	only	-	Mar	26	 0:00s	1:00	S
+Rule	Tunisia	1990	only	-	May	 1	 0:00s	1:00	S
+Rule	Tunisia	2005	only	-	May	 1	 0:00s	1:00	S
+Rule	Tunisia	2005	only	-	Sep	30	 1:00s	0	-
+Rule	Tunisia	2006	2008	-	Mar	lastSun	 2:00s	1:00	S
+Rule	Tunisia	2006	2008	-	Oct	lastSun	 2:00s	0	-
+
+# Shanks & Pottenger give 0:09:20 for Paris Mean Time; go with Howse's
+# more precise 0:09:21.
+# Shanks & Pottenger say the 1911 switch was on Mar 9; go with Howse's Mar 11.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Tunis	0:40:44 -	LMT	1881 May 12
+			0:09:21	-	PMT	1911 Mar 11    # Paris Mean Time
+			1:00	Tunisia	CE%sT
+
+# Uganda
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Kampala	2:09:40 -	LMT	1928 Jul
+			3:00	-	EAT	1930
+			2:30	-	BEAT	1948
+			2:44:45	-	BEAUT	1957
+			3:00	-	EAT
+
+# Zambia
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Lusaka	1:53:08 -	LMT	1903 Mar
+			2:00	-	CAT
+
+# Zimbabwe
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Africa/Harare	2:04:12 -	LMT	1903 Mar
+			2:00	-	CAT
diff --git a/JodaTime/src/java/org/joda/time/tz/src/antarctica b/JodaTime/src/java/org/joda/time/tz/src/antarctica
index 46e80afbc..629b2d7b8 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/antarctica
+++ b/JodaTime/src/java/org/joda/time/tz/src/antarctica
@@ -1,327 +1,411 @@
-# @(#)antarctica	8.4
-# <pre>
-
-# From Paul Eggert (1999-11-15):
-# To keep things manageable, we list only locations occupied year-round; see
-# <a href="http://www.comnap.aq/comnap/comnap.nsf/P/Stations/">
-# COMNAP - Stations and Bases
-# </a>
-# and
-# <a href="http://www.spri.cam.ac.uk/bob/periant.htm">
-# Summary of the Peri-Antarctic Islands (1998-07-23)
-# </a>
-# for information.
-# Unless otherwise specified, we have no time zone information.
-#
-# Except for the French entries,
-# I made up all time zone abbreviations mentioned here; corrections welcome!
-# FORMAT is `zzz' and GMTOFF is 0 for locations while uninhabited.
-
-# These rules are stolen from the `europe' file.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	RussAQ	1981	1984	-	Apr	 1	 0:00	1:00	S
-Rule	RussAQ	1981	1983	-	Oct	 1	 0:00	0	-
-Rule	RussAQ	1984	1991	-	Sep	lastSun	 2:00s	0	-
-Rule	RussAQ	1985	1991	-	Mar	lastSun	 2:00s	1:00	S
-Rule	RussAQ	1992	only	-	Mar	lastSat	 23:00	1:00	S
-Rule	RussAQ	1992	only	-	Sep	lastSat	 23:00	0	-
-Rule	RussAQ	1993	max	-	Mar	lastSun	 2:00s	1:00	S
-Rule	RussAQ	1993	1995	-	Sep	lastSun	 2:00s	0	-
-Rule	RussAQ	1996	max	-	Oct	lastSun	 2:00s	0	-
-
-# These rules are stolen from the `southamerica' file.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	ArgAQ	1964	1966	-	Mar	 1	0:00	0	-
-Rule	ArgAQ	1964	1966	-	Oct	15	0:00	1:00	S
-Rule	ArgAQ	1967	only	-	Apr	 2	0:00	0	-
-Rule	ArgAQ	1967	1968	-	Oct	Sun>=1	0:00	1:00	S
-Rule	ArgAQ	1968	1969	-	Apr	Sun>=1	0:00	0	-
-Rule	ArgAQ	1974	only	-	Jan	23	0:00	1:00	S
-Rule	ArgAQ	1974	only	-	May	 1	0:00	0	-
-Rule	ChileAQ	1972	1986	-	Mar	Sun>=9	3:00u	0	-
-Rule	ChileAQ	1974	1987	-	Oct	Sun>=9	4:00u	1:00	S
-Rule	ChileAQ	1987	only	-	Apr	12	3:00u	0	-
-Rule	ChileAQ	1988	1989	-	Mar	Sun>=9	3:00u	0	-
-Rule	ChileAQ	1988	only	-	Oct	Sun>=1	4:00u	1:00	S
-Rule	ChileAQ	1989	only	-	Oct	Sun>=9	4:00u	1:00	S
-Rule	ChileAQ	1990	only	-	Mar	18	3:00u	0	-
-Rule	ChileAQ	1990	only	-	Sep	16	4:00u	1:00	S
-Rule	ChileAQ	1991	1996	-	Mar	Sun>=9	3:00u	0	-
-Rule	ChileAQ	1991	1997	-	Oct	Sun>=9	4:00u	1:00	S
-Rule	ChileAQ	1997	only	-	Mar	30	3:00u	0	-
-Rule	ChileAQ	1998	only	-	Mar	Sun>=9	3:00u	0	-
-Rule	ChileAQ	1998	only	-	Sep	27	4:00u	1:00	S
-Rule	ChileAQ	1999	only	-	Apr	 4	3:00u	0	-
-Rule	ChileAQ	1999	max	-	Oct	Sun>=9	4:00u	1:00	S
-Rule	ChileAQ	2000	max	-	Mar	Sun>=9	3:00u	0	-
-
-
-# Argentina - year-round bases
-# Belgrano II, Confin Coast, -770227-0343737, since 1972-02-05
-# Esperanza, San Martin Land, -6323-05659, since 1952-12-17
-# Jubany, Potter Peninsula, King George Island, -6414-0602320, since 1982-01
-# Marambio, Seymour I, -6414-05637, since 1969-10-29
-# Orcadas, Laurie I, -6016-04444, since 1904-02-22
-# San Martin, Debenham I, -6807-06708, since 1951-03-21
-#	(except 1960-03 / 1976-03-21)
-
-# Australia - territories
-# Heard Island, McDonald Islands (uninhabited)
-#	previously sealers and scientific personnel wintered
-#	<a href="http://web.archive.org/web/20021204222245/http://www.dstc.qut.edu.au/DST/marg/daylight.html">
-#	Margaret Turner reports
-#	</a> (1999-09-30) that they're UTC+5, with no DST;
-#	presumably this is when they have visitors.
-#
-# year-round bases
-# Casey, Bailey Peninsula, -6617+11032, since 1969
-# Davis, Vestfold Hills, -6835+07759, since 1957-01-13
-#	(except 1964-11 - 1969-02)
-# Mawson, Holme Bay, -6736+06253, since 1954-02-13
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Antarctica/Casey	0	-	zzz	1969
-			8:00	-	WST	# Western (Aus) Standard Time
-Zone Antarctica/Davis	0	-	zzz	1957 Jan 13
-			7:00	-	DAVT	1964 Nov # Davis Time
-			0	-	zzz	1969 Feb
-			7:00	-	DAVT
-Zone Antarctica/Mawson	0	-	zzz	1954 Feb 13
-			6:00	-	MAWT	# Mawson Time
-# References:
-# <a href="http://www.antdiv.gov.au/aad/exop/sfo/casey/casey_aws.html">
-# Casey Weather (1998-02-26)
-# </a>
-# <a href="http://www.antdiv.gov.au/aad/exop/sfo/davis/video.html">
-# Davis Station, Antarctica (1998-02-26)
-# </a>
-# <a href="http://www.antdiv.gov.au/aad/exop/sfo/mawson/video.html">
-# Mawson Station, Antarctica (1998-02-25)
-# </a>
-
-# Brazil - year-round base
-# Comandante Ferraz, King George Island, -6205+05824, since 1983/4
-
-# Chile - year-round bases and towns
-# Escudero, South Shetland Is, -621157-0585735, since 1994
-# Presidente Eduadro Frei, King George Island, -6214-05848, since 1969-03-07
-# General Bernardo O'Higgins, Antarctic Peninsula, -6319-05704, since 1948-02
-# Capitan Arturo Prat, -6230-05941
-# Villa Las Estrellas (a town), around the Frei base, since 1984-04-09
-# These locations have always used Santiago time; use TZ='America/Santiago'.
-
-# China - year-round bases
-# Great Wall, King George Island, -6213-05858, since 1985-02-20
-# Zhongshan, Larsemann Hills, Prydz Bay, -6922+07623, since 1989-02-26
-
-# France - year-round bases
-#
-# From Antoine Leca (1997-01-20):
-# Time data are from Nicole Pailleau at the IFRTP
-# (French Institute for Polar Research and Technology).
-# She confirms that French Southern Territories and Terre Adelie bases
-# don't observe daylight saving time, even if Terre Adelie supplies came
-# from Tasmania.
-#
-# French Southern Territories with year-round inhabitants
-#
-# Martin-de-Vivies Base, Amsterdam Island, -374105+0773155, since 1950
-# Alfred-Faure Base, Crozet Islands, -462551+0515152, since 1964
-# Port-aux-Francais, Kerguelen Islands, -492110+0701303, since 1951;
-#	whaling & sealing station operated 1908/1914, 1920/1929, and 1951/1956
-#
-# St Paul Island - near Amsterdam, uninhabited
-#	fishing stations operated variously 1819/1931
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Indian/Kerguelen	0	-	zzz	1950	# Port-aux-Francais
-			5:00	-	TFT	# ISO code TF Time
-#
-# year-round base in the main continent
-# Dumont-d'Urville, Ile des Petrels, -6640+14001, since 1956-11
-#
-# Another base at Port-Martin, 50km east, began operation in 1947.
-# It was destroyed by fire on 1952-01-14.
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Antarctica/DumontDUrville 0 -	zzz	1947
-			10:00	-	PMT	1952 Jan 14 # Port-Martin Time
-			0	-	zzz	1956 Nov
-			10:00	-	DDUT	# Dumont-d'Urville Time
-# Reference:
-# <a href="http://en.wikipedia.org/wiki/Dumont_d'Urville_Station">
-# Dumont d'Urville Station (2005-12-05)
-# </a>
-
-# Germany - year-round base
-# Georg von Neumayer, -7039-00815
-
-# India - year-round base
-# Dakshin Gangotri, -7005+01200
-
-# Japan - year-round bases
-# Dome Fuji, -7719+03942
-# Syowa, -690022+0393524
-#
-# From Hideyuki Suzuki (1999-02-06):
-# In all Japanese stations, +0300 is used as the standard time.
-#
-# Syowa station, which is the first antarctic station of Japan,
-# was established on 1957-01-29.  Since Syowa station is still the main
-# station of Japan, it's appropriate for the principal location.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Antarctica/Syowa	0	-	zzz	1957 Jan 29
-			3:00	-	SYOT	# Syowa Time
-# See:
-# <a href="http://www.nipr.ac.jp/english/ara01.html">
-# NIPR Antarctic Research Activities (1999-08-17)
-# </a>
-
-# S Korea - year-round base
-# King Sejong, King George Island, -6213-05847, since 1988
-
-# New Zealand - claims
-# Balleny Islands (never inhabited)
-# Scott Island (never inhabited)
-#
-# year-round base
-# Scott, Ross Island, since 1957-01, is like Antarctica/McMurdo.
-#
-# These rules for New Zealand are stolen from the `australasia' file.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	NZAQ	1974	only	-	Nov	 3	2:00s	1:00	D
-Rule	NZAQ	1975	1988	-	Oct	lastSun	2:00s	1:00	D
-Rule	NZAQ	1989	only	-	Oct	 8	2:00s	1:00	D
-Rule	NZAQ	1990	2006	-	Oct	Sun>=1	2:00s	1:00	D
-Rule	NZAQ	1975	only	-	Feb	23	2:00s	0	S
-Rule	NZAQ	1976	1989	-	Mar	Sun>=1	2:00s	0	S
-Rule	NZAQ	1990	2007	-	Mar	Sun>=15	2:00s	0	S
-Rule	NZAQ	2007	max	-	Sep	lastSun	2:00s	1:00	D
-Rule	NZAQ	2008	max	-	Apr	Sun>=1	2:00s	0	S
-
-# Norway - territories
-# Bouvet (never inhabited)
-#
-# claims
-# Peter I Island (never inhabited)
-
-# Poland - year-round base
-# Arctowski, King George Island, -620945-0582745, since 1977
-
-# Russia - year-round bases
-# Bellingshausen, King George Island, -621159-0585337, since 1968-02-22
-# Mirny, Davis coast, -6633+09301, since 1956-02
-# Molodezhnaya, Alasheyev Bay, -6740+04551,
-#	year-round from 1962-02 to 1999-07-01
-# Novolazarevskaya, Queen Maud Land, -7046+01150,
-#	year-round from 1960/61 to 1992
-
-# Vostok, since 1957-12-16, temporarily closed 1994-02/1994-11
-# <a href="http://quest.arc.nasa.gov/antarctica/QA/computers/Directions,Time,ZIP">
-# From Craig Mundell (1994-12-15)</a>:
-# Vostok, which is one of the Russian stations, is set on the same
-# time as Moscow, Russia.
-#
-# From Lee Hotz (2001-03-08):
-# I queried the folks at Columbia who spent the summer at Vostok and this is
-# what they had to say about time there:
-# ``in the US Camp (East Camp) we have been on New Zealand (McMurdo)
-# time, which is 12 hours ahead of GMT. The Russian Station Vostok was
-# 6 hours behind that (although only 2 miles away, i.e. 6 hours ahead
-# of GMT). This is a time zone I think two hours east of Moscow. The
-# natural time zone is in between the two: 8 hours ahead of GMT.''
-#
-# From Paul Eggert (2001-05-04):
-# This seems to be hopelessly confusing, so I asked Lee Hotz about it
-# in person.  He said that some Antartic locations set their local
-# time so that noon is the warmest part of the day, and that this
-# changes during the year and does not necessarily correspond to mean
-# solar noon.  So the Vostok time might have been whatever the clocks
-# happened to be during their visit.  So we still don't really know what time
-# it is at Vostok.  But we'll guess UTC+6.
-#
-Zone Antarctica/Vostok	0	-	zzz	1957 Dec 16
-			6:00	-	VOST	# Vostok time
-
-# S Africa - year-round bases
-# Marion Island, -4653+03752
-# Sanae, -7141-00250
-
-# UK
-#
-# British Antarctic Territories (BAT) claims
-# South Orkney Islands
-#	scientific station from 1903
-#	whaling station at Signy I 1920/1926
-# South Shetland Islands
-#
-# year-round bases
-# Bird Island, South Georgia, -5400-03803, since 1983
-# Deception Island, -6259-06034, whaling station 1912/1931,
-#	scientific station 1943/1967,
-#	previously sealers and a scientific expedition wintered by accident,
-#	and a garrison was deployed briefly
-# Halley, Coates Land, -7535-02604, since 1956-01-06
-#	Halley is on a moving ice shelf and is periodically relocated
-#	so that it is never more than 10km from its nominal location.
-# Rothera, Adelaide Island, -6734-6808, since 1976-12-01
-#
-# From Paul Eggert (2002-10-22)
-# <http://webexhibits.org/daylightsaving/g.html> says Rothera is -03 all year.
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Antarctica/Rothera	0	-	zzz	1976 Dec  1
-			-3:00	-	ROTT	# Rothera time
-
-# Uruguay - year round base
-# Artigas, King George Island, -621104-0585107
-
-# USA - year-round bases
-#
-# Palmer, Anvers Island, since 1965 (moved 2 miles in 1968)
-#
-# From Ethan Dicks (1996-10-06):
-# It keeps the same time as Punta Arenas, Chile, because, just like us
-# and the South Pole, that's the other end of their supply line....
-# I verified with someone who was there that since 1980,
-# Palmer has followed Chile.  Prior to that, before the Falklands War,
-# Palmer used to be supplied from Argentina.
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Antarctica/Palmer	0	-	zzz	1965
-			-4:00	ArgAQ	AR%sT	1969 Oct 5
-			-3:00	ArgAQ	AR%sT	1982 May
-			-4:00	ChileAQ	CL%sT
-#
-#
-# McMurdo, Ross Island, since 1955-12
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Antarctica/McMurdo	0	-	zzz	1956
-			12:00	NZAQ	NZ%sT
-#
-# Amundsen-Scott, South Pole, continuously occupied since 1956-11-20
-#
-# From Paul Eggert (1996-09-03):
-# Normally it wouldn't have a separate entry, since it's like the
-# larger Antarctica/McMurdo since 1970, but it's too famous to omit.
-#
-# From Chris Carrier (1996-06-27):
-# Siple, the first commander of the South Pole station,
-# stated that he would have liked to have kept GMT at the station,
-# but that he found it more convenient to keep GMT+12
-# as supplies for the station were coming from McMurdo Sound,
-# which was on GMT+12 because New Zealand was on GMT+12 all year
-# at that time (1957).  (Source: Siple's book 90 degrees SOUTH.)
-#
-# From Susan Smith
-# http://www.cybertours.com/whs/pole10.html
-# (1995-11-13 16:24:56 +1300, no longer available):
-# We use the same time as McMurdo does.
-# And they use the same time as Christchurch, NZ does....
-# One last quirk about South Pole time.
-# All the electric clocks are usually wrong.
-# Something about the generators running at 60.1hertz or something
-# makes all of the clocks run fast.  So every couple of days,
-# we have to go around and set them back 5 minutes or so.
-# Maybe if we let them run fast all of the time, we'd get to leave here sooner!!
-#
-Link	Antarctica/McMurdo	Antarctica/South_Pole
+# <pre>
+# @(#)antarctica	8.8
+# This file is in the public domain, so clarified as of
+# 2009-05-17 by Arthur David Olson.
+
+# From Paul Eggert (1999-11-15):
+# To keep things manageable, we list only locations occupied year-round; see
+# <a href="http://www.comnap.aq/comnap/comnap.nsf/P/Stations/">
+# COMNAP - Stations and Bases
+# </a>
+# and
+# <a href="http://www.spri.cam.ac.uk/bob/periant.htm">
+# Summary of the Peri-Antarctic Islands (1998-07-23)
+# </a>
+# for information.
+# Unless otherwise specified, we have no time zone information.
+#
+# Except for the French entries,
+# I made up all time zone abbreviations mentioned here; corrections welcome!
+# FORMAT is `zzz' and GMTOFF is 0 for locations while uninhabited.
+
+# These rules are stolen from the `europe' file.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	RussAQ	1981	1984	-	Apr	 1	 0:00	1:00	S
+Rule	RussAQ	1981	1983	-	Oct	 1	 0:00	0	-
+Rule	RussAQ	1984	1991	-	Sep	lastSun	 2:00s	0	-
+Rule	RussAQ	1985	1991	-	Mar	lastSun	 2:00s	1:00	S
+Rule	RussAQ	1992	only	-	Mar	lastSat	 23:00	1:00	S
+Rule	RussAQ	1992	only	-	Sep	lastSat	 23:00	0	-
+Rule	RussAQ	1993	max	-	Mar	lastSun	 2:00s	1:00	S
+Rule	RussAQ	1993	1995	-	Sep	lastSun	 2:00s	0	-
+Rule	RussAQ	1996	max	-	Oct	lastSun	 2:00s	0	-
+
+# These rules are stolen from the `southamerica' file.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	ArgAQ	1964	1966	-	Mar	 1	0:00	0	-
+Rule	ArgAQ	1964	1966	-	Oct	15	0:00	1:00	S
+Rule	ArgAQ	1967	only	-	Apr	 2	0:00	0	-
+Rule	ArgAQ	1967	1968	-	Oct	Sun>=1	0:00	1:00	S
+Rule	ArgAQ	1968	1969	-	Apr	Sun>=1	0:00	0	-
+Rule	ArgAQ	1974	only	-	Jan	23	0:00	1:00	S
+Rule	ArgAQ	1974	only	-	May	 1	0:00	0	-
+Rule	ChileAQ	1972	1986	-	Mar	Sun>=9	3:00u	0	-
+Rule	ChileAQ	1974	1987	-	Oct	Sun>=9	4:00u	1:00	S
+Rule	ChileAQ	1987	only	-	Apr	12	3:00u	0	-
+Rule	ChileAQ	1988	1989	-	Mar	Sun>=9	3:00u	0	-
+Rule	ChileAQ	1988	only	-	Oct	Sun>=1	4:00u	1:00	S
+Rule	ChileAQ	1989	only	-	Oct	Sun>=9	4:00u	1:00	S
+Rule	ChileAQ	1990	only	-	Mar	18	3:00u	0	-
+Rule	ChileAQ	1990	only	-	Sep	16	4:00u	1:00	S
+Rule	ChileAQ	1991	1996	-	Mar	Sun>=9	3:00u	0	-
+Rule	ChileAQ	1991	1997	-	Oct	Sun>=9	4:00u	1:00	S
+Rule	ChileAQ	1997	only	-	Mar	30	3:00u	0	-
+Rule	ChileAQ	1998	only	-	Mar	Sun>=9	3:00u	0	-
+Rule	ChileAQ	1998	only	-	Sep	27	4:00u	1:00	S
+Rule	ChileAQ	1999	only	-	Apr	 4	3:00u	0	-
+Rule	ChileAQ	1999	max	-	Oct	Sun>=9	4:00u	1:00	S
+Rule	ChileAQ	2000	max	-	Mar	Sun>=9	3:00u	0	-
+
+# These rules are stolen from the `australasia' file.
+Rule	AusAQ	1917	only	-	Jan	 1	0:01	1:00	-
+Rule	AusAQ	1917	only	-	Mar	25	2:00	0	-
+Rule	AusAQ	1942	only	-	Jan	 1	2:00	1:00	-
+Rule	AusAQ	1942	only	-	Mar	29	2:00	0	-
+Rule	AusAQ	1942	only	-	Sep	27	2:00	1:00	-
+Rule	AusAQ	1943	1944	-	Mar	lastSun	2:00	0	-
+Rule	AusAQ	1943	only	-	Oct	 3	2:00	1:00	-
+Rule	ATAQ	1967	only	-	Oct	Sun>=1	2:00s	1:00	-
+Rule	ATAQ	1968	only	-	Mar	lastSun	2:00s	0	-
+Rule	ATAQ	1968	1985	-	Oct	lastSun	2:00s	1:00	-
+Rule	ATAQ	1969	1971	-	Mar	Sun>=8	2:00s	0	-
+Rule	ATAQ	1972	only	-	Feb	lastSun	2:00s	0	-
+Rule	ATAQ	1973	1981	-	Mar	Sun>=1	2:00s	0	-
+Rule	ATAQ	1982	1983	-	Mar	lastSun	2:00s	0	-
+Rule	ATAQ	1984	1986	-	Mar	Sun>=1	2:00s	0	-
+Rule	ATAQ	1986	only	-	Oct	Sun>=15	2:00s	1:00	-
+Rule	ATAQ	1987	1990	-	Mar	Sun>=15	2:00s	0	-
+Rule	ATAQ	1987	only	-	Oct	Sun>=22	2:00s	1:00	-
+Rule	ATAQ	1988	1990	-	Oct	lastSun	2:00s	1:00	-
+Rule	ATAQ	1991	1999	-	Oct	Sun>=1	2:00s	1:00	-
+Rule	ATAQ	1991	2005	-	Mar	lastSun	2:00s	0	-
+Rule	ATAQ	2000	only	-	Aug	lastSun	2:00s	1:00	-
+Rule	ATAQ	2001	max	-	Oct	Sun>=1	2:00s	1:00	-
+Rule	ATAQ	2006	only	-	Apr	Sun>=1	2:00s	0	-
+Rule	ATAQ	2007	only	-	Mar	lastSun	2:00s	0	-
+Rule	ATAQ	2008	max	-	Apr	Sun>=1	2:00s	0	-
+
+# Argentina - year-round bases
+# Belgrano II, Confin Coast, -770227-0343737, since 1972-02-05
+# Esperanza, San Martin Land, -6323-05659, since 1952-12-17
+# Jubany, Potter Peninsula, King George Island, -6414-0602320, since 1982-01
+# Marambio, Seymour I, -6414-05637, since 1969-10-29
+# Orcadas, Laurie I, -6016-04444, since 1904-02-22
+# San Martin, Debenham I, -6807-06708, since 1951-03-21
+#	(except 1960-03 / 1976-03-21)
+
+# Australia - territories
+# Heard Island, McDonald Islands (uninhabited)
+#	previously sealers and scientific personnel wintered
+#	<a href="http://web.archive.org/web/20021204222245/http://www.dstc.qut.edu.au/DST/marg/daylight.html">
+#	Margaret Turner reports
+#	</a> (1999-09-30) that they're UTC+5, with no DST;
+#	presumably this is when they have visitors.
+#
+# year-round bases
+# Casey, Bailey Peninsula, -6617+11032, since 1969
+# Davis, Vestfold Hills, -6835+07759, since 1957-01-13
+#	(except 1964-11 - 1969-02)
+# Mawson, Holme Bay, -6736+06253, since 1954-02-13
+
+# From Steffen Thorsen (2009-03-11):
+# Three Australian stations in Antarctica have changed their time zone:
+# Casey moved from UTC+8 to UTC+11
+# Davis moved from UTC+7 to UTC+5
+# Mawson moved from UTC+6 to UTC+5
+# The changes occurred on 2009-10-18 at 02:00 (local times).
+#
+# Government source: (Australian Antarctic Division)
+# <a href="http://www.aad.gov.au/default.asp?casid=37079">
+# http://www.aad.gov.au/default.asp?casid=37079
+# </a>
+#
+# We have more background information here:
+# <a href="http://www.timeanddate.com/news/time/antarctica-new-times.html">
+# http://www.timeanddate.com/news/time/antarctica-new-times.html
+# </a>
+
+# From Steffen Thorsen (2010-03-10):
+# We got these changes from the Australian Antarctic Division:
+# - Macquarie Island will stay on UTC+11 for winter and therefore not
+# switch back from daylight savings time when other parts of Australia do
+# on 4 April.
+#
+# - Casey station reverted to its normal time of UTC+8 on 5 March 2010.
+# The change to UTC+11 is being considered as a regular summer thing but
+# has not been decided yet.
+#
+# - Davis station will revert to its normal time of UTC+7 at 10 March 2010
+# 20:00 UTC.
+#
+# - Mawson station stays on UTC+5.
+#
+# In addition to the Rule changes for Casey/Davis, it means that Macquarie
+# will no longer be like Hobart and will have to have its own Zone created.
+#
+# Background:
+# <a href="http://www.timeanddate.com/news/time/antartica-time-changes-2010.html">
+# http://www.timeanddate.com/news/time/antartica-time-changes-2010.html
+# </a>
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Antarctica/Casey	0	-	zzz	1969
+			8:00	-	WST	2009 Oct 18 2:00
+						# Western (Aus) Standard Time
+			11:00	-	CAST	2010 Mar 5 2:00
+						# Casey Time
+			8:00	-	WST
+Zone Antarctica/Davis	0	-	zzz	1957 Jan 13
+			7:00	-	DAVT	1964 Nov # Davis Time
+			0	-	zzz	1969 Feb
+			7:00	-	DAVT	2009 Oct 18 2:00
+			5:00	-	DAVT	2010 Mar 10 20:00u
+			7:00	-	DAVT
+Zone Antarctica/Mawson	0	-	zzz	1954 Feb 13
+			6:00	-	MAWT	2009 Oct 18 2:00
+						# Mawson Time
+			5:00	-	MAWT
+Zone Antarctica/Macquarie 0	-	zzz	1911
+			10:00	-	EST	1916 Oct 1 2:00
+			10:00	1:00	EST	1917 Feb
+			10:00	AusAQ	EST	1967
+			10:00	ATAQ	EST	2010 Apr 4 3:00
+			11:00	-	MIST	# Macquarie Island Time
+# References:
+# <a href="http://www.antdiv.gov.au/aad/exop/sfo/casey/casey_aws.html">
+# Casey Weather (1998-02-26)
+# </a>
+# <a href="http://www.antdiv.gov.au/aad/exop/sfo/davis/video.html">
+# Davis Station, Antarctica (1998-02-26)
+# </a>
+# <a href="http://www.antdiv.gov.au/aad/exop/sfo/mawson/video.html">
+# Mawson Station, Antarctica (1998-02-25)
+# </a>
+
+# Brazil - year-round base
+# Comandante Ferraz, King George Island, -6205+05824, since 1983/4
+
+# Chile - year-round bases and towns
+# Escudero, South Shetland Is, -621157-0585735, since 1994
+# Presidente Eduadro Frei, King George Island, -6214-05848, since 1969-03-07
+# General Bernardo O'Higgins, Antarctic Peninsula, -6319-05704, since 1948-02
+# Capitan Arturo Prat, -6230-05941
+# Villa Las Estrellas (a town), around the Frei base, since 1984-04-09
+# These locations have always used Santiago time; use TZ='America/Santiago'.
+
+# China - year-round bases
+# Great Wall, King George Island, -6213-05858, since 1985-02-20
+# Zhongshan, Larsemann Hills, Prydz Bay, -6922+07623, since 1989-02-26
+
+# France - year-round bases
+#
+# From Antoine Leca (1997-01-20):
+# Time data are from Nicole Pailleau at the IFRTP
+# (French Institute for Polar Research and Technology).
+# She confirms that French Southern Territories and Terre Adelie bases
+# don't observe daylight saving time, even if Terre Adelie supplies came
+# from Tasmania.
+#
+# French Southern Territories with year-round inhabitants
+#
+# Martin-de-Vivies Base, Amsterdam Island, -374105+0773155, since 1950
+# Alfred-Faure Base, Crozet Islands, -462551+0515152, since 1964
+# Port-aux-Francais, Kerguelen Islands, -492110+0701303, since 1951;
+#	whaling & sealing station operated 1908/1914, 1920/1929, and 1951/1956
+#
+# St Paul Island - near Amsterdam, uninhabited
+#	fishing stations operated variously 1819/1931
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Indian/Kerguelen	0	-	zzz	1950	# Port-aux-Francais
+			5:00	-	TFT	# ISO code TF Time
+#
+# year-round base in the main continent
+# Dumont-d'Urville, Ile des Petrels, -6640+14001, since 1956-11
+#
+# Another base at Port-Martin, 50km east, began operation in 1947.
+# It was destroyed by fire on 1952-01-14.
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Antarctica/DumontDUrville 0 -	zzz	1947
+			10:00	-	PMT	1952 Jan 14 # Port-Martin Time
+			0	-	zzz	1956 Nov
+			10:00	-	DDUT	# Dumont-d'Urville Time
+# Reference:
+# <a href="http://en.wikipedia.org/wiki/Dumont_d'Urville_Station">
+# Dumont d'Urville Station (2005-12-05)
+# </a>
+
+# Germany - year-round base
+# Georg von Neumayer, -7039-00815
+
+# India - year-round base
+# Dakshin Gangotri, -7005+01200
+
+# Japan - year-round bases
+# Dome Fuji, -7719+03942
+# Syowa, -690022+0393524
+#
+# From Hideyuki Suzuki (1999-02-06):
+# In all Japanese stations, +0300 is used as the standard time.
+#
+# Syowa station, which is the first antarctic station of Japan,
+# was established on 1957-01-29.  Since Syowa station is still the main
+# station of Japan, it's appropriate for the principal location.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Antarctica/Syowa	0	-	zzz	1957 Jan 29
+			3:00	-	SYOT	# Syowa Time
+# See:
+# <a href="http://www.nipr.ac.jp/english/ara01.html">
+# NIPR Antarctic Research Activities (1999-08-17)
+# </a>
+
+# S Korea - year-round base
+# King Sejong, King George Island, -6213-05847, since 1988
+
+# New Zealand - claims
+# Balleny Islands (never inhabited)
+# Scott Island (never inhabited)
+#
+# year-round base
+# Scott, Ross Island, since 1957-01, is like Antarctica/McMurdo.
+#
+# These rules for New Zealand are stolen from the `australasia' file.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	NZAQ	1974	only	-	Nov	 3	2:00s	1:00	D
+Rule	NZAQ	1975	1988	-	Oct	lastSun	2:00s	1:00	D
+Rule	NZAQ	1989	only	-	Oct	 8	2:00s	1:00	D
+Rule	NZAQ	1990	2006	-	Oct	Sun>=1	2:00s	1:00	D
+Rule	NZAQ	1975	only	-	Feb	23	2:00s	0	S
+Rule	NZAQ	1976	1989	-	Mar	Sun>=1	2:00s	0	S
+Rule	NZAQ	1990	2007	-	Mar	Sun>=15	2:00s	0	S
+Rule	NZAQ	2007	max	-	Sep	lastSun	2:00s	1:00	D
+Rule	NZAQ	2008	max	-	Apr	Sun>=1	2:00s	0	S
+
+# Norway - territories
+# Bouvet (never inhabited)
+#
+# claims
+# Peter I Island (never inhabited)
+
+# Poland - year-round base
+# Arctowski, King George Island, -620945-0582745, since 1977
+
+# Russia - year-round bases
+# Bellingshausen, King George Island, -621159-0585337, since 1968-02-22
+# Mirny, Davis coast, -6633+09301, since 1956-02
+# Molodezhnaya, Alasheyev Bay, -6740+04551,
+#	year-round from 1962-02 to 1999-07-01
+# Novolazarevskaya, Queen Maud Land, -7046+01150,
+#	year-round from 1960/61 to 1992
+
+# Vostok, since 1957-12-16, temporarily closed 1994-02/1994-11
+# <a href="http://quest.arc.nasa.gov/antarctica/QA/computers/Directions,Time,ZIP">
+# From Craig Mundell (1994-12-15)</a>:
+# Vostok, which is one of the Russian stations, is set on the same
+# time as Moscow, Russia.
+#
+# From Lee Hotz (2001-03-08):
+# I queried the folks at Columbia who spent the summer at Vostok and this is
+# what they had to say about time there:
+# ``in the US Camp (East Camp) we have been on New Zealand (McMurdo)
+# time, which is 12 hours ahead of GMT. The Russian Station Vostok was
+# 6 hours behind that (although only 2 miles away, i.e. 6 hours ahead
+# of GMT). This is a time zone I think two hours east of Moscow. The
+# natural time zone is in between the two: 8 hours ahead of GMT.''
+#
+# From Paul Eggert (2001-05-04):
+# This seems to be hopelessly confusing, so I asked Lee Hotz about it
+# in person.  He said that some Antartic locations set their local
+# time so that noon is the warmest part of the day, and that this
+# changes during the year and does not necessarily correspond to mean
+# solar noon.  So the Vostok time might have been whatever the clocks
+# happened to be during their visit.  So we still don't really know what time
+# it is at Vostok.  But we'll guess UTC+6.
+#
+Zone Antarctica/Vostok	0	-	zzz	1957 Dec 16
+			6:00	-	VOST	# Vostok time
+
+# S Africa - year-round bases
+# Marion Island, -4653+03752
+# Sanae, -7141-00250
+
+# UK
+#
+# British Antarctic Territories (BAT) claims
+# South Orkney Islands
+#	scientific station from 1903
+#	whaling station at Signy I 1920/1926
+# South Shetland Islands
+#
+# year-round bases
+# Bird Island, South Georgia, -5400-03803, since 1983
+# Deception Island, -6259-06034, whaling station 1912/1931,
+#	scientific station 1943/1967,
+#	previously sealers and a scientific expedition wintered by accident,
+#	and a garrison was deployed briefly
+# Halley, Coates Land, -7535-02604, since 1956-01-06
+#	Halley is on a moving ice shelf and is periodically relocated
+#	so that it is never more than 10km from its nominal location.
+# Rothera, Adelaide Island, -6734-6808, since 1976-12-01
+#
+# From Paul Eggert (2002-10-22)
+# <http://webexhibits.org/daylightsaving/g.html> says Rothera is -03 all year.
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Antarctica/Rothera	0	-	zzz	1976 Dec  1
+			-3:00	-	ROTT	# Rothera time
+
+# Uruguay - year round base
+# Artigas, King George Island, -621104-0585107
+
+# USA - year-round bases
+#
+# Palmer, Anvers Island, since 1965 (moved 2 miles in 1968)
+#
+# From Ethan Dicks (1996-10-06):
+# It keeps the same time as Punta Arenas, Chile, because, just like us
+# and the South Pole, that's the other end of their supply line....
+# I verified with someone who was there that since 1980,
+# Palmer has followed Chile.  Prior to that, before the Falklands War,
+# Palmer used to be supplied from Argentina.
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Antarctica/Palmer	0	-	zzz	1965
+			-4:00	ArgAQ	AR%sT	1969 Oct 5
+			-3:00	ArgAQ	AR%sT	1982 May
+			-4:00	ChileAQ	CL%sT
+#
+#
+# McMurdo, Ross Island, since 1955-12
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Antarctica/McMurdo	0	-	zzz	1956
+			12:00	NZAQ	NZ%sT
+#
+# Amundsen-Scott, South Pole, continuously occupied since 1956-11-20
+#
+# From Paul Eggert (1996-09-03):
+# Normally it wouldn't have a separate entry, since it's like the
+# larger Antarctica/McMurdo since 1970, but it's too famous to omit.
+#
+# From Chris Carrier (1996-06-27):
+# Siple, the first commander of the South Pole station,
+# stated that he would have liked to have kept GMT at the station,
+# but that he found it more convenient to keep GMT+12
+# as supplies for the station were coming from McMurdo Sound,
+# which was on GMT+12 because New Zealand was on GMT+12 all year
+# at that time (1957).  (Source: Siple's book 90 degrees SOUTH.)
+#
+# From Susan Smith
+# http://www.cybertours.com/whs/pole10.html
+# (1995-11-13 16:24:56 +1300, no longer available):
+# We use the same time as McMurdo does.
+# And they use the same time as Christchurch, NZ does....
+# One last quirk about South Pole time.
+# All the electric clocks are usually wrong.
+# Something about the generators running at 60.1hertz or something
+# makes all of the clocks run fast.  So every couple of days,
+# we have to go around and set them back 5 minutes or so.
+# Maybe if we let them run fast all of the time, we'd get to leave here sooner!!
+#
+Link	Antarctica/McMurdo	Antarctica/South_Pole
diff --git a/JodaTime/src/java/org/joda/time/tz/src/asia b/JodaTime/src/java/org/joda/time/tz/src/asia
index 660fd73da..78ff2ffed 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/asia
+++ b/JodaTime/src/java/org/joda/time/tz/src/asia
@@ -1,2043 +1,2573 @@
-# @(#)asia	8.24
-# <pre>
-
-# This data is by no means authoritative; if you think you know better,
-# go ahead and edit the file (and please send any changes to
-# tz@elsie.nci.nih.gov for general use in the future).
-
-# From Paul Eggert (2006-03-22):
-#
-# A good source for time zone historical data outside the U.S. is
-# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),
-# San Diego: ACS Publications, Inc. (2003).
-#
-# Gwillim Law writes that a good source
-# for recent time zone data is the International Air Transport
-# Association's Standard Schedules Information Manual (IATA SSIM),
-# published semiannually.  Law sent in several helpful summaries
-# of the IATA's data after 1990.
-#
-# Except where otherwise noted, Shanks & Pottenger is the source for
-# entries through 1990, and IATA SSIM is the source for entries afterwards.
-#
-# Another source occasionally used is Edward W. Whitman, World Time Differences,
-# Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated), which
-# I found in the UCLA library.
-#
-# A reliable and entertaining source about time zones is
-# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).
-#
-# I invented the abbreviations marked `*' in the following table;
-# the rest are from earlier versions of this file, or from other sources.
-# Corrections are welcome!
-#	     std  dst
-#	     LMT	Local Mean Time
-#	2:00 EET  EEST	Eastern European Time
-#	2:00 IST  IDT	Israel
-#	3:00 AST  ADT	Arabia*
-#	3:30 IRST IRDT	Iran
-#	4:00 GST	Gulf*
-#	5:30 IST	India
-#	7:00 ICT	Indochina*
-#	7:00 WIT	west Indonesia
-#	8:00 CIT	central Indonesia
-#	8:00 CST	China
-#	9:00 CJT	Central Japanese Time (1896/1937)*
-#	9:00 EIT	east Indonesia
-#	9:00 JST  JDT	Japan
-#	9:00 KST  KDT	Korea
-#	9:30 CST	(Australian) Central Standard Time
-#
-# See the `europe' file for Russia and Turkey in Asia.
-
-# From Guy Harris:
-# Incorporates data for Singapore from Robert Elz' asia 1.1, as well as
-# additional information from Tom Yap, Sun Microsystems Intercontinental
-# Technical Support (including a page from the Official Airline Guide -
-# Worldwide Edition).  The names for time zones are guesses.
-
-###############################################################################
-
-# These rules are stolen from the `europe' file.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	EUAsia	1981	max	-	Mar	lastSun	 1:00u	1:00	S
-Rule	EUAsia	1979	1995	-	Sep	lastSun	 1:00u	0	-
-Rule	EUAsia	1996	max	-	Oct	lastSun	 1:00u	0	-
-Rule E-EurAsia	1981	max	-	Mar	lastSun	 0:00	1:00	S
-Rule E-EurAsia	1979	1995	-	Sep	lastSun	 0:00	0	-
-Rule E-EurAsia	1996	max	-	Oct	lastSun	 0:00	0	-
-Rule RussiaAsia	1981	1984	-	Apr	1	 0:00	1:00	S
-Rule RussiaAsia	1981	1983	-	Oct	1	 0:00	0	-
-Rule RussiaAsia	1984	1991	-	Sep	lastSun	 2:00s	0	-
-Rule RussiaAsia	1985	1991	-	Mar	lastSun	 2:00s	1:00	S
-Rule RussiaAsia	1992	only	-	Mar	lastSat	23:00	1:00	S
-Rule RussiaAsia	1992	only	-	Sep	lastSat	23:00	0	-
-Rule RussiaAsia	1993	max	-	Mar	lastSun	 2:00s	1:00	S
-Rule RussiaAsia	1993	1995	-	Sep	lastSun	 2:00s	0	-
-Rule RussiaAsia	1996	max	-	Oct	lastSun	 2:00s	0	-
-
-# Afghanistan
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Kabul	4:36:48 -	LMT	1890
-			4:00	-	AFT	1945
-			4:30	-	AFT
-
-# Armenia
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger have Yerevan switching to 3:00 (with Russian DST)
-# in spring 1991, then to 4:00 with no DST in fall 1995, then
-# readopting Russian DST in 1997.  Go with Shanks & Pottenger, even
-# when they disagree with others.  Edgar Der-Danieliantz
-# reported (1996-05-04) that Yerevan probably wouldn't use DST
-# in 1996, though it did use DST in 1995.  IATA SSIM (1991/1998) reports that
-# Armenia switched from 3:00 to 4:00 in 1998 and observed DST after 1991,
-# but started switching at 3:00s in 1998.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Yerevan	2:58:00 -	LMT	1924 May  2
-			3:00	-	YERT	1957 Mar    # Yerevan Time
-			4:00 RussiaAsia YER%sT	1991 Mar 31 2:00s
-			3:00	1:00	YERST	1991 Sep 23 # independence
-			3:00 RussiaAsia	AM%sT	1995 Sep 24 2:00s
-			4:00	-	AMT	1997
-			4:00 RussiaAsia	AM%sT
-
-# Azerbaijan
-# From Rustam Aliyev of the Azerbaijan Internet Forum (2005-10-23):
-# According to the resolution of Cabinet of Ministers, 1997
-# Resolution available at: http://aif.az/docs/daylight_res.pdf
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Azer	1997	max	-	Mar	lastSun	 4:00	1:00	S
-Rule	Azer	1997	max	-	Oct	lastSun	 5:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Baku	3:19:24 -	LMT	1924 May  2
-			3:00	-	BAKT	1957 Mar    # Baku Time
-			4:00 RussiaAsia BAK%sT	1991 Mar 31 2:00s
-			3:00	1:00	BAKST	1991 Aug 30 # independence
-			3:00 RussiaAsia	AZ%sT	1992 Sep lastSat 23:00
-			4:00	-	AZT	1996 # Azerbaijan time
-			4:00	EUAsia	AZ%sT	1997
-			4:00	Azer	AZ%sT
-
-# Bahrain
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Bahrain	3:22:20 -	LMT	1920		# Al Manamah
-			4:00	-	GST	1972 Jun
-			3:00	-	AST
-
-# Bangladesh
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Dhaka	6:01:40 -	LMT	1890
-			5:53:20	-	HMT	1941 Oct    # Howrah Mean Time?
-			6:30	-	BURT	1942 May 15 # Burma Time
-			5:30	-	IST	1942 Sep
-			6:30	-	BURT	1951 Sep 30
-			6:00	-	DACT	1971 Mar 26 # Dacca Time
-			6:00	-	BDT	# Bangladesh Time
-
-# Bhutan
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Thimphu	5:58:36 -	LMT	1947 Aug 15 # or Thimbu
-			5:30	-	IST	1987 Oct
-			6:00	-	BTT	# Bhutan Time
-
-# British Indian Ocean Territory
-# Whitman and the 1995 CIA time zone map say 5:00, but the
-# 1997 and later maps say 6:00.  Assume the switch occurred in 1996.
-# We have no information as to when standard time was introduced;
-# assume it occurred in 1907, the same year as Mauritius (which
-# then contained the Chagos Archipelago).
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Indian/Chagos	4:49:40	-	LMT	1907
-			5:00	-	IOT	1996 # BIOT Time
-			6:00	-	IOT
-
-# Brunei
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Brunei	7:39:40 -	LMT	1926 Mar   # Bandar Seri Begawan
-			7:30	-	BNT	1933
-			8:00	-	BNT
-
-# Burma / Myanmar
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Rangoon	6:24:40 -	LMT	1880		# or Yangon
-			6:24:36	-	RMT	1920	   # Rangoon Mean Time?
-			6:30	-	BURT	1942 May   # Burma Time
-			9:00	-	JST	1945 May 3
-			6:30	-	MMT		   # Myanmar Time
-
-# Cambodia
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Phnom_Penh	6:59:40 -	LMT	1906 Jun  9
-			7:06:20	-	SMT	1911 Mar 11 0:01 # Saigon MT?
-			7:00	-	ICT	1912 May
-			8:00	-	ICT	1931 May
-			7:00	-	ICT
-
-# China
-
-# From Guy Harris:
-# People's Republic of China.  Yes, they really have only one time zone.
-
-# From Bob Devine (1988-01-28):
-# No they don't.  See TIME mag, 1986-02-17 p.52.  Even though
-# China is across 4 physical time zones, before Feb 1, 1986 only the
-# Peking (Bejing) time zone was recognized.  Since that date, China
-# has two of 'em -- Peking's and Urumqi (named after the capital of
-# the Xinjiang Uyghur Autonomous Region).  I don't know about DST for it.
-#
-# . . .I just deleted the DST table and this editor makes it too
-# painful to suck in another copy..  So, here is what I have for
-# DST start/end dates for Peking's time zone (info from AP):
-#
-#     1986 May 4 - Sept 14
-#     1987 mid-April - ??
-
-# From U. S. Naval Observatory (1989-01-19):
-# CHINA               8 H  AHEAD OF UTC  ALL OF CHINA, INCL TAIWAN
-# CHINA               9 H  AHEAD OF UTC  APR 17 - SEP 10
-
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger write that China (except for Hong Kong and Macau)
-# has had a single time zone since 1980 May 1, observing summer DST
-# from 1986 through 1991; this contradicts Devine's
-# note about Time magazine, though apparently _something_ happened in 1986.
-# Go with Shanks & Pottenger for now.  I made up names for the other
-# pre-1980 time zones.
-
-# From Shanks & Pottenger:
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Shang	1940	only	-	Jun	 3	0:00	1:00	D
-Rule	Shang	1940	1941	-	Oct	 1	0:00	0	S
-Rule	Shang	1941	only	-	Mar	16	0:00	1:00	D
-Rule	PRC	1986	only	-	May	 4	0:00	1:00	D
-Rule	PRC	1986	1991	-	Sep	Sun>=11	0:00	0	S
-Rule	PRC	1987	1991	-	Apr	Sun>=10	0:00	1:00	D
-
-# From Anthony Fok (2001-12-20):
-# BTW, I did some research on-line and found some info regarding these five
-# historic timezones from some Taiwan websites.  And yes, there are official
-# Chinese names for these locales (before 1949).
-#
-# From Jesper Norgaard Welen (2006-07-14):
-# I have investigated the timezones around 1970 on the
-# http://www.astro.com/atlas site [with provinces and county
-# boundaries summarized below]....  A few other exceptions were two
-# counties on the Sichuan side of the Xizang-Sichuan border,
-# counties Dege and Baiyu which lies on the Sichuan side and are
-# therefore supposed to be GMT+7, Xizang region being GMT+6, but Dege
-# county is GMT+8 according to astro.com while Baiyu county is GMT+6
-# (could be true), for the moment I am assuming that those two
-# counties are mistakes in the astro.com data.
-
-# From Paul Eggert (2008-02-11):
-# I just now checked Google News for western news sources that talk
-# about China's single time zone, and couldn't find anything before 1986
-# talking about China being in one time zone.  (That article was: Jim
-# Mann, "A clumsy embrace for another western custom: China on daylight
-# time--sort of", Los Angeles Times, 1986-05-05.  By the way, this
-# article confirms the tz database's data claiming that China began
-# observing daylight saving time in 1986.
-#
-# From Thomas S. Mullaney (2008-02-11):
-# I think you're combining two subjects that need to treated 
-# separately: daylight savings (which, you're correct, wasn't 
-# implemented until the 1980s) and the unified time zone centered near 
-# Beijing (which was implemented in 1949). Briefly, there was also a 
-# "Lhasa Time" in Tibet and "Urumqi Time" in Xinjiang. The first was 
-# ceased, and the second eventually recognized (again, in the 1980s).
-#
-# From Paul Eggert (2008-06-30):
-# There seems to be a good chance China switched to a single time zone in 1949
-# rather than in 1980 as Shanks & Pottenger have it, but we don't have a
-# reliable documentary source saying so yet, so for now we still go with
-# Shanks & Pottenger.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-# Changbai Time ("Long-white Time", Long-white = Heilongjiang area)
-# Heilongjiang (except Mohe county), Jilin
-Zone	Asia/Harbin	8:26:44	-	LMT	1928 # or Haerbin
-			8:30	-	CHAT	1932 Mar # Changbai Time
-			8:00	-	CST	1940
-			9:00	-	CHAT	1966 May
-			8:30	-	CHAT	1980 May
-			8:00	PRC	C%sT
-# Zhongyuan Time ("Central plain Time")
-# most of China
-Zone	Asia/Shanghai	8:05:52	-	LMT	1928
-			8:00	Shang	C%sT	1949
-			8:00	PRC	C%sT
-# Long-shu Time (probably due to Long and Shu being two names of that area)
-# Guangxi, Guizhou, Hainan, Ningxia, Sichuan, Shaanxi, and Yunnan;
-# most of Gansu; west Inner Mongolia; west Qinghai; and the Guangdong
-# counties Deqing, Enping, Kaiping, Luoding, Taishan, Xinxing,
-# Yangchun, Yangjiang, Yu'nan, and Yunfu.
-Zone	Asia/Chongqing	7:06:20	-	LMT	1928 # or Chungking
-			7:00	-	LONT	1980 May # Long-shu Time
-			8:00	PRC	C%sT
-# Xin-zang Time ("Xinjiang-Tibet Time")
-# The Gansu counties Aksay, Anxi, Dunhuang, Subei; west Qinghai;
-# the Guangdong counties  Xuwen, Haikang, Suixi, Lianjiang,
-# Zhanjiang, Wuchuan, Huazhou, Gaozhou, Maoming, Dianbai, and Xinyi;
-# east Tibet, including Lhasa, Chamdo, Shigaise, Jimsar, Shawan and Hutubi;
-# east Xinjiang, including Urumqi, Turpan, Karamay, Korla, Minfeng, Jinghe,
-# Wusu, Qiemo, Xinyan, Wulanwusu, Jinghe, Yumin, Tacheng, Tuoli, Emin,
-# Shihezi, Changji, Yanqi, Heshuo, Tuokexun, Tulufan, Shanshan, Hami,
-# Fukang, Kuitun, Kumukuli, Miquan, Qitai, and Turfan.
-Zone	Asia/Urumqi	5:50:20	-	LMT	1928 # or Urumchi
-			6:00	-	URUT	1980 May # Urumqi Time
-			8:00	PRC	C%sT
-# Kunlun Time
-# West Tibet, including Pulan, Aheqi, Shufu, Shule;
-# West Xinjiang, including Aksu, Atushi, Yining, Hetian, Cele, Luopu, Nileke,
-# Zhaosu, Tekesi, Gongliu, Chabuchaer, Huocheng, Bole, Pishan, Suiding,
-# and Yarkand.
-Zone	Asia/Kashgar	5:03:56	-	LMT	1928 # or Kashi or Kaxgar
-			5:30	-	KAST	1940	 # Kashgar Time
-			5:00	-	KAST	1980 May
-			8:00	PRC	C%sT
-
-# Hong Kong (Xianggang)
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	HK	1946	only	-	Apr	20	3:30	1:00	S
-Rule	HK	1946	only	-	Dec	1	3:30	0	-
-Rule	HK	1947	only	-	Apr	13	3:30	1:00	S
-Rule	HK	1947	only	-	Dec	30	3:30	0	-
-Rule	HK	1948	only	-	May	2	3:30	1:00	S
-Rule	HK	1948	1952	-	Oct	lastSun	3:30	0	-
-Rule	HK	1949	1953	-	Apr	Sun>=1	3:30	1:00	S
-Rule	HK	1953	only	-	Nov	1	3:30	0	-
-Rule	HK	1954	1964	-	Mar	Sun>=18	3:30	1:00	S
-Rule	HK	1954	only	-	Oct	31	3:30	0	-
-Rule	HK	1955	1964	-	Nov	Sun>=1	3:30	0	-
-Rule	HK	1965	1977	-	Apr	Sun>=16	3:30	1:00	S
-Rule	HK	1965	1977	-	Oct	Sun>=16	3:30	0	-
-Rule	HK	1979	1980	-	May	Sun>=8	3:30	1:00	S
-Rule	HK	1979	1980	-	Oct	Sun>=16	3:30	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Hong_Kong	7:36:36 -	LMT	1904 Oct 30
-			8:00	HK	HK%sT
-
-
-###############################################################################
-
-# Taiwan
-
-# Shanks & Pottenger write that Taiwan observed DST during 1945, when it
-# was still controlled by Japan.  This is hard to believe, but we don't
-# have any other information.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Taiwan	1945	1951	-	May	1	0:00	1:00	D
-Rule	Taiwan	1945	1951	-	Oct	1	0:00	0	S
-Rule	Taiwan	1952	only	-	Mar	1	0:00	1:00	D
-Rule	Taiwan	1952	1954	-	Nov	1	0:00	0	S
-Rule	Taiwan	1953	1959	-	Apr	1	0:00	1:00	D
-Rule	Taiwan	1955	1961	-	Oct	1	0:00	0	S
-Rule	Taiwan	1960	1961	-	Jun	1	0:00	1:00	D
-Rule	Taiwan	1974	1975	-	Apr	1	0:00	1:00	D
-Rule	Taiwan	1974	1975	-	Oct	1	0:00	0	S
-Rule	Taiwan	1980	only	-	Jun	30	0:00	1:00	D
-Rule	Taiwan	1980	only	-	Sep	30	0:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Taipei	8:06:00 -	LMT	1896 # or Taibei or T'ai-pei
-			8:00	Taiwan	C%sT
-
-# Macau (Macao, Aomen)
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Macau	1961	1962	-	Mar	Sun>=16	3:30	1:00	S
-Rule	Macau	1961	1964	-	Nov	Sun>=1	3:30	0	-
-Rule	Macau	1963	only	-	Mar	Sun>=16	0:00	1:00	S
-Rule	Macau	1964	only	-	Mar	Sun>=16	3:30	1:00	S
-Rule	Macau	1965	only	-	Mar	Sun>=16	0:00	1:00	S
-Rule	Macau	1965	only	-	Oct	31	0:00	0	-
-Rule	Macau	1966	1971	-	Apr	Sun>=16	3:30	1:00	S
-Rule	Macau	1966	1971	-	Oct	Sun>=16	3:30	0	-
-Rule	Macau	1972	1974	-	Apr	Sun>=15	0:00	1:00	S
-Rule	Macau	1972	1973	-	Oct	Sun>=15	0:00	0	-
-Rule	Macau	1974	1977	-	Oct	Sun>=15	3:30	0	-
-Rule	Macau	1975	1977	-	Apr	Sun>=15	3:30	1:00	S
-Rule	Macau	1978	1980	-	Apr	Sun>=15	0:00	1:00	S
-Rule	Macau	1978	1980	-	Oct	Sun>=15	0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Macau	7:34:20 -	LMT	1912
-			8:00	Macau	MO%sT	1999 Dec 20 # return to China
-			8:00	PRC	C%sT
-
-
-###############################################################################
-
-# Cyprus
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Cyprus	1975	only	-	Apr	13	0:00	1:00	S
-Rule	Cyprus	1975	only	-	Oct	12	0:00	0	-
-Rule	Cyprus	1976	only	-	May	15	0:00	1:00	S
-Rule	Cyprus	1976	only	-	Oct	11	0:00	0	-
-Rule	Cyprus	1977	1980	-	Apr	Sun>=1	0:00	1:00	S
-Rule	Cyprus	1977	only	-	Sep	25	0:00	0	-
-Rule	Cyprus	1978	only	-	Oct	2	0:00	0	-
-Rule	Cyprus	1979	1997	-	Sep	lastSun	0:00	0	-
-Rule	Cyprus	1981	1998	-	Mar	lastSun	0:00	1:00	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Nicosia	2:13:28 -	LMT	1921 Nov 14
-			2:00	Cyprus	EE%sT	1998 Sep
-			2:00	EUAsia	EE%sT
-# IATA SSIM (1998-09) has Cyprus using EU rules for the first time.
-
-# Classically, Cyprus belongs to Asia; e.g. see Herodotus, Histories, I.72.
-# However, for various reasons many users expect to find it under Europe.
-Link	Asia/Nicosia	Europe/Nicosia
-
-# Georgia
-# From Paul Eggert (1994-11-19):
-# Today's _Economist_ (p 60) reports that Georgia moved its clocks forward
-# an hour recently, due to a law proposed by Zurab Murvanidze,
-# an MP who went on a hunger strike for 11 days to force discussion about it!
-# We have no details, but we'll guess they didn't move the clocks back in fall.
-#
-# From Mathew Englander, quoting AP (1996-10-23 13:05-04):
-# Instead of putting back clocks at the end of October, Georgia
-# will stay on daylight savings time this winter to save energy,
-# President Eduard Shevardnadze decreed Wednesday.
-#
-# From the BBC via Joseph S. Myers (2004-06-27):
-#
-# Georgia moved closer to Western Europe on Sunday...  The former Soviet
-# republic has changed its time zone back to that of Moscow.  As a result it
-# is now just four hours ahead of Greenwich Mean Time, rather than five hours
-# ahead.  The switch was decreed by the pro-Western president of Georgia,
-# Mikhail Saakashvili, who said the change was partly prompted by the process
-# of integration into Europe.
-
-# From Teimuraz Abashidze (2005-11-07):
-# Government of Georgia ... decided to NOT CHANGE daylight savings time on
-# [Oct.] 30, as it was done before during last more than 10 years.
-# Currently, we are in fact GMT +4:00, as before 30 October it was GMT
-# +3:00.... The problem is, there is NO FORMAL LAW or governmental document
-# about it.  As far as I can find, I was told, that there is no document,
-# because we just DIDN'T ISSUE document about switching to winter time....
-# I don't know what can be done, especially knowing that some years ago our
-# DST rules where changed THREE TIMES during one month.
-
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Tbilisi	2:59:16 -	LMT	1880
-			2:59:16	-	TBMT	1924 May  2 # Tbilisi Mean Time
-			3:00	-	TBIT	1957 Mar    # Tbilisi Time
-			4:00 RussiaAsia TBI%sT	1991 Mar 31 2:00s
-			3:00	1:00	TBIST	1991 Apr  9 # independence
-			3:00 RussiaAsia GE%sT	1992 # Georgia Time
-			3:00 E-EurAsia	GE%sT	1994 Sep lastSun
-			4:00 E-EurAsia	GE%sT	1996 Oct lastSun
-			4:00	1:00	GEST	1997 Mar lastSun
-			4:00 E-EurAsia	GE%sT	2004 Jun 27
-			3:00 RussiaAsia	GE%sT	2005 Mar lastSun 2:00
-			4:00	-	GET
-
-# East Timor
-
-# See Indonesia for the 1945 transition.
-
-# From Joao Carrascalao, brother of the former governor of East Timor, in
-# <a href="http://etan.org/et99c/december/26-31/30ETMAY.htm">
-# East Timor may be late for its millennium
-# </a> (1999-12-26/31):
-# Portugal tried to change the time forward in 1974 because the sun
-# rises too early but the suggestion raised a lot of problems with the
-# Timorese and I still don't think it would work today because it
-# conflicts with their way of life.
-
-# From Paul Eggert (2000-12-04):
-# We don't have any record of the above attempt.
-# Most likely our records are incomplete, but we have no better data.
-
-# <a href="http://www.hri.org/news/world/undh/last/00-08-16.undh.html">
-# From Manoel de Almeida e Silva, Deputy Spokesman for the UN Secretary-General
-# (2000-08-16)</a>:
-# The Cabinet of the East Timor Transition Administration decided
-# today to advance East Timor's time by one hour.  The time change,
-# which will be permanent, with no seasonal adjustment, will happen at
-# midnight on Saturday, September 16.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Dili	8:22:20 -	LMT	1912
-			8:00	-	TLT	1942 Feb 21 23:00 # E Timor Time
-			9:00	-	JST	1945 Sep 23
-			9:00	-	TLT	1976 May  3
-			8:00	-	CIT	2000 Sep 17 00:00
-			9:00	-	TLT
-
-# India
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Kolkata	5:53:28 -	LMT	1880	# Kolkata
-			5:53:20	-	HMT	1941 Oct    # Howrah Mean Time?
-			6:30	-	BURT	1942 May 15 # Burma Time
-			5:30	-	IST	1942 Sep
-			5:30	1:00	IST	1945 Oct 15
-			5:30	-	IST
-# The following are like Asia/Kolkata:
-#	Andaman Is
-#	Lakshadweep (Laccadive, Minicoy and Amindivi Is)
-#	Nicobar Is
-
-# Indonesia
-#
-# From Gwillim Law (2001-05-28), overriding Shanks & Pottenger:
-# <http://www.sumatera-inc.com/go_to_invest/about_indonesia.asp#standtime>
-# says that Indonesia's time zones changed on 1988-01-01.  Looking at some
-# time zone maps, I think that must refer to Western Borneo (Kalimantan Barat
-# and Kalimantan Tengah) switching from UTC+8 to UTC+7.
-#
-# From Paul Eggert (2007-03-10):
-# Here is another correction to Shanks & Pottenger.
-# JohnTWB writes that Japanese forces did not surrender control in
-# Indonesia until 1945-09-01 00:00 at the earliest (in Jakarta) and
-# other formal surrender ceremonies were September 9, 11, and 13, plus
-# September 12 for the regional surrender to Mountbatten in Singapore.
-# These would be the earliest possible times for a change.
-# Regimes horaires pour le monde entier, by Henri Le Corre, (Editions
-# Traditionnelles, 1987, Paris) says that Java and Madura switched
-# from JST to UTC+07:30 on 1945-09-23, and gives 1944-09-01 for Jayapura
-# (Hollandia).  For now, assume all Indonesian locations other than Jayapura
-# switched on 1945-09-23.
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Asia/Jakarta	7:07:12 -	LMT	1867 Aug 10
-# Shanks & Pottenger say the next transition was at 1924 Jan 1 0:13,
-# but this must be a typo.
-			7:07:12	-	JMT	1923 Dec 31 23:47:12 # Jakarta
-			7:20	-	JAVT	1932 Nov	 # Java Time
-			7:30	-	WIT	1942 Mar 23
-			9:00	-	JST	1945 Sep 23
-			7:30	-	WIT	1948 May
-			8:00	-	WIT	1950 May
-			7:30	-	WIT	1964
-			7:00	-	WIT
-Zone Asia/Pontianak	7:17:20	-	LMT	1908 May
-			7:17:20	-	PMT	1932 Nov    # Pontianak MT
-			7:30	-	WIT	1942 Jan 29
-			9:00	-	JST	1945 Sep 23
-			7:30	-	WIT	1948 May
-			8:00	-	WIT	1950 May
-			7:30	-	WIT	1964
-			8:00	-	CIT	1988 Jan  1
-			7:00	-	WIT
-Zone Asia/Makassar	7:57:36 -	LMT	1920
-			7:57:36	-	MMT	1932 Nov    # Macassar MT
-			8:00	-	CIT	1942 Feb  9
-			9:00	-	JST	1945 Sep 23
-			8:00	-	CIT
-Zone Asia/Jayapura	9:22:48 -	LMT	1932 Nov
-			9:00	-	EIT	1944 Sep  1
-			9:30	-	CST	1964
-			9:00	-	EIT
-
-# Iran
-
-# From Roozbeh Pournader (2003-03-15):
-# This is an English translation of what I just found (originally in Persian).
-# The Gregorian dates in brackets are mine:
-#
-#	Official Newspaper No. 13548-1370/6/25 [1991-09-16]
-#	No. 16760/T233 H				1370/6/10 [1991-09-01]
-#
-#	The Rule About Change of the Official Time of the Country
-#
-#	The Board of Ministers, in the meeting dated 1370/5/23 [1991-08-14],
-#	based on the suggestion number 2221/D dated 1370/4/22 [1991-07-13]
-#	of the Country's Organization for Official and Employment Affairs,
-#	and referring to the law for equating the working hours of workers
-#	and officers in the whole country dated 1359/4/23 [1980-07-14], and
-#	for synchronizing the official times of the country, agreed that:
-#
-#	The official time of the country will should move forward one hour
-#	at the 24[:00] hours of the first day of Farvardin and should return
-#	to its previous state at the 24[:00] hours of the 30th day of
-#	Shahrivar.
-#
-#	First Deputy to the President - Hassan Habibi
-#
-# From personal experience, that agrees with what has been followed
-# for at least the last 5 years.  Before that, for a few years, the
-# date used was the first Thursday night of Farvardin and the last
-# Thursday night of Shahrivar, but I can't give exact dates....
-# I have also changed the abbreviations to what is considered correct
-# here in Iran, IRST for regular time and IRDT for daylight saving time.
-#
-# From Roozbeh Pournader (2005-04-05):
-# The text of the Iranian law, in effect since 1925, clearly mentions
-# that the true solar year is the measure, and there is no arithmetic
-# leap year calculation involved.  There has never been any serious
-# plan to change that law....
-#
-# From Paul Eggert (2006-03-22):
-# Go with Shanks & Pottenger before Sept. 1991, and with Pournader thereafter.
-# I used Ed Reingold's cal-persia in GNU Emacs 21.2 to check Persian dates,
-# stopping after 2037 when 32-bit time_t's overflow.
-# That cal-persia used Birashk's approximation, which disagrees with the solar
-# calendar predictions for the year 2025, so I corrected those dates by hand.
-#
-# From Oscar van Vlijmen (2005-03-30), writing about future
-# discrepancies between cal-persia and the Iranian calendar:
-# For 2091 solar-longitude-after yields 2091-03-20 08:40:07.7 UT for
-# the vernal equinox and that gets so close to 12:00 some local
-# Iranian time that the definition of the correct location needs to be
-# known exactly, amongst other factors.  2157 is even closer:
-# 2157-03-20 08:37:15.5 UT.  But the Gregorian year 2025 should give
-# no interpretation problem whatsoever.  By the way, another instant
-# in the near future where there will be a discrepancy between
-# arithmetical and astronomical Iranian calendars will be in 2058:
-# vernal equinox on 2058-03-20 09:03:05.9 UT.  The Java version of
-# Reingold's/Dershowitz' calculator gives correctly the Gregorian date
-# 2058-03-21 for 1 Farvardin 1437 (astronomical).
-#
-# From Steffen Thorsen (2006-03-22):
-# Several of my users have reported that Iran will not observe DST anymore:
-# http://www.irna.ir/en/news/view/line-17/0603193812164948.htm
-#
-# From Reuters (2007-09-16), with a heads-up from Jesper Norgaard Welen:
-# ... the Guardian Council ... approved a law on Sunday to re-introduce
-# daylight saving time ...
-# http://uk.reuters.com/article/oilRpt/idUKBLA65048420070916
-#
-# From Roozbeh Pournader (2007-11-05):
-# This is quoted from Official Gazette of the Islamic Republic of
-# Iran, Volume 63, Number 18242, dated Tuesday 1386/6/24
-# [2007-10-16]. I am doing the best translation I can:...
-# The official time of the country will be moved forward for one hour
-# on the 24 hours of the first day of the month of Farvardin and will
-# be changed back to its previous state on the 24 hours of the
-# thirtieth day of Shahrivar.
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Iran	1978	1980	-	Mar	21	0:00	1:00	D
-Rule	Iran	1978	only	-	Oct	21	0:00	0	S
-Rule	Iran	1979	only	-	Sep	19	0:00	0	S
-Rule	Iran	1980	only	-	Sep	23	0:00	0	S
-Rule	Iran	1991	only	-	May	 3	0:00	1:00	D
-Rule	Iran	1992	1995	-	Mar	22	0:00	1:00	D
-Rule	Iran	1991	1995	-	Sep	22	0:00	0	S
-Rule	Iran	1996	only	-	Mar	21	0:00	1:00	D
-Rule	Iran	1996	only	-	Sep	21	0:00	0	S
-Rule	Iran	1997	1999	-	Mar	22	0:00	1:00	D
-Rule	Iran	1997	1999	-	Sep	22	0:00	0	S
-Rule	Iran	2000	only	-	Mar	21	0:00	1:00	D
-Rule	Iran	2000	only	-	Sep	21	0:00	0	S
-Rule	Iran	2001	2003	-	Mar	22	0:00	1:00	D
-Rule	Iran	2001	2003	-	Sep	22	0:00	0	S
-Rule	Iran	2004	only	-	Mar	21	0:00	1:00	D
-Rule	Iran	2004	only	-	Sep	21	0:00	0	S
-Rule	Iran	2005	only	-	Mar	22	0:00	1:00	D
-Rule	Iran	2005	only	-	Sep	22	0:00	0	S
-Rule	Iran	2008	only	-	Mar	21	0:00	1:00	D
-Rule	Iran	2008	only	-	Sep	21	0:00	0	S
-Rule	Iran	2009	2011	-	Mar	22	0:00	1:00	D
-Rule	Iran	2009	2011	-	Sep	22	0:00	0	S
-Rule	Iran	2012	only	-	Mar	21	0:00	1:00	D
-Rule	Iran	2012	only	-	Sep	21	0:00	0	S
-Rule	Iran	2013	2015	-	Mar	22	0:00	1:00	D
-Rule	Iran	2013	2015	-	Sep	22	0:00	0	S
-Rule	Iran	2016	only	-	Mar	21	0:00	1:00	D
-Rule	Iran	2016	only	-	Sep	21	0:00	0	S
-Rule	Iran	2017	2019	-	Mar	22	0:00	1:00	D
-Rule	Iran	2017	2019	-	Sep	22	0:00	0	S
-Rule	Iran	2020	only	-	Mar	21	0:00	1:00	D
-Rule	Iran	2020	only	-	Sep	21	0:00	0	S
-Rule	Iran	2021	2023	-	Mar	22	0:00	1:00	D
-Rule	Iran	2021	2023	-	Sep	22	0:00	0	S
-Rule	Iran	2024	only	-	Mar	21	0:00	1:00	D
-Rule	Iran	2024	only	-	Sep	21	0:00	0	S
-Rule	Iran	2025	2027	-	Mar	22	0:00	1:00	D
-Rule	Iran	2025	2027	-	Sep	22	0:00	0	S
-Rule	Iran	2028	2029	-	Mar	21	0:00	1:00	D
-Rule	Iran	2028	2029	-	Sep	21	0:00	0	S
-Rule	Iran	2030	2031	-	Mar	22	0:00	1:00	D
-Rule	Iran	2030	2031	-	Sep	22	0:00	0	S
-Rule	Iran	2032	2033	-	Mar	21	0:00	1:00	D
-Rule	Iran	2032	2033	-	Sep	21	0:00	0	S
-Rule	Iran	2034	2035	-	Mar	22	0:00	1:00	D
-Rule	Iran	2034	2035	-	Sep	22	0:00	0	S
-Rule	Iran	2036	2037	-	Mar	21	0:00	1:00	D
-Rule	Iran	2036	2037	-	Sep	21	0:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Tehran	3:25:44	-	LMT	1916
-			3:25:44	-	TMT	1946	# Tehran Mean Time
-			3:30	-	IRST	1977 Nov
-			4:00	Iran	IR%sT	1979
-			3:30	Iran	IR%sT
-
-
-# Iraq
-#
-# From Jonathan Lennox (2000-06-12):
-# An article in this week's Economist ("Inside the Saddam-free zone", p. 50 in
-# the U.S. edition) on the Iraqi Kurds contains a paragraph:
-# "The three northern provinces ... switched their clocks this spring and
-# are an hour ahead of Baghdad."
-#
-# But Rives McDow (2000-06-18) quotes a contact in Iraqi-Kurdistan as follows:
-# In the past, some Kurdish nationalists, as a protest to the Iraqi
-# Government, did not adhere to daylight saving time.  They referred
-# to daylight saving as Saddam time.  But, as of today, the time zone
-# in Iraqi-Kurdistan is on standard time with Baghdad, Iraq.
-#
-# So we'll ignore the Economist's claim.
-
-# From Steffen Thorsen (2008-03-10):
-# The cabinet in Iraq abolished DST last week, according to the following
-# news sources (in Arabic):
-# <a href="http://www.aljeeran.net/wesima_articles/news-20080305-98602.html">
-# http://www.aljeeran.net/wesima_articles/news-20080305-98602.html
-# </a>
-# <a href="http://www.aswataliraq.info/look/article.tpl?id=2047&IdLanguage=17&IdPublication=4&NrArticle=71743&NrIssue=1&NrSection=10">
-# http://www.aswataliraq.info/look/article.tpl?id=2047&IdLanguage=17&IdPublication=4&NrArticle=71743&NrIssue=1&NrSection=10
-# </a>
-#
-# We have published a short article in English about the change:
-# <a href="http://www.timeanddate.com/news/time/iraq-dumps-daylight-saving.html">
-# http://www.timeanddate.com/news/time/iraq-dumps-daylight-saving.html
-# </a>
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Iraq	1982	only	-	May	1	0:00	1:00	D
-Rule	Iraq	1982	1984	-	Oct	1	0:00	0	S
-Rule	Iraq	1983	only	-	Mar	31	0:00	1:00	D
-Rule	Iraq	1984	1985	-	Apr	1	0:00	1:00	D
-Rule	Iraq	1985	1990	-	Sep	lastSun	1:00s	0	S
-Rule	Iraq	1986	1990	-	Mar	lastSun	1:00s	1:00	D
-# IATA SSIM (1991/1996) says Apr 1 12:01am UTC; guess the `:01' is a typo.
-# Shanks & Pottenger say Iraq did not observe DST 1992/1997; ignore this.
-#
-Rule	Iraq	1991	2007	-	Apr	 1	3:00s	1:00	D
-Rule	Iraq	1991	2007	-	Oct	 1	3:00s	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Baghdad	2:57:40	-	LMT	1890
-			2:57:36	-	BMT	1918	    # Baghdad Mean Time?
-			3:00	-	AST	1982 May
-			3:00	Iraq	A%sT
-
-
-###############################################################################
-
-# Israel
-
-# From Ephraim Silverberg (2001-01-11):
-#
-# I coined "IST/IDT" circa 1988.  Until then there were three
-# different abbreviations in use:
-#
-# JST  Jerusalem Standard Time [Danny Braniss, Hebrew University]
-# IZT  Israel Zonal (sic) Time [Prof. Haim Papo, Technion]
-# EEST Eastern Europe Standard Time [used by almost everyone else]
-#
-# Since timezones should be called by country and not capital cities,
-# I ruled out JST.  As Israel is in Asia Minor and not Eastern Europe,
-# EEST was equally unacceptable.  Since "zonal" was not compatible with
-# any other timezone abbreviation, I felt that 'IST' was the way to go
-# and, indeed, it has received almost universal acceptance in timezone
-# settings in Israeli computers.
-#
-# In any case, I am happy to share timezone abbreviations with India,
-# high on my favorite-country list (and not only because my wife's
-# family is from India).
-
-# From Shanks & Pottenger:
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Zion	1940	only	-	Jun	 1	0:00	1:00	D
-Rule	Zion	1942	1944	-	Nov	 1	0:00	0	S
-Rule	Zion	1943	only	-	Apr	 1	2:00	1:00	D
-Rule	Zion	1944	only	-	Apr	 1	0:00	1:00	D
-Rule	Zion	1945	only	-	Apr	16	0:00	1:00	D
-Rule	Zion	1945	only	-	Nov	 1	2:00	0	S
-Rule	Zion	1946	only	-	Apr	16	2:00	1:00	D
-Rule	Zion	1946	only	-	Nov	 1	0:00	0	S
-Rule	Zion	1948	only	-	May	23	0:00	2:00	DD
-Rule	Zion	1948	only	-	Sep	 1	0:00	1:00	D
-Rule	Zion	1948	1949	-	Nov	 1	2:00	0	S
-Rule	Zion	1949	only	-	May	 1	0:00	1:00	D
-Rule	Zion	1950	only	-	Apr	16	0:00	1:00	D
-Rule	Zion	1950	only	-	Sep	15	3:00	0	S
-Rule	Zion	1951	only	-	Apr	 1	0:00	1:00	D
-Rule	Zion	1951	only	-	Nov	11	3:00	0	S
-Rule	Zion	1952	only	-	Apr	20	2:00	1:00	D
-Rule	Zion	1952	only	-	Oct	19	3:00	0	S
-Rule	Zion	1953	only	-	Apr	12	2:00	1:00	D
-Rule	Zion	1953	only	-	Sep	13	3:00	0	S
-Rule	Zion	1954	only	-	Jun	13	0:00	1:00	D
-Rule	Zion	1954	only	-	Sep	12	0:00	0	S
-Rule	Zion	1955	only	-	Jun	11	2:00	1:00	D
-Rule	Zion	1955	only	-	Sep	11	0:00	0	S
-Rule	Zion	1956	only	-	Jun	 3	0:00	1:00	D
-Rule	Zion	1956	only	-	Sep	30	3:00	0	S
-Rule	Zion	1957	only	-	Apr	29	2:00	1:00	D
-Rule	Zion	1957	only	-	Sep	22	0:00	0	S
-Rule	Zion	1974	only	-	Jul	 7	0:00	1:00	D
-Rule	Zion	1974	only	-	Oct	13	0:00	0	S
-Rule	Zion	1975	only	-	Apr	20	0:00	1:00	D
-Rule	Zion	1975	only	-	Aug	31	0:00	0	S
-Rule	Zion	1985	only	-	Apr	14	0:00	1:00	D
-Rule	Zion	1985	only	-	Sep	15	0:00	0	S
-Rule	Zion	1986	only	-	May	18	0:00	1:00	D
-Rule	Zion	1986	only	-	Sep	 7	0:00	0	S
-Rule	Zion	1987	only	-	Apr	15	0:00	1:00	D
-Rule	Zion	1987	only	-	Sep	13	0:00	0	S
-Rule	Zion	1988	only	-	Apr	 9	0:00	1:00	D
-Rule	Zion	1988	only	-	Sep	 3	0:00	0	S
-
-# From Ephraim Silverberg
-# (1997-03-04, 1998-03-16, 1998-12-28, 2000-01-17, 2000-07-25, 2004-12-22,
-# and 2005-02-17):
-
-# According to the Office of the Secretary General of the Ministry of
-# Interior, there is NO set rule for Daylight-Savings/Standard time changes.
-# One thing is entrenched in law, however: that there must be at least 150
-# days of daylight savings time annually.  From 1993-1998, the change to
-# daylight savings time was on a Friday morning from midnight IST to
-# 1 a.m IDT; up until 1998, the change back to standard time was on a
-# Saturday night from midnight daylight savings time to 11 p.m. standard
-# time.  1996 is an exception to this rule where the change back to standard
-# time took place on Sunday night instead of Saturday night to avoid
-# conflicts with the Jewish New Year.  In 1999, the change to
-# daylight savings time was still on a Friday morning but from
-# 2 a.m. IST to 3 a.m. IDT; furthermore, the change back to standard time
-# was also on a Friday morning from 2 a.m. IDT to 1 a.m. IST for
-# 1999 only.  In the year 2000, the change to daylight savings time was
-# similar to 1999, but although the change back will be on a Friday, it
-# will take place from 1 a.m. IDT to midnight IST.  Starting in 2001, all
-# changes to/from will take place at 1 a.m. old time, but now there is no
-# rule as to what day of the week it will take place in as the start date
-# (except in 2003) is the night after the Passover Seder (i.e. the eve
-# of the 16th of Nisan in the lunar Hebrew calendar) and the end date
-# (except in 2002) is three nights before Yom Kippur [Day of Atonement]
-# (the eve of the 7th of Tishrei in the lunar Hebrew calendar).
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Zion	1989	only	-	Apr	30	0:00	1:00	D
-Rule	Zion	1989	only	-	Sep	 3	0:00	0	S
-Rule	Zion	1990	only	-	Mar	25	0:00	1:00	D
-Rule	Zion	1990	only	-	Aug	26	0:00	0	S
-Rule	Zion	1991	only	-	Mar	24	0:00	1:00	D
-Rule	Zion	1991	only	-	Sep	 1	0:00	0	S
-Rule	Zion	1992	only	-	Mar	29	0:00	1:00	D
-Rule	Zion	1992	only	-	Sep	 6	0:00	0	S
-Rule	Zion	1993	only	-	Apr	 2	0:00	1:00	D
-Rule	Zion	1993	only	-	Sep	 5	0:00	0	S
-
-# The dates for 1994-1995 were obtained from Office of the Spokeswoman for the
-# Ministry of Interior, Jerusalem, Israel.  The spokeswoman can be reached by
-# calling the office directly at 972-2-6701447 or 972-2-6701448.
-
-# Rule	NAME    FROM    TO      TYPE    IN      ON      AT      SAVE    LETTER/S
-Rule	Zion	1994	only	-	Apr	 1	0:00	1:00	D
-Rule	Zion	1994	only	-	Aug	28	0:00	0	S
-Rule	Zion	1995	only	-	Mar	31	0:00	1:00	D
-Rule	Zion	1995	only	-	Sep	 3	0:00	0	S
-
-# The dates for 1996 were determined by the Minister of Interior of the
-# time, Haim Ramon.  The official announcement regarding 1996-1998
-# (with the dates for 1997-1998 no longer being relevant) can be viewed at:
-#
-#   ftp://ftp.cs.huji.ac.il/pub/tz/announcements/1996-1998.ramon.ps.gz
-#
-# The dates for 1997-1998 were altered by his successor, Rabbi Eli Suissa.
-#
-# The official announcements for the years 1997-1999 can be viewed at:
-#
-#   ftp://ftp.cs.huji.ac.il/pub/tz/announcements/YYYY.ps.gz
-#
-#       where YYYY is the relevant year.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Zion	1996	only	-	Mar	15	0:00	1:00	D
-Rule	Zion	1996	only	-	Sep	16	0:00	0	S
-Rule	Zion	1997	only	-	Mar	21	0:00	1:00	D
-Rule	Zion	1997	only	-	Sep	14	0:00	0	S
-Rule	Zion	1998	only	-	Mar	20	0:00	1:00	D
-Rule	Zion	1998	only	-	Sep	 6	0:00	0	S
-Rule	Zion	1999	only	-	Apr	 2	2:00	1:00	D
-Rule	Zion	1999	only	-	Sep	 3	2:00	0	S
-
-# The Knesset Interior Committee has changed the dates for 2000 for
-# the third time in just over a year and have set new dates for the
-# years 2001-2004 as well.
-#
-# The official announcement for the start date of 2000 can be viewed at:
-#
-#	ftp://ftp.cs.huji.ac.il/pub/tz/announcements/2000-start.ps.gz
-#
-# The official announcement for the end date of 2000 and the dates
-# for the years 2001-2004 can be viewed at:
-#
-#	ftp://ftp.cs.huji.ac.il/pub/tz/announcements/2000-2004.ps.gz
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Zion	2000	only	-	Apr	14	2:00	1:00	D
-Rule	Zion	2000	only	-	Oct	 6	1:00	0	S
-Rule	Zion	2001	only	-	Apr	 9	1:00	1:00	D
-Rule	Zion	2001	only	-	Sep	24	1:00	0	S
-Rule	Zion	2002	only	-	Mar	29	1:00	1:00	D
-Rule	Zion	2002	only	-	Oct	 7	1:00	0	S
-Rule	Zion	2003	only	-	Mar	28	1:00	1:00	D
-Rule	Zion	2003	only	-	Oct	 3	1:00	0	S
-Rule	Zion	2004	only	-	Apr	 7	1:00	1:00	D
-Rule	Zion	2004	only	-	Sep	22	1:00	0	S
-
-# The proposed law agreed upon by the Knesset Interior Committee on
-# 2005-02-14 is that, for 2005 and beyond, DST starts at 02:00 the
-# last Friday before April 2nd (i.e. the last Friday in March or April
-# 1st itself if it falls on a Friday) and ends at 02:00 on the Saturday
-# night _before_ the fast of Yom Kippur.
-#
-# Those who can read Hebrew can view the announcement at:
-#
-#	ftp://ftp.cs.huji.ac.il/pub/tz/announcements/2005+beyond.ps
-
-# From Paul Eggert (2005-02-22):
-# I used Ephraim Silverberg's dst-israel.el program
-# <ftp://ftp.cs.huji.ac.il/pub/tz/software/dst-israel.el> (2005-02-20)
-# along with Ed Reingold's cal-hebrew in GNU Emacs 21.4,
-# to generate the transitions in this list.
-# (I replaced "lastFri" with "Fri>=26" by hand.)
-# The spring transitions below all correspond to the following Rule:
-#
-# Rule	Zion	2005	max	-	Mar	Fri>=26	2:00	1:00	D
-#
-# but older zic implementations (e.g., Solaris 8) do not support
-# "Fri>=26" to mean April 1 in years like 2005, so for now we list the
-# springtime transitions explicitly.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Zion	2005	only	-	Apr	 1	2:00	1:00	D
-Rule	Zion	2005	only	-	Oct	 9	2:00	0	S
-Rule	Zion	2006	2010	-	Mar	Fri>=26	2:00	1:00	D
-Rule	Zion	2006	only	-	Oct	 1	2:00	0	S
-Rule	Zion	2007	only	-	Sep	16	2:00	0	S
-Rule	Zion	2008	only	-	Oct	 5	2:00	0	S
-Rule	Zion	2009	only	-	Sep	27	2:00	0	S
-Rule	Zion	2010	only	-	Sep	12	2:00	0	S
-Rule	Zion	2011	only	-	Apr	 1	2:00	1:00	D
-Rule	Zion	2011	only	-	Oct	 2	2:00	0	S
-Rule	Zion	2012	2015	-	Mar	Fri>=26	2:00	1:00	D
-Rule	Zion	2012	only	-	Sep	23	2:00	0	S
-Rule	Zion	2013	only	-	Sep	 8	2:00	0	S
-Rule	Zion	2014	only	-	Sep	28	2:00	0	S
-Rule	Zion	2015	only	-	Sep	20	2:00	0	S
-Rule	Zion	2016	only	-	Apr	 1	2:00	1:00	D
-Rule	Zion	2016	only	-	Oct	 9	2:00	0	S
-Rule	Zion	2017	2021	-	Mar	Fri>=26	2:00	1:00	D
-Rule	Zion	2017	only	-	Sep	24	2:00	0	S
-Rule	Zion	2018	only	-	Sep	16	2:00	0	S
-Rule	Zion	2019	only	-	Oct	 6	2:00	0	S
-Rule	Zion	2020	only	-	Sep	27	2:00	0	S
-Rule	Zion	2021	only	-	Sep	12	2:00	0	S
-Rule	Zion	2022	only	-	Apr	 1	2:00	1:00	D
-Rule	Zion	2022	only	-	Oct	 2	2:00	0	S
-Rule	Zion	2023	2032	-	Mar	Fri>=26	2:00	1:00	D
-Rule	Zion	2023	only	-	Sep	24	2:00	0	S
-Rule	Zion	2024	only	-	Oct	 6	2:00	0	S
-Rule	Zion	2025	only	-	Sep	28	2:00	0	S
-Rule	Zion	2026	only	-	Sep	20	2:00	0	S
-Rule	Zion	2027	only	-	Oct	10	2:00	0	S
-Rule	Zion	2028	only	-	Sep	24	2:00	0	S
-Rule	Zion	2029	only	-	Sep	16	2:00	0	S
-Rule	Zion	2030	only	-	Oct	 6	2:00	0	S
-Rule	Zion	2031	only	-	Sep	21	2:00	0	S
-Rule	Zion	2032	only	-	Sep	12	2:00	0	S
-Rule	Zion	2033	only	-	Apr	 1	2:00	1:00	D
-Rule	Zion	2033	only	-	Oct	 2	2:00	0	S
-Rule	Zion	2034	2037	-	Mar	Fri>=26	2:00	1:00	D
-Rule	Zion	2034	only	-	Sep	17	2:00	0	S
-Rule	Zion	2035	only	-	Oct	 7	2:00	0	S
-Rule	Zion	2036	only	-	Sep	28	2:00	0	S
-Rule	Zion	2037	only	-	Sep	13	2:00	0	S
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Jerusalem	2:20:56 -	LMT	1880
-			2:20:40	-	JMT	1918	# Jerusalem Mean Time?
-			2:00	Zion	I%sT
-
-
-
-###############################################################################
-
-# Japan
-
-# `9:00' and `JST' is from Guy Harris.
-
-# From Paul Eggert (1995-03-06):
-# Today's _Asahi Evening News_ (page 4) reports that Japan had
-# daylight saving between 1948 and 1951, but ``the system was discontinued
-# because the public believed it would lead to longer working hours.''
-
-# From Mayumi Negishi in the 2005-08-10 Japan Times
-# <http://www.japantimes.co.jp/cgi-bin/getarticle.pl5?nn20050810f2.htm>:
-# Occupation authorities imposed daylight-saving time on Japan on
-# [1948-05-01]....  But lack of prior debate and the execution of
-# daylight-saving time just three days after the bill was passed generated
-# deep hatred of the concept....  The Diet unceremoniously passed a bill to
-# dump the unpopular system in October 1951, less than a month after the San
-# Francisco Peace Treaty was signed.  (A government poll in 1951 showed 53%
-# of the Japanese wanted to scrap daylight-saving time, as opposed to 30% who
-# wanted to keep it.)
-
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger write that DST in Japan during those years was as follows:
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Japan	1948	only	-	May	Sun>=1	2:00	1:00	D
-Rule	Japan	1948	1951	-	Sep	Sat>=8	2:00	0	S
-Rule	Japan	1949	only	-	Apr	Sun>=1	2:00	1:00	D
-Rule	Japan	1950	1951	-	May	Sun>=1	2:00	1:00	D
-# but the only locations using it (for birth certificates, presumably, since
-# their audience is astrologers) were US military bases.  For now, assume
-# that for most purposes daylight-saving time was observed; otherwise, what
-# would have been the point of the 1951 poll?
-
-# From Hideyuki Suzuki (1998-11-09):
-# 'Tokyo' usually stands for the former location of Tokyo Astronomical
-# Observatory: E 139 44' 40".90 (9h 18m 58s.727), N 35 39' 16".0.
-# This data is from 'Rika Nenpyou (Chronological Scientific Tables) 1996'
-# edited by National Astronomical Observatory of Japan....
-# JST (Japan Standard Time) has been used since 1888-01-01 00:00 (JST).
-# The law is enacted on 1886-07-07.
-
-# From Hideyuki Suzuki (1998-11-16):
-# The ordinance No. 51 (1886) established "standard time" in Japan,
-# which stands for the time on E 135 degree.
-# In the ordinance No. 167 (1895), "standard time" was renamed to "central
-# standard time".  And the same ordinance also established "western standard
-# time", which stands for the time on E 120 degree....  But "western standard
-# time" was abolished in the ordinance No. 529 (1937).  In the ordinance No.
-# 167, there is no mention regarding for what place western standard time is
-# standard....
-#
-# I wrote "ordinance" above, but I don't know how to translate.
-# In Japanese it's "chokurei", which means ordinance from emperor.
-
-# Shanks & Pottenger claim JST in use since 1896, and that a few
-# places (e.g. Ishigaki) use +0800; go with Suzuki.  Guess that all
-# ordinances took effect on Jan 1.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Tokyo	9:18:59	-	LMT	1887 Dec 31 15:00u
-			9:00	-	JST	1896
-			9:00	-	CJT	1938
-			9:00	Japan	J%sT
-# Since 1938, all Japanese possessions have been like Asia/Tokyo.
-
-# Jordan
-#
-# From <a href="http://star.arabia.com/990701/JO9.html">
-# Jordan Week (1999-07-01) </a> via Steffen Thorsen (1999-09-09):
-# Clocks in Jordan were forwarded one hour on Wednesday at midnight,
-# in accordance with the government's decision to implement summer time
-# all year round.
-#
-# From <a href="http://star.arabia.com/990930/JO9.html">
-# Jordan Week (1999-09-30) </a> via Steffen Thorsen (1999-11-09):
-# Winter time starts today Thursday, 30 September. Clocks will be turned back
-# by one hour.  This is the latest government decision and it's final!
-# The decision was taken because of the increase in working hours in
-# government's departments from six to seven hours.
-#
-# From Paul Eggert (2005-11-22):
-# Starting 2003 transitions are from Steffen Thorsen's web site timeanddate.com.
-#
-# From Steffen Thorsen (2005-11-23):
-# For Jordan I have received multiple independent user reports every year
-# about DST end dates, as the end-rule is different every year.
-#
-# From Steffen Thorsen (2006-10-01), after a heads-up from Hilal Malawi:
-# http://www.petranews.gov.jo/nepras/2006/Sep/05/4000.htm
-# "Jordan will switch to winter time on Friday, October 27".
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Jordan	1973	only	-	Jun	6	0:00	1:00	S
-Rule	Jordan	1973	1975	-	Oct	1	0:00	0	-
-Rule	Jordan	1974	1977	-	May	1	0:00	1:00	S
-Rule	Jordan	1976	only	-	Nov	1	0:00	0	-
-Rule	Jordan	1977	only	-	Oct	1	0:00	0	-
-Rule	Jordan	1978	only	-	Apr	30	0:00	1:00	S
-Rule	Jordan	1978	only	-	Sep	30	0:00	0	-
-Rule	Jordan	1985	only	-	Apr	1	0:00	1:00	S
-Rule	Jordan	1985	only	-	Oct	1	0:00	0	-
-Rule	Jordan	1986	1988	-	Apr	Fri>=1	0:00	1:00	S
-Rule	Jordan	1986	1990	-	Oct	Fri>=1	0:00	0	-
-Rule	Jordan	1989	only	-	May	8	0:00	1:00	S
-Rule	Jordan	1990	only	-	Apr	27	0:00	1:00	S
-Rule	Jordan	1991	only	-	Apr	17	0:00	1:00	S
-Rule	Jordan	1991	only	-	Sep	27	0:00	0	-
-Rule	Jordan	1992	only	-	Apr	10	0:00	1:00	S
-Rule	Jordan	1992	1993	-	Oct	Fri>=1	0:00	0	-
-Rule	Jordan	1993	1998	-	Apr	Fri>=1	0:00	1:00	S
-Rule	Jordan	1994	only	-	Sep	Fri>=15	0:00	0	-
-Rule	Jordan	1995	1998	-	Sep	Fri>=15	0:00s	0	-
-Rule	Jordan	1999	only	-	Jul	 1	0:00s	1:00	S
-Rule	Jordan	1999	2002	-	Sep	lastThu	0:00s	0	-
-Rule	Jordan	2000	max	-	Mar	lastThu	0:00s	1:00	S
-Rule	Jordan	2003	only	-	Oct	24	0:00s	0	-
-Rule	Jordan	2004	only	-	Oct	15	0:00s	0	-
-Rule	Jordan	2005	only	-	Sep	lastFri	0:00s	0	-
-Rule	Jordan	2006	max	-	Oct	lastFri	0:00s	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Amman	2:23:44 -	LMT	1931
-			2:00	Jordan	EE%sT
-
-
-# Kazakhstan
-
-# From Paul Eggert (1996-11-22):
-# Andrew Evtichov (1996-04-13) writes that Kazakhstan
-# stayed in sync with Moscow after 1990, and that Aqtobe (formerly Aktyubinsk)
-# and Aqtau (formerly Shevchenko) are the largest cities in their zones.
-# Guess that Aqtau and Aqtobe diverged in 1995, since that's the first time
-# IATA SSIM mentions a third time zone in Kazakhstan.
-
-# From Paul Eggert (2006-03-22):
-# German Iofis, ELSI, Almaty (2001-10-09) reports that Kazakhstan uses
-# RussiaAsia rules, instead of switching at 00:00 as the IATA has it.
-# Go with Shanks & Pottenger, who have them always using RussiaAsia rules.
-# Also go with the following claims of Shanks & Pottenger:
-#
-# - Kazakhstan did not observe DST in 1991.
-# - Qyzylorda switched from +5:00 to +6:00 on 1992-01-19 02:00.
-# - Oral switched from +5:00 to +4:00 in spring 1989.
-
-# <a href="http://www.kazsociety.org.uk/news/2005/03/30.htm">
-# From Kazakhstan Embassy's News Bulletin #11 (2005-03-21):
-# </a>
-# The Government of Kazakhstan passed a resolution March 15 abolishing
-# daylight saving time citing lack of economic benefits and health
-# complications coupled with a decrease in productivity.
-#
-# From Branislav Kojic (in Astana) via Gwillim Law (2005-06-28):
-# ... what happened was that the former Kazakhstan Eastern time zone
-# was "blended" with the Central zone.  Therefore, Kazakhstan now has
-# two time zones, and difference between them is one hour.  The zone
-# closer to UTC is the former Western zone (probably still called the
-# same), encompassing four provinces in the west: Aqtobe, Atyrau,
-# Mangghystau, and West Kazakhstan.  The other zone encompasses
-# everything else....  I guess that would make Kazakhstan time zones
-# de jure UTC+5 and UTC+6 respectively.
-
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-#
-# Almaty (formerly Alma-Ata), representing most locations in Kazakhstan
-Zone	Asia/Almaty	5:07:48 -	LMT	1924 May  2 # or Alma-Ata
-			5:00	-	ALMT	1930 Jun 21 # Alma-Ata Time
-			6:00 RussiaAsia ALM%sT	1991
-			6:00	-	ALMT	1992
-			6:00 RussiaAsia	ALM%sT	2005 Mar 15
-			6:00	-	ALMT
-# Qyzylorda (aka Kyzylorda, Kizilorda, Kzyl-Orda, etc.)
-Zone	Asia/Qyzylorda	4:21:52 -	LMT	1924 May  2
-			4:00	-	KIZT	1930 Jun 21 # Kizilorda Time
-			5:00	-	KIZT	1981 Apr  1
-			5:00	1:00	KIZST	1981 Oct  1
-			6:00	-	KIZT	1982 Apr  1
-			5:00 RussiaAsia	KIZ%sT	1991
-			5:00	-	KIZT	1991 Dec 16 # independence
-			5:00	-	QYZT	1992 Jan 19 2:00
-			6:00 RussiaAsia	QYZ%sT	2005 Mar 15
-			6:00	-	QYZT
-# Aqtobe (aka Aktobe, formerly Akt'ubinsk)
-Zone	Asia/Aqtobe	3:48:40	-	LMT	1924 May  2
-			4:00	-	AKTT	1930 Jun 21 # Aktyubinsk Time
-			5:00	-	AKTT	1981 Apr  1
-			5:00	1:00	AKTST	1981 Oct  1
-			6:00	-	AKTT	1982 Apr  1
-			5:00 RussiaAsia	AKT%sT	1991
-			5:00	-	AKTT	1991 Dec 16 # independence
-			5:00 RussiaAsia	AQT%sT	2005 Mar 15 # Aqtobe Time
-			5:00	-	AQTT
-# Mangghystau
-# Aqtau was not founded until 1963, but it represents an inhabited region,
-# so include time stamps before 1963.
-Zone	Asia/Aqtau	3:21:04	-	LMT	1924 May  2
-			4:00	-	FORT	1930 Jun 21 # Fort Shevchenko T
-			5:00	-	FORT	1963
-			5:00	-	SHET	1981 Oct  1 # Shevchenko Time
-			6:00	-	SHET	1982 Apr  1
-			5:00 RussiaAsia	SHE%sT	1991
-			5:00	-	SHET	1991 Dec 16 # independence
-			5:00 RussiaAsia	AQT%sT	1995 Mar lastSun 2:00 # Aqtau Time
-			4:00 RussiaAsia	AQT%sT	2005 Mar 15
-			5:00	-	AQTT
-# West Kazakhstan
-Zone	Asia/Oral	3:25:24	-	LMT	1924 May  2 # or Ural'sk
-			4:00	-	URAT	1930 Jun 21 # Ural'sk time
-			5:00	-	URAT	1981 Apr  1
-			5:00	1:00	URAST	1981 Oct  1
-			6:00	-	URAT	1982 Apr  1
-			5:00 RussiaAsia	URA%sT	1989 Mar 26 2:00
-			4:00 RussiaAsia	URA%sT	1991
-			4:00	-	URAT	1991 Dec 16 # independence
-			4:00 RussiaAsia	ORA%sT	2005 Mar 15 # Oral Time
-			5:00	-	ORAT
-
-# Kyrgyzstan (Kirgizstan)
-# Transitions through 1991 are from Shanks & Pottenger.
-
-# From Paul Eggert (2005-08-15):
-# According to an article dated today in the Kyrgyzstan Development Gateway
-# <http://eng.gateway.kg/cgi-bin/page.pl?id=1&story_name=doc9979.shtml>
-# Kyrgyzstan is canceling the daylight saving time system.  I take the article
-# to mean that they will leave their clocks at 6 hours ahead of UTC.
-# From Malik Abdugaliev (2005-09-21):
-# Our government cancels daylight saving time 6th of August 2005.
-# From 2005-08-12 our GMT-offset is +6, w/o any daylight saving.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Kyrgyz	1992	1996	-	Apr	Sun>=7	0:00s	1:00	S
-Rule	Kyrgyz	1992	1996	-	Sep	lastSun	0:00	0	-
-Rule	Kyrgyz	1997	2005	-	Mar	lastSun	2:30	1:00	S
-Rule	Kyrgyz	1997	2004	-	Oct	lastSun	2:30	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Bishkek	4:58:24 -	LMT	1924 May  2
-			5:00	-	FRUT	1930 Jun 21 # Frunze Time
-			6:00 RussiaAsia FRU%sT	1991 Mar 31 2:00s
-			5:00	1:00	FRUST	1991 Aug 31 2:00 # independence
-			5:00	Kyrgyz	KG%sT	2005 Aug 12    # Kyrgyzstan Time
-			6:00	-	KGT
-
-###############################################################################
-
-# Korea (North and South)
-
-# From Annie I. Bang (2006-07-10) in
-# <http://www.koreaherald.co.kr/SITE/data/html_dir/2006/07/10/200607100012.asp>:
-# The Ministry of Commerce, Industry and Energy has already
-# commissioned a research project [to reintroduce DST] and has said
-# the system may begin as early as 2008....  Korea ran a daylight
-# saving program from 1949-61 but stopped it during the 1950-53 Korean War.
-
-# From Shanks & Pottenger:
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	ROK	1960	only	-	May	15	0:00	1:00	D
-Rule	ROK	1960	only	-	Sep	13	0:00	0	S
-Rule	ROK	1987	1988	-	May	Sun>=8	0:00	1:00	D
-Rule	ROK	1987	1988	-	Oct	Sun>=8	0:00	0	S
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Seoul	8:27:52	-	LMT	1890
-			8:30	-	KST	1904 Dec
-			9:00	-	KST	1928
-			8:30	-	KST	1932
-			9:00	-	KST	1954 Mar 21
-			8:00	ROK	K%sT	1961 Aug 10
-			8:30	-	KST	1968 Oct
-			9:00	ROK	K%sT
-Zone	Asia/Pyongyang	8:23:00 -	LMT	1890
-			8:30	-	KST	1904 Dec
-			9:00	-	KST	1928
-			8:30	-	KST	1932
-			9:00	-	KST	1954 Mar 21
-			8:00	-	KST	1961 Aug 10
-			9:00	-	KST
-
-###############################################################################
-
-# Kuwait
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-# From the Arab Times (2007-03-14):
-# The Civil Service Commission (CSC) has approved a proposal forwarded
-# by MP Ahmad Baqer on implementing the daylight saving time (DST) in
-# Kuwait starting from April until the end of Sept this year, reports Al-Anba.
-# <http://www.arabtimesonline.com/arabtimes/kuwait/Viewdet.asp?ID=9950>.
-# From Paul Eggert (2007-03-29):
-# We don't know the details, or whether the approval means it'll happen,
-# so for now we assume no DST.
-Zone	Asia/Kuwait	3:11:56 -	LMT	1950
-			3:00	-	AST
-
-# Laos
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Vientiane	6:50:24 -	LMT	1906 Jun  9 # or Viangchan
-			7:06:20	-	SMT	1911 Mar 11 0:01 # Saigon MT?
-			7:00	-	ICT	1912 May
-			8:00	-	ICT	1931 May
-			7:00	-	ICT
-
-# Lebanon
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Lebanon	1920	only	-	Mar	28	0:00	1:00	S
-Rule	Lebanon	1920	only	-	Oct	25	0:00	0	-
-Rule	Lebanon	1921	only	-	Apr	3	0:00	1:00	S
-Rule	Lebanon	1921	only	-	Oct	3	0:00	0	-
-Rule	Lebanon	1922	only	-	Mar	26	0:00	1:00	S
-Rule	Lebanon	1922	only	-	Oct	8	0:00	0	-
-Rule	Lebanon	1923	only	-	Apr	22	0:00	1:00	S
-Rule	Lebanon	1923	only	-	Sep	16	0:00	0	-
-Rule	Lebanon	1957	1961	-	May	1	0:00	1:00	S
-Rule	Lebanon	1957	1961	-	Oct	1	0:00	0	-
-Rule	Lebanon	1972	only	-	Jun	22	0:00	1:00	S
-Rule	Lebanon	1972	1977	-	Oct	1	0:00	0	-
-Rule	Lebanon	1973	1977	-	May	1	0:00	1:00	S
-Rule	Lebanon	1978	only	-	Apr	30	0:00	1:00	S
-Rule	Lebanon	1978	only	-	Sep	30	0:00	0	-
-Rule	Lebanon	1984	1987	-	May	1	0:00	1:00	S
-Rule	Lebanon	1984	1991	-	Oct	16	0:00	0	-
-Rule	Lebanon	1988	only	-	Jun	1	0:00	1:00	S
-Rule	Lebanon	1989	only	-	May	10	0:00	1:00	S
-Rule	Lebanon	1990	1992	-	May	1	0:00	1:00	S
-Rule	Lebanon	1992	only	-	Oct	4	0:00	0	-
-Rule	Lebanon	1993	max	-	Mar	lastSun	0:00	1:00	S
-Rule	Lebanon	1993	1998	-	Sep	lastSun	0:00	0	-
-Rule	Lebanon	1999	max	-	Oct	lastSun	0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Beirut	2:22:00 -	LMT	1880
-			2:00	Lebanon	EE%sT
-
-# Malaysia
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	NBorneo	1935	1941	-	Sep	14	0:00	0:20	TS # one-Third Summer
-Rule	NBorneo	1935	1941	-	Dec	14	0:00	0	-
-#
-# peninsular Malaysia
-# The data here are taken from Mok Ly Yng (2003-10-30)
-# <http://www.math.nus.edu.sg/aslaksen/teaching/timezone.html>.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Asia/Kuala_Lumpur	6:46:46 -	LMT	1901 Jan  1
-			6:55:25	-	SMT	1905 Jun  1 # Singapore M.T.
-			7:00	-	MALT	1933 Jan  1 # Malaya Time
-			7:00	0:20	MALST	1936 Jan  1
-			7:20	-	MALT	1941 Sep  1
-			7:30	-	MALT	1942 Feb 16
-			9:00	-	JST	1945 Sep 12
-			7:30	-	MALT	1982 Jan  1
-			8:00	-	MYT	# Malaysia Time
-# Sabah & Sarawak
-# From Paul Eggert (2006-03-22):
-# The data here are mostly from Shanks & Pottenger, but the 1942, 1945 and 1982
-# transition dates are from Mok Ly Yng.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Asia/Kuching	7:21:20	-	LMT	1926 Mar
-			7:30	-	BORT	1933	# Borneo Time
-			8:00	NBorneo	BOR%sT	1942 Feb 16
-			9:00	-	JST	1945 Sep 12
-			8:00	-	BORT	1982 Jan  1
-			8:00	-	MYT
-
-# Maldives
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Indian/Maldives	4:54:00 -	LMT	1880	# Male
-			4:54:00	-	MMT	1960	# Male Mean Time
-			5:00	-	MVT		# Maldives Time
-
-# Mongolia
-
-# Shanks & Pottenger say that Mongolia has three time zones, but
-# usno1995 and the CIA map Standard Time Zones of the World (2005-03)
-# both say that it has just one.
-
-# From Oscar van Vlijmen (1999-12-11):
-# <a href="http://www.mongoliatourism.gov.mn/general.htm">
-# General Information Mongolia
-# </a> (1999-09)
-# "Time: Mongolia has two time zones. Three westernmost provinces of
-# Bayan-Ulgii, Uvs, and Hovd are one hour earlier than the capital city, and
-# the rest of the country follows the Ulaanbaatar time, which is UTC/GMT plus
-# eight hours."
-
-# From Rives McDow (1999-12-13):
-# Mongolia discontinued the use of daylight savings time in 1999; 1998
-# being the last year it was implemented.  The dates of implementation I am
-# unsure of, but most probably it was similar to Russia, except for the time
-# of implementation may have been different....
-# Some maps in the past have indicated that there was an additional time
-# zone in the eastern part of Mongolia, including the provinces of Dornod,
-# Suhbaatar, and possibly Khentij.
-
-# From Paul Eggert (1999-12-15):
-# Naming and spelling is tricky in Mongolia.
-# We'll use Hovd (also spelled Chovd and Khovd) to represent the west zone;
-# the capital of the Hovd province is sometimes called Hovd, sometimes Dund-Us,
-# and sometimes Jirgalanta (with variant spellings), but the name Hovd
-# is good enough for our purposes.
-
-# From Rives McDow (2001-05-13):
-# In addition to Mongolia starting daylight savings as reported earlier
-# (adopted DST on 2001-04-27 02:00 local time, ending 2001-09-28),
-# there are three time zones.
-#
-# Provinces [at 7:00]: Bayan-ulgii, Uvs, Khovd, Zavkhan, Govi-Altai
-# Provinces [at 8:00]: Khovsgol, Bulgan, Arkhangai, Khentii, Tov,
-#	Bayankhongor, Ovorkhangai, Dundgovi, Dornogovi, Omnogovi
-# Provinces [at 9:00]: Dornod, Sukhbaatar
-#
-# [The province of Selenge is omitted from the above lists.]
-
-# From Ganbold Ts., Ulaanbaatar (2004-04-17):
-# Daylight saving occurs at 02:00 local time last Saturday of March.
-# It will change back to normal at 02:00 local time last Saturday of
-# September.... As I remember this rule was changed in 2001.
-#
-# From Paul Eggert (2004-04-17):
-# For now, assume Rives McDow's informant got confused about Friday vs
-# Saturday, and that his 2001 dates should have 1 added to them.
-
-# From Paul Eggert (2005-07-26):
-# We have wildly conflicting information about Mongolia's time zones.
-# Bill Bonnet (2005-05-19) reports that the US Embassy in Ulaanbaatar says
-# there is only one time zone and that DST is observed, citing Microsoft
-# Windows XP as the source.  Risto Nykanen (2005-05-16) reports that
-# travelmongolia.org says there are two time zones (UTC+7, UTC+8) with no DST.
-# Oscar van Vlijmen (2005-05-20) reports that the Mongolian Embassy in
-# Washington, DC says there are two time zones, with DST observed.
-# He also found
-# <http://ubpost.mongolnews.mn/index.php?subaction=showcomments&id=1111634894&archive=&start_from=&ucat=1&>
-# which also says that there is DST, and which has a comment by "Toddius"
-# (2005-03-31 06:05 +0700) saying "Mongolia actually has 3.5 time zones.
-# The West (OLGII) is +7 GMT, most of the country is ULAT is +8 GMT
-# and some Eastern provinces are +9 GMT but Sukhbaatar Aimag is SUHK +8.5 GMT.
-# The SUKH timezone is new this year, it is one of the few things the
-# parliament passed during the tumultuous winter session."
-# For now, let's ignore this information, until we have more confirmation.
-
-# From Ganbold Ts. (2007-02-26):
-# Parliament of Mongolia has just changed the daylight-saving rule in February.
-# They decided not to adopt daylight-saving time....
-# http://www.mongolnews.mn/index.php?module=unuudur&sec=view&id=15742
-
-# From Deborah Goldsmith (2008-03-30):
-# We received a bug report claiming that the tz database UTC offset for
-# Asia/Choibalsan (GMT+09:00) is incorrect, and that it should be GMT
-# +08:00 instead. Different sources appear to disagree with the tz
-# database on this, e.g.:
-#
-# <a href="http://www.timeanddate.com/worldclock/city.html?n=1026">
-# http://www.timeanddate.com/worldclock/city.html?n=1026
-# </a>
-# <a href="http://www.worldtimeserver.com/current_time_in_MN.aspx">
-# http://www.worldtimeserver.com/current_time_in_MN.aspx
-# </a>
-#
-# both say GMT+08:00.
-
-# From Steffen Thorsen (2008-03-31):
-# eznis airways, which operates several domestic flights, has a flight
-# schedule here:
-# <a href="http://www.eznis.com/Container.jsp?id=112">
-# http://www.eznis.com/Container.jsp?id=112
-# </a>
-# (click the English flag for English)
-#
-# There it appears that flights between Choibalsan and Ulaanbatar arrive
-# about 1:35 - 1:50 hours later in local clock time, no matter the
-# direction, while Ulaanbaatar-Khvod takes 2 hours in the Eastern
-# direction and 3:35 back, which indicates that Ulaanbatar and Khvod are
-# in different time zones (like we know about), while Choibalsan and
-# Ulaanbatar are in the same time zone (correction needed).
-
-# From Arthur David Olson (2008-05-19):
-# Assume that Choibalsan is indeed offset by 8:00.
-# XXX--in the absence of better information, assume that transition
-# was at the start of 2008-03-31 (the day of Steffen Thorsen's report);
-# this is almost surely wrong.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Mongol	1983	1984	-	Apr	1	0:00	1:00	S
-Rule	Mongol	1983	only	-	Oct	1	0:00	0	-
-# Shanks & Pottenger and IATA SSIM say 1990s switches occurred at 00:00,
-# but McDow says the 2001 switches occurred at 02:00.  Also, IATA SSIM
-# (1996-09) says 1996-10-25.  Go with Shanks & Pottenger through 1998.
-#
-# Shanks & Pottenger say that the Sept. 1984 through Sept. 1990 switches
-# in Choibalsan (more precisely, in Dornod and Sukhbaatar) took place
-# at 02:00 standard time, not at 00:00 local time as in the rest of
-# the country.  That would be odd, and possibly is a result of their
-# correction of 02:00 (in the previous edition) not being done correctly
-# in the latest edition; so ignore it for now.
-
-Rule	Mongol	1985	1998	-	Mar	lastSun	0:00	1:00	S
-Rule	Mongol	1984	1998	-	Sep	lastSun	0:00	0	-
-# IATA SSIM (1999-09) says Mongolia no longer observes DST.
-Rule	Mongol	2001	only	-	Apr	lastSat	2:00	1:00	S
-Rule	Mongol	2001	2006	-	Sep	lastSat	2:00	0	-
-Rule	Mongol	2002	2006	-	Mar	lastSat	2:00	1:00	S
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-# Hovd, a.k.a. Chovd, Dund-Us, Dzhargalant, Khovd, Jirgalanta
-Zone	Asia/Hovd	6:06:36 -	LMT	1905 Aug
-			6:00	-	HOVT	1978	# Hovd Time
-			7:00	Mongol	HOV%sT
-# Ulaanbaatar, a.k.a. Ulan Bataar, Ulan Bator, Urga
-Zone	Asia/Ulaanbaatar 7:07:32 -	LMT	1905 Aug
-			7:00	-	ULAT	1978	# Ulaanbaatar Time
-			8:00	Mongol	ULA%sT
-# Choibalsan, a.k.a. Bajan Tuemen, Bajan Tumen, Chojbalsan,
-# Choybalsan, Sanbejse, Tchoibalsan
-Zone	Asia/Choibalsan	7:38:00 -	LMT	1905 Aug
-			7:00	-	ULAT	1978
-			8:00	-	ULAT	1983 Apr
-			9:00	Mongol	CHO%sT	2008 Mar 31 # Choibalsan Time
-			8:00	Mongol	CHO%sT
-
-# Nepal
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Katmandu	5:41:16 -	LMT	1920
-			5:30	-	IST	1986
-			5:45	-	NPT	# Nepal Time
-
-# Oman
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Muscat	3:54:20 -	LMT	1920
-			4:00	-	GST
-
-# Pakistan
-
-# From Rives McDow (2002-03-13):
-# I have been advised that Pakistan has decided to adopt dst on a
-# TRIAL basis for one year, starting 00:01 local time on April 7, 2002
-# and ending at 00:01 local time October 6, 2002.  This is what I was
-# told, but I believe that the actual time of change may be 00:00; the
-# 00:01 was to make it clear which day it was on.
-
-# From Paul Eggert (2002-03-15):
-# Jesper Norgaard found this URL:
-# http://www.pak.gov.pk/public/news/app/app06_dec.htm
-# (dated 2001-12-06) which says that the Cabinet adopted a scheme "to
-# advance the clocks by one hour on the night between the first
-# Saturday and Sunday of April and revert to the original position on
-# 15th October each year".  This agrees with McDow's 04-07 at 00:00,
-# but disagrees about the October transition, and makes it sound like
-# it's not on a trial basis.  Also, the "between the first Saturday
-# and Sunday of April" phrase, if taken literally, means that the
-# transition takes place at 00:00 on the first Sunday on or after 04-02.
-
-# From Paul Eggert (2003-02-09):
-# DAWN <http://www.dawn.com/2002/10/06/top13.htm> reported on 2002-10-05
-# that 2002 DST ended that day at midnight.  Go with McDow for now.
-
-# From Steffen Thorsen (2003-03-14):
-# According to http://www.dawn.com/2003/03/07/top15.htm
-# there will be no DST in Pakistan this year:
-#
-# ISLAMABAD, March 6: Information and Media Development Minister Sheikh
-# Rashid Ahmed on Thursday said the cabinet had reversed a previous
-# decision to advance clocks by one hour in summer and put them back by
-# one hour in winter with the aim of saving light hours and energy.
-#
-# The minister told a news conference that the experiment had rather
-# shown 8 per cent higher consumption of electricity.
-
-# From Alex Krivenyshev (2008-05-15):
-# 
-# Here is an article that Pakistan plan to introduce Daylight Saving Time 
-# on June 1, 2008 for 3 months.
-# 
-# "... The federal cabinet on Wednesday announced a new conservation plan to help 
-# reduce load shedding by approving the closure of commercial centres at 9pm and 
-# moving clocks forward by one hour for the next three months. 
-# ...."
-# 
-# <a href="http://www.worldtimezone.net/dst_news/dst_news_pakistan01.html">
-# http://www.worldtimezone.net/dst_news/dst_news_pakistan01.html
-# </a>
-# OR
-# <a href="http://www.dailytimes.com.pk/default.asp?page=2008%5C05%5C15%5Cstory_15-5-2008_pg1_4">
-# http://www.dailytimes.com.pk/default.asp?page=2008%5C05%5C15%5Cstory_15-5-2008_pg1_4
-# </a>
-
-# From Arthur David Olson (2008-05-19):
-# XXX--midnight transitions is a guess; 2008 only is a guess.
-
-# From Alexander Krivenyshev (2008-08-28):
-# Pakistan government has decided to keep the watches one-hour advanced
-# for another 2 months--plan to return to Standard Time on October 31
-# instead of August 31.
-#
-# <a href="http://www.worldtimezone.com/dst_news/dst_news_pakistan02.html">
-# http://www.worldtimezone.com/dst_news/dst_news_pakistan02.html
-# </a>
-# OR
-# <a href="http://dailymailnews.com/200808/28/news/dmbrn03.html">
-# http://dailymailnews.com/200808/28/news/dmbrn03.html
-# </a>
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule Pakistan	2002	only	-	Apr	Sun>=2	0:01	1:00	S
-Rule Pakistan	2002	only	-	Oct	Sun>=2	0:01	0	-
-Rule Pakistan	2008	only	-	Jun	1	0:00	1:00	S
-Rule Pakistan	2008	only	-	Nov	1	0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Karachi	4:28:12 -	LMT	1907
-			5:30	-	IST	1942 Sep
-			5:30	1:00	IST	1945 Oct 15
-			5:30	-	IST	1951 Sep 30
-			5:00	-	KART	1971 Mar 26 # Karachi Time
-			5:00 Pakistan	PK%sT	# Pakistan Time
-
-# Palestine
-
-# From Amos Shapir (1998-02-15):
-#
-# From 1917 until 1948-05-15, all of Palestine, including the parts now
-# known as the Gaza Strip and the West Bank, was under British rule.
-# Therefore the rules given for Israel for that period, apply there too...
-#
-# The Gaza Strip was under Egyptian rule between 1948-05-15 until 1967-06-05
-# (except a short occupation by Israel from 1956-11 till 1957-03, but no
-# time zone was affected then).  It was never formally annexed to Egypt,
-# though.
-#
-# The rest of Palestine was under Jordanian rule at that time, formally
-# annexed in 1950 as the West Bank (and the word "Trans" was dropped from
-# the country's previous name of "the Hashemite Kingdom of the
-# Trans-Jordan").  So the rules for Jordan for that time apply.  Major
-# towns in that area are Nablus (Shchem), El-Halil (Hebron), Ramallah, and
-# East Jerusalem.
-#
-# Both areas were occupied by Israel in June 1967, but not annexed (except
-# for East Jerusalem).  They were on Israel time since then; there might
-# have been a Military Governor's order about time zones, but I'm not aware
-# of any (such orders may have been issued semi-annually whenever summer
-# time was in effect, but maybe the legal aspect of time was just neglected).
-#
-# The Palestinian Authority was established in 1993, and got hold of most
-# towns in the West Bank and Gaza by 1995.  I know that in order to
-# demonstrate...independence, they have been switching to
-# summer time and back on a different schedule than Israel's, but I don't
-# know when this was started, or what algorithm is used (most likely the
-# Jordanian one).
-#
-# To summarize, the table should probably look something like that:
-#
-# Area \ when | 1918-1947 | 1948-1967 | 1967-1995 | 1996-
-# ------------+-----------+-----------+-----------+-----------
-# Israel      | Zion      | Zion      | Zion      | Zion
-# West bank   | Zion      | Jordan    | Zion      | Jordan
-# Gaza        | Zion      | Egypt     | Zion      | Jordan
-#
-# I guess more info may be available from the PA's web page (if/when they
-# have one).
-
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger write that Gaza did not observe DST until 1957, but go
-# with Shapir and assume that it observed DST from 1940 through 1947,
-# and that it used Jordanian rules starting in 1996.
-# We don't yet need a separate entry for the West Bank, since
-# the only differences between it and Gaza that we know about
-# occurred before our cutoff date of 1970.
-# However, as we get more information, we may need to add entries
-# for parts of the West Bank as they transitioned from Israel's rules
-# to Palestine's rules.  If you have more info about this, please
-# send it to tz@elsie.nci.nih.gov for incorporation into future editions.
-
-# From IINS News Service - Israel - 1998-03-23 10:38:07 Israel time,
-# forwarded by Ephraim Silverberg:
-#
-# Despite the fact that Israel changed over to daylight savings time
-# last week, the PLO Authority (PA) has decided not to turn its clocks
-# one-hour forward at this time.  As a sign of independence from Israeli rule,
-# the PA has decided to implement DST in April.
-
-# From Paul Eggert (1999-09-20):
-# Daoud Kuttab writes in
-# <a href="http://www.jpost.com/com/Archive/22.Apr.1999/Opinion/Article-2.html">
-# Holiday havoc
-# </a> (Jerusalem Post, 1999-04-22) that
-# the Palestinian National Authority changed to DST on 1999-04-15.
-# I vaguely recall that they switch back in October (sorry, forgot the source).
-# For now, let's assume that the spring switch was at 24:00,
-# and that they switch at 0:00 on the 3rd Fridays of April and October.
-
-# From Paul Eggert (2005-11-22):
-# Starting 2004 transitions are from Steffen Thorsen's web site timeanddate.com.
-
-# From Steffen Thorsen (2005-11-23):
-# A user from Gaza reported that Gaza made the change early because of
-# the Ramadan.  Next year Ramadan will be even earlier, so I think
-# there is a good chance next year's end date will be around two weeks
-# earlier--the same goes for Jordan.
-
-# From Steffen Thorsen (2006-08-17):
-# I was informed by a user in Bethlehem that in Bethlehem it started the
-# same day as Israel, and after checking with other users in the area, I
-# was informed that they started DST one day after Israel.  I was not
-# able to find any authoritative sources at the time, nor details if
-# Gaza changed as well, but presumed Gaza to follow the same rules as
-# the West Bank.
-
-# From Steffen Thorsen (2006-09-26):
-# according to the Palestine News Network (2006-09-19):
-# http://english.pnn.ps/index.php?option=com_content&task=view&id=596&Itemid=5
-# > The Council of Ministers announced that this year its winter schedule
-# > will begin early, as of midnight Thursday.  It is also time to turn
-# > back the clocks for winter.  Friday will begin an hour late this week.
-# I guess it is likely that next year's date will be moved as well,
-# because of the Ramadan.
-
-# From Jesper Norgaard Welen (2007-09-18):
-# According to Steffen Thorsen's web site the Gaza Strip and the rest of the
-# Palestinian territories left DST early on 13.th. of September at 2:00.
-
-# From Paul Eggert (2007-09-20):
-# My understanding is that Gaza and the West Bank disagree even over when
-# the weekend is (Thursday+Friday versus Friday+Saturday), so I'd be a bit
-# surprised if they agreed about DST.  But for now, assume they agree.
-# For lack of better information, predict that future changes will be
-# the 2nd Thursday of September at 02:00.
-
-# From Alexander Krivenyshev (2008-08-28):
-# Here is an article, that Mideast running on different clocks at Ramadan.
-#
-# Gaza Strip (as Egypt) ended DST at midnight Thursday (Aug 28, 2008), while
-# the West Bank will end Daylight Saving Time at midnight Sunday (Aug 31, 2008).
-#
-# <a href="http://www.guardian.co.uk/world/feedarticle/7759001">
-# http://www.guardian.co.uk/world/feedarticle/7759001
-# </a>
-# <a href="http://www.abcnews.go.com/International/wireStory?id=5676087">
-# http://www.abcnews.go.com/International/wireStory?id=5676087
-# </a>
-# or
-# <a href="http://www.worldtimezone.com/dst_news/dst_news_gazastrip01.html">
-# http://www.worldtimezone.com/dst_news/dst_news_gazastrip01.html
-# </a>
-
-# The rules for Egypt are stolen from the `africa' file.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule EgyptAsia	1957	only	-	May	10	0:00	1:00	S
-Rule EgyptAsia	1957	1958	-	Oct	 1	0:00	0	-
-Rule EgyptAsia	1958	only	-	May	 1	0:00	1:00	S
-Rule EgyptAsia	1959	1967	-	May	 1	1:00	1:00	S
-Rule EgyptAsia	1959	1965	-	Sep	30	3:00	0	-
-Rule EgyptAsia	1966	only	-	Oct	 1	3:00	0	-
-
-Rule Palestine	1999	2005	-	Apr	Fri>=15	0:00	1:00	S
-Rule Palestine	1999	2003	-	Oct	Fri>=15	0:00	0	-
-Rule Palestine	2004	only	-	Oct	 1	1:00	0	-
-Rule Palestine	2005	only	-	Oct	 4	2:00	0	-
-Rule Palestine	2006	max	-	Apr	 1	0:00	1:00	S
-Rule Palestine	2006	only	-	Sep	22	0:00	0	-
-Rule Palestine	2007	only	-	Sep	Thu>=8	2:00	0	-
-Rule Palestine	2008	max	-	Aug	lastThu	2:00	0	-
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Gaza	2:17:52	-	LMT	1900 Oct
-			2:00	Zion	EET	1948 May 15
-			2:00 EgyptAsia	EE%sT	1967 Jun  5
-			2:00	Zion	I%sT	1996
-			2:00	Jordan	EE%sT	1999
-			2:00 Palestine	EE%sT
-
-# Paracel Is
-# no information
-
-# Philippines
-# On 1844-08-16, Narciso Claveria, governor-general of the
-# Philippines, issued a proclamation announcing that 1844-12-30 was to
-# be immediately followed by 1845-01-01.  Robert H. van Gent has a
-# transcript of the decree in <http://www.phys.uu.nl/~vgent/idl/idl.htm>.
-# The rest of the data are from Shanks & Pottenger.
-
-# From Paul Eggert (2006-04-25):
-# Tomorrow's Manila Standard reports that the Philippines Department of
-# Trade and Industry is considering adopting DST this June when the
-# rainy season begins.  See
-# <http://www.manilastandardtoday.com/?page=politics02_april26_2006>.
-# For now, we'll ignore this, since it's not definite and we lack details.
-#
-# From Jesper Norgaard Welen (2006-04-26):
-# ... claims that Philippines had DST last time in 1990:
-# http://story.philippinetimes.com/p.x/ct/9/id/145be20cc6b121c0/cid/3e5bbccc730d258c/
-# [a story dated 2006-04-25 by Cris Larano of Dow Jones Newswires,
-# but no details]
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Phil	1936	only	-	Nov	1	0:00	1:00	S
-Rule	Phil	1937	only	-	Feb	1	0:00	0	-
-Rule	Phil	1954	only	-	Apr	12	0:00	1:00	S
-Rule	Phil	1954	only	-	Jul	1	0:00	0	-
-Rule	Phil	1978	only	-	Mar	22	0:00	1:00	S
-Rule	Phil	1978	only	-	Sep	21	0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Manila	-15:56:00 -	LMT	1844 Dec 31
-			8:04:00 -	LMT	1899 May 11
-			8:00	Phil	PH%sT	1942 May
-			9:00	-	JST	1944 Nov
-			8:00	Phil	PH%sT
-
-# Qatar
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Qatar	3:26:08 -	LMT	1920	# Al Dawhah / Doha
-			4:00	-	GST	1972 Jun
-			3:00	-	AST
-
-# Saudi Arabia
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Riyadh	3:06:52 -	LMT	1950
-			3:00	-	AST
-
-# Singapore
-# The data here are taken from Mok Ly Yng (2003-10-30)
-# <http://www.math.nus.edu.sg/aslaksen/teaching/timezone.html>.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Singapore	6:55:25 -	LMT	1901 Jan  1
-			6:55:25	-	SMT	1905 Jun  1 # Singapore M.T.
-			7:00	-	MALT	1933 Jan  1 # Malaya Time
-			7:00	0:20	MALST	1936 Jan  1
-			7:20	-	MALT	1941 Sep  1
-			7:30	-	MALT	1942 Feb 16
-			9:00	-	JST	1945 Sep 12
-			7:30	-	MALT	1965 Aug  9 # independence
-			7:30	-	SGT	1982 Jan  1 # Singapore Time
-			8:00	-	SGT
-
-# Spratly Is
-# no information
-
-# Sri Lanka
-# From Paul Eggert (1996-09-03):
-# "Sri Lanka advances clock by an hour to avoid blackout"
-# (www.virtual-pc.com/lankaweb/news/items/240596-2.html, 1996-05-24,
-# no longer available as of 1999-08-17)
-# reported ``the country's standard time will be put forward by one hour at
-# midnight Friday (1830 GMT) `in the light of the present power crisis'.''
-#
-# From Dharmasiri Senanayake, Sri Lanka Media Minister (1996-10-24), as quoted
-# by Shamindra in
-# <a href="news:54rka5$m5h@mtinsc01-mgt.ops.worldnet.att.net">
-# Daily News - Hot News Section (1996-10-26)
-# </a>:
-# With effect from 12.30 a.m. on 26th October 1996
-# Sri Lanka will be six (06) hours ahead of GMT.
-
-# From Jesper Norgaard Welen (2006-04-14), quoting Sri Lanka News Online
-# <http://news.sinhalaya.com/wmview.php?ArtID=11002> (2006-04-13):
-# 0030 hrs on April 15, 2006 (midnight of April 14, 2006 +30 minutes)
-# at present, become 2400 hours of April 14, 2006 (midnight of April 14, 2006).
-
-# From Peter Apps and Ranga Sirila of Reuters (2006-04-12) in:
-# <http://today.reuters.co.uk/news/newsArticle.aspx?type=scienceNews&storyID=2006-04-12T172228Z_01_COL295762_RTRIDST_0_SCIENCE-SRILANKA-TIME-DC.XML>
-# [The Tamil Tigers] never accepted the original 1996 time change and simply
-# kept their clocks set five and a half hours ahead of Greenwich Mean
-# Time (GMT), in line with neighbor India.
-# From Paul Eggert (2006-04-18):
-# People who live in regions under Tamil control can use [TZ='Asia/Kolkata'],
-# as that zone has agreed with the Tamil areas since our cutoff date of 1970.
-
-# From K Sethu (2006-04-25):
-# I think the abbreviation LKT originated from the world of computers at
-# the time of or subsequent to the time zone changes by SL Government
-# twice in 1996 and probably SL Government or its standardization
-# agencies never declared an abbreviation as a national standard.
-#
-# I recollect before the recent change the government annoucemments
-# mentioning it as simply changing Sri Lanka Standard Time or Sri Lanka
-# Time and no mention was made about the abbreviation.
-#
-# If we look at Sri Lanka Department of Government's "Official News
-# Website of Sri Lanka" ... http://www.news.lk/ we can see that they
-# use SLT as abbreviation in time stamp at the beginning of each news
-# item....
-#
-# Within Sri Lanka I think LKT is well known among computer users and
-# adminsitrators.  In my opinion SLT may not be a good choice because the
-# nation's largest telcom / internet operator Sri Lanka Telcom is well
-# known by that abbreviation - simply as SLT (there IP domains are
-# slt.lk and sltnet.lk).
-#
-# But if indeed our government has adopted SLT as standard abbreviation
-# (that we have not known so far) then  it is better that it be used for
-# all computers.
-
-# From Paul Eggert (2006-04-25):
-# One possibility is that we wait for a bit for the dust to settle down
-# and then see what people actually say in practice.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Colombo	5:19:24 -	LMT	1880
-			5:19:32	-	MMT	1906	# Moratuwa Mean Time
-			5:30	-	IST	1942 Jan  5
-			5:30	0:30	IHST	1942 Sep
-			5:30	1:00	IST	1945 Oct 16 2:00
-			5:30	-	IST	1996 May 25 0:00
-			6:30	-	LKT	1996 Oct 26 0:30
-			6:00	-	LKT	2006 Apr 15 0:30
-			5:30	-	IST
-
-# Syria
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Syria	1920	1923	-	Apr	Sun>=15	2:00	1:00	S
-Rule	Syria	1920	1923	-	Oct	Sun>=1	2:00	0	-
-Rule	Syria	1962	only	-	Apr	29	2:00	1:00	S
-Rule	Syria	1962	only	-	Oct	1	2:00	0	-
-Rule	Syria	1963	1965	-	May	1	2:00	1:00	S
-Rule	Syria	1963	only	-	Sep	30	2:00	0	-
-Rule	Syria	1964	only	-	Oct	1	2:00	0	-
-Rule	Syria	1965	only	-	Sep	30	2:00	0	-
-Rule	Syria	1966	only	-	Apr	24	2:00	1:00	S
-Rule	Syria	1966	1976	-	Oct	1	2:00	0	-
-Rule	Syria	1967	1978	-	May	1	2:00	1:00	S
-Rule	Syria	1977	1978	-	Sep	1	2:00	0	-
-Rule	Syria	1983	1984	-	Apr	9	2:00	1:00	S
-Rule	Syria	1983	1984	-	Oct	1	2:00	0	-
-Rule	Syria	1986	only	-	Feb	16	2:00	1:00	S
-Rule	Syria	1986	only	-	Oct	9	2:00	0	-
-Rule	Syria	1987	only	-	Mar	1	2:00	1:00	S
-Rule	Syria	1987	1988	-	Oct	31	2:00	0	-
-Rule	Syria	1988	only	-	Mar	15	2:00	1:00	S
-Rule	Syria	1989	only	-	Mar	31	2:00	1:00	S
-Rule	Syria	1989	only	-	Oct	1	2:00	0	-
-Rule	Syria	1990	only	-	Apr	1	2:00	1:00	S
-Rule	Syria	1990	only	-	Sep	30	2:00	0	-
-Rule	Syria	1991	only	-	Apr	 1	0:00	1:00	S
-Rule	Syria	1991	1992	-	Oct	 1	0:00	0	-
-Rule	Syria	1992	only	-	Apr	 8	0:00	1:00	S
-Rule	Syria	1993	only	-	Mar	26	0:00	1:00	S
-Rule	Syria	1993	only	-	Sep	25	0:00	0	-
-# IATA SSIM (1998-02) says 1998-04-02;
-# (1998-09) says 1999-03-29 and 1999-09-29; (1999-02) says 1999-04-02,
-# 2000-04-02, and 2001-04-02; (1999-09) says 2000-03-31 and 2001-03-31;
-# (2006) says 2006-03-31 and 2006-09-22;
-# for now ignore all these claims and go with Shanks & Pottenger,
-# except for the 2006-09-22 claim (which seems right for Ramadan).
-Rule	Syria	1994	1996	-	Apr	 1	0:00	1:00	S
-Rule	Syria	1994	2005	-	Oct	 1	0:00	0	-
-Rule	Syria	1997	1998	-	Mar	lastMon	0:00	1:00	S
-Rule	Syria	1999	2006	-	Apr	 1	0:00	1:00	S
-# From Stephen Colebourne (2006-09-18):
-# According to IATA data, Syria will change DST on 21st September [21:00 UTC]
-# this year [only]....  This is probably related to Ramadan, like Egypt.
-Rule	Syria	2006	only	-	Sep	22	0:00	0	-
-# From Paul Eggert (2007-03-29):
-# Today the AP reported "Syria will switch to summertime at midnight Thursday."
-# http://www.iht.com/articles/ap/2007/03/29/africa/ME-GEN-Syria-Time-Change.php
-Rule	Syria	2007	only	-	Mar	lastFri	0:00	1:00	S
-# From Jesper Norgard (2007-10-27):
-# The sister center ICARDA of my work CIMMYT is confirming that Syria DST will
-# not take place 1.st November at 0:00 o'clock but 1.st November at 24:00 or
-# rather Midnight between Thursday and Friday. This does make more sence than
-# having it between Wednesday and Thursday (two workdays in Syria) since the
-# weekend in Syria is not Saturday and Sunday, but Friday and Saturday. So now
-# it is implemented at midnight of the last workday before weekend...
-# 
-# From Steffen Thorsen (2007-10-27):
-# Jesper Norgaard Welen wrote:
-# 
-# > "Winter local time in Syria will be observed at midnight of Thursday 1
-# > November 2007, and the clock will be put back 1 hour."
-# 
-# I found confirmation on this in this gov.sy-article (Arabic):
-# http://wehda.alwehda.gov.sy/_print_veiw.asp?FileName=12521710520070926111247
-# 
-# which using Google's translate tools says:
-# Council of Ministers also approved the commencement of work on 
-# identifying the winter time as of Friday, 2/11/2007 where the 60th 
-# minute delay at midnight Thursday 1/11/2007.
-Rule	Syria	2007	only	-	Nov	 Fri>=1	0:00	0	-
-
-# From Stephen Colebourne (2008-03-17):
-# For everyone's info, I saw an IATA time zone change for [Syria] for
-# this month (March 2008) in the last day or so...This is the data IATA
-# are now using:
-# Country     Time Standard   --- DST Start ---   --- DST End ---  DST
-# Name        Zone Variation   Time    Date        Time    Date
-# Variation
-# Syrian Arab
-# Republic    SY    +0200      2200  03APR08       2100  30SEP08   +0300
-#                              2200  02APR09       2100  30SEP09   +0300
-#                              2200  01APR10       2100  30SEP10   +0300
-
-# From Arthur David Olson (2008-03-17):
-# Here's a link to English-language coverage by the Syrian Arab News
-# Agency (SANA)...
-# <a href="http://www.sana.sy/eng/21/2008/03/11/165173.htm">
-# http://www.sana.sy/eng/21/2008/03/11/165173.htm
-# </a>...which reads (in part) "The Cabinet approved the suggestion of the
-# Ministry of Electricity to begin daylight savings time on Friday April
-# 4th, advancing clocks one hour ahead on midnight of Thursday April 3rd."
-# Since Syria is two hours east of UTC, the 2200 and 2100 transition times
-# shown above match up with midnight in Syria.
-
-# From Arthur David Olson (2008-03-18):
-# My buest guess at a Syrian rule is "the Friday nearest April 1";
-# coding that involves either using a "Mar Fri>=29" construct that old time zone
-# compilers can't handle  or having multiple Rules (a la Israel).
-# For now, use "Apr Fri>=1", and go with IATA on a uniform Sep 30 end.
-
-# From Steffen Thorsen (2008-10-07):
-# Syria has now officially decided to end DST on 2008-11-01 this year,
-# according to the following article in the Syrian Arab News Agency (SANA).
-#
-# The article is in Arabic, and seems to tell that they will go back to
-# winter time on 2008-11-01 at 00:00 local daylight time (delaying/setting
-# clocks back 60 minutes).
-#
-# <a href="http://sana.sy/ara/2/2008/10/07/195459.htm">
-# http://sana.sy/ara/2/2008/10/07/195459.htm
-# </a>
-
-Rule	Syria	2008	max	-	Apr	Fri>=1	0:00	1:00	S
-Rule	Syria	2008	max	-	Nov	1	0:00	0	-
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Damascus	2:25:12 -	LMT	1920	# Dimashq
-			2:00	Syria	EE%sT
-
-# Tajikistan
-# From Shanks & Pottenger.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Dushanbe	4:35:12 -	LMT	1924 May  2
-			5:00	-	DUST	1930 Jun 21 # Dushanbe Time
-			6:00 RussiaAsia DUS%sT	1991 Mar 31 2:00s
-			5:00	1:00	DUSST	1991 Sep  9 2:00s
-			5:00	-	TJT		    # Tajikistan Time
-
-# Thailand
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Bangkok	6:42:04	-	LMT	1880
-			6:42:04	-	BMT	1920 Apr # Bangkok Mean Time
-			7:00	-	ICT
-
-# Turkmenistan
-# From Shanks & Pottenger.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Ashgabat	3:53:32 -	LMT	1924 May  2 # or Ashkhabad
-			4:00	-	ASHT	1930 Jun 21 # Ashkhabad Time
-			5:00 RussiaAsia	ASH%sT	1991 Mar 31 2:00
-			4:00 RussiaAsia	ASH%sT	1991 Oct 27 # independence
-			4:00 RussiaAsia	TM%sT	1992 Jan 19 2:00
-			5:00	-	TMT
-
-# United Arab Emirates
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Dubai	3:41:12 -	LMT	1920
-			4:00	-	GST
-
-# Uzbekistan
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Samarkand	4:27:12 -	LMT	1924 May  2
-			4:00	-	SAMT	1930 Jun 21 # Samarkand Time
-			5:00	-	SAMT	1981 Apr  1
-			5:00	1:00	SAMST	1981 Oct  1
-			6:00	-	TAST	1982 Apr  1 # Tashkent Time
-			5:00 RussiaAsia	SAM%sT	1991 Sep  1 # independence
-			5:00 RussiaAsia	UZ%sT	1992
-			5:00	-	UZT
-Zone	Asia/Tashkent	4:37:12 -	LMT	1924 May  2
-			5:00	-	TAST	1930 Jun 21 # Tashkent Time
-			6:00 RussiaAsia	TAS%sT	1991 Mar 31 2:00
-			5:00 RussiaAsia	TAS%sT	1991 Sep  1 # independence
-			5:00 RussiaAsia	UZ%sT	1992
-			5:00	-	UZT
-
-# Vietnam
-
-# From Arthur David Olson (2008-03-18):
-# The English-language name of Vietnam's most populous city is "Ho Chi Min City";
-# we use Ho_Chi_Minh below to avoid a name of more than 14 characters.
-
-# From Shanks & Pottenger:
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Ho_Chi_Minh	7:06:40 -	LMT	1906 Jun  9
-			7:06:20	-	SMT	1911 Mar 11 0:01 # Saigon MT?
-			7:00	-	ICT	1912 May
-			8:00	-	ICT	1931 May
-			7:00	-	ICT
-
-# Yemen
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Asia/Aden	3:00:48	-	LMT	1950
-			3:00	-	AST
+# @(#)asia	8.60
+# This file is in the public domain, so clarified as of
+# 2009-05-17 by Arthur David Olson.
+
+# This data is by no means authoritative; if you think you know better,
+# go ahead and edit the file (and please send any changes to
+# tz@elsie.nci.nih.gov for general use in the future).
+
+# From Paul Eggert (2006-03-22):
+#
+# A good source for time zone historical data outside the U.S. is
+# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),
+# San Diego: ACS Publications, Inc. (2003).
+#
+# Gwillim Law writes that a good source
+# for recent time zone data is the International Air Transport
+# Association's Standard Schedules Information Manual (IATA SSIM),
+# published semiannually.  Law sent in several helpful summaries
+# of the IATA's data after 1990.
+#
+# Except where otherwise noted, Shanks & Pottenger is the source for
+# entries through 1990, and IATA SSIM is the source for entries afterwards.
+#
+# Another source occasionally used is Edward W. Whitman, World Time Differences,
+# Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated), which
+# I found in the UCLA library.
+#
+# A reliable and entertaining source about time zones is
+# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).
+#
+# I invented the abbreviations marked `*' in the following table;
+# the rest are from earlier versions of this file, or from other sources.
+# Corrections are welcome!
+#	     std  dst
+#	     LMT	Local Mean Time
+#	2:00 EET  EEST	Eastern European Time
+#	2:00 IST  IDT	Israel
+#	3:00 AST  ADT	Arabia*
+#	3:30 IRST IRDT	Iran
+#	4:00 GST	Gulf*
+#	5:30 IST	India
+#	7:00 ICT	Indochina*
+#	7:00 WIT	west Indonesia
+#	8:00 CIT	central Indonesia
+#	8:00 CST	China
+#	9:00 CJT	Central Japanese Time (1896/1937)*
+#	9:00 EIT	east Indonesia
+#	9:00 JST  JDT	Japan
+#	9:00 KST  KDT	Korea
+#	9:30 CST	(Australian) Central Standard Time
+#
+# See the `europe' file for Russia and Turkey in Asia.
+
+# From Guy Harris:
+# Incorporates data for Singapore from Robert Elz' asia 1.1, as well as
+# additional information from Tom Yap, Sun Microsystems Intercontinental
+# Technical Support (including a page from the Official Airline Guide -
+# Worldwide Edition).  The names for time zones are guesses.
+
+###############################################################################
+
+# These rules are stolen from the `europe' file.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	EUAsia	1981	max	-	Mar	lastSun	 1:00u	1:00	S
+Rule	EUAsia	1979	1995	-	Sep	lastSun	 1:00u	0	-
+Rule	EUAsia	1996	max	-	Oct	lastSun	 1:00u	0	-
+Rule E-EurAsia	1981	max	-	Mar	lastSun	 0:00	1:00	S
+Rule E-EurAsia	1979	1995	-	Sep	lastSun	 0:00	0	-
+Rule E-EurAsia	1996	max	-	Oct	lastSun	 0:00	0	-
+Rule RussiaAsia	1981	1984	-	Apr	1	 0:00	1:00	S
+Rule RussiaAsia	1981	1983	-	Oct	1	 0:00	0	-
+Rule RussiaAsia	1984	1991	-	Sep	lastSun	 2:00s	0	-
+Rule RussiaAsia	1985	1991	-	Mar	lastSun	 2:00s	1:00	S
+Rule RussiaAsia	1992	only	-	Mar	lastSat	23:00	1:00	S
+Rule RussiaAsia	1992	only	-	Sep	lastSat	23:00	0	-
+Rule RussiaAsia	1993	max	-	Mar	lastSun	 2:00s	1:00	S
+Rule RussiaAsia	1993	1995	-	Sep	lastSun	 2:00s	0	-
+Rule RussiaAsia	1996	max	-	Oct	lastSun	 2:00s	0	-
+
+# Afghanistan
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Kabul	4:36:48 -	LMT	1890
+			4:00	-	AFT	1945
+			4:30	-	AFT
+
+# Armenia
+# From Paul Eggert (2006-03-22):
+# Shanks & Pottenger have Yerevan switching to 3:00 (with Russian DST)
+# in spring 1991, then to 4:00 with no DST in fall 1995, then
+# readopting Russian DST in 1997.  Go with Shanks & Pottenger, even
+# when they disagree with others.  Edgar Der-Danieliantz
+# reported (1996-05-04) that Yerevan probably wouldn't use DST
+# in 1996, though it did use DST in 1995.  IATA SSIM (1991/1998) reports that
+# Armenia switched from 3:00 to 4:00 in 1998 and observed DST after 1991,
+# but started switching at 3:00s in 1998.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Yerevan	2:58:00 -	LMT	1924 May  2
+			3:00	-	YERT	1957 Mar    # Yerevan Time
+			4:00 RussiaAsia YER%sT	1991 Mar 31 2:00s
+			3:00	1:00	YERST	1991 Sep 23 # independence
+			3:00 RussiaAsia	AM%sT	1995 Sep 24 2:00s
+			4:00	-	AMT	1997
+			4:00 RussiaAsia	AM%sT
+
+# Azerbaijan
+# From Rustam Aliyev of the Azerbaijan Internet Forum (2005-10-23):
+# According to the resolution of Cabinet of Ministers, 1997
+# Resolution available at: http://aif.az/docs/daylight_res.pdf
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Azer	1997	max	-	Mar	lastSun	 4:00	1:00	S
+Rule	Azer	1997	max	-	Oct	lastSun	 5:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Baku	3:19:24 -	LMT	1924 May  2
+			3:00	-	BAKT	1957 Mar    # Baku Time
+			4:00 RussiaAsia BAK%sT	1991 Mar 31 2:00s
+			3:00	1:00	BAKST	1991 Aug 30 # independence
+			3:00 RussiaAsia	AZ%sT	1992 Sep lastSat 23:00
+			4:00	-	AZT	1996 # Azerbaijan time
+			4:00	EUAsia	AZ%sT	1997
+			4:00	Azer	AZ%sT
+
+# Bahrain
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Bahrain	3:22:20 -	LMT	1920		# Al Manamah
+			4:00	-	GST	1972 Jun
+			3:00	-	AST
+
+# Bangladesh
+# From Alexander Krivenyshev (2009-05-13):
+# According to newspaper Asian Tribune (May 6, 2009) Bangladesh may introduce
+# Daylight Saving Time from June 16 to Sept 30
+#
+# Bangladesh to introduce daylight saving time likely from June 16
+# <a href="http://www.asiantribune.com/?q=node/17288">
+# http://www.asiantribune.com/?q=node/17288
+# </a>
+# or
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_bangladesh02.html">
+# http://www.worldtimezone.com/dst_news/dst_news_bangladesh02.html
+# </a>
+#
+# "... Bangladesh government has decided to switch daylight saving time from
+# June
+# 16 till September 30 in a bid to ensure maximum use of daylight to cope with
+# crippling power crisis. "
+#
+# The switch will remain in effect from June 16 to Sept 30 (2009) but if
+# implemented the next year, it will come in force from April 1, 2010
+
+# From Steffen Thorsen (2009-06-02):
+# They have finally decided now, but changed the start date to midnight between
+# the 19th and 20th, and they have not set the end date yet.
+#
+# Some sources:
+# <a href="http://in.reuters.com/article/southAsiaNews/idINIndia-40017620090601">
+# http://in.reuters.com/article/southAsiaNews/idINIndia-40017620090601
+# </a>
+# <a href="http://bdnews24.com/details.php?id=85889&cid=2">
+# http://bdnews24.com/details.php?id=85889&cid=2
+# </a>
+#
+# Our wrap-up:
+# <a href="http://www.timeanddate.com/news/time/bangladesh-daylight-saving-2009.html">
+# http://www.timeanddate.com/news/time/bangladesh-daylight-saving-2009.html
+# </a>
+
+# From A. N. M. Kamrus Saadat (2009-06-15):
+# Finally we've got the official mail regarding DST start time where DST start 
+# time is mentioned as Jun 19 2009, 23:00 from BTRC (Bangladesh 
+# Telecommunication Regulatory Commission). 
+#
+# No DST end date has been announced yet.
+
+# From Alexander Krivenyshev (2009-09-25):
+# Bangladesh won't go back to Standard Time from October 1, 2009, 
+# instead it will continue DST measure till the cabinet makes a fresh decision. 
+#
+# Following report by same newspaper-"The Daily Star Friday":
+# "DST change awaits cabinet decision-Clock won't go back by 1-hr from Oct 1"
+# <a href="http://www.thedailystar.net/newDesign/news-details.php?nid=107021">
+# http://www.thedailystar.net/newDesign/news-details.php?nid=107021
+# </a>
+# or
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_bangladesh04.html">
+# http://www.worldtimezone.com/dst_news/dst_news_bangladesh04.html
+# </a>
+
+# From Steffen Thorsen (2009-10-13):
+# IANS (Indo-Asian News Service) now reports:
+# Bangladesh has decided that the clock advanced by an hour to make 
+# maximum use of daylight hours as an energy saving measure would 
+# "continue for an indefinite period."
+#
+# One of many places where it is published:
+# <a href="http://www.thaindian.com/newsportal/business/bangladesh-to-continue-indefinitely-with-advanced-time_100259987.html">
+# http://www.thaindian.com/newsportal/business/bangladesh-to-continue-indefinitely-with-advanced-time_100259987.html
+# </a>
+
+# From Alexander Krivenyshev (2009-12-24):
+# According to Bangladesh newspaper "The Daily Star,"
+# Bangladesh will change its clock back to Standard Time on Dec 31, 2009.
+#
+# Clock goes back 1-hr on Dec 31 night.
+# <a href="http://www.thedailystar.net/newDesign/news-details.php?nid=119228">
+# http://www.thedailystar.net/newDesign/news-details.php?nid=119228
+# </a>
+# and
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_bangladesh05.html">
+# http://www.worldtimezone.com/dst_news/dst_news_bangladesh05.html
+# </a>
+#
+# "...The government yesterday decided to put the clock back by one hour
+# on December 31 midnight and the new time will continue until March 31,
+# 2010 midnight. The decision came at a cabinet meeting at the Prime
+# Minister's Office last night..."
+
+# From Alexander Krivenyshev (2010-03-22):
+# According to Bangladesh newspaper "The Daily Star,"
+# Cabinet cancels Daylight Saving Time 
+# <a href="http://www.thedailystar.net/newDesign/latest_news.php?nid=22817">
+# http://www.thedailystar.net/newDesign/latest_news.php?nid=22817
+# </a>
+# or
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_bangladesh06.html">
+# http://www.worldtimezone.com/dst_news/dst_news_bangladesh06.html
+# </a>
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Dhaka	2009	only	-	Jun	19	23:00	1:00	S
+Rule	Dhaka	2009	only	-	Dec	31	23:59	0	-
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Dhaka	6:01:40 -	LMT	1890
+			5:53:20	-	HMT	1941 Oct    # Howrah Mean Time?
+			6:30	-	BURT	1942 May 15 # Burma Time
+			5:30	-	IST	1942 Sep
+			6:30	-	BURT	1951 Sep 30
+			6:00	-	DACT	1971 Mar 26 # Dacca Time
+			6:00	-	BDT	2009
+			6:00	Dhaka	BD%sT
+
+# Bhutan
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Thimphu	5:58:36 -	LMT	1947 Aug 15 # or Thimbu
+			5:30	-	IST	1987 Oct
+			6:00	-	BTT	# Bhutan Time
+
+# British Indian Ocean Territory
+# Whitman and the 1995 CIA time zone map say 5:00, but the
+# 1997 and later maps say 6:00.  Assume the switch occurred in 1996.
+# We have no information as to when standard time was introduced;
+# assume it occurred in 1907, the same year as Mauritius (which
+# then contained the Chagos Archipelago).
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Indian/Chagos	4:49:40	-	LMT	1907
+			5:00	-	IOT	1996 # BIOT Time
+			6:00	-	IOT
+
+# Brunei
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Brunei	7:39:40 -	LMT	1926 Mar   # Bandar Seri Begawan
+			7:30	-	BNT	1933
+			8:00	-	BNT
+
+# Burma / Myanmar
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Rangoon	6:24:40 -	LMT	1880		# or Yangon
+			6:24:36	-	RMT	1920	   # Rangoon Mean Time?
+			6:30	-	BURT	1942 May   # Burma Time
+			9:00	-	JST	1945 May 3
+			6:30	-	MMT		   # Myanmar Time
+
+# Cambodia
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Phnom_Penh	6:59:40 -	LMT	1906 Jun  9
+			7:06:20	-	SMT	1911 Mar 11 0:01 # Saigon MT?
+			7:00	-	ICT	1912 May
+			8:00	-	ICT	1931 May
+			7:00	-	ICT
+
+# China
+
+# From Guy Harris:
+# People's Republic of China.  Yes, they really have only one time zone.
+
+# From Bob Devine (1988-01-28):
+# No they don't.  See TIME mag, 1986-02-17 p.52.  Even though
+# China is across 4 physical time zones, before Feb 1, 1986 only the
+# Peking (Bejing) time zone was recognized.  Since that date, China
+# has two of 'em -- Peking's and Urumqi (named after the capital of
+# the Xinjiang Uyghur Autonomous Region).  I don't know about DST for it.
+#
+# . . .I just deleted the DST table and this editor makes it too
+# painful to suck in another copy..  So, here is what I have for
+# DST start/end dates for Peking's time zone (info from AP):
+#
+#     1986 May 4 - Sept 14
+#     1987 mid-April - ??
+
+# From U. S. Naval Observatory (1989-01-19):
+# CHINA               8 H  AHEAD OF UTC  ALL OF CHINA, INCL TAIWAN
+# CHINA               9 H  AHEAD OF UTC  APR 17 - SEP 10
+
+# From Paul Eggert (2006-03-22):
+# Shanks & Pottenger write that China (except for Hong Kong and Macau)
+# has had a single time zone since 1980 May 1, observing summer DST
+# from 1986 through 1991; this contradicts Devine's
+# note about Time magazine, though apparently _something_ happened in 1986.
+# Go with Shanks & Pottenger for now.  I made up names for the other
+# pre-1980 time zones.
+
+# From Shanks & Pottenger:
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Shang	1940	only	-	Jun	 3	0:00	1:00	D
+Rule	Shang	1940	1941	-	Oct	 1	0:00	0	S
+Rule	Shang	1941	only	-	Mar	16	0:00	1:00	D
+Rule	PRC	1986	only	-	May	 4	0:00	1:00	D
+Rule	PRC	1986	1991	-	Sep	Sun>=11	0:00	0	S
+Rule	PRC	1987	1991	-	Apr	Sun>=10	0:00	1:00	D
+
+# From Anthony Fok (2001-12-20):
+# BTW, I did some research on-line and found some info regarding these five
+# historic timezones from some Taiwan websites.  And yes, there are official
+# Chinese names for these locales (before 1949).
+#
+# From Jesper Norgaard Welen (2006-07-14):
+# I have investigated the timezones around 1970 on the
+# http://www.astro.com/atlas site [with provinces and county
+# boundaries summarized below]....  A few other exceptions were two
+# counties on the Sichuan side of the Xizang-Sichuan border,
+# counties Dege and Baiyu which lies on the Sichuan side and are
+# therefore supposed to be GMT+7, Xizang region being GMT+6, but Dege
+# county is GMT+8 according to astro.com while Baiyu county is GMT+6
+# (could be true), for the moment I am assuming that those two
+# counties are mistakes in the astro.com data.
+
+# From Paul Eggert (2008-02-11):
+# I just now checked Google News for western news sources that talk
+# about China's single time zone, and couldn't find anything before 1986
+# talking about China being in one time zone.  (That article was: Jim
+# Mann, "A clumsy embrace for another western custom: China on daylight
+# time--sort of", Los Angeles Times, 1986-05-05.  By the way, this
+# article confirms the tz database's data claiming that China began
+# observing daylight saving time in 1986.
+#
+# From Thomas S. Mullaney (2008-02-11):
+# I think you're combining two subjects that need to treated 
+# separately: daylight savings (which, you're correct, wasn't 
+# implemented until the 1980s) and the unified time zone centered near 
+# Beijing (which was implemented in 1949). Briefly, there was also a 
+# "Lhasa Time" in Tibet and "Urumqi Time" in Xinjiang. The first was 
+# ceased, and the second eventually recognized (again, in the 1980s).
+#
+# From Paul Eggert (2008-06-30):
+# There seems to be a good chance China switched to a single time zone in 1949
+# rather than in 1980 as Shanks & Pottenger have it, but we don't have a
+# reliable documentary source saying so yet, so for now we still go with
+# Shanks & Pottenger.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+# Changbai Time ("Long-white Time", Long-white = Heilongjiang area)
+# Heilongjiang (except Mohe county), Jilin
+Zone	Asia/Harbin	8:26:44	-	LMT	1928 # or Haerbin
+			8:30	-	CHAT	1932 Mar # Changbai Time
+			8:00	-	CST	1940
+			9:00	-	CHAT	1966 May
+			8:30	-	CHAT	1980 May
+			8:00	PRC	C%sT
+# Zhongyuan Time ("Central plain Time")
+# most of China
+Zone	Asia/Shanghai	8:05:52	-	LMT	1928
+			8:00	Shang	C%sT	1949
+			8:00	PRC	C%sT
+# Long-shu Time (probably due to Long and Shu being two names of that area)
+# Guangxi, Guizhou, Hainan, Ningxia, Sichuan, Shaanxi, and Yunnan;
+# most of Gansu; west Inner Mongolia; west Qinghai; and the Guangdong
+# counties Deqing, Enping, Kaiping, Luoding, Taishan, Xinxing,
+# Yangchun, Yangjiang, Yu'nan, and Yunfu.
+Zone	Asia/Chongqing	7:06:20	-	LMT	1928 # or Chungking
+			7:00	-	LONT	1980 May # Long-shu Time
+			8:00	PRC	C%sT
+# Xin-zang Time ("Xinjiang-Tibet Time")
+# The Gansu counties Aksay, Anxi, Dunhuang, Subei; west Qinghai;
+# the Guangdong counties  Xuwen, Haikang, Suixi, Lianjiang,
+# Zhanjiang, Wuchuan, Huazhou, Gaozhou, Maoming, Dianbai, and Xinyi;
+# east Tibet, including Lhasa, Chamdo, Shigaise, Jimsar, Shawan and Hutubi;
+# east Xinjiang, including Urumqi, Turpan, Karamay, Korla, Minfeng, Jinghe,
+# Wusu, Qiemo, Xinyan, Wulanwusu, Jinghe, Yumin, Tacheng, Tuoli, Emin,
+# Shihezi, Changji, Yanqi, Heshuo, Tuokexun, Tulufan, Shanshan, Hami,
+# Fukang, Kuitun, Kumukuli, Miquan, Qitai, and Turfan.
+Zone	Asia/Urumqi	5:50:20	-	LMT	1928 # or Urumchi
+			6:00	-	URUT	1980 May # Urumqi Time
+			8:00	PRC	C%sT
+# Kunlun Time
+# West Tibet, including Pulan, Aheqi, Shufu, Shule;
+# West Xinjiang, including Aksu, Atushi, Yining, Hetian, Cele, Luopu, Nileke,
+# Zhaosu, Tekesi, Gongliu, Chabuchaer, Huocheng, Bole, Pishan, Suiding,
+# and Yarkand.
+
+# From Luther Ma (2009-10-17):
+# Almost all (>99.9%) ethnic Chinese (properly ethnic Han) living in
+# Xinjiang use Chinese Standard Time. Some are aware of Xinjiang time,
+# but have no need of it. All planes, trains, and schools function on
+# what is called "Beijing time." When Han make an appointment in Chinese
+# they implicitly use Beijing time.
+#
+# On the other hand, ethnic Uyghurs, who make up about half the
+# population of Xinjiang, typically use "Xinjiang time" which is two
+# hours behind Beijing time, or UTC +0600. The government of the Xinjiang
+# Uyghur Autonomous Region, (XAUR, or just Xinjiang for short) as well as
+# local governments such as the Urumqi city government use both times in
+# publications, referring to what is popularly called Xinjiang time as
+# "Urumqi time." When Uyghurs make an appointment in the Uyghur language
+# they almost invariably use Xinjiang time.
+#
+# (Their ethnic Han compatriots would typically have no clue of its
+# widespread use, however, because so extremely few of them are fluent in
+# Uyghur, comparable to the number of Anglo-Americans fluent in Navajo.)
+#
+# (...As with the rest of China there was a brief interval ending in 1990
+# or 1991 when summer time was in use.  The confusion was severe, with
+# the province not having dual times but four times in use at the same
+# time. Some areas remained on standard Xinjiang time or Beijing time and
+# others moving their clocks ahead.)
+#
+# ...an example of an official website using of Urumqi time.
+#
+# The first few lines of the Google translation of
+# <a href="http://www.fjysgl.gov.cn/show.aspx?id=2379&cid=39">
+# http://www.fjysgl.gov.cn/show.aspx?id=2379&cid=39
+# </a>
+# (retrieved 2009-10-13)
+# > Urumqi fire seven people are missing the alleged losses of at least
+# > 500 million yuan
+# >
+# > (Reporter Dong Liu) the day before 20:20 or so (Urumqi Time 18:20),
+# > Urumqi City Department of International Plaza Luther Qiantang River
+# > burst fire. As of yesterday, 18:30, Urumqi City Fire officers and men
+# > have worked continuously for 22 hours...
+
+# From Luther Ma (2009-11-19):
+# With the risk of being redundant to previous answers these are the most common
+# English "transliterations" (w/o using non-English symbols):
+#
+# 1. Wulumuqi...
+# 2. Kashi...
+# 3. Urumqi...
+# 4. Kashgar...
+# ...
+# 5. It seems that Uyghurs in Urumqi has been using Xinjiang since at least the
+# 1960's. I know of one Han, now over 50, who grew up in the surrounding
+# countryside and used Xinjiang time as a child.
+#
+# 6. Likewise for Kashgar and the rest of south Xinjiang I don't know of any
+# start date for Xinjiang time.
+#
+# Without having access to local historical records, nor the ability to legally
+# publish them, I would go with October 1, 1949, when Xinjiang became the Uyghur
+# Autonomous Region under the PRC. (Before that Uyghurs, of course, would also
+# not be using Beijing time, but some local time.)
+
+Zone	Asia/Kashgar	5:03:56	-	LMT	1928 # or Kashi or Kaxgar
+			5:30	-	KAST	1940	 # Kashgar Time
+			5:00	-	KAST	1980 May
+			8:00	PRC	C%sT
+
+
+# From Lee Yiu Chung (2009-10-24):
+# I found there are some mistakes for the...DST rule for Hong
+# Kong. [According] to the DST record from Hong Kong Observatory (actually,
+# it is not [an] observatory, but the official meteorological agency of HK,
+# and also serves as the official timing agency), there are some missing
+# and incorrect rules. Although the exact switch over time is missing, I
+# think 3:30 is correct. The official DST record for Hong Kong can be
+# obtained from
+# <a href="http://www.hko.gov.hk/gts/time/Summertime.htm">
+# http://www.hko.gov.hk/gts/time/Summertime.htm
+# </a>.
+
+# From Arthur David Olson (2009-10-28):
+# Here are the dates given at
+# <a href="http://www.hko.gov.hk/gts/time/Summertime.htm">
+# http://www.hko.gov.hk/gts/time/Summertime.htm
+# </a>
+# as of 2009-10-28:
+# Year        Period
+# 1941        1 Apr to 30 Sep
+# 1942        Whole year 
+# 1943        Whole year
+# 1944        Whole year
+# 1945        Whole year
+# 1946        20 Apr to 1 Dec
+# 1947        13 Apr to 30 Dec
+# 1948        2 May to 31 Oct
+# 1949        3 Apr to 30 Oct
+# 1950        2 Apr to 29 Oct
+# 1951        1 Apr to 28 Oct
+# 1952        6 Apr to 25 Oct
+# 1953        5 Apr to 1 Nov
+# 1954        21 Mar to 31 Oct
+# 1955        20 Mar to 6 Nov
+# 1956        18 Mar to 4 Nov
+# 1957        24 Mar to 3 Nov
+# 1958        23 Mar to 2 Nov
+# 1959        22 Mar to 1 Nov
+# 1960        20 Mar to 6 Nov
+# 1961        19 Mar to 5 Nov
+# 1962        18 Mar to 4 Nov
+# 1963        24 Mar to 3 Nov
+# 1964        22 Mar to 1 Nov
+# 1965        18 Apr to 17 Oct
+# 1966        17 Apr to 16 Oct
+# 1967        16 Apr to 22 Oct
+# 1968        21 Apr to 20 Oct
+# 1969        20 Apr to 19 Oct
+# 1970        19 Apr to 18 Oct
+# 1971        18 Apr to 17 Oct
+# 1972        16 Apr to 22 Oct
+# 1973        22 Apr to 21 Oct
+# 1973/74     30 Dec 73 to 20 Oct 74
+# 1975        20 Apr to 19 Oct
+# 1976        18 Apr to 17 Oct
+# 1977        Nil
+# 1978        Nil
+# 1979        13 May to 21 Oct
+# 1980 to Now Nil
+# The page does not give start or end times of day.
+# The page does not give a start date for 1942.
+# The page does not givw an end date for 1945.
+# The Japanese occupation of Hong Kong began on 1941-12-25.
+# The Japanese surrender of Hong Kong was signed 1945-09-15.
+# For lack of anything better, use start of those days as the transition times.
+
+# Hong Kong (Xianggang)
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	HK	1941	only	-	Apr	1	3:30	1:00	S
+Rule	HK	1941	only	-	Sep	30	3:30	0	-
+Rule	HK	1946	only	-	Apr	20	3:30	1:00	S
+Rule	HK	1946	only	-	Dec	1	3:30	0	-
+Rule	HK	1947	only	-	Apr	13	3:30	1:00	S
+Rule	HK	1947	only	-	Dec	30	3:30	0	-
+Rule	HK	1948	only	-	May	2	3:30	1:00	S
+Rule	HK	1948	1951	-	Oct	lastSun	3:30	0	-
+Rule	HK	1952	only	-	Oct	25	3:30	0	-
+Rule	HK	1949	1953	-	Apr	Sun>=1	3:30	1:00	S
+Rule	HK	1953	only	-	Nov	1	3:30	0	-
+Rule	HK	1954	1964	-	Mar	Sun>=18	3:30	1:00	S
+Rule	HK	1954	only	-	Oct	31	3:30	0	-
+Rule	HK	1955	1964	-	Nov	Sun>=1	3:30	0	-
+Rule	HK	1965	1977	-	Apr	Sun>=16	3:30	1:00	S
+Rule	HK	1965	1977	-	Oct	Sun>=16	3:30	0	-
+Rule	HK	1973	only	-	Dec	30	3:30	1:00	S
+Rule	HK	1979	only	-	May	Sun>=8	3:30	1:00	S
+Rule	HK	1979	only	-	Oct	Sun>=16	3:30	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Hong_Kong	7:36:36 -	LMT	1904 Oct 30
+			8:00	HK	HK%sT	1941 Dec 25
+			9:00	-	JST	1945 Sep 15
+			8:00	HK	HK%sT
+
+###############################################################################
+
+# Taiwan
+
+# Shanks & Pottenger write that Taiwan observed DST during 1945, when it
+# was still controlled by Japan.  This is hard to believe, but we don't
+# have any other information.
+
+# From smallufo (2010-04-03):
+# According to Taiwan's CWB,
+# <a href="http://www.cwb.gov.tw/V6/astronomy/cdata/summert.htm">
+# http://www.cwb.gov.tw/V6/astronomy/cdata/summert.htm
+# </a>
+# Taipei has DST in 1979 between July 1st and Sep 30.
+
+# From Arthur David Olson (2010-04-07):
+# Here's Google's translation of the table at the bottom of the "summert.htm" page:
+# Decade 	                                                    Name                      Start and end date
+# Republic of China 34 years to 40 years (AD 1945-1951 years) Summer Time               May 1 to September 30 
+# 41 years of the Republic of China (AD 1952)                 Daylight Saving Time      March 1 to October 31 
+# Republic of China 42 years to 43 years (AD 1953-1954 years) Daylight Saving Time      April 1 to October 31 
+# In the 44 years to 45 years (AD 1955-1956 years)            Daylight Saving Time      April 1 to September 30 
+# Republic of China 46 years to 48 years (AD 1957-1959)       Summer Time               April 1 to September 30 
+# Republic of China 49 years to 50 years (AD 1960-1961)       Summer Time               June 1 to September 30 
+# Republic of China 51 years to 62 years (AD 1962-1973 years) Stop Summer Time 
+# Republic of China 63 years to 64 years (1974-1975 AD)       Daylight Saving Time      April 1 to September 30 
+# Republic of China 65 years to 67 years (1976-1978 AD)       Stop Daylight Saving Time 
+# Republic of China 68 years (AD 1979)                        Daylight Saving Time      July 1 to September 30 
+# Republic of China since 69 years (AD 1980)                  Stop Daylight Saving Time
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Taiwan	1945	1951	-	May	1	0:00	1:00	D
+Rule	Taiwan	1945	1951	-	Oct	1	0:00	0	S
+Rule	Taiwan	1952	only	-	Mar	1	0:00	1:00	D
+Rule	Taiwan	1952	1954	-	Nov	1	0:00	0	S
+Rule	Taiwan	1953	1959	-	Apr	1	0:00	1:00	D
+Rule	Taiwan	1955	1961	-	Oct	1	0:00	0	S
+Rule	Taiwan	1960	1961	-	Jun	1	0:00	1:00	D
+Rule	Taiwan	1974	1975	-	Apr	1	0:00	1:00	D
+Rule	Taiwan	1974	1975	-	Oct	1	0:00	0	S
+Rule	Taiwan	1979	only	-	Jun	30	0:00	1:00	D
+Rule	Taiwan	1979	only	-	Sep	30	0:00	0	S
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Taipei	8:06:00 -	LMT	1896 # or Taibei or T'ai-pei
+			8:00	Taiwan	C%sT
+
+# Macau (Macao, Aomen)
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Macau	1961	1962	-	Mar	Sun>=16	3:30	1:00	S
+Rule	Macau	1961	1964	-	Nov	Sun>=1	3:30	0	-
+Rule	Macau	1963	only	-	Mar	Sun>=16	0:00	1:00	S
+Rule	Macau	1964	only	-	Mar	Sun>=16	3:30	1:00	S
+Rule	Macau	1965	only	-	Mar	Sun>=16	0:00	1:00	S
+Rule	Macau	1965	only	-	Oct	31	0:00	0	-
+Rule	Macau	1966	1971	-	Apr	Sun>=16	3:30	1:00	S
+Rule	Macau	1966	1971	-	Oct	Sun>=16	3:30	0	-
+Rule	Macau	1972	1974	-	Apr	Sun>=15	0:00	1:00	S
+Rule	Macau	1972	1973	-	Oct	Sun>=15	0:00	0	-
+Rule	Macau	1974	1977	-	Oct	Sun>=15	3:30	0	-
+Rule	Macau	1975	1977	-	Apr	Sun>=15	3:30	1:00	S
+Rule	Macau	1978	1980	-	Apr	Sun>=15	0:00	1:00	S
+Rule	Macau	1978	1980	-	Oct	Sun>=15	0:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Macau	7:34:20 -	LMT	1912
+			8:00	Macau	MO%sT	1999 Dec 20 # return to China
+			8:00	PRC	C%sT
+
+
+###############################################################################
+
+# Cyprus
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Cyprus	1975	only	-	Apr	13	0:00	1:00	S
+Rule	Cyprus	1975	only	-	Oct	12	0:00	0	-
+Rule	Cyprus	1976	only	-	May	15	0:00	1:00	S
+Rule	Cyprus	1976	only	-	Oct	11	0:00	0	-
+Rule	Cyprus	1977	1980	-	Apr	Sun>=1	0:00	1:00	S
+Rule	Cyprus	1977	only	-	Sep	25	0:00	0	-
+Rule	Cyprus	1978	only	-	Oct	2	0:00	0	-
+Rule	Cyprus	1979	1997	-	Sep	lastSun	0:00	0	-
+Rule	Cyprus	1981	1998	-	Mar	lastSun	0:00	1:00	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Nicosia	2:13:28 -	LMT	1921 Nov 14
+			2:00	Cyprus	EE%sT	1998 Sep
+			2:00	EUAsia	EE%sT
+# IATA SSIM (1998-09) has Cyprus using EU rules for the first time.
+
+# Classically, Cyprus belongs to Asia; e.g. see Herodotus, Histories, I.72.
+# However, for various reasons many users expect to find it under Europe.
+Link	Asia/Nicosia	Europe/Nicosia
+
+# Georgia
+# From Paul Eggert (1994-11-19):
+# Today's _Economist_ (p 60) reports that Georgia moved its clocks forward
+# an hour recently, due to a law proposed by Zurab Murvanidze,
+# an MP who went on a hunger strike for 11 days to force discussion about it!
+# We have no details, but we'll guess they didn't move the clocks back in fall.
+#
+# From Mathew Englander, quoting AP (1996-10-23 13:05-04):
+# Instead of putting back clocks at the end of October, Georgia
+# will stay on daylight savings time this winter to save energy,
+# President Eduard Shevardnadze decreed Wednesday.
+#
+# From the BBC via Joseph S. Myers (2004-06-27):
+#
+# Georgia moved closer to Western Europe on Sunday...  The former Soviet
+# republic has changed its time zone back to that of Moscow.  As a result it
+# is now just four hours ahead of Greenwich Mean Time, rather than five hours
+# ahead.  The switch was decreed by the pro-Western president of Georgia,
+# Mikhail Saakashvili, who said the change was partly prompted by the process
+# of integration into Europe.
+
+# From Teimuraz Abashidze (2005-11-07):
+# Government of Georgia ... decided to NOT CHANGE daylight savings time on
+# [Oct.] 30, as it was done before during last more than 10 years.
+# Currently, we are in fact GMT +4:00, as before 30 October it was GMT
+# +3:00.... The problem is, there is NO FORMAL LAW or governmental document
+# about it.  As far as I can find, I was told, that there is no document,
+# because we just DIDN'T ISSUE document about switching to winter time....
+# I don't know what can be done, especially knowing that some years ago our
+# DST rules where changed THREE TIMES during one month.
+
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Tbilisi	2:59:16 -	LMT	1880
+			2:59:16	-	TBMT	1924 May  2 # Tbilisi Mean Time
+			3:00	-	TBIT	1957 Mar    # Tbilisi Time
+			4:00 RussiaAsia TBI%sT	1991 Mar 31 2:00s
+			3:00	1:00	TBIST	1991 Apr  9 # independence
+			3:00 RussiaAsia GE%sT	1992 # Georgia Time
+			3:00 E-EurAsia	GE%sT	1994 Sep lastSun
+			4:00 E-EurAsia	GE%sT	1996 Oct lastSun
+			4:00	1:00	GEST	1997 Mar lastSun
+			4:00 E-EurAsia	GE%sT	2004 Jun 27
+			3:00 RussiaAsia	GE%sT	2005 Mar lastSun 2:00
+			4:00	-	GET
+
+# East Timor
+
+# See Indonesia for the 1945 transition.
+
+# From Joao Carrascalao, brother of the former governor of East Timor, in
+# <a href="http://etan.org/et99c/december/26-31/30ETMAY.htm">
+# East Timor may be late for its millennium
+# </a> (1999-12-26/31):
+# Portugal tried to change the time forward in 1974 because the sun
+# rises too early but the suggestion raised a lot of problems with the
+# Timorese and I still don't think it would work today because it
+# conflicts with their way of life.
+
+# From Paul Eggert (2000-12-04):
+# We don't have any record of the above attempt.
+# Most likely our records are incomplete, but we have no better data.
+
+# <a href="http://www.hri.org/news/world/undh/last/00-08-16.undh.html">
+# From Manoel de Almeida e Silva, Deputy Spokesman for the UN Secretary-General
+# (2000-08-16)</a>:
+# The Cabinet of the East Timor Transition Administration decided
+# today to advance East Timor's time by one hour.  The time change,
+# which will be permanent, with no seasonal adjustment, will happen at
+# midnight on Saturday, September 16.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Dili	8:22:20 -	LMT	1912
+			8:00	-	TLT	1942 Feb 21 23:00 # E Timor Time
+			9:00	-	JST	1945 Sep 23
+			9:00	-	TLT	1976 May  3
+			8:00	-	CIT	2000 Sep 17 00:00
+			9:00	-	TLT
+
+# India
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Kolkata	5:53:28 -	LMT	1880	# Kolkata
+			5:53:20	-	HMT	1941 Oct    # Howrah Mean Time?
+			6:30	-	BURT	1942 May 15 # Burma Time
+			5:30	-	IST	1942 Sep
+			5:30	1:00	IST	1945 Oct 15
+			5:30	-	IST
+# The following are like Asia/Kolkata:
+#	Andaman Is
+#	Lakshadweep (Laccadive, Minicoy and Amindivi Is)
+#	Nicobar Is
+
+# Indonesia
+#
+# From Gwillim Law (2001-05-28), overriding Shanks & Pottenger:
+# <http://www.sumatera-inc.com/go_to_invest/about_indonesia.asp#standtime>
+# says that Indonesia's time zones changed on 1988-01-01.  Looking at some
+# time zone maps, I think that must refer to Western Borneo (Kalimantan Barat
+# and Kalimantan Tengah) switching from UTC+8 to UTC+7.
+#
+# From Paul Eggert (2007-03-10):
+# Here is another correction to Shanks & Pottenger.
+# JohnTWB writes that Japanese forces did not surrender control in
+# Indonesia until 1945-09-01 00:00 at the earliest (in Jakarta) and
+# other formal surrender ceremonies were September 9, 11, and 13, plus
+# September 12 for the regional surrender to Mountbatten in Singapore.
+# These would be the earliest possible times for a change.
+# Regimes horaires pour le monde entier, by Henri Le Corre, (Editions
+# Traditionnelles, 1987, Paris) says that Java and Madura switched
+# from JST to UTC+07:30 on 1945-09-23, and gives 1944-09-01 for Jayapura
+# (Hollandia).  For now, assume all Indonesian locations other than Jayapura
+# switched on 1945-09-23.
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Asia/Jakarta	7:07:12 -	LMT	1867 Aug 10
+# Shanks & Pottenger say the next transition was at 1924 Jan 1 0:13,
+# but this must be a typo.
+			7:07:12	-	JMT	1923 Dec 31 23:47:12 # Jakarta
+			7:20	-	JAVT	1932 Nov	 # Java Time
+			7:30	-	WIT	1942 Mar 23
+			9:00	-	JST	1945 Sep 23
+			7:30	-	WIT	1948 May
+			8:00	-	WIT	1950 May
+			7:30	-	WIT	1964
+			7:00	-	WIT
+Zone Asia/Pontianak	7:17:20	-	LMT	1908 May
+			7:17:20	-	PMT	1932 Nov    # Pontianak MT
+			7:30	-	WIT	1942 Jan 29
+			9:00	-	JST	1945 Sep 23
+			7:30	-	WIT	1948 May
+			8:00	-	WIT	1950 May
+			7:30	-	WIT	1964
+			8:00	-	CIT	1988 Jan  1
+			7:00	-	WIT
+Zone Asia/Makassar	7:57:36 -	LMT	1920
+			7:57:36	-	MMT	1932 Nov    # Macassar MT
+			8:00	-	CIT	1942 Feb  9
+			9:00	-	JST	1945 Sep 23
+			8:00	-	CIT
+Zone Asia/Jayapura	9:22:48 -	LMT	1932 Nov
+			9:00	-	EIT	1944 Sep  1
+			9:30	-	CST	1964
+			9:00	-	EIT
+
+# Iran
+
+# From Roozbeh Pournader (2003-03-15):
+# This is an English translation of what I just found (originally in Persian).
+# The Gregorian dates in brackets are mine:
+#
+#	Official Newspaper No. 13548-1370/6/25 [1991-09-16]
+#	No. 16760/T233 H				1370/6/10 [1991-09-01]
+#
+#	The Rule About Change of the Official Time of the Country
+#
+#	The Board of Ministers, in the meeting dated 1370/5/23 [1991-08-14],
+#	based on the suggestion number 2221/D dated 1370/4/22 [1991-07-13]
+#	of the Country's Organization for Official and Employment Affairs,
+#	and referring to the law for equating the working hours of workers
+#	and officers in the whole country dated 1359/4/23 [1980-07-14], and
+#	for synchronizing the official times of the country, agreed that:
+#
+#	The official time of the country will should move forward one hour
+#	at the 24[:00] hours of the first day of Farvardin and should return
+#	to its previous state at the 24[:00] hours of the 30th day of
+#	Shahrivar.
+#
+#	First Deputy to the President - Hassan Habibi
+#
+# From personal experience, that agrees with what has been followed
+# for at least the last 5 years.  Before that, for a few years, the
+# date used was the first Thursday night of Farvardin and the last
+# Thursday night of Shahrivar, but I can't give exact dates....
+# I have also changed the abbreviations to what is considered correct
+# here in Iran, IRST for regular time and IRDT for daylight saving time.
+#
+# From Roozbeh Pournader (2005-04-05):
+# The text of the Iranian law, in effect since 1925, clearly mentions
+# that the true solar year is the measure, and there is no arithmetic
+# leap year calculation involved.  There has never been any serious
+# plan to change that law....
+#
+# From Paul Eggert (2006-03-22):
+# Go with Shanks & Pottenger before Sept. 1991, and with Pournader thereafter.
+# I used Ed Reingold's cal-persia in GNU Emacs 21.2 to check Persian dates,
+# stopping after 2037 when 32-bit time_t's overflow.
+# That cal-persia used Birashk's approximation, which disagrees with the solar
+# calendar predictions for the year 2025, so I corrected those dates by hand.
+#
+# From Oscar van Vlijmen (2005-03-30), writing about future
+# discrepancies between cal-persia and the Iranian calendar:
+# For 2091 solar-longitude-after yields 2091-03-20 08:40:07.7 UT for
+# the vernal equinox and that gets so close to 12:00 some local
+# Iranian time that the definition of the correct location needs to be
+# known exactly, amongst other factors.  2157 is even closer:
+# 2157-03-20 08:37:15.5 UT.  But the Gregorian year 2025 should give
+# no interpretation problem whatsoever.  By the way, another instant
+# in the near future where there will be a discrepancy between
+# arithmetical and astronomical Iranian calendars will be in 2058:
+# vernal equinox on 2058-03-20 09:03:05.9 UT.  The Java version of
+# Reingold's/Dershowitz' calculator gives correctly the Gregorian date
+# 2058-03-21 for 1 Farvardin 1437 (astronomical).
+#
+# From Steffen Thorsen (2006-03-22):
+# Several of my users have reported that Iran will not observe DST anymore:
+# http://www.irna.ir/en/news/view/line-17/0603193812164948.htm
+#
+# From Reuters (2007-09-16), with a heads-up from Jesper Norgaard Welen:
+# ... the Guardian Council ... approved a law on Sunday to re-introduce
+# daylight saving time ...
+# http://uk.reuters.com/article/oilRpt/idUKBLA65048420070916
+#
+# From Roozbeh Pournader (2007-11-05):
+# This is quoted from Official Gazette of the Islamic Republic of
+# Iran, Volume 63, Number 18242, dated Tuesday 1386/6/24
+# [2007-10-16]. I am doing the best translation I can:...
+# The official time of the country will be moved forward for one hour
+# on the 24 hours of the first day of the month of Farvardin and will
+# be changed back to its previous state on the 24 hours of the
+# thirtieth day of Shahrivar.
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Iran	1978	1980	-	Mar	21	0:00	1:00	D
+Rule	Iran	1978	only	-	Oct	21	0:00	0	S
+Rule	Iran	1979	only	-	Sep	19	0:00	0	S
+Rule	Iran	1980	only	-	Sep	23	0:00	0	S
+Rule	Iran	1991	only	-	May	 3	0:00	1:00	D
+Rule	Iran	1992	1995	-	Mar	22	0:00	1:00	D
+Rule	Iran	1991	1995	-	Sep	22	0:00	0	S
+Rule	Iran	1996	only	-	Mar	21	0:00	1:00	D
+Rule	Iran	1996	only	-	Sep	21	0:00	0	S
+Rule	Iran	1997	1999	-	Mar	22	0:00	1:00	D
+Rule	Iran	1997	1999	-	Sep	22	0:00	0	S
+Rule	Iran	2000	only	-	Mar	21	0:00	1:00	D
+Rule	Iran	2000	only	-	Sep	21	0:00	0	S
+Rule	Iran	2001	2003	-	Mar	22	0:00	1:00	D
+Rule	Iran	2001	2003	-	Sep	22	0:00	0	S
+Rule	Iran	2004	only	-	Mar	21	0:00	1:00	D
+Rule	Iran	2004	only	-	Sep	21	0:00	0	S
+Rule	Iran	2005	only	-	Mar	22	0:00	1:00	D
+Rule	Iran	2005	only	-	Sep	22	0:00	0	S
+Rule	Iran	2008	only	-	Mar	21	0:00	1:00	D
+Rule	Iran	2008	only	-	Sep	21	0:00	0	S
+Rule	Iran	2009	2011	-	Mar	22	0:00	1:00	D
+Rule	Iran	2009	2011	-	Sep	22	0:00	0	S
+Rule	Iran	2012	only	-	Mar	21	0:00	1:00	D
+Rule	Iran	2012	only	-	Sep	21	0:00	0	S
+Rule	Iran	2013	2015	-	Mar	22	0:00	1:00	D
+Rule	Iran	2013	2015	-	Sep	22	0:00	0	S
+Rule	Iran	2016	only	-	Mar	21	0:00	1:00	D
+Rule	Iran	2016	only	-	Sep	21	0:00	0	S
+Rule	Iran	2017	2019	-	Mar	22	0:00	1:00	D
+Rule	Iran	2017	2019	-	Sep	22	0:00	0	S
+Rule	Iran	2020	only	-	Mar	21	0:00	1:00	D
+Rule	Iran	2020	only	-	Sep	21	0:00	0	S
+Rule	Iran	2021	2023	-	Mar	22	0:00	1:00	D
+Rule	Iran	2021	2023	-	Sep	22	0:00	0	S
+Rule	Iran	2024	only	-	Mar	21	0:00	1:00	D
+Rule	Iran	2024	only	-	Sep	21	0:00	0	S
+Rule	Iran	2025	2027	-	Mar	22	0:00	1:00	D
+Rule	Iran	2025	2027	-	Sep	22	0:00	0	S
+Rule	Iran	2028	2029	-	Mar	21	0:00	1:00	D
+Rule	Iran	2028	2029	-	Sep	21	0:00	0	S
+Rule	Iran	2030	2031	-	Mar	22	0:00	1:00	D
+Rule	Iran	2030	2031	-	Sep	22	0:00	0	S
+Rule	Iran	2032	2033	-	Mar	21	0:00	1:00	D
+Rule	Iran	2032	2033	-	Sep	21	0:00	0	S
+Rule	Iran	2034	2035	-	Mar	22	0:00	1:00	D
+Rule	Iran	2034	2035	-	Sep	22	0:00	0	S
+Rule	Iran	2036	2037	-	Mar	21	0:00	1:00	D
+Rule	Iran	2036	2037	-	Sep	21	0:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Tehran	3:25:44	-	LMT	1916
+			3:25:44	-	TMT	1946	# Tehran Mean Time
+			3:30	-	IRST	1977 Nov
+			4:00	Iran	IR%sT	1979
+			3:30	Iran	IR%sT
+
+
+# Iraq
+#
+# From Jonathan Lennox (2000-06-12):
+# An article in this week's Economist ("Inside the Saddam-free zone", p. 50 in
+# the U.S. edition) on the Iraqi Kurds contains a paragraph:
+# "The three northern provinces ... switched their clocks this spring and
+# are an hour ahead of Baghdad."
+#
+# But Rives McDow (2000-06-18) quotes a contact in Iraqi-Kurdistan as follows:
+# In the past, some Kurdish nationalists, as a protest to the Iraqi
+# Government, did not adhere to daylight saving time.  They referred
+# to daylight saving as Saddam time.  But, as of today, the time zone
+# in Iraqi-Kurdistan is on standard time with Baghdad, Iraq.
+#
+# So we'll ignore the Economist's claim.
+
+# From Steffen Thorsen (2008-03-10):
+# The cabinet in Iraq abolished DST last week, according to the following
+# news sources (in Arabic):
+# <a href="http://www.aljeeran.net/wesima_articles/news-20080305-98602.html">
+# http://www.aljeeran.net/wesima_articles/news-20080305-98602.html
+# </a>
+# <a href="http://www.aswataliraq.info/look/article.tpl?id=2047&IdLanguage=17&IdPublication=4&NrArticle=71743&NrIssue=1&NrSection=10">
+# http://www.aswataliraq.info/look/article.tpl?id=2047&IdLanguage=17&IdPublication=4&NrArticle=71743&NrIssue=1&NrSection=10
+# </a>
+#
+# We have published a short article in English about the change:
+# <a href="http://www.timeanddate.com/news/time/iraq-dumps-daylight-saving.html">
+# http://www.timeanddate.com/news/time/iraq-dumps-daylight-saving.html
+# </a>
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Iraq	1982	only	-	May	1	0:00	1:00	D
+Rule	Iraq	1982	1984	-	Oct	1	0:00	0	S
+Rule	Iraq	1983	only	-	Mar	31	0:00	1:00	D
+Rule	Iraq	1984	1985	-	Apr	1	0:00	1:00	D
+Rule	Iraq	1985	1990	-	Sep	lastSun	1:00s	0	S
+Rule	Iraq	1986	1990	-	Mar	lastSun	1:00s	1:00	D
+# IATA SSIM (1991/1996) says Apr 1 12:01am UTC; guess the `:01' is a typo.
+# Shanks & Pottenger say Iraq did not observe DST 1992/1997; ignore this.
+#
+Rule	Iraq	1991	2007	-	Apr	 1	3:00s	1:00	D
+Rule	Iraq	1991	2007	-	Oct	 1	3:00s	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Baghdad	2:57:40	-	LMT	1890
+			2:57:36	-	BMT	1918	    # Baghdad Mean Time?
+			3:00	-	AST	1982 May
+			3:00	Iraq	A%sT
+
+
+###############################################################################
+
+# Israel
+
+# From Ephraim Silverberg (2001-01-11):
+#
+# I coined "IST/IDT" circa 1988.  Until then there were three
+# different abbreviations in use:
+#
+# JST  Jerusalem Standard Time [Danny Braniss, Hebrew University]
+# IZT  Israel Zonal (sic) Time [Prof. Haim Papo, Technion]
+# EEST Eastern Europe Standard Time [used by almost everyone else]
+#
+# Since timezones should be called by country and not capital cities,
+# I ruled out JST.  As Israel is in Asia Minor and not Eastern Europe,
+# EEST was equally unacceptable.  Since "zonal" was not compatible with
+# any other timezone abbreviation, I felt that 'IST' was the way to go
+# and, indeed, it has received almost universal acceptance in timezone
+# settings in Israeli computers.
+#
+# In any case, I am happy to share timezone abbreviations with India,
+# high on my favorite-country list (and not only because my wife's
+# family is from India).
+
+# From Shanks & Pottenger:
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Zion	1940	only	-	Jun	 1	0:00	1:00	D
+Rule	Zion	1942	1944	-	Nov	 1	0:00	0	S
+Rule	Zion	1943	only	-	Apr	 1	2:00	1:00	D
+Rule	Zion	1944	only	-	Apr	 1	0:00	1:00	D
+Rule	Zion	1945	only	-	Apr	16	0:00	1:00	D
+Rule	Zion	1945	only	-	Nov	 1	2:00	0	S
+Rule	Zion	1946	only	-	Apr	16	2:00	1:00	D
+Rule	Zion	1946	only	-	Nov	 1	0:00	0	S
+Rule	Zion	1948	only	-	May	23	0:00	2:00	DD
+Rule	Zion	1948	only	-	Sep	 1	0:00	1:00	D
+Rule	Zion	1948	1949	-	Nov	 1	2:00	0	S
+Rule	Zion	1949	only	-	May	 1	0:00	1:00	D
+Rule	Zion	1950	only	-	Apr	16	0:00	1:00	D
+Rule	Zion	1950	only	-	Sep	15	3:00	0	S
+Rule	Zion	1951	only	-	Apr	 1	0:00	1:00	D
+Rule	Zion	1951	only	-	Nov	11	3:00	0	S
+Rule	Zion	1952	only	-	Apr	20	2:00	1:00	D
+Rule	Zion	1952	only	-	Oct	19	3:00	0	S
+Rule	Zion	1953	only	-	Apr	12	2:00	1:00	D
+Rule	Zion	1953	only	-	Sep	13	3:00	0	S
+Rule	Zion	1954	only	-	Jun	13	0:00	1:00	D
+Rule	Zion	1954	only	-	Sep	12	0:00	0	S
+Rule	Zion	1955	only	-	Jun	11	2:00	1:00	D
+Rule	Zion	1955	only	-	Sep	11	0:00	0	S
+Rule	Zion	1956	only	-	Jun	 3	0:00	1:00	D
+Rule	Zion	1956	only	-	Sep	30	3:00	0	S
+Rule	Zion	1957	only	-	Apr	29	2:00	1:00	D
+Rule	Zion	1957	only	-	Sep	22	0:00	0	S
+Rule	Zion	1974	only	-	Jul	 7	0:00	1:00	D
+Rule	Zion	1974	only	-	Oct	13	0:00	0	S
+Rule	Zion	1975	only	-	Apr	20	0:00	1:00	D
+Rule	Zion	1975	only	-	Aug	31	0:00	0	S
+Rule	Zion	1985	only	-	Apr	14	0:00	1:00	D
+Rule	Zion	1985	only	-	Sep	15	0:00	0	S
+Rule	Zion	1986	only	-	May	18	0:00	1:00	D
+Rule	Zion	1986	only	-	Sep	 7	0:00	0	S
+Rule	Zion	1987	only	-	Apr	15	0:00	1:00	D
+Rule	Zion	1987	only	-	Sep	13	0:00	0	S
+Rule	Zion	1988	only	-	Apr	 9	0:00	1:00	D
+Rule	Zion	1988	only	-	Sep	 3	0:00	0	S
+
+# From Ephraim Silverberg
+# (1997-03-04, 1998-03-16, 1998-12-28, 2000-01-17, 2000-07-25, 2004-12-22,
+# and 2005-02-17):
+
+# According to the Office of the Secretary General of the Ministry of
+# Interior, there is NO set rule for Daylight-Savings/Standard time changes.
+# One thing is entrenched in law, however: that there must be at least 150
+# days of daylight savings time annually.  From 1993-1998, the change to
+# daylight savings time was on a Friday morning from midnight IST to
+# 1 a.m IDT; up until 1998, the change back to standard time was on a
+# Saturday night from midnight daylight savings time to 11 p.m. standard
+# time.  1996 is an exception to this rule where the change back to standard
+# time took place on Sunday night instead of Saturday night to avoid
+# conflicts with the Jewish New Year.  In 1999, the change to
+# daylight savings time was still on a Friday morning but from
+# 2 a.m. IST to 3 a.m. IDT; furthermore, the change back to standard time
+# was also on a Friday morning from 2 a.m. IDT to 1 a.m. IST for
+# 1999 only.  In the year 2000, the change to daylight savings time was
+# similar to 1999, but although the change back will be on a Friday, it
+# will take place from 1 a.m. IDT to midnight IST.  Starting in 2001, all
+# changes to/from will take place at 1 a.m. old time, but now there is no
+# rule as to what day of the week it will take place in as the start date
+# (except in 2003) is the night after the Passover Seder (i.e. the eve
+# of the 16th of Nisan in the lunar Hebrew calendar) and the end date
+# (except in 2002) is three nights before Yom Kippur [Day of Atonement]
+# (the eve of the 7th of Tishrei in the lunar Hebrew calendar).
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Zion	1989	only	-	Apr	30	0:00	1:00	D
+Rule	Zion	1989	only	-	Sep	 3	0:00	0	S
+Rule	Zion	1990	only	-	Mar	25	0:00	1:00	D
+Rule	Zion	1990	only	-	Aug	26	0:00	0	S
+Rule	Zion	1991	only	-	Mar	24	0:00	1:00	D
+Rule	Zion	1991	only	-	Sep	 1	0:00	0	S
+Rule	Zion	1992	only	-	Mar	29	0:00	1:00	D
+Rule	Zion	1992	only	-	Sep	 6	0:00	0	S
+Rule	Zion	1993	only	-	Apr	 2	0:00	1:00	D
+Rule	Zion	1993	only	-	Sep	 5	0:00	0	S
+
+# The dates for 1994-1995 were obtained from Office of the Spokeswoman for the
+# Ministry of Interior, Jerusalem, Israel.  The spokeswoman can be reached by
+# calling the office directly at 972-2-6701447 or 972-2-6701448.
+
+# Rule	NAME    FROM    TO      TYPE    IN      ON      AT      SAVE    LETTER/S
+Rule	Zion	1994	only	-	Apr	 1	0:00	1:00	D
+Rule	Zion	1994	only	-	Aug	28	0:00	0	S
+Rule	Zion	1995	only	-	Mar	31	0:00	1:00	D
+Rule	Zion	1995	only	-	Sep	 3	0:00	0	S
+
+# The dates for 1996 were determined by the Minister of Interior of the
+# time, Haim Ramon.  The official announcement regarding 1996-1998
+# (with the dates for 1997-1998 no longer being relevant) can be viewed at:
+#
+#   ftp://ftp.cs.huji.ac.il/pub/tz/announcements/1996-1998.ramon.ps.gz
+#
+# The dates for 1997-1998 were altered by his successor, Rabbi Eli Suissa.
+#
+# The official announcements for the years 1997-1999 can be viewed at:
+#
+#   ftp://ftp.cs.huji.ac.il/pub/tz/announcements/YYYY.ps.gz
+#
+#       where YYYY is the relevant year.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Zion	1996	only	-	Mar	15	0:00	1:00	D
+Rule	Zion	1996	only	-	Sep	16	0:00	0	S
+Rule	Zion	1997	only	-	Mar	21	0:00	1:00	D
+Rule	Zion	1997	only	-	Sep	14	0:00	0	S
+Rule	Zion	1998	only	-	Mar	20	0:00	1:00	D
+Rule	Zion	1998	only	-	Sep	 6	0:00	0	S
+Rule	Zion	1999	only	-	Apr	 2	2:00	1:00	D
+Rule	Zion	1999	only	-	Sep	 3	2:00	0	S
+
+# The Knesset Interior Committee has changed the dates for 2000 for
+# the third time in just over a year and have set new dates for the
+# years 2001-2004 as well.
+#
+# The official announcement for the start date of 2000 can be viewed at:
+#
+#	ftp://ftp.cs.huji.ac.il/pub/tz/announcements/2000-start.ps.gz
+#
+# The official announcement for the end date of 2000 and the dates
+# for the years 2001-2004 can be viewed at:
+#
+#	ftp://ftp.cs.huji.ac.il/pub/tz/announcements/2000-2004.ps.gz
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Zion	2000	only	-	Apr	14	2:00	1:00	D
+Rule	Zion	2000	only	-	Oct	 6	1:00	0	S
+Rule	Zion	2001	only	-	Apr	 9	1:00	1:00	D
+Rule	Zion	2001	only	-	Sep	24	1:00	0	S
+Rule	Zion	2002	only	-	Mar	29	1:00	1:00	D
+Rule	Zion	2002	only	-	Oct	 7	1:00	0	S
+Rule	Zion	2003	only	-	Mar	28	1:00	1:00	D
+Rule	Zion	2003	only	-	Oct	 3	1:00	0	S
+Rule	Zion	2004	only	-	Apr	 7	1:00	1:00	D
+Rule	Zion	2004	only	-	Sep	22	1:00	0	S
+
+# The proposed law agreed upon by the Knesset Interior Committee on
+# 2005-02-14 is that, for 2005 and beyond, DST starts at 02:00 the
+# last Friday before April 2nd (i.e. the last Friday in March or April
+# 1st itself if it falls on a Friday) and ends at 02:00 on the Saturday
+# night _before_ the fast of Yom Kippur.
+#
+# Those who can read Hebrew can view the announcement at:
+#
+#	ftp://ftp.cs.huji.ac.il/pub/tz/announcements/2005+beyond.ps
+
+# From Paul Eggert (2005-02-22):
+# I used Ephraim Silverberg's dst-israel.el program
+# <ftp://ftp.cs.huji.ac.il/pub/tz/software/dst-israel.el> (2005-02-20)
+# along with Ed Reingold's cal-hebrew in GNU Emacs 21.4,
+# to generate the transitions in this list.
+# (I replaced "lastFri" with "Fri>=26" by hand.)
+# The spring transitions below all correspond to the following Rule:
+#
+# Rule	Zion	2005	max	-	Mar	Fri>=26	2:00	1:00	D
+#
+# but older zic implementations (e.g., Solaris 8) do not support
+# "Fri>=26" to mean April 1 in years like 2005, so for now we list the
+# springtime transitions explicitly.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Zion	2005	only	-	Apr	 1	2:00	1:00	D
+Rule	Zion	2005	only	-	Oct	 9	2:00	0	S
+Rule	Zion	2006	2010	-	Mar	Fri>=26	2:00	1:00	D
+Rule	Zion	2006	only	-	Oct	 1	2:00	0	S
+Rule	Zion	2007	only	-	Sep	16	2:00	0	S
+Rule	Zion	2008	only	-	Oct	 5	2:00	0	S
+Rule	Zion	2009	only	-	Sep	27	2:00	0	S
+Rule	Zion	2010	only	-	Sep	12	2:00	0	S
+Rule	Zion	2011	only	-	Apr	 1	2:00	1:00	D
+Rule	Zion	2011	only	-	Oct	 2	2:00	0	S
+Rule	Zion	2012	2015	-	Mar	Fri>=26	2:00	1:00	D
+Rule	Zion	2012	only	-	Sep	23	2:00	0	S
+Rule	Zion	2013	only	-	Sep	 8	2:00	0	S
+Rule	Zion	2014	only	-	Sep	28	2:00	0	S
+Rule	Zion	2015	only	-	Sep	20	2:00	0	S
+Rule	Zion	2016	only	-	Apr	 1	2:00	1:00	D
+Rule	Zion	2016	only	-	Oct	 9	2:00	0	S
+Rule	Zion	2017	2021	-	Mar	Fri>=26	2:00	1:00	D
+Rule	Zion	2017	only	-	Sep	24	2:00	0	S
+Rule	Zion	2018	only	-	Sep	16	2:00	0	S
+Rule	Zion	2019	only	-	Oct	 6	2:00	0	S
+Rule	Zion	2020	only	-	Sep	27	2:00	0	S
+Rule	Zion	2021	only	-	Sep	12	2:00	0	S
+Rule	Zion	2022	only	-	Apr	 1	2:00	1:00	D
+Rule	Zion	2022	only	-	Oct	 2	2:00	0	S
+Rule	Zion	2023	2032	-	Mar	Fri>=26	2:00	1:00	D
+Rule	Zion	2023	only	-	Sep	24	2:00	0	S
+Rule	Zion	2024	only	-	Oct	 6	2:00	0	S
+Rule	Zion	2025	only	-	Sep	28	2:00	0	S
+Rule	Zion	2026	only	-	Sep	20	2:00	0	S
+Rule	Zion	2027	only	-	Oct	10	2:00	0	S
+Rule	Zion	2028	only	-	Sep	24	2:00	0	S
+Rule	Zion	2029	only	-	Sep	16	2:00	0	S
+Rule	Zion	2030	only	-	Oct	 6	2:00	0	S
+Rule	Zion	2031	only	-	Sep	21	2:00	0	S
+Rule	Zion	2032	only	-	Sep	12	2:00	0	S
+Rule	Zion	2033	only	-	Apr	 1	2:00	1:00	D
+Rule	Zion	2033	only	-	Oct	 2	2:00	0	S
+Rule	Zion	2034	2037	-	Mar	Fri>=26	2:00	1:00	D
+Rule	Zion	2034	only	-	Sep	17	2:00	0	S
+Rule	Zion	2035	only	-	Oct	 7	2:00	0	S
+Rule	Zion	2036	only	-	Sep	28	2:00	0	S
+Rule	Zion	2037	only	-	Sep	13	2:00	0	S
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Jerusalem	2:20:56 -	LMT	1880
+			2:20:40	-	JMT	1918	# Jerusalem Mean Time?
+			2:00	Zion	I%sT
+
+
+
+###############################################################################
+
+# Japan
+
+# `9:00' and `JST' is from Guy Harris.
+
+# From Paul Eggert (1995-03-06):
+# Today's _Asahi Evening News_ (page 4) reports that Japan had
+# daylight saving between 1948 and 1951, but ``the system was discontinued
+# because the public believed it would lead to longer working hours.''
+
+# From Mayumi Negishi in the 2005-08-10 Japan Times
+# <http://www.japantimes.co.jp/cgi-bin/getarticle.pl5?nn20050810f2.htm>:
+# Occupation authorities imposed daylight-saving time on Japan on
+# [1948-05-01]....  But lack of prior debate and the execution of
+# daylight-saving time just three days after the bill was passed generated
+# deep hatred of the concept....  The Diet unceremoniously passed a bill to
+# dump the unpopular system in October 1951, less than a month after the San
+# Francisco Peace Treaty was signed.  (A government poll in 1951 showed 53%
+# of the Japanese wanted to scrap daylight-saving time, as opposed to 30% who
+# wanted to keep it.)
+
+# From Paul Eggert (2006-03-22):
+# Shanks & Pottenger write that DST in Japan during those years was as follows:
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Japan	1948	only	-	May	Sun>=1	2:00	1:00	D
+Rule	Japan	1948	1951	-	Sep	Sat>=8	2:00	0	S
+Rule	Japan	1949	only	-	Apr	Sun>=1	2:00	1:00	D
+Rule	Japan	1950	1951	-	May	Sun>=1	2:00	1:00	D
+# but the only locations using it (for birth certificates, presumably, since
+# their audience is astrologers) were US military bases.  For now, assume
+# that for most purposes daylight-saving time was observed; otherwise, what
+# would have been the point of the 1951 poll?
+
+# From Hideyuki Suzuki (1998-11-09):
+# 'Tokyo' usually stands for the former location of Tokyo Astronomical
+# Observatory: E 139 44' 40".90 (9h 18m 58s.727), N 35 39' 16".0.
+# This data is from 'Rika Nenpyou (Chronological Scientific Tables) 1996'
+# edited by National Astronomical Observatory of Japan....
+# JST (Japan Standard Time) has been used since 1888-01-01 00:00 (JST).
+# The law is enacted on 1886-07-07.
+
+# From Hideyuki Suzuki (1998-11-16):
+# The ordinance No. 51 (1886) established "standard time" in Japan,
+# which stands for the time on E 135 degree.
+# In the ordinance No. 167 (1895), "standard time" was renamed to "central
+# standard time".  And the same ordinance also established "western standard
+# time", which stands for the time on E 120 degree....  But "western standard
+# time" was abolished in the ordinance No. 529 (1937).  In the ordinance No.
+# 167, there is no mention regarding for what place western standard time is
+# standard....
+#
+# I wrote "ordinance" above, but I don't know how to translate.
+# In Japanese it's "chokurei", which means ordinance from emperor.
+
+# Shanks & Pottenger claim JST in use since 1896, and that a few
+# places (e.g. Ishigaki) use +0800; go with Suzuki.  Guess that all
+# ordinances took effect on Jan 1.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Tokyo	9:18:59	-	LMT	1887 Dec 31 15:00u
+			9:00	-	JST	1896
+			9:00	-	CJT	1938
+			9:00	Japan	J%sT
+# Since 1938, all Japanese possessions have been like Asia/Tokyo.
+
+# Jordan
+#
+# From <a href="http://star.arabia.com/990701/JO9.html">
+# Jordan Week (1999-07-01) </a> via Steffen Thorsen (1999-09-09):
+# Clocks in Jordan were forwarded one hour on Wednesday at midnight,
+# in accordance with the government's decision to implement summer time
+# all year round.
+#
+# From <a href="http://star.arabia.com/990930/JO9.html">
+# Jordan Week (1999-09-30) </a> via Steffen Thorsen (1999-11-09):
+# Winter time starts today Thursday, 30 September. Clocks will be turned back
+# by one hour.  This is the latest government decision and it's final!
+# The decision was taken because of the increase in working hours in
+# government's departments from six to seven hours.
+#
+# From Paul Eggert (2005-11-22):
+# Starting 2003 transitions are from Steffen Thorsen's web site timeanddate.com.
+#
+# From Steffen Thorsen (2005-11-23):
+# For Jordan I have received multiple independent user reports every year
+# about DST end dates, as the end-rule is different every year.
+#
+# From Steffen Thorsen (2006-10-01), after a heads-up from Hilal Malawi:
+# http://www.petranews.gov.jo/nepras/2006/Sep/05/4000.htm
+# "Jordan will switch to winter time on Friday, October 27".
+#
+
+# From Phil Pizzey (2009-04-02):
+# ...I think I may have spotted an error in the timezone data for
+# Jordan.
+# The current (2009d) asia file shows Jordan going to daylight
+# saving
+# time on the last Thursday in March.
+#
+# Rule  Jordan      2000  max	-  Mar   lastThu     0:00s 1:00  S
+#
+# However timeanddate.com, which I usually find reliable, shows Jordan
+# going to daylight saving time on the last Friday in March since 2002.
+# Please see
+# <a href="http://www.timeanddate.com/worldclock/timezone.html?n=11">
+# http://www.timeanddate.com/worldclock/timezone.html?n=11
+# </a>
+
+# From Steffen Thorsen (2009-04-02):
+# This single one might be good enough, (2009-03-24, Arabic):
+# <a href="http://petra.gov.jo/Artical.aspx?Lng=2&Section=8&Artical=95279">
+# http://petra.gov.jo/Artical.aspx?Lng=2&Section=8&Artical=95279
+# </a>
+#
+# Google's translation:
+#
+# > The Council of Ministers decided in 2002 to adopt the principle of timely
+# > submission of the summer at 60 minutes as of midnight on the last Thursday
+# > of the month of March of each year.
+#
+# So - this means the midnight between Thursday and Friday since 2002.
+
+# From Arthur David Olson (2009-04-06):
+# We still have Jordan switching to DST on Thursdays in 2000 and 2001.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Jordan	1973	only	-	Jun	6	0:00	1:00	S
+Rule	Jordan	1973	1975	-	Oct	1	0:00	0	-
+Rule	Jordan	1974	1977	-	May	1	0:00	1:00	S
+Rule	Jordan	1976	only	-	Nov	1	0:00	0	-
+Rule	Jordan	1977	only	-	Oct	1	0:00	0	-
+Rule	Jordan	1978	only	-	Apr	30	0:00	1:00	S
+Rule	Jordan	1978	only	-	Sep	30	0:00	0	-
+Rule	Jordan	1985	only	-	Apr	1	0:00	1:00	S
+Rule	Jordan	1985	only	-	Oct	1	0:00	0	-
+Rule	Jordan	1986	1988	-	Apr	Fri>=1	0:00	1:00	S
+Rule	Jordan	1986	1990	-	Oct	Fri>=1	0:00	0	-
+Rule	Jordan	1989	only	-	May	8	0:00	1:00	S
+Rule	Jordan	1990	only	-	Apr	27	0:00	1:00	S
+Rule	Jordan	1991	only	-	Apr	17	0:00	1:00	S
+Rule	Jordan	1991	only	-	Sep	27	0:00	0	-
+Rule	Jordan	1992	only	-	Apr	10	0:00	1:00	S
+Rule	Jordan	1992	1993	-	Oct	Fri>=1	0:00	0	-
+Rule	Jordan	1993	1998	-	Apr	Fri>=1	0:00	1:00	S
+Rule	Jordan	1994	only	-	Sep	Fri>=15	0:00	0	-
+Rule	Jordan	1995	1998	-	Sep	Fri>=15	0:00s	0	-
+Rule	Jordan	1999	only	-	Jul	 1	0:00s	1:00	S
+Rule	Jordan	1999	2002	-	Sep	lastFri	0:00s	0	-
+Rule	Jordan	2000	2001	-	Mar	lastThu	0:00s	1:00	S
+Rule	Jordan	2002	max	-	Mar	lastThu	24:00	1:00	S
+Rule	Jordan	2003	only	-	Oct	24	0:00s	0	-
+Rule	Jordan	2004	only	-	Oct	15	0:00s	0	-
+Rule	Jordan	2005	only	-	Sep	lastFri	0:00s	0	-
+Rule	Jordan	2006	max	-	Oct	lastFri	0:00s	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Amman	2:23:44 -	LMT	1931
+			2:00	Jordan	EE%sT
+
+
+# Kazakhstan
+
+# From Paul Eggert (1996-11-22):
+# Andrew Evtichov (1996-04-13) writes that Kazakhstan
+# stayed in sync with Moscow after 1990, and that Aqtobe (formerly Aktyubinsk)
+# and Aqtau (formerly Shevchenko) are the largest cities in their zones.
+# Guess that Aqtau and Aqtobe diverged in 1995, since that's the first time
+# IATA SSIM mentions a third time zone in Kazakhstan.
+
+# From Paul Eggert (2006-03-22):
+# German Iofis, ELSI, Almaty (2001-10-09) reports that Kazakhstan uses
+# RussiaAsia rules, instead of switching at 00:00 as the IATA has it.
+# Go with Shanks & Pottenger, who have them always using RussiaAsia rules.
+# Also go with the following claims of Shanks & Pottenger:
+#
+# - Kazakhstan did not observe DST in 1991.
+# - Qyzylorda switched from +5:00 to +6:00 on 1992-01-19 02:00.
+# - Oral switched from +5:00 to +4:00 in spring 1989.
+
+# <a href="http://www.kazsociety.org.uk/news/2005/03/30.htm">
+# From Kazakhstan Embassy's News Bulletin #11 (2005-03-21):
+# </a>
+# The Government of Kazakhstan passed a resolution March 15 abolishing
+# daylight saving time citing lack of economic benefits and health
+# complications coupled with a decrease in productivity.
+#
+# From Branislav Kojic (in Astana) via Gwillim Law (2005-06-28):
+# ... what happened was that the former Kazakhstan Eastern time zone
+# was "blended" with the Central zone.  Therefore, Kazakhstan now has
+# two time zones, and difference between them is one hour.  The zone
+# closer to UTC is the former Western zone (probably still called the
+# same), encompassing four provinces in the west: Aqtobe, Atyrau,
+# Mangghystau, and West Kazakhstan.  The other zone encompasses
+# everything else....  I guess that would make Kazakhstan time zones
+# de jure UTC+5 and UTC+6 respectively.
+
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+#
+# Almaty (formerly Alma-Ata), representing most locations in Kazakhstan
+Zone	Asia/Almaty	5:07:48 -	LMT	1924 May  2 # or Alma-Ata
+			5:00	-	ALMT	1930 Jun 21 # Alma-Ata Time
+			6:00 RussiaAsia ALM%sT	1991
+			6:00	-	ALMT	1992
+			6:00 RussiaAsia	ALM%sT	2005 Mar 15
+			6:00	-	ALMT
+# Qyzylorda (aka Kyzylorda, Kizilorda, Kzyl-Orda, etc.)
+Zone	Asia/Qyzylorda	4:21:52 -	LMT	1924 May  2
+			4:00	-	KIZT	1930 Jun 21 # Kizilorda Time
+			5:00	-	KIZT	1981 Apr  1
+			5:00	1:00	KIZST	1981 Oct  1
+			6:00	-	KIZT	1982 Apr  1
+			5:00 RussiaAsia	KIZ%sT	1991
+			5:00	-	KIZT	1991 Dec 16 # independence
+			5:00	-	QYZT	1992 Jan 19 2:00
+			6:00 RussiaAsia	QYZ%sT	2005 Mar 15
+			6:00	-	QYZT
+# Aqtobe (aka Aktobe, formerly Akt'ubinsk)
+Zone	Asia/Aqtobe	3:48:40	-	LMT	1924 May  2
+			4:00	-	AKTT	1930 Jun 21 # Aktyubinsk Time
+			5:00	-	AKTT	1981 Apr  1
+			5:00	1:00	AKTST	1981 Oct  1
+			6:00	-	AKTT	1982 Apr  1
+			5:00 RussiaAsia	AKT%sT	1991
+			5:00	-	AKTT	1991 Dec 16 # independence
+			5:00 RussiaAsia	AQT%sT	2005 Mar 15 # Aqtobe Time
+			5:00	-	AQTT
+# Mangghystau
+# Aqtau was not founded until 1963, but it represents an inhabited region,
+# so include time stamps before 1963.
+Zone	Asia/Aqtau	3:21:04	-	LMT	1924 May  2
+			4:00	-	FORT	1930 Jun 21 # Fort Shevchenko T
+			5:00	-	FORT	1963
+			5:00	-	SHET	1981 Oct  1 # Shevchenko Time
+			6:00	-	SHET	1982 Apr  1
+			5:00 RussiaAsia	SHE%sT	1991
+			5:00	-	SHET	1991 Dec 16 # independence
+			5:00 RussiaAsia	AQT%sT	1995 Mar lastSun 2:00 # Aqtau Time
+			4:00 RussiaAsia	AQT%sT	2005 Mar 15
+			5:00	-	AQTT
+# West Kazakhstan
+Zone	Asia/Oral	3:25:24	-	LMT	1924 May  2 # or Ural'sk
+			4:00	-	URAT	1930 Jun 21 # Ural'sk time
+			5:00	-	URAT	1981 Apr  1
+			5:00	1:00	URAST	1981 Oct  1
+			6:00	-	URAT	1982 Apr  1
+			5:00 RussiaAsia	URA%sT	1989 Mar 26 2:00
+			4:00 RussiaAsia	URA%sT	1991
+			4:00	-	URAT	1991 Dec 16 # independence
+			4:00 RussiaAsia	ORA%sT	2005 Mar 15 # Oral Time
+			5:00	-	ORAT
+
+# Kyrgyzstan (Kirgizstan)
+# Transitions through 1991 are from Shanks & Pottenger.
+
+# From Paul Eggert (2005-08-15):
+# According to an article dated today in the Kyrgyzstan Development Gateway
+# <http://eng.gateway.kg/cgi-bin/page.pl?id=1&story_name=doc9979.shtml>
+# Kyrgyzstan is canceling the daylight saving time system.  I take the article
+# to mean that they will leave their clocks at 6 hours ahead of UTC.
+# From Malik Abdugaliev (2005-09-21):
+# Our government cancels daylight saving time 6th of August 2005.
+# From 2005-08-12 our GMT-offset is +6, w/o any daylight saving.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Kyrgyz	1992	1996	-	Apr	Sun>=7	0:00s	1:00	S
+Rule	Kyrgyz	1992	1996	-	Sep	lastSun	0:00	0	-
+Rule	Kyrgyz	1997	2005	-	Mar	lastSun	2:30	1:00	S
+Rule	Kyrgyz	1997	2004	-	Oct	lastSun	2:30	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Bishkek	4:58:24 -	LMT	1924 May  2
+			5:00	-	FRUT	1930 Jun 21 # Frunze Time
+			6:00 RussiaAsia FRU%sT	1991 Mar 31 2:00s
+			5:00	1:00	FRUST	1991 Aug 31 2:00 # independence
+			5:00	Kyrgyz	KG%sT	2005 Aug 12    # Kyrgyzstan Time
+			6:00	-	KGT
+
+###############################################################################
+
+# Korea (North and South)
+
+# From Annie I. Bang (2006-07-10) in
+# <http://www.koreaherald.co.kr/SITE/data/html_dir/2006/07/10/200607100012.asp>:
+# The Ministry of Commerce, Industry and Energy has already
+# commissioned a research project [to reintroduce DST] and has said
+# the system may begin as early as 2008....  Korea ran a daylight
+# saving program from 1949-61 but stopped it during the 1950-53 Korean War.
+
+# From Shanks & Pottenger:
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	ROK	1960	only	-	May	15	0:00	1:00	D
+Rule	ROK	1960	only	-	Sep	13	0:00	0	S
+Rule	ROK	1987	1988	-	May	Sun>=8	0:00	1:00	D
+Rule	ROK	1987	1988	-	Oct	Sun>=8	0:00	0	S
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Seoul	8:27:52	-	LMT	1890
+			8:30	-	KST	1904 Dec
+			9:00	-	KST	1928
+			8:30	-	KST	1932
+			9:00	-	KST	1954 Mar 21
+			8:00	ROK	K%sT	1961 Aug 10
+			8:30	-	KST	1968 Oct
+			9:00	ROK	K%sT
+Zone	Asia/Pyongyang	8:23:00 -	LMT	1890
+			8:30	-	KST	1904 Dec
+			9:00	-	KST	1928
+			8:30	-	KST	1932
+			9:00	-	KST	1954 Mar 21
+			8:00	-	KST	1961 Aug 10
+			9:00	-	KST
+
+###############################################################################
+
+# Kuwait
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+# From the Arab Times (2007-03-14):
+# The Civil Service Commission (CSC) has approved a proposal forwarded
+# by MP Ahmad Baqer on implementing the daylight saving time (DST) in
+# Kuwait starting from April until the end of Sept this year, reports Al-Anba.
+# <http://www.arabtimesonline.com/arabtimes/kuwait/Viewdet.asp?ID=9950>.
+# From Paul Eggert (2007-03-29):
+# We don't know the details, or whether the approval means it'll happen,
+# so for now we assume no DST.
+Zone	Asia/Kuwait	3:11:56 -	LMT	1950
+			3:00	-	AST
+
+# Laos
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Vientiane	6:50:24 -	LMT	1906 Jun  9 # or Viangchan
+			7:06:20	-	SMT	1911 Mar 11 0:01 # Saigon MT?
+			7:00	-	ICT	1912 May
+			8:00	-	ICT	1931 May
+			7:00	-	ICT
+
+# Lebanon
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Lebanon	1920	only	-	Mar	28	0:00	1:00	S
+Rule	Lebanon	1920	only	-	Oct	25	0:00	0	-
+Rule	Lebanon	1921	only	-	Apr	3	0:00	1:00	S
+Rule	Lebanon	1921	only	-	Oct	3	0:00	0	-
+Rule	Lebanon	1922	only	-	Mar	26	0:00	1:00	S
+Rule	Lebanon	1922	only	-	Oct	8	0:00	0	-
+Rule	Lebanon	1923	only	-	Apr	22	0:00	1:00	S
+Rule	Lebanon	1923	only	-	Sep	16	0:00	0	-
+Rule	Lebanon	1957	1961	-	May	1	0:00	1:00	S
+Rule	Lebanon	1957	1961	-	Oct	1	0:00	0	-
+Rule	Lebanon	1972	only	-	Jun	22	0:00	1:00	S
+Rule	Lebanon	1972	1977	-	Oct	1	0:00	0	-
+Rule	Lebanon	1973	1977	-	May	1	0:00	1:00	S
+Rule	Lebanon	1978	only	-	Apr	30	0:00	1:00	S
+Rule	Lebanon	1978	only	-	Sep	30	0:00	0	-
+Rule	Lebanon	1984	1987	-	May	1	0:00	1:00	S
+Rule	Lebanon	1984	1991	-	Oct	16	0:00	0	-
+Rule	Lebanon	1988	only	-	Jun	1	0:00	1:00	S
+Rule	Lebanon	1989	only	-	May	10	0:00	1:00	S
+Rule	Lebanon	1990	1992	-	May	1	0:00	1:00	S
+Rule	Lebanon	1992	only	-	Oct	4	0:00	0	-
+Rule	Lebanon	1993	max	-	Mar	lastSun	0:00	1:00	S
+Rule	Lebanon	1993	1998	-	Sep	lastSun	0:00	0	-
+Rule	Lebanon	1999	max	-	Oct	lastSun	0:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Beirut	2:22:00 -	LMT	1880
+			2:00	Lebanon	EE%sT
+
+# Malaysia
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	NBorneo	1935	1941	-	Sep	14	0:00	0:20	TS # one-Third Summer
+Rule	NBorneo	1935	1941	-	Dec	14	0:00	0	-
+#
+# peninsular Malaysia
+# The data here are taken from Mok Ly Yng (2003-10-30)
+# <http://www.math.nus.edu.sg/aslaksen/teaching/timezone.html>.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Asia/Kuala_Lumpur	6:46:46 -	LMT	1901 Jan  1
+			6:55:25	-	SMT	1905 Jun  1 # Singapore M.T.
+			7:00	-	MALT	1933 Jan  1 # Malaya Time
+			7:00	0:20	MALST	1936 Jan  1
+			7:20	-	MALT	1941 Sep  1
+			7:30	-	MALT	1942 Feb 16
+			9:00	-	JST	1945 Sep 12
+			7:30	-	MALT	1982 Jan  1
+			8:00	-	MYT	# Malaysia Time
+# Sabah & Sarawak
+# From Paul Eggert (2006-03-22):
+# The data here are mostly from Shanks & Pottenger, but the 1942, 1945 and 1982
+# transition dates are from Mok Ly Yng.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Asia/Kuching	7:21:20	-	LMT	1926 Mar
+			7:30	-	BORT	1933	# Borneo Time
+			8:00	NBorneo	BOR%sT	1942 Feb 16
+			9:00	-	JST	1945 Sep 12
+			8:00	-	BORT	1982 Jan  1
+			8:00	-	MYT
+
+# Maldives
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Indian/Maldives	4:54:00 -	LMT	1880	# Male
+			4:54:00	-	MMT	1960	# Male Mean Time
+			5:00	-	MVT		# Maldives Time
+
+# Mongolia
+
+# Shanks & Pottenger say that Mongolia has three time zones, but
+# usno1995 and the CIA map Standard Time Zones of the World (2005-03)
+# both say that it has just one.
+
+# From Oscar van Vlijmen (1999-12-11):
+# <a href="http://www.mongoliatourism.gov.mn/general.htm">
+# General Information Mongolia
+# </a> (1999-09)
+# "Time: Mongolia has two time zones. Three westernmost provinces of
+# Bayan-Ulgii, Uvs, and Hovd are one hour earlier than the capital city, and
+# the rest of the country follows the Ulaanbaatar time, which is UTC/GMT plus
+# eight hours."
+
+# From Rives McDow (1999-12-13):
+# Mongolia discontinued the use of daylight savings time in 1999; 1998
+# being the last year it was implemented.  The dates of implementation I am
+# unsure of, but most probably it was similar to Russia, except for the time
+# of implementation may have been different....
+# Some maps in the past have indicated that there was an additional time
+# zone in the eastern part of Mongolia, including the provinces of Dornod,
+# Suhbaatar, and possibly Khentij.
+
+# From Paul Eggert (1999-12-15):
+# Naming and spelling is tricky in Mongolia.
+# We'll use Hovd (also spelled Chovd and Khovd) to represent the west zone;
+# the capital of the Hovd province is sometimes called Hovd, sometimes Dund-Us,
+# and sometimes Jirgalanta (with variant spellings), but the name Hovd
+# is good enough for our purposes.
+
+# From Rives McDow (2001-05-13):
+# In addition to Mongolia starting daylight savings as reported earlier
+# (adopted DST on 2001-04-27 02:00 local time, ending 2001-09-28),
+# there are three time zones.
+#
+# Provinces [at 7:00]: Bayan-ulgii, Uvs, Khovd, Zavkhan, Govi-Altai
+# Provinces [at 8:00]: Khovsgol, Bulgan, Arkhangai, Khentii, Tov,
+#	Bayankhongor, Ovorkhangai, Dundgovi, Dornogovi, Omnogovi
+# Provinces [at 9:00]: Dornod, Sukhbaatar
+#
+# [The province of Selenge is omitted from the above lists.]
+
+# From Ganbold Ts., Ulaanbaatar (2004-04-17):
+# Daylight saving occurs at 02:00 local time last Saturday of March.
+# It will change back to normal at 02:00 local time last Saturday of
+# September.... As I remember this rule was changed in 2001.
+#
+# From Paul Eggert (2004-04-17):
+# For now, assume Rives McDow's informant got confused about Friday vs
+# Saturday, and that his 2001 dates should have 1 added to them.
+
+# From Paul Eggert (2005-07-26):
+# We have wildly conflicting information about Mongolia's time zones.
+# Bill Bonnet (2005-05-19) reports that the US Embassy in Ulaanbaatar says
+# there is only one time zone and that DST is observed, citing Microsoft
+# Windows XP as the source.  Risto Nykanen (2005-05-16) reports that
+# travelmongolia.org says there are two time zones (UTC+7, UTC+8) with no DST.
+# Oscar van Vlijmen (2005-05-20) reports that the Mongolian Embassy in
+# Washington, DC says there are two time zones, with DST observed.
+# He also found
+# <http://ubpost.mongolnews.mn/index.php?subaction=showcomments&id=1111634894&archive=&start_from=&ucat=1&>
+# which also says that there is DST, and which has a comment by "Toddius"
+# (2005-03-31 06:05 +0700) saying "Mongolia actually has 3.5 time zones.
+# The West (OLGII) is +7 GMT, most of the country is ULAT is +8 GMT
+# and some Eastern provinces are +9 GMT but Sukhbaatar Aimag is SUHK +8.5 GMT.
+# The SUKH timezone is new this year, it is one of the few things the
+# parliament passed during the tumultuous winter session."
+# For now, let's ignore this information, until we have more confirmation.
+
+# From Ganbold Ts. (2007-02-26):
+# Parliament of Mongolia has just changed the daylight-saving rule in February.
+# They decided not to adopt daylight-saving time....
+# http://www.mongolnews.mn/index.php?module=unuudur&sec=view&id=15742
+
+# From Deborah Goldsmith (2008-03-30):
+# We received a bug report claiming that the tz database UTC offset for
+# Asia/Choibalsan (GMT+09:00) is incorrect, and that it should be GMT
+# +08:00 instead. Different sources appear to disagree with the tz
+# database on this, e.g.:
+#
+# <a href="http://www.timeanddate.com/worldclock/city.html?n=1026">
+# http://www.timeanddate.com/worldclock/city.html?n=1026
+# </a>
+# <a href="http://www.worldtimeserver.com/current_time_in_MN.aspx">
+# http://www.worldtimeserver.com/current_time_in_MN.aspx
+# </a>
+#
+# both say GMT+08:00.
+
+# From Steffen Thorsen (2008-03-31):
+# eznis airways, which operates several domestic flights, has a flight
+# schedule here:
+# <a href="http://www.eznis.com/Container.jsp?id=112">
+# http://www.eznis.com/Container.jsp?id=112
+# </a>
+# (click the English flag for English)
+#
+# There it appears that flights between Choibalsan and Ulaanbatar arrive
+# about 1:35 - 1:50 hours later in local clock time, no matter the
+# direction, while Ulaanbaatar-Khvod takes 2 hours in the Eastern
+# direction and 3:35 back, which indicates that Ulaanbatar and Khvod are
+# in different time zones (like we know about), while Choibalsan and
+# Ulaanbatar are in the same time zone (correction needed).
+
+# From Arthur David Olson (2008-05-19):
+# Assume that Choibalsan is indeed offset by 8:00.
+# XXX--in the absence of better information, assume that transition
+# was at the start of 2008-03-31 (the day of Steffen Thorsen's report);
+# this is almost surely wrong.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Mongol	1983	1984	-	Apr	1	0:00	1:00	S
+Rule	Mongol	1983	only	-	Oct	1	0:00	0	-
+# Shanks & Pottenger and IATA SSIM say 1990s switches occurred at 00:00,
+# but McDow says the 2001 switches occurred at 02:00.  Also, IATA SSIM
+# (1996-09) says 1996-10-25.  Go with Shanks & Pottenger through 1998.
+#
+# Shanks & Pottenger say that the Sept. 1984 through Sept. 1990 switches
+# in Choibalsan (more precisely, in Dornod and Sukhbaatar) took place
+# at 02:00 standard time, not at 00:00 local time as in the rest of
+# the country.  That would be odd, and possibly is a result of their
+# correction of 02:00 (in the previous edition) not being done correctly
+# in the latest edition; so ignore it for now.
+
+Rule	Mongol	1985	1998	-	Mar	lastSun	0:00	1:00	S
+Rule	Mongol	1984	1998	-	Sep	lastSun	0:00	0	-
+# IATA SSIM (1999-09) says Mongolia no longer observes DST.
+Rule	Mongol	2001	only	-	Apr	lastSat	2:00	1:00	S
+Rule	Mongol	2001	2006	-	Sep	lastSat	2:00	0	-
+Rule	Mongol	2002	2006	-	Mar	lastSat	2:00	1:00	S
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+# Hovd, a.k.a. Chovd, Dund-Us, Dzhargalant, Khovd, Jirgalanta
+Zone	Asia/Hovd	6:06:36 -	LMT	1905 Aug
+			6:00	-	HOVT	1978	# Hovd Time
+			7:00	Mongol	HOV%sT
+# Ulaanbaatar, a.k.a. Ulan Bataar, Ulan Bator, Urga
+Zone	Asia/Ulaanbaatar 7:07:32 -	LMT	1905 Aug
+			7:00	-	ULAT	1978	# Ulaanbaatar Time
+			8:00	Mongol	ULA%sT
+# Choibalsan, a.k.a. Bajan Tuemen, Bajan Tumen, Chojbalsan,
+# Choybalsan, Sanbejse, Tchoibalsan
+Zone	Asia/Choibalsan	7:38:00 -	LMT	1905 Aug
+			7:00	-	ULAT	1978
+			8:00	-	ULAT	1983 Apr
+			9:00	Mongol	CHO%sT	2008 Mar 31 # Choibalsan Time
+			8:00	Mongol	CHO%sT
+
+# Nepal
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Kathmandu	5:41:16 -	LMT	1920
+			5:30	-	IST	1986
+			5:45	-	NPT	# Nepal Time
+
+# Oman
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Muscat	3:54:20 -	LMT	1920
+			4:00	-	GST
+
+# Pakistan
+
+# From Rives McDow (2002-03-13):
+# I have been advised that Pakistan has decided to adopt dst on a
+# TRIAL basis for one year, starting 00:01 local time on April 7, 2002
+# and ending at 00:01 local time October 6, 2002.  This is what I was
+# told, but I believe that the actual time of change may be 00:00; the
+# 00:01 was to make it clear which day it was on.
+
+# From Paul Eggert (2002-03-15):
+# Jesper Norgaard found this URL:
+# http://www.pak.gov.pk/public/news/app/app06_dec.htm
+# (dated 2001-12-06) which says that the Cabinet adopted a scheme "to
+# advance the clocks by one hour on the night between the first
+# Saturday and Sunday of April and revert to the original position on
+# 15th October each year".  This agrees with McDow's 04-07 at 00:00,
+# but disagrees about the October transition, and makes it sound like
+# it's not on a trial basis.  Also, the "between the first Saturday
+# and Sunday of April" phrase, if taken literally, means that the
+# transition takes place at 00:00 on the first Sunday on or after 04-02.
+
+# From Paul Eggert (2003-02-09):
+# DAWN <http://www.dawn.com/2002/10/06/top13.htm> reported on 2002-10-05
+# that 2002 DST ended that day at midnight.  Go with McDow for now.
+
+# From Steffen Thorsen (2003-03-14):
+# According to http://www.dawn.com/2003/03/07/top15.htm
+# there will be no DST in Pakistan this year:
+#
+# ISLAMABAD, March 6: Information and Media Development Minister Sheikh
+# Rashid Ahmed on Thursday said the cabinet had reversed a previous
+# decision to advance clocks by one hour in summer and put them back by
+# one hour in winter with the aim of saving light hours and energy.
+#
+# The minister told a news conference that the experiment had rather
+# shown 8 per cent higher consumption of electricity.
+
+# From Alex Krivenyshev (2008-05-15):
+# 
+# Here is an article that Pakistan plan to introduce Daylight Saving Time 
+# on June 1, 2008 for 3 months.
+# 
+# "... The federal cabinet on Wednesday announced a new conservation plan to help 
+# reduce load shedding by approving the closure of commercial centres at 9pm and 
+# moving clocks forward by one hour for the next three months. 
+# ...."
+# 
+# <a href="http://www.worldtimezone.net/dst_news/dst_news_pakistan01.html">
+# http://www.worldtimezone.net/dst_news/dst_news_pakistan01.html
+# </a>
+# OR
+# <a href="http://www.dailytimes.com.pk/default.asp?page=2008%5C05%5C15%5Cstory_15-5-2008_pg1_4">
+# http://www.dailytimes.com.pk/default.asp?page=2008%5C05%5C15%5Cstory_15-5-2008_pg1_4
+# </a>
+
+# From Arthur David Olson (2008-05-19):
+# XXX--midnight transitions is a guess; 2008 only is a guess.
+
+# From Alexander Krivenyshev (2008-08-28):
+# Pakistan government has decided to keep the watches one-hour advanced
+# for another 2 months--plan to return to Standard Time on October 31
+# instead of August 31.
+#
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_pakistan02.html">
+# http://www.worldtimezone.com/dst_news/dst_news_pakistan02.html
+# </a>
+# OR
+# <a href="http://dailymailnews.com/200808/28/news/dmbrn03.html">
+# http://dailymailnews.com/200808/28/news/dmbrn03.html
+# </a>
+
+# From Alexander Krivenyshev (2009-04-08):
+# Based on previous media reports that "... proposed plan to
+# advance clocks by one hour from May 1 will cause disturbance
+# to the working schedules rather than bringing discipline in
+# official working."
+# <a href="http://www.thenews.com.pk/daily_detail.asp?id=171280">
+# http://www.thenews.com.pk/daily_detail.asp?id=171280
+# </a>
+#
+# recent news that instead of May 2009 - Pakistan plan to
+# introduce DST from April 15, 2009
+#
+# FYI: Associated Press Of Pakistan
+# April 08, 2009
+# Cabinet okays proposal to advance clocks by one hour from April 15
+# <a href="http://www.app.com.pk/en_/index.php?option=com_content&task=view&id=73043&Itemid=1">
+# http://www.app.com.pk/en_/index.php?option=com_content&task=view&id=73043&Itemid=1
+# </a>
+#
+# or
+#
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_pakistan05.html">
+# http://www.worldtimezone.com/dst_news/dst_news_pakistan05.html
+# </a>
+#
+# ....
+# The Federal Cabinet on Wednesday approved the proposal to
+# advance clocks in the country by one hour from April 15 to
+# conserve energy"
+
+# From Steffen Thorsen (2009-09-17):
+# "The News International," Pakistan reports that: "The Federal
+# Government has decided to restore the previous time by moving the
+# clocks backward by one hour from October 1. A formal announcement to
+# this effect will be made after the Prime Minister grants approval in
+# this regard." 
+# <a href="http://www.thenews.com.pk/updates.asp?id=87168">
+# http://www.thenews.com.pk/updates.asp?id=87168
+# </a>
+
+# From Alexander Krivenyshev (2009-09-28):
+# According to Associated Press Of Pakistan, it is confirmed that
+# Pakistan clocks across the country would be turned back by an hour from October
+# 1, 2009.
+#
+# "Clocks to go back one hour from 1 Oct"
+# <a href="http://www.app.com.pk/en_/index.php?option=com_content&task=view&id=86715&Itemid=2">
+# http://www.app.com.pk/en_/index.php?option=com_content&task=view&id=86715&Itemid=2
+# </a>
+# or
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_pakistan07.htm">
+# http://www.worldtimezone.com/dst_news/dst_news_pakistan07.htm
+# </a>
+
+# From Steffen Thorsen (2009-09-29):
+# Alexander Krivenyshev wrote:
+# > According to Associated Press Of Pakistan, it is confirmed that
+# > Pakistan clocks across the country would be turned back by an hour from October
+# > 1, 2009.
+#
+# Now they seem to have changed their mind, November 1 is the new date:
+# <a href="http://www.thenews.com.pk/top_story_detail.asp?Id=24742">
+# http://www.thenews.com.pk/top_story_detail.asp?Id=24742
+# </a>
+# "The country's clocks will be reversed by one hour on November 1.
+# Officials of Federal Ministry for Interior told this to Geo News on
+# Monday."
+#
+# And more importantly, it seems that these dates will be kept every year:
+# "It has now been decided that clocks will be wound forward by one hour
+# on April 15 and reversed by an hour on November 1 every year without
+# obtaining prior approval, the officials added."
+#
+# We have confirmed this year's end date with both with the Ministry of
+# Water and Power and the Pakistan Electric Power Company:
+# <a href="http://www.timeanddate.com/news/time/pakistan-ends-dst09.html">
+# http://www.timeanddate.com/news/time/pakistan-ends-dst09.html
+# </a>
+
+# From Christoph Goehre (2009-10-01):
+# [T]he German Consulate General in Karachi reported me today that Pakistan
+# will go back to standard time on 1st of November.
+
+# From Steffen Thorsen (2010-03-26):
+# Steffen Thorsen wrote:
+# > On Thursday (2010-03-25) it was announced that DST would start in
+# > Pakistan on 2010-04-01.
+# >
+# > Then today, the president said that they might have to revert the
+# > decision if it is not supported by the parliament. So at the time
+# > being, it seems unclear if DST will be actually observed or not - but
+# > April 1 could be a more likely date than April 15.
+# Now, it seems that the decision to not observe DST in final:
+#
+# "Govt Withdraws Plan To Advance Clocks"
+# <a href="http://www.apakistannews.com/govt-withdraws-plan-to-advance-clocks-172041">
+# http://www.apakistannews.com/govt-withdraws-plan-to-advance-clocks-172041
+# </a>
+#
+# "People laud PM's announcement to end DST"
+# <a href="http://www.app.com.pk/en_/index.php?option=com_content&task=view&id=99374&Itemid=2">
+# http://www.app.com.pk/en_/index.php?option=com_content&task=view&id=99374&Itemid=2
+# </a>
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule Pakistan	2002	only	-	Apr	Sun>=2	0:01	1:00	S
+Rule Pakistan	2002	only	-	Oct	Sun>=2	0:01	0	-
+Rule Pakistan	2008	only	-	Jun	1	0:00	1:00	S
+Rule Pakistan	2008	only	-	Nov	1	0:00	0	-
+Rule Pakistan	2009	only	-	Apr	15	0:00	1:00	S
+Rule Pakistan	2009	only	-	Nov	1	0:00	0	-
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Karachi	4:28:12 -	LMT	1907
+			5:30	-	IST	1942 Sep
+			5:30	1:00	IST	1945 Oct 15
+			5:30	-	IST	1951 Sep 30
+			5:00	-	KART	1971 Mar 26 # Karachi Time
+			5:00 Pakistan	PK%sT	# Pakistan Time
+
+# Palestine
+
+# From Amos Shapir (1998-02-15):
+#
+# From 1917 until 1948-05-15, all of Palestine, including the parts now
+# known as the Gaza Strip and the West Bank, was under British rule.
+# Therefore the rules given for Israel for that period, apply there too...
+#
+# The Gaza Strip was under Egyptian rule between 1948-05-15 until 1967-06-05
+# (except a short occupation by Israel from 1956-11 till 1957-03, but no
+# time zone was affected then).  It was never formally annexed to Egypt,
+# though.
+#
+# The rest of Palestine was under Jordanian rule at that time, formally
+# annexed in 1950 as the West Bank (and the word "Trans" was dropped from
+# the country's previous name of "the Hashemite Kingdom of the
+# Trans-Jordan").  So the rules for Jordan for that time apply.  Major
+# towns in that area are Nablus (Shchem), El-Halil (Hebron), Ramallah, and
+# East Jerusalem.
+#
+# Both areas were occupied by Israel in June 1967, but not annexed (except
+# for East Jerusalem).  They were on Israel time since then; there might
+# have been a Military Governor's order about time zones, but I'm not aware
+# of any (such orders may have been issued semi-annually whenever summer
+# time was in effect, but maybe the legal aspect of time was just neglected).
+#
+# The Palestinian Authority was established in 1993, and got hold of most
+# towns in the West Bank and Gaza by 1995.  I know that in order to
+# demonstrate...independence, they have been switching to
+# summer time and back on a different schedule than Israel's, but I don't
+# know when this was started, or what algorithm is used (most likely the
+# Jordanian one).
+#
+# To summarize, the table should probably look something like that:
+#
+# Area \ when | 1918-1947 | 1948-1967 | 1967-1995 | 1996-
+# ------------+-----------+-----------+-----------+-----------
+# Israel      | Zion      | Zion      | Zion      | Zion
+# West bank   | Zion      | Jordan    | Zion      | Jordan
+# Gaza        | Zion      | Egypt     | Zion      | Jordan
+#
+# I guess more info may be available from the PA's web page (if/when they
+# have one).
+
+# From Paul Eggert (2006-03-22):
+# Shanks & Pottenger write that Gaza did not observe DST until 1957, but go
+# with Shapir and assume that it observed DST from 1940 through 1947,
+# and that it used Jordanian rules starting in 1996.
+# We don't yet need a separate entry for the West Bank, since
+# the only differences between it and Gaza that we know about
+# occurred before our cutoff date of 1970.
+# However, as we get more information, we may need to add entries
+# for parts of the West Bank as they transitioned from Israel's rules
+# to Palestine's rules.  If you have more info about this, please
+# send it to tz@elsie.nci.nih.gov for incorporation into future editions.
+
+# From IINS News Service - Israel - 1998-03-23 10:38:07 Israel time,
+# forwarded by Ephraim Silverberg:
+#
+# Despite the fact that Israel changed over to daylight savings time
+# last week, the PLO Authority (PA) has decided not to turn its clocks
+# one-hour forward at this time.  As a sign of independence from Israeli rule,
+# the PA has decided to implement DST in April.
+
+# From Paul Eggert (1999-09-20):
+# Daoud Kuttab writes in
+# <a href="http://www.jpost.com/com/Archive/22.Apr.1999/Opinion/Article-2.html">
+# Holiday havoc
+# </a> (Jerusalem Post, 1999-04-22) that
+# the Palestinian National Authority changed to DST on 1999-04-15.
+# I vaguely recall that they switch back in October (sorry, forgot the source).
+# For now, let's assume that the spring switch was at 24:00,
+# and that they switch at 0:00 on the 3rd Fridays of April and October.
+
+# From Paul Eggert (2005-11-22):
+# Starting 2004 transitions are from Steffen Thorsen's web site timeanddate.com.
+
+# From Steffen Thorsen (2005-11-23):
+# A user from Gaza reported that Gaza made the change early because of
+# the Ramadan.  Next year Ramadan will be even earlier, so I think
+# there is a good chance next year's end date will be around two weeks
+# earlier--the same goes for Jordan.
+
+# From Steffen Thorsen (2006-08-17):
+# I was informed by a user in Bethlehem that in Bethlehem it started the
+# same day as Israel, and after checking with other users in the area, I
+# was informed that they started DST one day after Israel.  I was not
+# able to find any authoritative sources at the time, nor details if
+# Gaza changed as well, but presumed Gaza to follow the same rules as
+# the West Bank.
+
+# From Steffen Thorsen (2006-09-26):
+# according to the Palestine News Network (2006-09-19):
+# http://english.pnn.ps/index.php?option=com_content&task=view&id=596&Itemid=5
+# > The Council of Ministers announced that this year its winter schedule
+# > will begin early, as of midnight Thursday.  It is also time to turn
+# > back the clocks for winter.  Friday will begin an hour late this week.
+# I guess it is likely that next year's date will be moved as well,
+# because of the Ramadan.
+
+# From Jesper Norgaard Welen (2007-09-18):
+# According to Steffen Thorsen's web site the Gaza Strip and the rest of the
+# Palestinian territories left DST early on 13.th. of September at 2:00.
+
+# From Paul Eggert (2007-09-20):
+# My understanding is that Gaza and the West Bank disagree even over when
+# the weekend is (Thursday+Friday versus Friday+Saturday), so I'd be a bit
+# surprised if they agreed about DST.  But for now, assume they agree.
+# For lack of better information, predict that future changes will be
+# the 2nd Thursday of September at 02:00.
+
+# From Alexander Krivenyshev (2008-08-28):
+# Here is an article, that Mideast running on different clocks at Ramadan.
+#
+# Gaza Strip (as Egypt) ended DST at midnight Thursday (Aug 28, 2008), while
+# the West Bank will end Daylight Saving Time at midnight Sunday (Aug 31, 2008).
+#
+# <a href="http://www.guardian.co.uk/world/feedarticle/7759001">
+# http://www.guardian.co.uk/world/feedarticle/7759001
+# </a>
+# <a href="http://www.abcnews.go.com/International/wireStory?id=5676087">
+# http://www.abcnews.go.com/International/wireStory?id=5676087
+# </a>
+# or
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_gazastrip01.html">
+# http://www.worldtimezone.com/dst_news/dst_news_gazastrip01.html
+# </a>
+
+# From Alexander Krivenyshev (2009-03-26):
+# According to the Palestine News Network (arabic.pnn.ps), Palestinian
+# government decided to start Daylight Time on Thursday night March
+# 26 and continue until the night of 27 September 2009.
+#
+# (in Arabic)
+# <a href="http://arabic.pnn.ps/index.php?option=com_content&task=view&id=50850">
+# http://arabic.pnn.ps/index.php?option=com_content&task=view&id=50850
+# </a>
+#
+# or
+# (English translation)
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_westbank01.html">
+# http://www.worldtimezone.com/dst_news/dst_news_westbank01.html
+# </a>
+
+# From Steffen Thorsen (2009-08-31):
+# Palestine's Council of Ministers announced that they will revert back to
+# winter time on Friday, 2009-09-04.
+#
+# One news source:
+# <a href="http://www.safa.ps/ara/?action=showdetail&seid=4158">
+# http://www.safa.ps/ara/?action=showdetail&seid=4158
+# </a>
+# (Palestinian press agency, Arabic),
+# Google translate: "Decided that the Palestinian government in Ramallah
+# headed by Salam Fayyad, the start of work in time for the winter of
+# 2009, starting on Friday approved the fourth delay Sept. clock sixty
+# minutes per hour as of Friday morning."
+#
+# We are not sure if Gaza will do the same, last year they had a different
+# end date, we will keep this page updated:
+# <a href="http://www.timeanddate.com/news/time/westbank-gaza-dst-2009.html">
+# http://www.timeanddate.com/news/time/westbank-gaza-dst-2009.html
+# </a>
+
+# From Alexander Krivenyshev (2009-09-02):
+# Seems that Gaza Strip will go back to Winter Time same date as West Bank.
+#
+# According to Palestinian Ministry Of Interior, West Bank and Gaza Strip plan
+# to change time back to Standard time on September 4, 2009.
+#
+# "Winter time unite the West Bank and Gaza"
+# (from Palestinian National Authority):
+# <a href="http://www.moi.gov.ps/en/?page=633167343250594025&nid=11505
+# http://www.moi.gov.ps/en/?page=633167343250594025&nid=11505
+# </a>
+# or
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_gazastrip02.html>
+# http://www.worldtimezone.com/dst_news/dst_news_gazastrip02.html
+# </a>
+
+# From Alexander Krivenyshev (2010-03-19):
+# According to Voice of Palestine DST will last for 191 days, from March
+# 26, 2010 till "the last Sunday before the tenth day of Tishri
+# (October), each year" (October 03, 2010?)
+#
+# <a href="http://palvoice.org/forums/showthread.php?t=245697">
+# http://palvoice.org/forums/showthread.php?t=245697
+# </a>
+# (in Arabic)
+# or
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_westbank03.html">
+# http://www.worldtimezone.com/dst_news/dst_news_westbank03.html
+# </a>
+
+# From Steffen Thorsen (2010-03-24):
+# ...Ma'an News Agency reports that Hamas cabinet has decided it will
+# start one day later, at 12:01am. Not sure if they really mean 12:01am or
+# noon though:
+#
+# <a href="http://www.maannews.net/eng/ViewDetails.aspx?ID=271178">
+# http://www.maannews.net/eng/ViewDetails.aspx?ID=271178
+# </a>
+# (Ma'an News Agency)
+# "At 12:01am Friday, clocks in Israel and the West Bank will change to
+# 1:01am, while Gaza clocks will change at 12:01am Saturday morning."
+
+# The rules for Egypt are stolen from the `africa' file.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule EgyptAsia	1957	only	-	May	10	0:00	1:00	S
+Rule EgyptAsia	1957	1958	-	Oct	 1	0:00	0	-
+Rule EgyptAsia	1958	only	-	May	 1	0:00	1:00	S
+Rule EgyptAsia	1959	1967	-	May	 1	1:00	1:00	S
+Rule EgyptAsia	1959	1965	-	Sep	30	3:00	0	-
+Rule EgyptAsia	1966	only	-	Oct	 1	3:00	0	-
+
+Rule Palestine	1999	2005	-	Apr	Fri>=15	0:00	1:00	S
+Rule Palestine	1999	2003	-	Oct	Fri>=15	0:00	0	-
+Rule Palestine	2004	only	-	Oct	 1	1:00	0	-
+Rule Palestine	2005	only	-	Oct	 4	2:00	0	-
+Rule Palestine	2006	2008	-	Apr	 1	0:00	1:00	S
+Rule Palestine	2006	only	-	Sep	22	0:00	0	-
+Rule Palestine	2007	only	-	Sep	Thu>=8	2:00	0	-
+Rule Palestine	2008	only	-	Aug	lastFri	2:00	0	-
+Rule Palestine	2009	only	-	Mar	lastFri	0:00	1:00	S
+Rule Palestine	2010	max	-	Mar	lastSat	0:01	1:00	S
+Rule Palestine	2009	max	-	Sep	Fri>=1	2:00	0	-
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Gaza	2:17:52	-	LMT	1900 Oct
+			2:00	Zion	EET	1948 May 15
+			2:00 EgyptAsia	EE%sT	1967 Jun  5
+			2:00	Zion	I%sT	1996
+			2:00	Jordan	EE%sT	1999
+			2:00 Palestine	EE%sT
+
+# Paracel Is
+# no information
+
+# Philippines
+# On 1844-08-16, Narciso Claveria, governor-general of the
+# Philippines, issued a proclamation announcing that 1844-12-30 was to
+# be immediately followed by 1845-01-01.  Robert H. van Gent has a
+# transcript of the decree in <http://www.phys.uu.nl/~vgent/idl/idl.htm>.
+# The rest of the data are from Shanks & Pottenger.
+
+# From Paul Eggert (2006-04-25):
+# Tomorrow's Manila Standard reports that the Philippines Department of
+# Trade and Industry is considering adopting DST this June when the
+# rainy season begins.  See
+# <http://www.manilastandardtoday.com/?page=politics02_april26_2006>.
+# For now, we'll ignore this, since it's not definite and we lack details.
+#
+# From Jesper Norgaard Welen (2006-04-26):
+# ... claims that Philippines had DST last time in 1990:
+# http://story.philippinetimes.com/p.x/ct/9/id/145be20cc6b121c0/cid/3e5bbccc730d258c/
+# [a story dated 2006-04-25 by Cris Larano of Dow Jones Newswires,
+# but no details]
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Phil	1936	only	-	Nov	1	0:00	1:00	S
+Rule	Phil	1937	only	-	Feb	1	0:00	0	-
+Rule	Phil	1954	only	-	Apr	12	0:00	1:00	S
+Rule	Phil	1954	only	-	Jul	1	0:00	0	-
+Rule	Phil	1978	only	-	Mar	22	0:00	1:00	S
+Rule	Phil	1978	only	-	Sep	21	0:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Manila	-15:56:00 -	LMT	1844 Dec 31
+			8:04:00 -	LMT	1899 May 11
+			8:00	Phil	PH%sT	1942 May
+			9:00	-	JST	1944 Nov
+			8:00	Phil	PH%sT
+
+# Qatar
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Qatar	3:26:08 -	LMT	1920	# Al Dawhah / Doha
+			4:00	-	GST	1972 Jun
+			3:00	-	AST
+
+# Saudi Arabia
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Riyadh	3:06:52 -	LMT	1950
+			3:00	-	AST
+
+# Singapore
+# The data here are taken from Mok Ly Yng (2003-10-30)
+# <http://www.math.nus.edu.sg/aslaksen/teaching/timezone.html>.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Singapore	6:55:25 -	LMT	1901 Jan  1
+			6:55:25	-	SMT	1905 Jun  1 # Singapore M.T.
+			7:00	-	MALT	1933 Jan  1 # Malaya Time
+			7:00	0:20	MALST	1936 Jan  1
+			7:20	-	MALT	1941 Sep  1
+			7:30	-	MALT	1942 Feb 16
+			9:00	-	JST	1945 Sep 12
+			7:30	-	MALT	1965 Aug  9 # independence
+			7:30	-	SGT	1982 Jan  1 # Singapore Time
+			8:00	-	SGT
+
+# Spratly Is
+# no information
+
+# Sri Lanka
+# From Paul Eggert (1996-09-03):
+# "Sri Lanka advances clock by an hour to avoid blackout"
+# (www.virtual-pc.com/lankaweb/news/items/240596-2.html, 1996-05-24,
+# no longer available as of 1999-08-17)
+# reported ``the country's standard time will be put forward by one hour at
+# midnight Friday (1830 GMT) `in the light of the present power crisis'.''
+#
+# From Dharmasiri Senanayake, Sri Lanka Media Minister (1996-10-24), as quoted
+# by Shamindra in
+# <a href="news:54rka5$m5h@mtinsc01-mgt.ops.worldnet.att.net">
+# Daily News - Hot News Section (1996-10-26)
+# </a>:
+# With effect from 12.30 a.m. on 26th October 1996
+# Sri Lanka will be six (06) hours ahead of GMT.
+
+# From Jesper Norgaard Welen (2006-04-14), quoting Sri Lanka News Online
+# <http://news.sinhalaya.com/wmview.php?ArtID=11002> (2006-04-13):
+# 0030 hrs on April 15, 2006 (midnight of April 14, 2006 +30 minutes)
+# at present, become 2400 hours of April 14, 2006 (midnight of April 14, 2006).
+
+# From Peter Apps and Ranga Sirila of Reuters (2006-04-12) in:
+# <http://today.reuters.co.uk/news/newsArticle.aspx?type=scienceNews&storyID=2006-04-12T172228Z_01_COL295762_RTRIDST_0_SCIENCE-SRILANKA-TIME-DC.XML>
+# [The Tamil Tigers] never accepted the original 1996 time change and simply
+# kept their clocks set five and a half hours ahead of Greenwich Mean
+# Time (GMT), in line with neighbor India.
+# From Paul Eggert (2006-04-18):
+# People who live in regions under Tamil control can use [TZ='Asia/Kolkata'],
+# as that zone has agreed with the Tamil areas since our cutoff date of 1970.
+
+# From K Sethu (2006-04-25):
+# I think the abbreviation LKT originated from the world of computers at
+# the time of or subsequent to the time zone changes by SL Government
+# twice in 1996 and probably SL Government or its standardization
+# agencies never declared an abbreviation as a national standard.
+#
+# I recollect before the recent change the government annoucemments
+# mentioning it as simply changing Sri Lanka Standard Time or Sri Lanka
+# Time and no mention was made about the abbreviation.
+#
+# If we look at Sri Lanka Department of Government's "Official News
+# Website of Sri Lanka" ... http://www.news.lk/ we can see that they
+# use SLT as abbreviation in time stamp at the beginning of each news
+# item....
+#
+# Within Sri Lanka I think LKT is well known among computer users and
+# adminsitrators.  In my opinion SLT may not be a good choice because the
+# nation's largest telcom / internet operator Sri Lanka Telcom is well
+# known by that abbreviation - simply as SLT (there IP domains are
+# slt.lk and sltnet.lk).
+#
+# But if indeed our government has adopted SLT as standard abbreviation
+# (that we have not known so far) then  it is better that it be used for
+# all computers.
+
+# From Paul Eggert (2006-04-25):
+# One possibility is that we wait for a bit for the dust to settle down
+# and then see what people actually say in practice.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Colombo	5:19:24 -	LMT	1880
+			5:19:32	-	MMT	1906	# Moratuwa Mean Time
+			5:30	-	IST	1942 Jan  5
+			5:30	0:30	IHST	1942 Sep
+			5:30	1:00	IST	1945 Oct 16 2:00
+			5:30	-	IST	1996 May 25 0:00
+			6:30	-	LKT	1996 Oct 26 0:30
+			6:00	-	LKT	2006 Apr 15 0:30
+			5:30	-	IST
+
+# Syria
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Syria	1920	1923	-	Apr	Sun>=15	2:00	1:00	S
+Rule	Syria	1920	1923	-	Oct	Sun>=1	2:00	0	-
+Rule	Syria	1962	only	-	Apr	29	2:00	1:00	S
+Rule	Syria	1962	only	-	Oct	1	2:00	0	-
+Rule	Syria	1963	1965	-	May	1	2:00	1:00	S
+Rule	Syria	1963	only	-	Sep	30	2:00	0	-
+Rule	Syria	1964	only	-	Oct	1	2:00	0	-
+Rule	Syria	1965	only	-	Sep	30	2:00	0	-
+Rule	Syria	1966	only	-	Apr	24	2:00	1:00	S
+Rule	Syria	1966	1976	-	Oct	1	2:00	0	-
+Rule	Syria	1967	1978	-	May	1	2:00	1:00	S
+Rule	Syria	1977	1978	-	Sep	1	2:00	0	-
+Rule	Syria	1983	1984	-	Apr	9	2:00	1:00	S
+Rule	Syria	1983	1984	-	Oct	1	2:00	0	-
+Rule	Syria	1986	only	-	Feb	16	2:00	1:00	S
+Rule	Syria	1986	only	-	Oct	9	2:00	0	-
+Rule	Syria	1987	only	-	Mar	1	2:00	1:00	S
+Rule	Syria	1987	1988	-	Oct	31	2:00	0	-
+Rule	Syria	1988	only	-	Mar	15	2:00	1:00	S
+Rule	Syria	1989	only	-	Mar	31	2:00	1:00	S
+Rule	Syria	1989	only	-	Oct	1	2:00	0	-
+Rule	Syria	1990	only	-	Apr	1	2:00	1:00	S
+Rule	Syria	1990	only	-	Sep	30	2:00	0	-
+Rule	Syria	1991	only	-	Apr	 1	0:00	1:00	S
+Rule	Syria	1991	1992	-	Oct	 1	0:00	0	-
+Rule	Syria	1992	only	-	Apr	 8	0:00	1:00	S
+Rule	Syria	1993	only	-	Mar	26	0:00	1:00	S
+Rule	Syria	1993	only	-	Sep	25	0:00	0	-
+# IATA SSIM (1998-02) says 1998-04-02;
+# (1998-09) says 1999-03-29 and 1999-09-29; (1999-02) says 1999-04-02,
+# 2000-04-02, and 2001-04-02; (1999-09) says 2000-03-31 and 2001-03-31;
+# (2006) says 2006-03-31 and 2006-09-22;
+# for now ignore all these claims and go with Shanks & Pottenger,
+# except for the 2006-09-22 claim (which seems right for Ramadan).
+Rule	Syria	1994	1996	-	Apr	 1	0:00	1:00	S
+Rule	Syria	1994	2005	-	Oct	 1	0:00	0	-
+Rule	Syria	1997	1998	-	Mar	lastMon	0:00	1:00	S
+Rule	Syria	1999	2006	-	Apr	 1	0:00	1:00	S
+# From Stephen Colebourne (2006-09-18):
+# According to IATA data, Syria will change DST on 21st September [21:00 UTC]
+# this year [only]....  This is probably related to Ramadan, like Egypt.
+Rule	Syria	2006	only	-	Sep	22	0:00	0	-
+# From Paul Eggert (2007-03-29):
+# Today the AP reported "Syria will switch to summertime at midnight Thursday."
+# http://www.iht.com/articles/ap/2007/03/29/africa/ME-GEN-Syria-Time-Change.php
+Rule	Syria	2007	only	-	Mar	lastFri	0:00	1:00	S
+# From Jesper Norgard (2007-10-27):
+# The sister center ICARDA of my work CIMMYT is confirming that Syria DST will
+# not take place 1.st November at 0:00 o'clock but 1.st November at 24:00 or
+# rather Midnight between Thursday and Friday. This does make more sence than
+# having it between Wednesday and Thursday (two workdays in Syria) since the
+# weekend in Syria is not Saturday and Sunday, but Friday and Saturday. So now
+# it is implemented at midnight of the last workday before weekend...
+# 
+# From Steffen Thorsen (2007-10-27):
+# Jesper Norgaard Welen wrote:
+# 
+# > "Winter local time in Syria will be observed at midnight of Thursday 1
+# > November 2007, and the clock will be put back 1 hour."
+# 
+# I found confirmation on this in this gov.sy-article (Arabic):
+# http://wehda.alwehda.gov.sy/_print_veiw.asp?FileName=12521710520070926111247
+# 
+# which using Google's translate tools says:
+# Council of Ministers also approved the commencement of work on 
+# identifying the winter time as of Friday, 2/11/2007 where the 60th 
+# minute delay at midnight Thursday 1/11/2007.
+Rule	Syria	2007	only	-	Nov	 Fri>=1	0:00	0	-
+
+# From Stephen Colebourne (2008-03-17):
+# For everyone's info, I saw an IATA time zone change for [Syria] for
+# this month (March 2008) in the last day or so...This is the data IATA
+# are now using:
+# Country     Time Standard   --- DST Start ---   --- DST End ---  DST
+# Name        Zone Variation   Time    Date        Time    Date
+# Variation
+# Syrian Arab
+# Republic    SY    +0200      2200  03APR08       2100  30SEP08   +0300
+#                              2200  02APR09       2100  30SEP09   +0300
+#                              2200  01APR10       2100  30SEP10   +0300
+
+# From Arthur David Olson (2008-03-17):
+# Here's a link to English-language coverage by the Syrian Arab News
+# Agency (SANA)...
+# <a href="http://www.sana.sy/eng/21/2008/03/11/165173.htm">
+# http://www.sana.sy/eng/21/2008/03/11/165173.htm
+# </a>...which reads (in part) "The Cabinet approved the suggestion of the
+# Ministry of Electricity to begin daylight savings time on Friday April
+# 4th, advancing clocks one hour ahead on midnight of Thursday April 3rd."
+# Since Syria is two hours east of UTC, the 2200 and 2100 transition times
+# shown above match up with midnight in Syria.
+
+# From Arthur David Olson (2008-03-18):
+# My buest guess at a Syrian rule is "the Friday nearest April 1";
+# coding that involves either using a "Mar Fri>=29" construct that old time zone
+# compilers can't handle  or having multiple Rules (a la Israel).
+# For now, use "Apr Fri>=1", and go with IATA on a uniform Sep 30 end.
+
+# From Steffen Thorsen (2008-10-07):
+# Syria has now officially decided to end DST on 2008-11-01 this year,
+# according to the following article in the Syrian Arab News Agency (SANA).
+#
+# The article is in Arabic, and seems to tell that they will go back to
+# winter time on 2008-11-01 at 00:00 local daylight time (delaying/setting
+# clocks back 60 minutes).
+#
+# <a href="http://sana.sy/ara/2/2008/10/07/195459.htm">
+# http://sana.sy/ara/2/2008/10/07/195459.htm
+# </a>
+
+# From Steffen Thorsen (2009-03-19):
+# Syria will start DST on 2009-03-27 00:00 this year according to many sources,
+# two examples:
+#
+# <a href="http://www.sana.sy/eng/21/2009/03/17/217563.htm">
+# http://www.sana.sy/eng/21/2009/03/17/217563.htm
+# </a>
+# (English, Syrian Arab News # Agency)
+# <a href="http://thawra.alwehda.gov.sy/_View_news2.asp?FileName=94459258720090318012209">
+# http://thawra.alwehda.gov.sy/_View_news2.asp?FileName=94459258720090318012209
+# </a>
+# (Arabic, gov-site)
+#
+# We have not found any sources saying anything about when DST ends this year.
+#
+# Our summary
+# <a href="http://www.timeanddate.com/news/time/syria-dst-starts-march-27-2009.html">
+# http://www.timeanddate.com/news/time/syria-dst-starts-march-27-2009.html
+# </a>
+
+# From Steffen Thorsen (2009-10-27):
+# The Syrian Arab News Network on 2009-09-29 reported that Syria will 
+# revert back to winter (standard) time on midnight between Thursday 
+# 2009-10-29 and Friday 2009-10-30:
+# <a href="http://www.sana.sy/ara/2/2009/09/29/247012.htm">
+# http://www.sana.sy/ara/2/2009/09/29/247012.htm (Arabic)
+# </a>
+
+# From Arthur David Olson (2009-10-28):
+# We'll see if future DST switching times turn out to be end of the last
+# Thursday of the month or the start of the last Friday of the month or
+# something else. For now, use the start of the last Friday.
+
+# From Steffen Thorsen (2010-03-17):
+# The "Syrian News Station" reported on 2010-03-16 that the Council of
+# Ministers has decided that Syria will start DST on midnight Thursday
+# 2010-04-01: (midnight between Thursday and Friday):
+# <a href="http://sns.sy/sns/?path=news/read/11421">
+# http://sns.sy/sns/?path=news/read/11421 (Arabic)
+# </a>
+
+Rule	Syria	2008	only	-	Apr	Fri>=1	0:00	1:00	S
+Rule	Syria	2008	only	-	Nov	1	0:00	0	-
+Rule	Syria	2009	only	-	Mar	lastFri	0:00	1:00	S
+Rule	Syria	2010	max	-	Apr	Fri>=1	0:00	1:00	S
+Rule	Syria	2009	max	-	Oct	lastFri	0:00	0	-
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Damascus	2:25:12 -	LMT	1920	# Dimashq
+			2:00	Syria	EE%sT
+
+# Tajikistan
+# From Shanks & Pottenger.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Dushanbe	4:35:12 -	LMT	1924 May  2
+			5:00	-	DUST	1930 Jun 21 # Dushanbe Time
+			6:00 RussiaAsia DUS%sT	1991 Mar 31 2:00s
+			5:00	1:00	DUSST	1991 Sep  9 2:00s
+			5:00	-	TJT		    # Tajikistan Time
+
+# Thailand
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Bangkok	6:42:04	-	LMT	1880
+			6:42:04	-	BMT	1920 Apr # Bangkok Mean Time
+			7:00	-	ICT
+
+# Turkmenistan
+# From Shanks & Pottenger.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Ashgabat	3:53:32 -	LMT	1924 May  2 # or Ashkhabad
+			4:00	-	ASHT	1930 Jun 21 # Ashkhabad Time
+			5:00 RussiaAsia	ASH%sT	1991 Mar 31 2:00
+			4:00 RussiaAsia	ASH%sT	1991 Oct 27 # independence
+			4:00 RussiaAsia	TM%sT	1992 Jan 19 2:00
+			5:00	-	TMT
+
+# United Arab Emirates
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Dubai	3:41:12 -	LMT	1920
+			4:00	-	GST
+
+# Uzbekistan
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Samarkand	4:27:12 -	LMT	1924 May  2
+			4:00	-	SAMT	1930 Jun 21 # Samarkand Time
+			5:00	-	SAMT	1981 Apr  1
+			5:00	1:00	SAMST	1981 Oct  1
+			6:00	-	TAST	1982 Apr  1 # Tashkent Time
+			5:00 RussiaAsia	SAM%sT	1991 Sep  1 # independence
+			5:00 RussiaAsia	UZ%sT	1992
+			5:00	-	UZT
+Zone	Asia/Tashkent	4:37:12 -	LMT	1924 May  2
+			5:00	-	TAST	1930 Jun 21 # Tashkent Time
+			6:00 RussiaAsia	TAS%sT	1991 Mar 31 2:00
+			5:00 RussiaAsia	TAS%sT	1991 Sep  1 # independence
+			5:00 RussiaAsia	UZ%sT	1992
+			5:00	-	UZT
+
+# Vietnam
+
+# From Arthur David Olson (2008-03-18):
+# The English-language name of Vietnam's most populous city is "Ho Chi Min City";
+# we use Ho_Chi_Minh below to avoid a name of more than 14 characters.
+
+# From Shanks & Pottenger:
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Ho_Chi_Minh	7:06:40 -	LMT	1906 Jun  9
+			7:06:20	-	SMT	1911 Mar 11 0:01 # Saigon MT?
+			7:00	-	ICT	1912 May
+			8:00	-	ICT	1931 May
+			7:00	-	ICT
+
+# Yemen
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Asia/Aden	3:00:48	-	LMT	1950
+			3:00	-	AST
diff --git a/JodaTime/src/java/org/joda/time/tz/src/australasia b/JodaTime/src/java/org/joda/time/tz/src/australasia
index 0223bbc39..36a81b0fb 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/australasia
+++ b/JodaTime/src/java/org/joda/time/tz/src/australasia
@@ -1,1454 +1,1539 @@
-# @(#)australasia	8.9
-# <pre>
-
-# This file also includes Pacific islands.
-
-# Notes are at the end of this file
-
-###############################################################################
-
-# Australia
-
-# Please see the notes below for the controversy about "EST" versus "AEST" etc.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Aus	1917	only	-	Jan	 1	0:01	1:00	-
-Rule	Aus	1917	only	-	Mar	25	2:00	0	-
-Rule	Aus	1942	only	-	Jan	 1	2:00	1:00	-
-Rule	Aus	1942	only	-	Mar	29	2:00	0	-
-Rule	Aus	1942	only	-	Sep	27	2:00	1:00	-
-Rule	Aus	1943	1944	-	Mar	lastSun	2:00	0	-
-Rule	Aus	1943	only	-	Oct	 3	2:00	1:00	-
-# Go with Whitman and the Australian National Standards Commission, which
-# says W Australia didn't use DST in 1943/1944.  Ignore Whitman's claim that
-# 1944/1945 was just like 1943/1944.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-# Northern Territory
-Zone Australia/Darwin	 8:43:20 -	LMT	1895 Feb
-			 9:00	-	CST	1899 May
-			 9:30	Aus	CST
-# Western Australia
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	AW	1974	only	-	Oct	lastSun	2:00s	1:00	-
-Rule	AW	1975	only	-	Mar	Sun>=1	2:00s	0	-
-Rule	AW	1983	only	-	Oct	lastSun	2:00s	1:00	-
-Rule	AW	1984	only	-	Mar	Sun>=1	2:00s	0	-
-Rule	AW	1991	only	-	Nov	17	2:00s	1:00	-
-Rule	AW	1992	only	-	Mar	Sun>=1	2:00s	0	-
-Rule	AW	2006	only	-	Dec	 3	2:00s	1:00	-
-Rule	AW	2007	2009	-	Mar	lastSun	2:00s	0	-
-Rule	AW	2007	2008	-	Oct	lastSun	2:00s	1:00	-
-Zone Australia/Perth	 7:43:24 -	LMT	1895 Dec
-			 8:00	Aus	WST	1943 Jul
-			 8:00	AW	WST
-Zone Australia/Eucla	 8:35:28 -	LMT	1895 Dec
-			 8:45	Aus	CWST	1943 Jul
-			 8:45	AW	CWST
-
-# Queensland
-#
-# From Alex Livingston (1996-11-01):
-# I have heard or read more than once that some resort islands off the coast
-# of Queensland chose to keep observing daylight-saving time even after
-# Queensland ceased to.
-#
-# From Paul Eggert (1996-11-22):
-# IATA SSIM (1993-02/1994-09) say that the Holiday Islands (Hayman, Lindeman,
-# Hamilton) observed DST for two years after the rest of Queensland stopped.
-# Hamilton is the largest, but there is also a Hamilton in Victoria,
-# so use Lindeman.
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	AQ	1971	only	-	Oct	lastSun	2:00s	1:00	-
-Rule	AQ	1972	only	-	Feb	lastSun	2:00s	0	-
-Rule	AQ	1989	1991	-	Oct	lastSun	2:00s	1:00	-
-Rule	AQ	1990	1992	-	Mar	Sun>=1	2:00s	0	-
-Rule	Holiday	1992	1993	-	Oct	lastSun	2:00s	1:00	-
-Rule	Holiday	1993	1994	-	Mar	Sun>=1	2:00s	0	-
-Zone Australia/Brisbane	10:12:08 -	LMT	1895
-			10:00	Aus	EST	1971
-			10:00	AQ	EST
-Zone Australia/Lindeman  9:55:56 -	LMT	1895
-			10:00	Aus	EST	1971
-			10:00	AQ	EST	1992 Jul
-			10:00	Holiday	EST
-
-# South Australia
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	AS	1971	1985	-	Oct	lastSun	2:00s	1:00	-
-Rule	AS	1986	only	-	Oct	19	2:00s	1:00	-
-Rule	AS	1987	2007	-	Oct	lastSun	2:00s	1:00	-
-Rule	AS	1972	only	-	Feb	27	2:00s	0	-
-Rule	AS	1973	1985	-	Mar	Sun>=1	2:00s	0	-
-Rule	AS	1986	1989	-	Mar	Sun>=15	2:00s	0	-
-Rule	AS	1990	only	-	Mar	Sun>=18	2:00s	0	-
-Rule	AS	1991	only	-	Mar	Sun>=1	2:00s	0	-
-Rule	AS	1992	only	-	Mar	Sun>=18	2:00s	0	-
-Rule	AS	1993	only	-	Mar	Sun>=1	2:00s	0	-
-Rule	AS	1994	only	-	Mar	Sun>=18	2:00s	0	-
-Rule	AS	1995	2005	-	Mar	lastSun	2:00s	0	-
-Rule	AS	2006	only	-	Apr	Sun>=1	2:00s	0	-
-Rule	AS	2007	only	-	Mar	lastSun	2:00s	0	-
-Rule	AS	2008	max	-	Apr	Sun>=1	2:00s	0	-
-Rule	AS	2008	max	-	Oct	Sun>=1	2:00s	1:00	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Australia/Adelaide	9:14:20 -	LMT	1895 Feb
-			9:00	-	CST	1899 May
-			9:30	Aus	CST	1971
-			9:30	AS	CST
-
-# Tasmania
-#
-# From Paul Eggert (2005-08-16):
-# <http://www.bom.gov.au/climate/averages/tables/dst_times.shtml>
-# says King Island didn't observe DST from WWII until late 1971.
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	AT	1967	only	-	Oct	Sun>=1	2:00s	1:00	-
-Rule	AT	1968	only	-	Mar	lastSun	2:00s	0	-
-Rule	AT	1968	1985	-	Oct	lastSun	2:00s	1:00	-
-Rule	AT	1969	1971	-	Mar	Sun>=8	2:00s	0	-
-Rule	AT	1972	only	-	Feb	lastSun	2:00s	0	-
-Rule	AT	1973	1981	-	Mar	Sun>=1	2:00s	0	-
-Rule	AT	1982	1983	-	Mar	lastSun	2:00s	0	-
-Rule	AT	1984	1986	-	Mar	Sun>=1	2:00s	0	-
-Rule	AT	1986	only	-	Oct	Sun>=15	2:00s	1:00	-
-Rule	AT	1987	1990	-	Mar	Sun>=15	2:00s	0	-
-Rule	AT	1987	only	-	Oct	Sun>=22	2:00s	1:00	-
-Rule	AT	1988	1990	-	Oct	lastSun	2:00s	1:00	-
-Rule	AT	1991	1999	-	Oct	Sun>=1	2:00s	1:00	-
-Rule	AT	1991	2005	-	Mar	lastSun	2:00s	0	-
-Rule	AT	2000	only	-	Aug	lastSun	2:00s	1:00	-
-Rule	AT	2001	max	-	Oct	Sun>=1	2:00s	1:00	-
-Rule	AT	2006	only	-	Apr	Sun>=1	2:00s	0	-
-Rule	AT	2007	only	-	Mar	lastSun	2:00s	0	-
-Rule	AT	2008	max	-	Apr	Sun>=1	2:00s	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Australia/Hobart	9:49:16	-	LMT	1895 Sep
-			10:00	-	EST	1916 Oct 1 2:00
-			10:00	1:00	EST	1917 Feb
-			10:00	Aus	EST	1967
-			10:00	AT	EST
-Zone Australia/Currie	9:35:28	-	LMT	1895 Sep
-			10:00	-	EST	1916 Oct 1 2:00
-			10:00	1:00	EST	1917 Feb
-			10:00	Aus	EST	1971 Jul
-			10:00	AT	EST
-
-# Victoria
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	AV	1971	1985	-	Oct	lastSun	2:00s	1:00	-
-Rule	AV	1972	only	-	Feb	lastSun	2:00s	0	-
-Rule	AV	1973	1985	-	Mar	Sun>=1	2:00s	0	-
-Rule	AV	1986	1990	-	Mar	Sun>=15	2:00s	0	-
-Rule	AV	1986	1987	-	Oct	Sun>=15	2:00s	1:00	-
-Rule	AV	1988	1999	-	Oct	lastSun	2:00s	1:00	-
-Rule	AV	1991	1994	-	Mar	Sun>=1	2:00s	0	-
-Rule	AV	1995	2005	-	Mar	lastSun	2:00s	0	-
-Rule	AV	2000	only	-	Aug	lastSun	2:00s	1:00	-
-Rule	AV	2001	2007	-	Oct	lastSun	2:00s	1:00	-
-Rule	AV	2006	only	-	Apr	Sun>=1	2:00s	0	-
-Rule	AV	2007	only	-	Mar	lastSun	2:00s	0	-
-Rule	AV	2008	max	-	Apr	Sun>=1	2:00s	0	-
-Rule	AV	2008	max	-	Oct	Sun>=1	2:00s	1:00	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Australia/Melbourne 9:39:52 -	LMT	1895 Feb
-			10:00	Aus	EST	1971
-			10:00	AV	EST
-
-# New South Wales
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	AN	1971	1985	-	Oct	lastSun	2:00s	1:00	-
-Rule	AN	1972	only	-	Feb	27	2:00s	0	-
-Rule	AN	1973	1981	-	Mar	Sun>=1	2:00s	0	-
-Rule	AN	1982	only	-	Apr	Sun>=1	2:00s	0	-
-Rule	AN	1983	1985	-	Mar	Sun>=1	2:00s	0	-
-Rule	AN	1986	1989	-	Mar	Sun>=15	2:00s	0	-
-Rule	AN	1986	only	-	Oct	19	2:00s	1:00	-
-Rule	AN	1987	1999	-	Oct	lastSun	2:00s	1:00	-
-Rule	AN	1990	1995	-	Mar	Sun>=1	2:00s	0	-
-Rule	AN	1996	2005	-	Mar	lastSun	2:00s	0	-
-Rule	AN	2000	only	-	Aug	lastSun	2:00s	1:00	-
-Rule	AN	2001	2007	-	Oct	lastSun	2:00s	1:00	-
-Rule	AN	2006	only	-	Apr	Sun>=1	2:00s	0	-
-Rule	AN	2007	only	-	Mar	lastSun	2:00s	0	-
-Rule	AN	2008	max	-	Apr	Sun>=1	2:00s	0	-
-Rule	AN	2008	max	-	Oct	Sun>=1	2:00s	1:00	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Australia/Sydney	10:04:52 -	LMT	1895 Feb
-			10:00	Aus	EST	1971
-			10:00	AN	EST
-Zone Australia/Broken_Hill 9:25:48 -	LMT	1895 Feb
-			10:00	-	EST	1896 Aug 23
-			9:00	-	CST	1899 May
-			9:30	Aus	CST	1971
-			9:30	AN	CST	2000
-			9:30	AS	CST
-
-# Lord Howe Island
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	LH	1981	1984	-	Oct	lastSun	2:00	1:00	-
-Rule	LH	1982	1985	-	Mar	Sun>=1	2:00	0	-
-Rule	LH	1985	only	-	Oct	lastSun	2:00	0:30	-
-Rule	LH	1986	1989	-	Mar	Sun>=15	2:00	0	-
-Rule	LH	1986	only	-	Oct	19	2:00	0:30	-
-Rule	LH	1987	1999	-	Oct	lastSun	2:00	0:30	-
-Rule	LH	1990	1995	-	Mar	Sun>=1	2:00	0	-
-Rule	LH	1996	2005	-	Mar	lastSun	2:00	0	-
-Rule	LH	2000	only	-	Aug	lastSun	2:00	0:30	-
-Rule	LH	2001	2007	-	Oct	lastSun	2:00	0:30	-
-Rule	LH	2006	only	-	Apr	Sun>=1	2:00	0	-
-Rule	LH	2007	only	-	Mar	lastSun	2:00	0	-
-Rule	LH	2008	max	-	Apr	Sun>=1	2:00	0	-
-Rule	LH	2008	max	-	Oct	Sun>=1	2:00	0:30	-
-Zone Australia/Lord_Howe 10:36:20 -	LMT	1895 Feb
-			10:00	-	EST	1981 Mar
-			10:30	LH	LHST
-
-# Australian miscellany
-#
-# Ashmore Is, Cartier
-# no indigenous inhabitants; only seasonal caretakers
-# no times are set
-#
-# Coral Sea Is
-# no indigenous inhabitants; only meteorologists
-# no times are set
-#
-# Macquarie
-# permanent occupation (scientific station) since 1948;
-# sealing and penguin oil station operated 1888/1917
-# like Australia/Hobart
-
-# Christmas
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Indian/Christmas	7:02:52 -	LMT	1895 Feb
-			7:00	-	CXT	# Christmas Island Time
-
-# Cook Is
-# From Shanks & Pottenger:
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Cook	1978	only	-	Nov	12	0:00	0:30	HS
-Rule	Cook	1979	1991	-	Mar	Sun>=1	0:00	0	-
-Rule	Cook	1979	1990	-	Oct	lastSun	0:00	0:30	HS
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Rarotonga	-10:39:04 -	LMT	1901		# Avarua
-			-10:30	-	CKT	1978 Nov 12	# Cook Is Time
-			-10:00	Cook	CK%sT
-
-# Cocos
-# These islands were ruled by the Ross family from about 1830 to 1978.
-# We don't know when standard time was introduced; for now, we guess 1900.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Indian/Cocos	6:27:40	-	LMT	1900
-			6:30	-	CCT	# Cocos Islands Time
-
-# Fiji
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Fiji	1998	1999	-	Nov	Sun>=1	2:00	1:00	S
-Rule	Fiji	1999	2000	-	Feb	lastSun	3:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Pacific/Fiji	11:53:40 -	LMT	1915 Oct 26	# Suva
-			12:00	Fiji	FJ%sT	# Fiji Time
-
-# French Polynesia
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Pacific/Gambier	 -8:59:48 -	LMT	1912 Oct	# Rikitea
-			 -9:00	-	GAMT	# Gambier Time
-Zone	Pacific/Marquesas -9:18:00 -	LMT	1912 Oct
-			 -9:30	-	MART	# Marquesas Time
-Zone	Pacific/Tahiti	 -9:58:16 -	LMT	1912 Oct	# Papeete
-			-10:00	-	TAHT	# Tahiti Time
-# Clipperton (near North America) is administered from French Polynesia;
-# it is uninhabited.
-
-# Guam
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Pacific/Guam	-14:21:00 -	LMT	1844 Dec 31
-			 9:39:00 -	LMT	1901		# Agana
-			10:00	-	GST	2000 Dec 23	# Guam
-			10:00	-	ChST	# Chamorro Standard Time
-
-# Kiribati
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Tarawa	 11:32:04 -	LMT	1901		# Bairiki
-			 12:00	-	GILT		 # Gilbert Is Time
-Zone Pacific/Enderbury	-11:24:20 -	LMT	1901
-			-12:00	-	PHOT	1979 Oct # Phoenix Is Time
-			-11:00	-	PHOT	1995
-			 13:00	-	PHOT
-Zone Pacific/Kiritimati	-10:29:20 -	LMT	1901
-			-10:40	-	LINT	1979 Oct # Line Is Time
-			-10:00	-	LINT	1995
-			 14:00	-	LINT
-
-# N Mariana Is
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Saipan	-14:17:00 -	LMT	1844 Dec 31
-			 9:43:00 -	LMT	1901
-			 9:00	-	MPT	1969 Oct # N Mariana Is Time
-			10:00	-	MPT	2000 Dec 23
-			10:00	-	ChST	# Chamorro Standard Time
-
-# Marshall Is
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Majuro	11:24:48 -	LMT	1901
-			11:00	-	MHT	1969 Oct # Marshall Islands Time
-			12:00	-	MHT
-Zone Pacific/Kwajalein	11:09:20 -	LMT	1901
-			11:00	-	MHT	1969 Oct
-			-12:00	-	KWAT	1993 Aug 20	# Kwajalein Time
-			12:00	-	MHT
-
-# Micronesia
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Truk	10:07:08 -	LMT	1901
-			10:00	-	TRUT			# Truk Time
-Zone Pacific/Ponape	10:32:52 -	LMT	1901		# Kolonia
-			11:00	-	PONT			# Ponape Time
-Zone Pacific/Kosrae	10:51:56 -	LMT	1901
-			11:00	-	KOST	1969 Oct	# Kosrae Time
-			12:00	-	KOST	1999
-			11:00	-	KOST
-
-# Nauru
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Pacific/Nauru	11:07:40 -	LMT	1921 Jan 15	# Uaobe
-			11:30	-	NRT	1942 Mar 15	# Nauru Time
-			9:00	-	JST	1944 Aug 15
-			11:30	-	NRT	1979 May
-			12:00	-	NRT
-
-# New Caledonia
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	NC	1977	1978	-	Dec	Sun>=1	0:00	1:00	S
-Rule	NC	1978	1979	-	Feb	27	0:00	0	-
-Rule	NC	1996	only	-	Dec	 1	2:00s	1:00	S
-# Shanks & Pottenger say the following was at 2:00; go with IATA.
-Rule	NC	1997	only	-	Mar	 2	2:00s	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Pacific/Noumea	11:05:48 -	LMT	1912 Jan 13
-			11:00	NC	NC%sT
-
-
-###############################################################################
-
-# New Zealand
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	NZ	1927	only	-	Nov	 6	2:00	1:00	S
-Rule	NZ	1928	only	-	Mar	 4	2:00	0	M
-Rule	NZ	1928	1933	-	Oct	Sun>=8	2:00	0:30	S
-Rule	NZ	1929	1933	-	Mar	Sun>=15	2:00	0	M
-Rule	NZ	1934	1940	-	Apr	lastSun	2:00	0	M
-Rule	NZ	1934	1940	-	Sep	lastSun	2:00	0:30	S
-Rule	NZ	1946	only	-	Jan	 1	0:00	0	S
-# Since 1957 Chatham has been 45 minutes ahead of NZ, but there's no
-# convenient notation for this so we must duplicate the Rule lines.
-Rule	NZ	1974	only	-	Nov	Sun>=1	2:00s	1:00	D
-Rule	Chatham	1974	only	-	Nov	Sun>=1	2:45s	1:00	D
-Rule	NZ	1975	only	-	Feb	lastSun	2:00s	0	S
-Rule	Chatham	1975	only	-	Feb	lastSun	2:45s	0	S
-Rule	NZ	1975	1988	-	Oct	lastSun	2:00s	1:00	D
-Rule	Chatham	1975	1988	-	Oct	lastSun	2:45s	1:00	D
-Rule	NZ	1976	1989	-	Mar	Sun>=1	2:00s	0	S
-Rule	Chatham	1976	1989	-	Mar	Sun>=1	2:45s	0	S
-Rule	NZ	1989	only	-	Oct	Sun>=8	2:00s	1:00	D
-Rule	Chatham	1989	only	-	Oct	Sun>=8	2:45s	1:00	D
-Rule	NZ	1990	2006	-	Oct	Sun>=1	2:00s	1:00	D
-Rule	Chatham	1990	2006	-	Oct	Sun>=1	2:45s	1:00	D
-Rule	NZ	1990	2007	-	Mar	Sun>=15	2:00s	0	S
-Rule	Chatham	1990	2007	-	Mar	Sun>=15	2:45s	0	S
-Rule	NZ	2007	max	-	Sep	lastSun	2:00s	1:00	D
-Rule	Chatham	2007	max	-	Sep	lastSun	2:45s	1:00	D
-Rule	NZ	2008	max	-	Apr	Sun>=1	2:00s	0	S
-Rule	Chatham	2008	max	-	Apr	Sun>=1	2:45s	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Auckland	11:39:04 -	LMT	1868 Nov  2
-			11:30	NZ	NZ%sT	1946 Jan  1
-			12:00	NZ	NZ%sT
-Zone Pacific/Chatham	12:13:48 -	LMT	1957 Jan  1
-			12:45	Chatham	CHA%sT
-
-
-# Auckland Is
-# uninhabited; Maori and Moriori, colonial settlers, pastoralists, sealers,
-# and scientific personnel have wintered
-
-# Campbell I
-# minor whaling stations operated 1909/1914
-# scientific station operated 1941/1995;
-# previously whalers, sealers, pastoralists, and scientific personnel wintered
-# was probably like Pacific/Auckland
-
-###############################################################################
-
-
-# Niue
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Pacific/Niue	-11:19:40 -	LMT	1901		# Alofi
-			-11:20	-	NUT	1951	# Niue Time
-			-11:30	-	NUT	1978 Oct 1
-			-11:00	-	NUT
-
-# Norfolk
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Pacific/Norfolk	11:11:52 -	LMT	1901		# Kingston
-			11:12	-	NMT	1951	# Norfolk Mean Time
-			11:30	-	NFT		# Norfolk Time
-
-# Palau (Belau)
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Palau	8:57:56 -	LMT	1901		# Koror
-			9:00	-	PWT	# Palau Time
-
-# Papua New Guinea
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Port_Moresby 9:48:40 -	LMT	1880
-			9:48:32	-	PMMT	1895	# Port Moresby Mean Time
-			10:00	-	PGT		# Papua New Guinea Time
-
-# Pitcairn
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Pitcairn	-8:40:20 -	LMT	1901		# Adamstown
-			-8:30	-	PNT	1998 Apr 27 00:00
-			-8:00	-	PST	# Pitcairn Standard Time
-
-# American Samoa
-Zone Pacific/Pago_Pago	 12:37:12 -	LMT	1879 Jul  5
-			-11:22:48 -	LMT	1911
-			-11:30	-	SAMT	1950		# Samoa Time
-			-11:00	-	NST	1967 Apr	# N=Nome
-			-11:00	-	BST	1983 Nov 30	# B=Bering
-			-11:00	-	SST			# S=Samoa
-
-# Samoa
-Zone Pacific/Apia	 12:33:04 -	LMT	1879 Jul  5
-			-11:26:56 -	LMT	1911
-			-11:30	-	SAMT	1950		# Samoa Time
-			-11:00	-	WST			# Samoa Time
-
-# Solomon Is
-# excludes Bougainville, for which see Papua New Guinea
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Guadalcanal 10:39:48 -	LMT	1912 Oct	# Honiara
-			11:00	-	SBT	# Solomon Is Time
-
-# Tokelau Is
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Pacific/Fakaofo	-11:24:56 -	LMT	1901
-			-10:00	-	TKT	# Tokelau Time
-
-# Tonga
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Tonga	1999	only	-	Oct	 7	2:00s	1:00	S
-Rule	Tonga	2000	only	-	Mar	19	2:00s	0	-
-Rule	Tonga	2000	2001	-	Nov	Sun>=1	2:00	1:00	S
-Rule	Tonga	2001	2002	-	Jan	lastSun	2:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Tongatapu	12:19:20 -	LMT	1901
-			12:20	-	TOT	1941 # Tonga Time
-			13:00	-	TOT	1999
-			13:00	Tonga	TO%sT
-
-# Tuvalu
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Funafuti	11:56:52 -	LMT	1901
-			12:00	-	TVT	# Tuvalu Time
-
-
-# US minor outlying islands
-
-# Howland, Baker
-# Howland was mined for guano by American companies 1857-1878 and British
-# 1886-1891; Baker was similar but exact dates are not known.
-# Inhabited by civilians 1935-1942; U.S. military bases 1943-1944;
-# uninhabited thereafter.
-# Howland observed Hawaii Standard Time (UTC-10:30) in 1937;
-# see page 206 of Elgen M. Long and Marie K. Long,
-# Amelia Earhart: the Mystery Solved, Simon & Schuster (2000).
-# So most likely Howland and Baker observed Hawaii Time from 1935
-# until they were abandoned after the war.
-
-# Jarvis
-# Mined for guano by American companies 1857-1879 and British 1883?-1891?.
-# Inhabited by civilians 1935-1942; IGY scientific base 1957-1958;
-# uninhabited thereafter.
-# no information; was probably like Pacific/Kiritimati
-
-# Johnston
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Pacific/Johnston	-10:00	-	HST
-
-# Kingman
-# uninhabited
-
-# Midway
-#
-# From Mark Brader (2005-01-23):
-# [Fallacies and Fantasies of Air Transport History, by R.E.G. Davies,
-# published 1994 by Paladwr Press, McLean, VA, USA; ISBN 0-9626483-5-3]
-# reproduced a Pan American Airways timeables from 1936, for their weekly
-# "Orient Express" flights between San Francisco and Manila, and connecting
-# flights to Chicago and the US East Coast.  As it uses some time zone
-# designations that I've never seen before:....
-# Fri. 6:30A Lv. HONOLOLU (Pearl Harbor), H.I.   H.L.T. Ar. 5:30P Sun.
-#  "   3:00P Ar. MIDWAY ISLAND . . . . . . . . . M.L.T. Lv. 6:00A  "
-#
-Zone Pacific/Midway	-11:49:28 -	LMT	1901
-			-11:00	-	NST	1956 Jun  3
-			-11:00	1:00	NDT	1956 Sep  2
-			-11:00	-	NST	1967 Apr	# N=Nome
-			-11:00	-	BST	1983 Nov 30	# B=Bering
-			-11:00	-	SST			# S=Samoa
-
-# Palmyra
-# uninhabited since World War II; was probably like Pacific/Kiritimati
-
-# Wake
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Pacific/Wake	11:06:28 -	LMT	1901
-			12:00	-	WAKT	# Wake Time
-
-
-# Vanuatu
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Vanuatu	1983	only	-	Sep	25	0:00	1:00	S
-Rule	Vanuatu	1984	1991	-	Mar	Sun>=23	0:00	0	-
-Rule	Vanuatu	1984	only	-	Oct	23	0:00	1:00	S
-Rule	Vanuatu	1985	1991	-	Sep	Sun>=23	0:00	1:00	S
-Rule	Vanuatu	1992	1993	-	Jan	Sun>=23	0:00	0	-
-Rule	Vanuatu	1992	only	-	Oct	Sun>=23	0:00	1:00	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Pacific/Efate	11:13:16 -	LMT	1912 Jan 13		# Vila
-			11:00	Vanuatu	VU%sT	# Vanuatu Time
-
-# Wallis and Futuna
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Pacific/Wallis	12:15:20 -	LMT	1901
-			12:00	-	WFT	# Wallis & Futuna Time
-
-###############################################################################
-
-# NOTES
-
-# This data is by no means authoritative; if you think you know better,
-# go ahead and edit the file (and please send any changes to
-# tz@elsie.nci.nih.gov for general use in the future).
-
-# From Paul Eggert (2006-03-22):
-# A good source for time zone historical data outside the U.S. is
-# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),
-# San Diego: ACS Publications, Inc. (2003).
-#
-# Gwillim Law writes that a good source
-# for recent time zone data is the International Air Transport
-# Association's Standard Schedules Information Manual (IATA SSIM),
-# published semiannually.  Law sent in several helpful summaries
-# of the IATA's data after 1990.
-#
-# Except where otherwise noted, Shanks & Pottenger is the source for
-# entries through 1990, and IATA SSIM is the source for entries afterwards.
-#
-# Another source occasionally used is Edward W. Whitman, World Time Differences,
-# Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated), which
-# I found in the UCLA library.
-#
-# A reliable and entertaining source about time zones is
-# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).
-#
-# I invented the abbreviations marked `*' in the following table;
-# the rest are from earlier versions of this file, or from other sources.
-# Corrections are welcome!
-#		std dst
-#		LMT	Local Mean Time
-#	  8:00	WST WST	Western Australia
-#	  8:45	CWST CWST Central Western Australia*
-#	  9:00	JST	Japan
-#	  9:30	CST CST	Central Australia
-#	 10:00	EST EST	Eastern Australia
-#	 10:00	ChST	Chamorro
-#	 10:30	LHST LHST Lord Howe*
-#	 11:30	NZMT NZST New Zealand through 1945
-#	 12:00	NZST NZDT New Zealand 1946-present
-#	 12:45	CHAST CHADT Chatham*
-#	-11:00	SST	Samoa
-#	-10:00	HST	Hawaii
-#	- 8:00	PST	Pitcairn*
-#
-# See the `northamerica' file for Hawaii.
-# See the `southamerica' file for Easter I and the Galapagos Is.
-
-###############################################################################
-
-# Australia
-
-# From Paul Eggert (2005-12-08):
-# <a href="http://www.bom.gov.au/climate/averages/tables/dst_times.shtml">
-# Implementation Dates of Daylight Saving Time within Australia
-# </a> summarizes daylight saving issues in Australia.
-
-# From Arthur David Olson (2005-12-12):
-# <a href="http://www.lawlink.nsw.gov.au/lawlink/Corporate/ll_agdinfo.nsf/pages/community_relations_daylight_saving">
-# Lawlink NSW:Daylight Saving in New South Wales
-# </a> covers New South Wales in particular.
-
-# From John Mackin (1991-03-06):
-# We in Australia have _never_ referred to DST as `daylight' time.
-# It is called `summer' time.  Now by a happy coincidence, `summer'
-# and `standard' happen to start with the same letter; hence, the
-# abbreviation does _not_ change...
-# The legislation does not actually define abbreviations, at least
-# in this State, but the abbreviation is just commonly taken to be the
-# initials of the phrase, and the legislation here uniformly uses
-# the phrase `summer time' and does not use the phrase `daylight
-# time'.
-# Announcers on the Commonwealth radio network, the ABC (for Australian
-# Broadcasting Commission), use the phrases `Eastern Standard Time'
-# or `Eastern Summer Time'.  (Note, though, that as I say in the
-# current australasia file, there is really no such thing.)  Announcers
-# on its overseas service, Radio Australia, use the same phrases
-# prefixed by the word `Australian' when referring to local times;
-# time announcements on that service, naturally enough, are made in UTC.
-
-# From Arthur David Olson (1992-03-08):
-# Given the above, what's chosen for year-round use is:
-#	CST	for any place operating at a GMTOFF of 9:30
-#	WST	for any place operating at a GMTOFF of 8:00
-#	EST	for any place operating at a GMTOFF of 10:00
-
-# From Chuck Soper (2006-06-01):
-# I recently found this Australian government web page on time zones:
-# <http://www.australia.gov.au/about-australia-13time>
-# And this government web page lists time zone names and abbreviations:
-# <http://www.bom.gov.au/climate/averages/tables/daysavtm.shtml>
-
-# From Paul Eggert (2001-04-05), summarizing a long discussion about "EST"
-# versus "AEST" etc.:
-#
-# I see the following points of dispute:
-#
-# * How important are unique time zone abbreviations?
-#
-#   Here I tend to agree with the point (most recently made by Chris
-#   Newman) that unique abbreviations should not be essential for proper
-#   operation of software.  We have other instances of ambiguity
-#   (e.g. "IST" denoting both "Israel Standard Time" and "Indian
-#   Standard Time"), and they are not likely to go away any time soon.
-#   In the old days, some software mistakenly relied on unique
-#   abbreviations, but this is becoming less true with time, and I don't
-#   think it's that important to cater to such software these days.
-#
-#   On the other hand, there is another motivation for unambiguous
-#   abbreviations: it cuts down on human confusion.  This is
-#   particularly true for Australia, where "EST" can mean one thing for
-#   time T and a different thing for time T plus 1 second.
-#
-# * Does the relevant legislation indicate which abbreviations should be used?
-#
-#   Here I tend to think that things are a mess, just as they are in
-#   many other countries.  We Americans are currently disagreeing about
-#   which abbreviation to use for the newly legislated Chamorro Standard
-#   Time, for example.
-#
-#   Personally, I would prefer to use common practice; I would like to
-#   refer to legislation only for examples of common practice, or as a
-#   tiebreaker.
-#
-# * Do Australians more often use "Eastern Daylight Time" or "Eastern
-#   Summer Time"?  Do they typically prefix the time zone names with
-#   the word "Australian"?
-#
-#   My own impression is that both "Daylight Time" and "Summer Time" are
-#   common and are widely understood, but that "Summer Time" is more
-#   popular; and that the leading "A" is also common but is omitted more
-#   often than not.  I just used AltaVista advanced search and got the
-#   following count of page hits:
-#
-#     1,103 "Eastern Summer Time" AND domain:au
-#       971 "Australian Eastern Summer Time" AND domain:au
-#       613 "Eastern Daylight Time" AND domain:au
-#       127 "Australian Eastern Daylight Time" AND domain:au
-#
-#   Here "Summer" seems quite a bit more popular than "Daylight",
-#   particularly when we know the time zone is Australian and not US,
-#   say.  The "Australian" prefix seems to be popular for Eastern Summer
-#   Time, but unpopular for Eastern Daylight Time.
-#
-#   For abbreviations, tools like AltaVista are less useful because of
-#   ambiguity.  Many hits are not really time zones, unfortunately, and
-#   many hits denote US time zones and not Australian ones.  But here
-#   are the hit counts anyway:
-#
-#     161,304 "EST" and domain:au
-#      25,156 "EDT" and domain:au
-#      18,263 "AEST" and domain:au
-#      10,416 "AEDT" and domain:au
-#
-#      14,538 "CST" and domain:au
-#       5,728 "CDT" and domain:au
-#         176 "ACST" and domain:au
-#          29 "ACDT" and domain:au
-#
-#       7,539 "WST" and domain:au
-#          68 "AWST" and domain:au
-#
-#   This data suggest that Australians tend to omit the "A" prefix in
-#   practice.  The situation for "ST" versus "DT" is less clear, given
-#   the ambiguities involved.
-#
-# * How do Australians feel about the abbreviations in the tz database?
-#
-#   If you just count Australians on this list, I count 2 in favor and 3
-#   against.  One of the "against" votes (David Keegel) counseled delay,
-#   saying that both AEST/AEDT and EST/EST are widely used and
-#   understood in Australia.
-
-# From Paul Eggert (1995-12-19):
-# Shanks & Pottenger report 2:00 for all autumn changes in Australia and NZ.
-# Mark Prior writes that his newspaper
-# reports that NSW's fall 1995 change will occur at 2:00,
-# but Robert Elz says it's been 3:00 in Victoria since 1970
-# and perhaps the newspaper's `2:00' is referring to standard time.
-# For now we'll continue to assume 2:00s for changes since 1960.
-
-# From Eric Ulevik (1998-01-05):
-#
-# Here are some URLs to Australian time legislation. These URLs are stable,
-# and should probably be included in the data file. There are probably more
-# relevant entries in this database.
-#
-# NSW (including LHI and Broken Hill):
-# <a href="http://www.austlii.edu.au/au/legis/nsw/consol_act/sta1987137/index.html">
-# Standard Time Act 1987 (updated 1995-04-04)
-# </a>
-# ACT
-# <a href="http://www.austlii.edu.au/au/legis/act/consol_act/stasta1972279/index.html">
-# Standard Time and Summer Time Act 1972
-# </a>
-# SA
-# <a href="http://www.austlii.edu.au/au/legis/sa/consol_act/sta1898137/index.html">
-# Standard Time Act, 1898
-# </a>
-
-# From David Grosz (2005-06-13):
-# It was announced last week that Daylight Saving would be extended by
-# one week next year to allow for the 2006 Commonwealth Games.
-# Daylight Saving is now to end for next year only on the first Sunday
-# in April instead of the last Sunday in March.
-#
-# From Gwillim Law (2005-06-14):
-# I did some Googling and found that all of those states (and territory) plan
-# to extend DST together in 2006.
-# ACT: http://www.cmd.act.gov.au/mediareleases/fileread.cfm?file=86.txt
-# New South Wales: http://www.thecouriermail.news.com.au/common/story_page/0,5936,15538869%255E1702,00.html
-# South Australia: http://www.news.com.au/story/0,10117,15555031-1246,00.html
-# Tasmania: http://www.media.tas.gov.au/release.php?id=14772
-# Victoria: I wasn't able to find anything separate, but the other articles
-# allude to it.
-# But not Queensland
-# http://www.news.com.au/story/0,10117,15564030-1248,00.html.
-
-# Northern Territory
-
-# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
-# # The NORTHERN TERRITORY..  [ Courtesy N.T. Dept of the Chief Minister ]
-# #					[ Nov 1990 ]
-# #	N.T. have never utilised any DST due to sub-tropical/tropical location.
-# ...
-# Zone        Australia/North         9:30    -       CST
-
-# From Bradley White (1991-03-04):
-# A recent excerpt from an Australian newspaper...
-# the Northern Territory do[es] not have daylight saving.
-
-# Western Australia
-
-# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
-# #  The state of WESTERN AUSTRALIA..  [ Courtesy W.A. dept Premier+Cabinet ]
-# #						[ Nov 1990 ]
-# #	W.A. suffers from a great deal of public and political opposition to
-# #	DST in principle. A bill is brought before parliament in most years, but
-# #	usually defeated either in the upper house, or in party caucus
-# #	before reaching parliament.
-# ...
-# Zone	Australia/West		8:00	AW	%sST
-# ...
-# Rule	AW	1974	only	-	Oct	lastSun	2:00	1:00	D
-# Rule	AW	1975	only	-	Mar	Sun>=1	3:00	0	W
-# Rule	AW	1983	only	-	Oct	lastSun	2:00	1:00	D
-# Rule	AW	1984	only	-	Mar	Sun>=1	3:00	0	W
-
-# From Bradley White (1991-03-04):
-# A recent excerpt from an Australian newspaper...
-# Western Australia...do[es] not have daylight saving.
-
-# From John D. Newman via Bradley White (1991-11-02):
-# Western Australia is still on "winter time". Some DH in Sydney
-# rang me at home a few days ago at 6.00am. (He had just arrived at
-# work at 9.00am.)
-# W.A. is switching to Summer Time on Nov 17th just to confuse
-# everybody again.
-
-# From Arthur David Olson (1992-03-08):
-# The 1992 ending date used in the rules is a best guess;
-# it matches what was used in the past.
-
-# <a href="http://www.bom.gov.au/faq/faqgen.htm">
-# The Australian Bureau of Meteorology FAQ
-# </a> (1999-09-27) writes that Giles Meteorological Station uses
-# South Australian time even though it's located in Western Australia.
-
-# Queensland
-# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
-# #   The state of QUEENSLAND.. [ Courtesy Qld. Dept Premier Econ&Trade Devel ]
-# #						[ Dec 1990 ]
-# ...
-# Zone	Australia/Queensland	10:00	AQ	%sST
-# ...
-# Rule	AQ	1971	only	-	Oct	lastSun	2:00	1:00	D
-# Rule	AQ	1972	only	-	Feb	lastSun	3:00	0	E
-# Rule	AQ	1989	max	-	Oct	lastSun	2:00	1:00	D
-# Rule	AQ	1990	max	-	Mar	Sun>=1	3:00	0	E
-
-# From Bradley White (1989-12-24):
-# "Australia/Queensland" now observes daylight time (i.e. from
-# October 1989).
-
-# From Bradley White (1991-03-04):
-# A recent excerpt from an Australian newspaper...
-# ...Queensland...[has] agreed to end daylight saving
-# at 3am tomorrow (March 3)...
-
-# From John Mackin (1991-03-06):
-# I can certainly confirm for my part that Daylight Saving in NSW did in fact
-# end on Sunday, 3 March.  I don't know at what hour, though.  (It surprised
-# me.)
-
-# From Bradley White (1992-03-08):
-# ...there was recently a referendum in Queensland which resulted
-# in the experimental daylight saving system being abandoned. So, ...
-# ...
-# Rule	QLD	1989	1991	-	Oct	lastSun	2:00	1:00	D
-# Rule	QLD	1990	1992	-	Mar	Sun>=1	3:00	0	S
-# ...
-
-# From Arthur David Olson (1992-03-08):
-# The chosen rules the union of the 1971/1972 change and the 1989-1992 changes.
-
-# From Christopher Hunt (2006-11-21), after an advance warning
-# from Jesper Norgaard Welen (2006-11-01):
-# WA are trialing DST for three years.
-# <http://www.parliament.wa.gov.au/parliament/bills.nsf/9A1B183144403DA54825721200088DF1/$File/Bill175-1B.pdf>
-
-# From Rives McDow (2002-04-09):
-# The most interesting region I have found consists of three towns on the
-# southern coast....  South Australia observes daylight saving time; Western
-# Australia does not.  The two states are one and a half hours apart.  The
-# residents decided to forget about this nonsense of changing the clock so
-# much and set the local time 20 hours and 45 minutes from the
-# international date line, or right in the middle of the time of South
-# Australia and Western Australia....
-#
-# From Paul Eggert (2002-04-09):
-# This is confirmed by the section entitled
-# "What's the deal with time zones???" in
-# <http://www.earthsci.unimelb.edu.au/~awatkins/null.html>.
-#
-# From Alex Livingston (2006-12-07):
-# ... it was just on four years ago that I drove along the Eyre Highway,
-# which passes through eastern Western Australia close to the southern
-# coast of the continent.
-#
-# I paid particular attention to the time kept there. There can be no
-# dispute that UTC+08:45 was considered "the time" from the border
-# village just inside the border with South Australia to as far west
-# as just east of Caiguna. There can also be no dispute that Eucla is
-# the largest population centre in this zone....
-#
-# Now that Western Australia is observing daylight saving, the
-# question arose whether this part of the state would follow suit. I
-# just called the border village and confirmed that indeed they have,
-# meaning that they are now observing UTC+09:45.
-#
-# (2006-12-09):
-# I personally doubt that either experimentation with daylight saving
-# in WA or its introduction in SA had anything to do with the genesis
-# of this time zone.  My hunch is that it's been around since well
-# before 1975.  I remember seeing it noted on road maps decades ago.
-
-# From Paul Eggert (2006-12-15):
-# For lack of better info, assume the tradition dates back to the
-# introduction of standard time in 1895.
-
-
-# southeast Australia
-#
-# From Paul Eggert (2007-07-23):
-# Starting autumn 2008 Victoria, NSW, South Australia, Tasmania and the ACT
-# end DST the first Sunday in April and start DST the first Sunday in October.
-# http://www.theage.com.au/news/national/daylight-savings-to-span-six-months/2007/06/27/1182623966703.html
-
-
-# South Australia
-
-# From Bradley White (1991-03-04):
-# A recent excerpt from an Australian newspaper...
-# ...South Australia...[has] agreed to end daylight saving
-# at 3am tomorrow (March 3)...
-
-# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
-# #   The state of SOUTH AUSTRALIA....[ Courtesy of S.A. Dept of Labour ]
-# #						[ Nov 1990 ]
-# ...
-# Zone	Australia/South		9:30	AS	%sST
-# ...
-# Rule	 AS	1971	max	-	Oct	lastSun	2:00	1:00	D
-# Rule	 AS	1972	1985	-	Mar	Sun>=1	3:00	0	C
-# Rule	 AS	1986	1990	-	Mar	Sun>=15	3:00	0	C
-# Rule	 AS	1991	max	-	Mar	Sun>=1	3:00	0	C
-
-# From Bradley White (1992-03-11):
-# Recent correspondence with a friend in Adelaide
-# contained the following exchange:  "Due to the Adelaide Festival,
-# South Australia delays setting back our clocks for a few weeks."
-
-# From Robert Elz (1992-03-13):
-# I heard that apparently (or at least, it appears that)
-# South Aus will have an extra 3 weeks daylight saving every even
-# numbered year (from 1990).  That's when the Adelaide Festival
-# is on...
-
-# From Robert Elz (1992-03-16, 00:57:07 +1000):
-# DST didn't end in Adelaide today (yesterday)....
-# But whether it's "4th Sunday" or "2nd last Sunday" I have no idea whatever...
-# (it's just as likely to be "the Sunday we pick for this year"...).
-
-# From Bradley White (1994-04-11):
-# If Sun, 15 March, 1992 was at +1030 as kre asserts, but yet Sun, 20 March,
-# 1994 was at +0930 as John Connolly's customer seems to assert, then I can
-# only conclude that the actual rule is more complicated....
-
-# From John Warburton (1994-10-07):
-# The new Daylight Savings dates for South Australia ...
-# was gazetted in the Government Hansard on Sep 26 1994....
-# start on last Sunday in October and end in last sunday in March.
-
-# From Paul Eggert (2007-07-23):
-# See "southeast Australia" above for 2008 and later.
-
-# Tasmania
-
-# The rules for 1967 through 1991 were reported by George Shepherd
-# via Simon Woodhead via Robert Elz (1991-03-06):
-# #  The state of TASMANIA.. [Courtesy Tasmanian Dept of Premier + Cabinet ]
-# #					[ Nov 1990 ]
-
-# From Bill Hart via Guy Harris (1991-10-10):
-# Oh yes, the new daylight savings rules are uniquely tasmanian, we have
-# 6 weeks a year now when we are out of sync with the rest of Australia
-# (but nothing new about that).
-
-# From Alex Livingston (1999-10-04):
-# I heard on the ABC (Australian Broadcasting Corporation) radio news on the
-# (long) weekend that Tasmania, which usually goes its own way in this regard,
-# has decided to join with most of NSW, the ACT, and most of Victoria
-# (Australia) and start daylight saving on the last Sunday in August in 2000
-# instead of the first Sunday in October.
-
-# Sim Alam (2000-07-03) reported a legal citation for the 2000/2001 rules:
-# http://www.thelaw.tas.gov.au/fragview/42++1968+GS3A@EN+2000070300
-
-# From Paul Eggert (2007-07-23):
-# See "southeast Australia" above for 2008 and later.
-
-# Victoria
-
-# The rules for 1971 through 1991 were reported by George Shepherd
-# via Simon Woodhead via Robert Elz (1991-03-06):
-# #   The state of VICTORIA.. [ Courtesy of Vic. Dept of Premier + Cabinet ]
-# #						[ Nov 1990 ]
-
-# From Scott Harrington (2001-08-29):
-# On KQED's "City Arts and Lectures" program last night I heard an
-# interesting story about daylight savings time.  Dr. John Heilbron was
-# discussing his book "The Sun in the Church: Cathedrals as Solar
-# Observatories"[1], and in particular the Shrine of Remembrance[2] located
-# in Melbourne, Australia.
-#
-# Apparently the shrine's main purpose is a beam of sunlight which
-# illuminates a special spot on the floor at the 11th hour of the 11th day
-# of the 11th month (Remembrance Day) every year in memory of Australia's
-# fallen WWI soldiers.  And if you go there on Nov. 11, at 11am local time,
-# you will indeed see the sunbeam illuminate the special spot at the
-# expected time.
-#
-# However, that is only because of some special mirror contraption that had
-# to be employed, since due to daylight savings time, the true solar time of
-# the remembrance moment occurs one hour later (or earlier?).  Perhaps
-# someone with more information on this jury-rig can tell us more.
-#
-# [1] http://www.hup.harvard.edu/catalog/HEISUN.html
-# [2] http://www.shrine.org.au
-
-# From Paul Eggert (2007-07-23):
-# See "southeast Australia" above for 2008 and later.
-
-# New South Wales
-
-# From Arthur David Olson:
-# New South Wales and subjurisdictions have their own ideas of a fun time.
-# Based on law library research by John Mackin,
-# who notes:
-#	In Australia, time is not legislated federally, but rather by the
-#	individual states.  Thus, while such terms as ``Eastern Standard Time''
-#	[I mean, of course, Australian EST, not any other kind] are in common
-#	use, _they have NO REAL MEANING_, as they are not defined in the
-#	legislation.  This is very important to understand.
-#	I have researched New South Wales time only...
-
-# From Eric Ulevik (1999-05-26):
-# DST will start in NSW on the last Sunday of August, rather than the usual
-# October in 2000.  [See: Matthew Moore,
-# <a href="http://www.smh.com.au/news/9905/26/pageone/pageone4.html">
-# Two months more daylight saving
-# </a>
-# Sydney Morning Herald (1999-05-26).]
-
-# From Paul Eggert (1999-09-27):
-# See the following official NSW source:
-# <a href="http://dir.gis.nsw.gov.au/cgi-bin/genobject/document/other/daylightsaving/tigGmZ">
-# Daylight Saving in New South Wales.
-# </a>
-#
-# Narrabri Shire (NSW) council has announced it will ignore the extension of
-# daylight saving next year.  See:
-# <a href="http://abc.net.au/news/regionals/neweng/monthly/regeng-22jul1999-1.htm">
-# Narrabri Council to ignore daylight saving
-# </a> (1999-07-22).  For now, we'll wait to see if this really happens.
-#
-# Victoria will following NSW.  See:
-# <a href="http://abc.net.au/local/news/olympics/1999/07/item19990728112314_1.htm">
-# Vic to extend daylight saving
-# </a> (1999-07-28).
-#
-# However, South Australia rejected the DST request.  See:
-# <a href="http://abc.net.au/news/olympics/1999/07/item19990719151754_1.htm">
-# South Australia rejects Olympics daylight savings request
-# </a> (1999-07-19).
-#
-# Queensland also will not observe DST for the Olympics.  See:
-# <a href="http://abc.net.au/news/olympics/1999/06/item19990601114608_1.htm">
-# Qld says no to daylight savings for Olympics
-# </a> (1999-06-01), which quotes Queensland Premier Peter Beattie as saying
-# ``Look you've got to remember in my family when this came up last time
-# I voted for it, my wife voted against it and she said to me it's all very
-# well for you, you don't have to worry about getting the children out of
-# bed, getting them to school, getting them to sleep at night.
-# I've been through all this argument domestically...my wife rules.''
-#
-# Broken Hill will stick with South Australian time in 2000.  See:
-# <a href="http://abc.net.au/news/regionals/brokenh/monthly/regbrok-21jul1999-6.htm">
-# Broken Hill to be behind the times
-# </a> (1999-07-21).
-
-# IATA SSIM (1998-09) says that the spring 2000 change for Australian
-# Capital Territory, New South Wales except Lord Howe Island and Broken
-# Hill, and Victoria will be August 27, presumably due to the Sydney Olympics.
-
-# From Eric Ulevik, referring to Sydney's Sun Herald (2000-08-13), page 29:
-# The Queensland Premier Peter Beattie is encouraging northern NSW
-# towns to use Queensland time.
-
-# From Paul Eggert (2007-07-23):
-# See "southeast Australia" above for 2008 and later.
-
-# Yancowinna
-
-# From John Mackin (1989-01-04):
-# `Broken Hill' means the County of Yancowinna.
-
-# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
-# # YANCOWINNA..  [ Confirmation courtesy of Broken Hill Postmaster ]
-# #					[ Dec 1990 ]
-# ...
-# # Yancowinna uses Central Standard Time, despite [its] location on the
-# # New South Wales side of the S.A. border. Most business and social dealings
-# # are with CST zones, therefore CST is legislated by local government
-# # although the switch to Summer Time occurs in line with N.S.W. There have
-# # been years when this did not apply, but the historical data is not
-# # presently available.
-# Zone	Australia/Yancowinna	9:30	 AY	%sST
-# ...
-# Rule	 AY	1971	1985	-	Oct	lastSun	2:00	1:00	D
-# Rule	 AY	1972	only	-	Feb	lastSun	3:00	0	C
-# [followed by other Rules]
-
-# Lord Howe Island
-
-# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
-# LHI...		[ Courtesy of Pauline Van Winsen ]
-#					[ Dec 1990 ]
-# Lord Howe Island is located off the New South Wales coast, and is half an
-# hour ahead of NSW time.
-
-# From James Lonergan, Secretary, Lord Howe Island Board (2000-01-27):
-# Lord Howe Island summer time in 2000/2001 will commence on the same
-# date as the rest of NSW (i.e. 2000-08-27).  For your information the
-# Lord Howe Island Board (controlling authority for the Island) is
-# seeking the community's views on various options for summer time
-# arrangements on the Island, e.g. advance clocks by 1 full hour
-# instead of only 30 minutes.  Dependant on the wishes of residents
-# the Board may approach the NSW government to change the existing
-# arrangements.  The starting date for summer time on the Island will
-# however always coincide with the rest of NSW.
-
-# From James Lonergan, Secretary, Lord Howe Island Board (2000-10-25):
-# Lord Howe Island advances clocks by 30 minutes during DST in NSW and retards
-# clocks by 30 minutes when DST finishes. Since DST was most recently
-# introduced in NSW, the "changeover" time on the Island has been 02:00 as
-# shown on clocks on LHI. I guess this means that for 30 minutes at the start
-# of DST, LHI is actually 1 hour ahead of the rest of NSW.
-
-# From Paul Eggert (2006-03-22):
-# For Lord Howe dates we use Shanks & Pottenger through 1989, and
-# Lonergan thereafter.  For times we use Lonergan.
-
-# From Paul Eggert (2007-07-23):
-# See "southeast Australia" above for 2008 and later.
-
-###############################################################################
-
-# New Zealand
-
-# From Mark Davies (1990-10-03):
-# the 1989/90 year was a trial of an extended "daylight saving" period.
-# This trial was deemed successful and the extended period adopted for
-# subsequent years (with the addition of a further week at the start).
-# source -- phone call to Ministry of Internal Affairs Head Office.
-
-# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
-# # The Country of New Zealand   (Australia's east island -) Gee they hate that!
-# #				   or is Australia the west island of N.Z.
-# #	[ courtesy of Geoff Tribble.. Auckland N.Z. ]
-# #				[ Nov 1990 ]
-# ...
-# Rule	NZ      1974    1988	-	Oct	lastSun	2:00	1:00	D
-# Rule	NZ	1989	max	-	Oct	Sun>=1	2:00	1:00	D
-# Rule	NZ      1975    1989	-	Mar	Sun>=1	3:00	0	S
-# Rule	NZ	1990	max	-	Mar	lastSun	3:00	0	S
-# ...
-# Zone	NZ			12:00	NZ		NZ%sT	# New Zealand
-# Zone	NZ-CHAT			12:45	-		NZ-CHAT # Chatham Island
-
-# From Arthur David Olson (1992-03-08):
-# The chosen rules use the Davies October 8 values for the start of DST in 1989
-# rather than the October 1 value.
-
-# From Paul Eggert (1995-12-19);
-# Shank & Pottenger report 2:00 for all autumn changes in Australia and NZ.
-# Robert Uzgalis writes that the New Zealand Daylight
-# Savings Time Order in Council dated 1990-06-18 specifies 2:00 standard
-# time on both the first Sunday in October and the third Sunday in March.
-# As with Australia, we'll assume the tradition is 2:00s, not 2:00.
-#
-# From Paul Eggert (2006-03-22):
-# The Department of Internal Affairs (DIA) maintains a brief history,
-# as does Carol Squires; see tz-link.htm for the full references.
-# Use these sources in preference to Shanks & Pottenger.
-#
-# For Chatham, IATA SSIM (1991/1999) gives the NZ rules but with
-# transitions at 2:45 local standard time; this confirms that Chatham
-# is always exactly 45 minutes ahead of Auckland.
-
-# From Colin Sharples (2007-04-30):
-# DST will now start on the last Sunday in September, and end on the
-# first Sunday in April.  The changes take effect this year, meaning
-# that DST will begin on 2007-09-30 2008-04-06.
-# http://www.dia.govt.nz/diawebsite.nsf/wpg_URL/Services-Daylight-Saving-Daylight-saving-to-be-extended
-
-###############################################################################
-
-
-# Fiji
-
-# Howse writes (p 153) that in 1879 the British governor of Fiji
-# enacted an ordinance standardizing the islands on Antipodean Time
-# instead of the American system (which was one day behind).
-
-# From Rives McDow (1998-10-08):
-# Fiji will introduce DST effective 0200 local time, 1998-11-01
-# until 0300 local time 1999-02-28.  Each year the DST period will
-# be from the first Sunday in November until the last Sunday in February.
-
-# From Paul Eggert (2000-01-08):
-# IATA SSIM (1999-09) says DST ends 0100 local time.  Go with McDow.
-
-# From the BBC World Service (1998-10-31 11:32 UTC):
-# The Fijiian government says the main reasons for the time change is to
-# improve productivity and reduce road accidents.  But correspondents say it
-# also hopes the move will boost Fiji's ability to compete with other pacific
-# islands in the effort to attract tourists to witness the dawning of the new
-# millenium.
-
-# http://www.fiji.gov.fj/press/2000_09/2000_09_13-05.shtml (2000-09-13)
-# reports that Fiji has discontinued DST.
-
-# Johnston
-
-# Johnston data is from usno1995.
-
-
-# Kiribati
-
-# From Paul Eggert (1996-01-22):
-# Today's _Wall Street Journal_ (page 1) reports that Kiribati
-# ``declared it the same day throught the country as of Jan. 1, 1995''
-# as part of the competition to be first into the 21st century.
-
-
-# Kwajalein
-
-# In comp.risks 14.87 (26 August 1993), Peter Neumann writes:
-# I wonder what happened in Kwajalein, where there was NO Friday,
-# 1993-08-20.  Thursday night at midnight Kwajalein switched sides with
-# respect to the International Date Line, to rejoin its fellow islands,
-# going from 11:59 p.m. Thursday to 12:00 m. Saturday in a blink.
-
-
-# N Mariana Is, Guam
-
-# Howse writes (p 153) ``The Spaniards, on the other hand, reached the
-# Philippines and the Ladrones from America,'' and implies that the Ladrones
-# (now called the Marianas) kept American date for quite some time.
-# For now, we assume the Ladrones switched at the same time as the Philippines;
-# see Asia/Manila.
-
-# US Public Law 106-564 (2000-12-23) made UTC+10 the official standard time,
-# under the name "Chamorro Standard Time".  There is no official abbreviation,
-# but Congressman Robert A. Underwood, author of the bill that became law,
-# wrote in a press release (2000-12-27) that he will seek the use of "ChST".
-
-
-# Micronesia
-
-# Alan Eugene Davis writes (1996-03-16),
-# ``I am certain, having lived there for the past decade, that "Truk"
-# (now properly known as Chuuk) ... is in the time zone GMT+10.''
-#
-# Shanks & Pottenger write that Truk switched from UTC+10 to UTC+11
-# on 1978-10-01; ignore this for now.
-
-# From Paul Eggert (1999-10-29):
-# The Federated States of Micronesia Visitors Board writes in
-# <a href="http://www.fsmgov.org/info/clocks.html">
-# The Federated States of Micronesia - Visitor Information
-# </a> (1999-01-26)
-# that Truk and Yap are UTC+10, and Ponape and Kosrae are UTC+11.
-# We don't know when Kosrae switched from UTC+12; assume January 1 for now.
-
-
-# Midway
-
-# From Charles T O'Connor, KMTH DJ (1956),
-# quoted in the KTMH section of the Radio Heritage Collection
-# <http://radiodx.com/spdxr/KMTH.htm> (2002-12-31):
-# For the past two months we've been on what is known as Daylight
-# Saving Time.  This time has put us on air at 5am in the morning,
-# your time down there in New Zealand.  Starting September 2, 1956
-# we'll again go back to Standard Time.  This'll mean that we'll go to
-# air at 6am your time.
-#
-# From Paul Eggert (2003-03-23):
-# We don't know the date of that quote, but we'll guess they
-# started DST on June 3.  Possibly DST was observed other years
-# in Midway, but we have no record of it.
-
-
-# Pitcairn
-
-# From Rives McDow (1999-11-08):
-# A Proclamation was signed by the Governor of Pitcairn on the 27th March 1998
-# with regard to Pitcairn Standard Time.  The Proclamation is as follows.
-#
-#	The local time for general purposes in the Islands shall be
-#	Co-ordinated Universal time minus 8 hours and shall be known
-#	as Pitcairn Standard Time.
-#
-# ... I have also seen Pitcairn listed as UTC minus 9 hours in several
-# references, and can only assume that this was an error in interpretation
-# somehow in light of this proclamation.
-
-# From Rives McDow (1999-11-09):
-# The Proclamation regarding Pitcairn time came into effect on 27 April 1998
-# ... at midnight.
-
-# From Howie Phelps (1999-11-10), who talked to a Pitcairner via shortwave:
-# Betty Christian told me yesterday that their local time is the same as
-# Pacific Standard Time. They used to be 1/2 hour different from us here in
-# Sacramento but it was changed a couple of years ago.
-
-
-# Samoa
-
-# Howse writes (p 153, citing p 10 of the 1883-11-18 New York Herald)
-# that in 1879 the King of Samoa decided to change
-# ``the date in his kingdom from the Antipodean to the American system,
-# ordaining -- by a masterpiece of diplomatic flattery -- that
-# the Fourth of July should be celebrated twice in that year.''
-
-
-# Tonga
-
-# From Paul Eggert (1996-01-22):
-# Today's _Wall Street Journal_ (p 1) reports that ``Tonga has been plotting
-# to sneak ahead of [New Zealanders] by introducing daylight-saving time.''
-# Since Kiribati has moved the Date Line it's not clear what Tonga will do.
-
-# Don Mundell writes in the 1997-02-20 Tonga Chronicle
-# <a href="http://www.tongatapu.net.to/tonga/homeland/timebegins.htm">
-# How Tonga became `The Land where Time Begins'
-# </a>:
-
-# Until 1941 Tonga maintained a standard time 50 minutes ahead of NZST
-# 12 hours and 20 minutes ahead of GMT.  When New Zealand adjusted its
-# standard time in 1940s, Tonga had the choice of subtracting from its
-# local time to come on the same standard time as New Zealand or of
-# advancing its time to maintain the differential of 13 degrees
-# (approximately 50 minutes ahead of New Zealand time).
-#
-# Because His Majesty King Taufa'ahau Tupou IV, then Crown Prince
-# Tungi, preferred to ensure Tonga's title as the land where time
-# begins, the Legislative Assembly approved the latter change.
-#
-# But some of the older, more conservative members from the outer
-# islands objected. "If at midnight on Dec. 31, we move ahead 40
-# minutes, as your Royal Highness wishes, what becomes of the 40
-# minutes we have lost?"
-#
-# The Crown Prince, presented an unanswerable argument: "Remember that
-# on the World Day of Prayer, you would be the first people on Earth
-# to say your prayers in the morning."
-
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger say the transition was on 1968-10-01; go with Mundell.
-
-# From Eric Ulevik (1999-05-03):
-# Tonga's director of tourism, who is also secretary of the National Millenium
-# Committee, has a plan to get Tonga back in front.
-# He has proposed a one-off move to tropical daylight saving for Tonga from
-# October to March, which has won approval in principle from the Tongan
-# Government.
-
-# From Steffen Thorsen (1999-09-09):
-# * Tonga will introduce DST in November
-#
-# I was given this link by John Letts:
-# <a href="http://news.bbc.co.uk/hi/english/world/asia-pacific/newsid_424000/424764.stm">
-# http://news.bbc.co.uk/hi/english/world/asia-pacific/newsid_424000/424764.stm
-# </a>
-#
-# I have not been able to find exact dates for the transition in November
-# yet. By reading this article it seems like Fiji will be 14 hours ahead
-# of UTC as well, but as far as I know Fiji will only be 13 hours ahead
-# (12 + 1 hour DST).
-
-# From Arthur David Olson (1999-09-20):
-# According to <a href="http://www.tongaonline.com/news/sept1799.html">
-# http://www.tongaonline.com/news/sept1799.html
-# </a>:
-# "Daylight Savings Time will take effect on Oct. 2 through April 15, 2000
-# and annually thereafter from the first Saturday in October through the
-# third Saturday of April.  Under the system approved by Privy Council on
-# Sept. 10, clocks must be turned ahead one hour on the opening day and
-# set back an hour on the closing date."
-# Alas, no indication of the time of day.
-
-# From Rives McDow (1999-10-06):
-# Tonga started its Daylight Saving on Saturday morning October 2nd at 0200am.
-# Daylight Saving ends on April 16 at 0300am which is Sunday morning.
-
-# From Steffen Thorsen (2000-10-31):
-# Back in March I found a notice on the website http://www.tongaonline.com
-# that Tonga changed back to standard time one month early, on March 19
-# instead of the original reported date April 16. Unfortunately, the article
-# is no longer available on the site, and I did not make a copy of the
-# text, and I have forgotten to report it here.
-# (Original URL was: http://www.tongaonline.com/news/march162000.htm )
-
-# From Rives McDow (2000-12-01):
-# Tonga is observing DST as of 2000-11-04 and will stop on 2001-01-27.
-
-# From Sione Moala-Mafi (2001-09-20) via Rives McDow:
-# At 2:00am on the first Sunday of November, the standard time in the Kingdom
-# shall be moved forward by one hour to 3:00am.  At 2:00am on the last Sunday
-# of January the standard time in the Kingdom shall be moved backward by one
-# hour to 1:00am.
-
-# From Pulu 'Anau (2002-11-05):
-# The law was for 3 years, supposedly to get renewed.  It wasn't.
-
-
-# Wake
-
-# From Vernice Anderson, Personal Secretary to Philip Jessup,
-# US Ambassador At Large (oral history interview, 1971-02-02):
-#
-# Saturday, the 14th [of October, 1950] -- ...  The time was all the
-# more confusing at that point, because we had crossed the
-# International Date Line, thus getting two Sundays.  Furthermore, we
-# discovered that Wake Island had two hours of daylight saving time
-# making calculation of time in Washington difficult if not almost
-# impossible.
-#
-# http://www.trumanlibrary.org/wake/meeting.htm
-
-# From Paul Eggert (2003-03-23):
-# We have no other report of DST in Wake Island, so omit this info for now.
-
-###############################################################################
-
-# The International Date Line
-
-# From Gwillim Law (2000-01-03):
-#
-# The International Date Line is not defined by any international standard,
-# convention, or treaty.  Mapmakers are free to draw it as they please.
-# Reputable mapmakers will simply ensure that every point of land appears on
-# the correct side of the IDL, according to the date legally observed there.
-#
-# When Kiribati adopted a uniform date in 1995, thereby moving the Phoenix and
-# Line Islands to the west side of the IDL (or, if you prefer, moving the IDL
-# to the east side of the Phoenix and Line Islands), I suppose that most
-# mapmakers redrew the IDL following the boundary of Kiribati.  Even that line
-# has a rather arbitrary nature.  The straight-line boundaries between Pacific
-# island nations that are shown on many maps are based on an international
-# convention, but are not legally binding national borders.... The date is
-# governed by the IDL; therefore, even on the high seas, there may be some
-# places as late as fourteen hours later than UTC.  And, since the IDL is not
-# an international standard, there are some places on the high seas where the
-# correct date is ambiguous.
-
-# From Wikipedia <http://en.wikipedia.org/wiki/Time_zone> (2005-08-31):
-# Before 1920, all ships kept local apparent time on the high seas by setting
-# their clocks at night or at the morning sight so that, given the ship's
-# speed and direction, it would be 12 o'clock when the Sun crossed the ship's
-# meridian (12 o'clock = local apparent noon).  During 1917, at the
-# Anglo-French Conference on Time-keeping at Sea, it was recommended that all
-# ships, both military and civilian, should adopt hourly standard time zones
-# on the high seas.  Whenever a ship was within the territorial waters of any
-# nation it would use that nation's standard time.  The captain was permitted
-# to change his ship's clocks at a time of his choice following his ship's
-# entry into another zone time--he often chose midnight.  These zones were
-# adopted by all major fleets between 1920 and 1925 but not by many
-# independent merchant ships until World War II.
-
-# From Paul Eggert, using references suggested by Oscar van Vlijmen
-# (2005-03-20):
-#
-# The American Practical Navigator (2002)
-# <http://pollux.nss.nima.mil/pubs/pubs_j_apn_sections.html?rid=187>
-# talks only about the 180-degree meridian with respect to ships in
-# international waters; it ignores the international date line.
+# <pre>
+# @(#)australasia	8.18
+# This file is in the public domain, so clarified as of
+# 2009-05-17 by Arthur David Olson.
+
+# This file also includes Pacific islands.
+
+# Notes are at the end of this file
+
+###############################################################################
+
+# Australia
+
+# Please see the notes below for the controversy about "EST" versus "AEST" etc.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Aus	1917	only	-	Jan	 1	0:01	1:00	-
+Rule	Aus	1917	only	-	Mar	25	2:00	0	-
+Rule	Aus	1942	only	-	Jan	 1	2:00	1:00	-
+Rule	Aus	1942	only	-	Mar	29	2:00	0	-
+Rule	Aus	1942	only	-	Sep	27	2:00	1:00	-
+Rule	Aus	1943	1944	-	Mar	lastSun	2:00	0	-
+Rule	Aus	1943	only	-	Oct	 3	2:00	1:00	-
+# Go with Whitman and the Australian National Standards Commission, which
+# says W Australia didn't use DST in 1943/1944.  Ignore Whitman's claim that
+# 1944/1945 was just like 1943/1944.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+# Northern Territory
+Zone Australia/Darwin	 8:43:20 -	LMT	1895 Feb
+			 9:00	-	CST	1899 May
+			 9:30	Aus	CST
+# Western Australia
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	AW	1974	only	-	Oct	lastSun	2:00s	1:00	-
+Rule	AW	1975	only	-	Mar	Sun>=1	2:00s	0	-
+Rule	AW	1983	only	-	Oct	lastSun	2:00s	1:00	-
+Rule	AW	1984	only	-	Mar	Sun>=1	2:00s	0	-
+Rule	AW	1991	only	-	Nov	17	2:00s	1:00	-
+Rule	AW	1992	only	-	Mar	Sun>=1	2:00s	0	-
+Rule	AW	2006	only	-	Dec	 3	2:00s	1:00	-
+Rule	AW	2007	2009	-	Mar	lastSun	2:00s	0	-
+Rule	AW	2007	2008	-	Oct	lastSun	2:00s	1:00	-
+Zone Australia/Perth	 7:43:24 -	LMT	1895 Dec
+			 8:00	Aus	WST	1943 Jul
+			 8:00	AW	WST
+Zone Australia/Eucla	 8:35:28 -	LMT	1895 Dec
+			 8:45	Aus	CWST	1943 Jul
+			 8:45	AW	CWST
+
+# Queensland
+#
+# From Alex Livingston (1996-11-01):
+# I have heard or read more than once that some resort islands off the coast
+# of Queensland chose to keep observing daylight-saving time even after
+# Queensland ceased to.
+#
+# From Paul Eggert (1996-11-22):
+# IATA SSIM (1993-02/1994-09) say that the Holiday Islands (Hayman, Lindeman,
+# Hamilton) observed DST for two years after the rest of Queensland stopped.
+# Hamilton is the largest, but there is also a Hamilton in Victoria,
+# so use Lindeman.
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	AQ	1971	only	-	Oct	lastSun	2:00s	1:00	-
+Rule	AQ	1972	only	-	Feb	lastSun	2:00s	0	-
+Rule	AQ	1989	1991	-	Oct	lastSun	2:00s	1:00	-
+Rule	AQ	1990	1992	-	Mar	Sun>=1	2:00s	0	-
+Rule	Holiday	1992	1993	-	Oct	lastSun	2:00s	1:00	-
+Rule	Holiday	1993	1994	-	Mar	Sun>=1	2:00s	0	-
+Zone Australia/Brisbane	10:12:08 -	LMT	1895
+			10:00	Aus	EST	1971
+			10:00	AQ	EST
+Zone Australia/Lindeman  9:55:56 -	LMT	1895
+			10:00	Aus	EST	1971
+			10:00	AQ	EST	1992 Jul
+			10:00	Holiday	EST
+
+# South Australia
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	AS	1971	1985	-	Oct	lastSun	2:00s	1:00	-
+Rule	AS	1986	only	-	Oct	19	2:00s	1:00	-
+Rule	AS	1987	2007	-	Oct	lastSun	2:00s	1:00	-
+Rule	AS	1972	only	-	Feb	27	2:00s	0	-
+Rule	AS	1973	1985	-	Mar	Sun>=1	2:00s	0	-
+Rule	AS	1986	1989	-	Mar	Sun>=15	2:00s	0	-
+Rule	AS	1990	only	-	Mar	Sun>=18	2:00s	0	-
+Rule	AS	1991	only	-	Mar	Sun>=1	2:00s	0	-
+Rule	AS	1992	only	-	Mar	Sun>=18	2:00s	0	-
+Rule	AS	1993	only	-	Mar	Sun>=1	2:00s	0	-
+Rule	AS	1994	only	-	Mar	Sun>=18	2:00s	0	-
+Rule	AS	1995	2005	-	Mar	lastSun	2:00s	0	-
+Rule	AS	2006	only	-	Apr	Sun>=1	2:00s	0	-
+Rule	AS	2007	only	-	Mar	lastSun	2:00s	0	-
+Rule	AS	2008	max	-	Apr	Sun>=1	2:00s	0	-
+Rule	AS	2008	max	-	Oct	Sun>=1	2:00s	1:00	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Australia/Adelaide	9:14:20 -	LMT	1895 Feb
+			9:00	-	CST	1899 May
+			9:30	Aus	CST	1971
+			9:30	AS	CST
+
+# Tasmania
+#
+# From Paul Eggert (2005-08-16):
+# <http://www.bom.gov.au/climate/averages/tables/dst_times.shtml>
+# says King Island didn't observe DST from WWII until late 1971.
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	AT	1967	only	-	Oct	Sun>=1	2:00s	1:00	-
+Rule	AT	1968	only	-	Mar	lastSun	2:00s	0	-
+Rule	AT	1968	1985	-	Oct	lastSun	2:00s	1:00	-
+Rule	AT	1969	1971	-	Mar	Sun>=8	2:00s	0	-
+Rule	AT	1972	only	-	Feb	lastSun	2:00s	0	-
+Rule	AT	1973	1981	-	Mar	Sun>=1	2:00s	0	-
+Rule	AT	1982	1983	-	Mar	lastSun	2:00s	0	-
+Rule	AT	1984	1986	-	Mar	Sun>=1	2:00s	0	-
+Rule	AT	1986	only	-	Oct	Sun>=15	2:00s	1:00	-
+Rule	AT	1987	1990	-	Mar	Sun>=15	2:00s	0	-
+Rule	AT	1987	only	-	Oct	Sun>=22	2:00s	1:00	-
+Rule	AT	1988	1990	-	Oct	lastSun	2:00s	1:00	-
+Rule	AT	1991	1999	-	Oct	Sun>=1	2:00s	1:00	-
+Rule	AT	1991	2005	-	Mar	lastSun	2:00s	0	-
+Rule	AT	2000	only	-	Aug	lastSun	2:00s	1:00	-
+Rule	AT	2001	max	-	Oct	Sun>=1	2:00s	1:00	-
+Rule	AT	2006	only	-	Apr	Sun>=1	2:00s	0	-
+Rule	AT	2007	only	-	Mar	lastSun	2:00s	0	-
+Rule	AT	2008	max	-	Apr	Sun>=1	2:00s	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Australia/Hobart	9:49:16	-	LMT	1895 Sep
+			10:00	-	EST	1916 Oct 1 2:00
+			10:00	1:00	EST	1917 Feb
+			10:00	Aus	EST	1967
+			10:00	AT	EST
+Zone Australia/Currie	9:35:28	-	LMT	1895 Sep
+			10:00	-	EST	1916 Oct 1 2:00
+			10:00	1:00	EST	1917 Feb
+			10:00	Aus	EST	1971 Jul
+			10:00	AT	EST
+
+# Victoria
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	AV	1971	1985	-	Oct	lastSun	2:00s	1:00	-
+Rule	AV	1972	only	-	Feb	lastSun	2:00s	0	-
+Rule	AV	1973	1985	-	Mar	Sun>=1	2:00s	0	-
+Rule	AV	1986	1990	-	Mar	Sun>=15	2:00s	0	-
+Rule	AV	1986	1987	-	Oct	Sun>=15	2:00s	1:00	-
+Rule	AV	1988	1999	-	Oct	lastSun	2:00s	1:00	-
+Rule	AV	1991	1994	-	Mar	Sun>=1	2:00s	0	-
+Rule	AV	1995	2005	-	Mar	lastSun	2:00s	0	-
+Rule	AV	2000	only	-	Aug	lastSun	2:00s	1:00	-
+Rule	AV	2001	2007	-	Oct	lastSun	2:00s	1:00	-
+Rule	AV	2006	only	-	Apr	Sun>=1	2:00s	0	-
+Rule	AV	2007	only	-	Mar	lastSun	2:00s	0	-
+Rule	AV	2008	max	-	Apr	Sun>=1	2:00s	0	-
+Rule	AV	2008	max	-	Oct	Sun>=1	2:00s	1:00	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Australia/Melbourne 9:39:52 -	LMT	1895 Feb
+			10:00	Aus	EST	1971
+			10:00	AV	EST
+
+# New South Wales
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	AN	1971	1985	-	Oct	lastSun	2:00s	1:00	-
+Rule	AN	1972	only	-	Feb	27	2:00s	0	-
+Rule	AN	1973	1981	-	Mar	Sun>=1	2:00s	0	-
+Rule	AN	1982	only	-	Apr	Sun>=1	2:00s	0	-
+Rule	AN	1983	1985	-	Mar	Sun>=1	2:00s	0	-
+Rule	AN	1986	1989	-	Mar	Sun>=15	2:00s	0	-
+Rule	AN	1986	only	-	Oct	19	2:00s	1:00	-
+Rule	AN	1987	1999	-	Oct	lastSun	2:00s	1:00	-
+Rule	AN	1990	1995	-	Mar	Sun>=1	2:00s	0	-
+Rule	AN	1996	2005	-	Mar	lastSun	2:00s	0	-
+Rule	AN	2000	only	-	Aug	lastSun	2:00s	1:00	-
+Rule	AN	2001	2007	-	Oct	lastSun	2:00s	1:00	-
+Rule	AN	2006	only	-	Apr	Sun>=1	2:00s	0	-
+Rule	AN	2007	only	-	Mar	lastSun	2:00s	0	-
+Rule	AN	2008	max	-	Apr	Sun>=1	2:00s	0	-
+Rule	AN	2008	max	-	Oct	Sun>=1	2:00s	1:00	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Australia/Sydney	10:04:52 -	LMT	1895 Feb
+			10:00	Aus	EST	1971
+			10:00	AN	EST
+Zone Australia/Broken_Hill 9:25:48 -	LMT	1895 Feb
+			10:00	-	EST	1896 Aug 23
+			9:00	-	CST	1899 May
+			9:30	Aus	CST	1971
+			9:30	AN	CST	2000
+			9:30	AS	CST
+
+# Lord Howe Island
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	LH	1981	1984	-	Oct	lastSun	2:00	1:00	-
+Rule	LH	1982	1985	-	Mar	Sun>=1	2:00	0	-
+Rule	LH	1985	only	-	Oct	lastSun	2:00	0:30	-
+Rule	LH	1986	1989	-	Mar	Sun>=15	2:00	0	-
+Rule	LH	1986	only	-	Oct	19	2:00	0:30	-
+Rule	LH	1987	1999	-	Oct	lastSun	2:00	0:30	-
+Rule	LH	1990	1995	-	Mar	Sun>=1	2:00	0	-
+Rule	LH	1996	2005	-	Mar	lastSun	2:00	0	-
+Rule	LH	2000	only	-	Aug	lastSun	2:00	0:30	-
+Rule	LH	2001	2007	-	Oct	lastSun	2:00	0:30	-
+Rule	LH	2006	only	-	Apr	Sun>=1	2:00	0	-
+Rule	LH	2007	only	-	Mar	lastSun	2:00	0	-
+Rule	LH	2008	max	-	Apr	Sun>=1	2:00	0	-
+Rule	LH	2008	max	-	Oct	Sun>=1	2:00	0:30	-
+Zone Australia/Lord_Howe 10:36:20 -	LMT	1895 Feb
+			10:00	-	EST	1981 Mar
+			10:30	LH	LHST
+
+# Australian miscellany
+#
+# Ashmore Is, Cartier
+# no indigenous inhabitants; only seasonal caretakers
+# no times are set
+#
+# Coral Sea Is
+# no indigenous inhabitants; only meteorologists
+# no times are set
+#
+# Macquarie
+# permanent occupation (scientific station) since 1948;
+# sealing and penguin oil station operated 1888/1917
+# like Australia/Hobart
+
+# Christmas
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Indian/Christmas	7:02:52 -	LMT	1895 Feb
+			7:00	-	CXT	# Christmas Island Time
+
+# Cook Is
+# From Shanks & Pottenger:
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Cook	1978	only	-	Nov	12	0:00	0:30	HS
+Rule	Cook	1979	1991	-	Mar	Sun>=1	0:00	0	-
+Rule	Cook	1979	1990	-	Oct	lastSun	0:00	0:30	HS
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Rarotonga	-10:39:04 -	LMT	1901		# Avarua
+			-10:30	-	CKT	1978 Nov 12	# Cook Is Time
+			-10:00	Cook	CK%sT
+
+# Cocos
+# These islands were ruled by the Ross family from about 1830 to 1978.
+# We don't know when standard time was introduced; for now, we guess 1900.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Indian/Cocos	6:27:40	-	LMT	1900
+			6:30	-	CCT	# Cocos Islands Time
+
+# Fiji
+# From Alexander Krivenyshev (2009-11-10):
+# According to Fiji Broadcasting Corporation,  Fiji plans to re-introduce DST
+# from November 29th 2009  to April 25th 2010.
+#
+# "Daylight savings to commence this month"
+# <a href="http://www.radiofiji.com.fj/fullstory.php?id=23719">
+# http://www.radiofiji.com.fj/fullstory.php?id=23719
+# </a>
+# or
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_fiji01.html">
+# http://www.worldtimezone.com/dst_news/dst_news_fiji01.html
+# </a>
+
+# From Steffen Thorsen (2009-11-10):
+# The Fiji Government has posted some more details about the approved
+# amendments:
+# <a href="http://www.fiji.gov.fj/publish/page_16198.shtml">
+# http://www.fiji.gov.fj/publish/page_16198.shtml
+# </a>
+
+# From Steffen Thorsen (2010-03-03):
+# The Cabinet in Fiji has decided to end DST about a month early, on
+# 2010-03-28 at 03:00.
+# The plan is to observe DST again, from 2010-10-24 to sometime in March
+# 2011 (last Sunday a good guess?).
+#
+# Official source:
+# <a href="http://www.fiji.gov.fj/index.php?option=com_content&view=article&id=1096:3310-cabinet-approves-change-in-daylight-savings-dates&catid=49:cabinet-releases&Itemid=166">
+# http://www.fiji.gov.fj/index.php?option=com_content&view=article&id=1096:3310-cabinet-approves-change-in-daylight-savings-dates&catid=49:cabinet-releases&Itemid=166
+# </a>
+#
+# A bit more background info here:
+# <a href="http://www.timeanddate.com/news/time/fiji-dst-ends-march-2010.html">
+# http://www.timeanddate.com/news/time/fiji-dst-ends-march-2010.html
+# </a>
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Fiji	1998	1999	-	Nov	Sun>=1	2:00	1:00	S
+Rule	Fiji	1999	2000	-	Feb	lastSun	3:00	0	-
+Rule	Fiji	2009	only	-	Nov	29	2:00	1:00	S
+Rule	Fiji	2010	only	-	Mar	lastSun	3:00	0	-
+Rule	Fiji	2010	only	-	Oct	24	2:00	1:00	S
+Rule	Fiji	2011	only	-	Mar	lastSun 3:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Pacific/Fiji	11:53:40 -	LMT	1915 Oct 26	# Suva
+			12:00	Fiji	FJ%sT	# Fiji Time
+
+# French Polynesia
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Pacific/Gambier	 -8:59:48 -	LMT	1912 Oct	# Rikitea
+			 -9:00	-	GAMT	# Gambier Time
+Zone	Pacific/Marquesas -9:18:00 -	LMT	1912 Oct
+			 -9:30	-	MART	# Marquesas Time
+Zone	Pacific/Tahiti	 -9:58:16 -	LMT	1912 Oct	# Papeete
+			-10:00	-	TAHT	# Tahiti Time
+# Clipperton (near North America) is administered from French Polynesia;
+# it is uninhabited.
+
+# Guam
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Pacific/Guam	-14:21:00 -	LMT	1844 Dec 31
+			 9:39:00 -	LMT	1901		# Agana
+			10:00	-	GST	2000 Dec 23	# Guam
+			10:00	-	ChST	# Chamorro Standard Time
+
+# Kiribati
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Tarawa	 11:32:04 -	LMT	1901		# Bairiki
+			 12:00	-	GILT		 # Gilbert Is Time
+Zone Pacific/Enderbury	-11:24:20 -	LMT	1901
+			-12:00	-	PHOT	1979 Oct # Phoenix Is Time
+			-11:00	-	PHOT	1995
+			 13:00	-	PHOT
+Zone Pacific/Kiritimati	-10:29:20 -	LMT	1901
+			-10:40	-	LINT	1979 Oct # Line Is Time
+			-10:00	-	LINT	1995
+			 14:00	-	LINT
+
+# N Mariana Is
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Saipan	-14:17:00 -	LMT	1844 Dec 31
+			 9:43:00 -	LMT	1901
+			 9:00	-	MPT	1969 Oct # N Mariana Is Time
+			10:00	-	MPT	2000 Dec 23
+			10:00	-	ChST	# Chamorro Standard Time
+
+# Marshall Is
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Majuro	11:24:48 -	LMT	1901
+			11:00	-	MHT	1969 Oct # Marshall Islands Time
+			12:00	-	MHT
+Zone Pacific/Kwajalein	11:09:20 -	LMT	1901
+			11:00	-	MHT	1969 Oct
+			-12:00	-	KWAT	1993 Aug 20	# Kwajalein Time
+			12:00	-	MHT
+
+# Micronesia
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Chuuk	10:07:08 -	LMT	1901
+			10:00	-	CHUT			# Chuuk Time
+Zone Pacific/Pohnpei	10:32:52 -	LMT	1901		# Kolonia
+			11:00	-	PONT			# Pohnpei Time
+Zone Pacific/Kosrae	10:51:56 -	LMT	1901
+			11:00	-	KOST	1969 Oct	# Kosrae Time
+			12:00	-	KOST	1999
+			11:00	-	KOST
+
+# Nauru
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Pacific/Nauru	11:07:40 -	LMT	1921 Jan 15	# Uaobe
+			11:30	-	NRT	1942 Mar 15	# Nauru Time
+			9:00	-	JST	1944 Aug 15
+			11:30	-	NRT	1979 May
+			12:00	-	NRT
+
+# New Caledonia
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	NC	1977	1978	-	Dec	Sun>=1	0:00	1:00	S
+Rule	NC	1978	1979	-	Feb	27	0:00	0	-
+Rule	NC	1996	only	-	Dec	 1	2:00s	1:00	S
+# Shanks & Pottenger say the following was at 2:00; go with IATA.
+Rule	NC	1997	only	-	Mar	 2	2:00s	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Pacific/Noumea	11:05:48 -	LMT	1912 Jan 13
+			11:00	NC	NC%sT
+
+
+###############################################################################
+
+# New Zealand
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	NZ	1927	only	-	Nov	 6	2:00	1:00	S
+Rule	NZ	1928	only	-	Mar	 4	2:00	0	M
+Rule	NZ	1928	1933	-	Oct	Sun>=8	2:00	0:30	S
+Rule	NZ	1929	1933	-	Mar	Sun>=15	2:00	0	M
+Rule	NZ	1934	1940	-	Apr	lastSun	2:00	0	M
+Rule	NZ	1934	1940	-	Sep	lastSun	2:00	0:30	S
+Rule	NZ	1946	only	-	Jan	 1	0:00	0	S
+# Since 1957 Chatham has been 45 minutes ahead of NZ, but there's no
+# convenient notation for this so we must duplicate the Rule lines.
+Rule	NZ	1974	only	-	Nov	Sun>=1	2:00s	1:00	D
+Rule	Chatham	1974	only	-	Nov	Sun>=1	2:45s	1:00	D
+Rule	NZ	1975	only	-	Feb	lastSun	2:00s	0	S
+Rule	Chatham	1975	only	-	Feb	lastSun	2:45s	0	S
+Rule	NZ	1975	1988	-	Oct	lastSun	2:00s	1:00	D
+Rule	Chatham	1975	1988	-	Oct	lastSun	2:45s	1:00	D
+Rule	NZ	1976	1989	-	Mar	Sun>=1	2:00s	0	S
+Rule	Chatham	1976	1989	-	Mar	Sun>=1	2:45s	0	S
+Rule	NZ	1989	only	-	Oct	Sun>=8	2:00s	1:00	D
+Rule	Chatham	1989	only	-	Oct	Sun>=8	2:45s	1:00	D
+Rule	NZ	1990	2006	-	Oct	Sun>=1	2:00s	1:00	D
+Rule	Chatham	1990	2006	-	Oct	Sun>=1	2:45s	1:00	D
+Rule	NZ	1990	2007	-	Mar	Sun>=15	2:00s	0	S
+Rule	Chatham	1990	2007	-	Mar	Sun>=15	2:45s	0	S
+Rule	NZ	2007	max	-	Sep	lastSun	2:00s	1:00	D
+Rule	Chatham	2007	max	-	Sep	lastSun	2:45s	1:00	D
+Rule	NZ	2008	max	-	Apr	Sun>=1	2:00s	0	S
+Rule	Chatham	2008	max	-	Apr	Sun>=1	2:45s	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Auckland	11:39:04 -	LMT	1868 Nov  2
+			11:30	NZ	NZ%sT	1946 Jan  1
+			12:00	NZ	NZ%sT
+Zone Pacific/Chatham	12:13:48 -	LMT	1957 Jan  1
+			12:45	Chatham	CHA%sT
+
+
+# Auckland Is
+# uninhabited; Maori and Moriori, colonial settlers, pastoralists, sealers,
+# and scientific personnel have wintered
+
+# Campbell I
+# minor whaling stations operated 1909/1914
+# scientific station operated 1941/1995;
+# previously whalers, sealers, pastoralists, and scientific personnel wintered
+# was probably like Pacific/Auckland
+
+###############################################################################
+
+
+# Niue
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Pacific/Niue	-11:19:40 -	LMT	1901		# Alofi
+			-11:20	-	NUT	1951	# Niue Time
+			-11:30	-	NUT	1978 Oct 1
+			-11:00	-	NUT
+
+# Norfolk
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Pacific/Norfolk	11:11:52 -	LMT	1901		# Kingston
+			11:12	-	NMT	1951	# Norfolk Mean Time
+			11:30	-	NFT		# Norfolk Time
+
+# Palau (Belau)
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Palau	8:57:56 -	LMT	1901		# Koror
+			9:00	-	PWT	# Palau Time
+
+# Papua New Guinea
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Port_Moresby 9:48:40 -	LMT	1880
+			9:48:32	-	PMMT	1895	# Port Moresby Mean Time
+			10:00	-	PGT		# Papua New Guinea Time
+
+# Pitcairn
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Pitcairn	-8:40:20 -	LMT	1901		# Adamstown
+			-8:30	-	PNT	1998 Apr 27 00:00
+			-8:00	-	PST	# Pitcairn Standard Time
+
+# American Samoa
+Zone Pacific/Pago_Pago	 12:37:12 -	LMT	1879 Jul  5
+			-11:22:48 -	LMT	1911
+			-11:30	-	SAMT	1950		# Samoa Time
+			-11:00	-	NST	1967 Apr	# N=Nome
+			-11:00	-	BST	1983 Nov 30	# B=Bering
+			-11:00	-	SST			# S=Samoa
+
+# Samoa
+
+# From Steffen Thorsen (2009-10-16):
+# We have been in contact with the government of Samoa again, and received
+# the following info:
+#
+# "Cabinet has now approved Daylight Saving to be effected next year
+# commencing from the last Sunday of September 2010 and conclude first
+# Sunday of April 2011."
+#
+# Background info:
+# <a href="http://www.timeanddate.com/news/time/samoa-dst-plan-2009.html">
+# http://www.timeanddate.com/news/time/samoa-dst-plan-2009.html
+# </a>
+#
+# Samoa's Daylight Saving Time Act 2009 is available here, but does not
+# contain any dates:
+# <a href="http://www.parliament.gov.ws/documents/acts/Daylight%20Saving%20Act%20%202009%20%28English%29%20-%20Final%207-7-091.pdf">
+# http://www.parliament.gov.ws/documents/acts/Daylight%20Saving%20Act%20%202009%20%28English%29%20-%20Final%207-7-091.pdf
+# </a>
+
+Zone Pacific/Apia	 12:33:04 -	LMT	1879 Jul  5
+			-11:26:56 -	LMT	1911
+			-11:30	-	SAMT	1950		# Samoa Time
+			-11:00	-	WST	2010 Sep 26
+			-11:00	1:00	WSDT	2011 Apr 3
+			-11:00	-	WST
+
+# Solomon Is
+# excludes Bougainville, for which see Papua New Guinea
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Guadalcanal 10:39:48 -	LMT	1912 Oct	# Honiara
+			11:00	-	SBT	# Solomon Is Time
+
+# Tokelau Is
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Pacific/Fakaofo	-11:24:56 -	LMT	1901
+			-10:00	-	TKT	# Tokelau Time
+
+# Tonga
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Tonga	1999	only	-	Oct	 7	2:00s	1:00	S
+Rule	Tonga	2000	only	-	Mar	19	2:00s	0	-
+Rule	Tonga	2000	2001	-	Nov	Sun>=1	2:00	1:00	S
+Rule	Tonga	2001	2002	-	Jan	lastSun	2:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Tongatapu	12:19:20 -	LMT	1901
+			12:20	-	TOT	1941 # Tonga Time
+			13:00	-	TOT	1999
+			13:00	Tonga	TO%sT
+
+# Tuvalu
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Funafuti	11:56:52 -	LMT	1901
+			12:00	-	TVT	# Tuvalu Time
+
+
+# US minor outlying islands
+
+# Howland, Baker
+# Howland was mined for guano by American companies 1857-1878 and British
+# 1886-1891; Baker was similar but exact dates are not known.
+# Inhabited by civilians 1935-1942; U.S. military bases 1943-1944;
+# uninhabited thereafter.
+# Howland observed Hawaii Standard Time (UTC-10:30) in 1937;
+# see page 206 of Elgen M. Long and Marie K. Long,
+# Amelia Earhart: the Mystery Solved, Simon & Schuster (2000).
+# So most likely Howland and Baker observed Hawaii Time from 1935
+# until they were abandoned after the war.
+
+# Jarvis
+# Mined for guano by American companies 1857-1879 and British 1883?-1891?.
+# Inhabited by civilians 1935-1942; IGY scientific base 1957-1958;
+# uninhabited thereafter.
+# no information; was probably like Pacific/Kiritimati
+
+# Johnston
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Pacific/Johnston	-10:00	-	HST
+
+# Kingman
+# uninhabited
+
+# Midway
+#
+# From Mark Brader (2005-01-23):
+# [Fallacies and Fantasies of Air Transport History, by R.E.G. Davies,
+# published 1994 by Paladwr Press, McLean, VA, USA; ISBN 0-9626483-5-3]
+# reproduced a Pan American Airways timeables from 1936, for their weekly
+# "Orient Express" flights between San Francisco and Manila, and connecting
+# flights to Chicago and the US East Coast.  As it uses some time zone
+# designations that I've never seen before:....
+# Fri. 6:30A Lv. HONOLOLU (Pearl Harbor), H.I.   H.L.T. Ar. 5:30P Sun.
+#  "   3:00P Ar. MIDWAY ISLAND . . . . . . . . . M.L.T. Lv. 6:00A  "
+#
+Zone Pacific/Midway	-11:49:28 -	LMT	1901
+			-11:00	-	NST	1956 Jun  3
+			-11:00	1:00	NDT	1956 Sep  2
+			-11:00	-	NST	1967 Apr	# N=Nome
+			-11:00	-	BST	1983 Nov 30	# B=Bering
+			-11:00	-	SST			# S=Samoa
+
+# Palmyra
+# uninhabited since World War II; was probably like Pacific/Kiritimati
+
+# Wake
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Pacific/Wake	11:06:28 -	LMT	1901
+			12:00	-	WAKT	# Wake Time
+
+
+# Vanuatu
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Vanuatu	1983	only	-	Sep	25	0:00	1:00	S
+Rule	Vanuatu	1984	1991	-	Mar	Sun>=23	0:00	0	-
+Rule	Vanuatu	1984	only	-	Oct	23	0:00	1:00	S
+Rule	Vanuatu	1985	1991	-	Sep	Sun>=23	0:00	1:00	S
+Rule	Vanuatu	1992	1993	-	Jan	Sun>=23	0:00	0	-
+Rule	Vanuatu	1992	only	-	Oct	Sun>=23	0:00	1:00	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Pacific/Efate	11:13:16 -	LMT	1912 Jan 13		# Vila
+			11:00	Vanuatu	VU%sT	# Vanuatu Time
+
+# Wallis and Futuna
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Pacific/Wallis	12:15:20 -	LMT	1901
+			12:00	-	WFT	# Wallis & Futuna Time
+
+###############################################################################
+
+# NOTES
+
+# This data is by no means authoritative; if you think you know better,
+# go ahead and edit the file (and please send any changes to
+# tz@elsie.nci.nih.gov for general use in the future).
+
+# From Paul Eggert (2006-03-22):
+# A good source for time zone historical data outside the U.S. is
+# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),
+# San Diego: ACS Publications, Inc. (2003).
+#
+# Gwillim Law writes that a good source
+# for recent time zone data is the International Air Transport
+# Association's Standard Schedules Information Manual (IATA SSIM),
+# published semiannually.  Law sent in several helpful summaries
+# of the IATA's data after 1990.
+#
+# Except where otherwise noted, Shanks & Pottenger is the source for
+# entries through 1990, and IATA SSIM is the source for entries afterwards.
+#
+# Another source occasionally used is Edward W. Whitman, World Time Differences,
+# Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated), which
+# I found in the UCLA library.
+#
+# A reliable and entertaining source about time zones is
+# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).
+#
+# I invented the abbreviations marked `*' in the following table;
+# the rest are from earlier versions of this file, or from other sources.
+# Corrections are welcome!
+#		std dst
+#		LMT	Local Mean Time
+#	  8:00	WST WST	Western Australia
+#	  8:45	CWST CWST Central Western Australia*
+#	  9:00	JST	Japan
+#	  9:30	CST CST	Central Australia
+#	 10:00	EST EST	Eastern Australia
+#	 10:00	ChST	Chamorro
+#	 10:30	LHST LHST Lord Howe*
+#	 11:30	NZMT NZST New Zealand through 1945
+#	 12:00	NZST NZDT New Zealand 1946-present
+#	 12:45	CHAST CHADT Chatham*
+#	-11:00	SST	Samoa
+#	-10:00	HST	Hawaii
+#	- 8:00	PST	Pitcairn*
+#
+# See the `northamerica' file for Hawaii.
+# See the `southamerica' file for Easter I and the Galapagos Is.
+
+###############################################################################
+
+# Australia
+
+# From Paul Eggert (2005-12-08):
+# <a href="http://www.bom.gov.au/climate/averages/tables/dst_times.shtml">
+# Implementation Dates of Daylight Saving Time within Australia
+# </a> summarizes daylight saving issues in Australia.
+
+# From Arthur David Olson (2005-12-12):
+# <a href="http://www.lawlink.nsw.gov.au/lawlink/Corporate/ll_agdinfo.nsf/pages/community_relations_daylight_saving">
+# Lawlink NSW:Daylight Saving in New South Wales
+# </a> covers New South Wales in particular.
+
+# From John Mackin (1991-03-06):
+# We in Australia have _never_ referred to DST as `daylight' time.
+# It is called `summer' time.  Now by a happy coincidence, `summer'
+# and `standard' happen to start with the same letter; hence, the
+# abbreviation does _not_ change...
+# The legislation does not actually define abbreviations, at least
+# in this State, but the abbreviation is just commonly taken to be the
+# initials of the phrase, and the legislation here uniformly uses
+# the phrase `summer time' and does not use the phrase `daylight
+# time'.
+# Announcers on the Commonwealth radio network, the ABC (for Australian
+# Broadcasting Commission), use the phrases `Eastern Standard Time'
+# or `Eastern Summer Time'.  (Note, though, that as I say in the
+# current australasia file, there is really no such thing.)  Announcers
+# on its overseas service, Radio Australia, use the same phrases
+# prefixed by the word `Australian' when referring to local times;
+# time announcements on that service, naturally enough, are made in UTC.
+
+# From Arthur David Olson (1992-03-08):
+# Given the above, what's chosen for year-round use is:
+#	CST	for any place operating at a GMTOFF of 9:30
+#	WST	for any place operating at a GMTOFF of 8:00
+#	EST	for any place operating at a GMTOFF of 10:00
+
+# From Chuck Soper (2006-06-01):
+# I recently found this Australian government web page on time zones:
+# <http://www.australia.gov.au/about-australia-13time>
+# And this government web page lists time zone names and abbreviations:
+# <http://www.bom.gov.au/climate/averages/tables/daysavtm.shtml>
+
+# From Paul Eggert (2001-04-05), summarizing a long discussion about "EST"
+# versus "AEST" etc.:
+#
+# I see the following points of dispute:
+#
+# * How important are unique time zone abbreviations?
+#
+#   Here I tend to agree with the point (most recently made by Chris
+#   Newman) that unique abbreviations should not be essential for proper
+#   operation of software.  We have other instances of ambiguity
+#   (e.g. "IST" denoting both "Israel Standard Time" and "Indian
+#   Standard Time"), and they are not likely to go away any time soon.
+#   In the old days, some software mistakenly relied on unique
+#   abbreviations, but this is becoming less true with time, and I don't
+#   think it's that important to cater to such software these days.
+#
+#   On the other hand, there is another motivation for unambiguous
+#   abbreviations: it cuts down on human confusion.  This is
+#   particularly true for Australia, where "EST" can mean one thing for
+#   time T and a different thing for time T plus 1 second.
+#
+# * Does the relevant legislation indicate which abbreviations should be used?
+#
+#   Here I tend to think that things are a mess, just as they are in
+#   many other countries.  We Americans are currently disagreeing about
+#   which abbreviation to use for the newly legislated Chamorro Standard
+#   Time, for example.
+#
+#   Personally, I would prefer to use common practice; I would like to
+#   refer to legislation only for examples of common practice, or as a
+#   tiebreaker.
+#
+# * Do Australians more often use "Eastern Daylight Time" or "Eastern
+#   Summer Time"?  Do they typically prefix the time zone names with
+#   the word "Australian"?
+#
+#   My own impression is that both "Daylight Time" and "Summer Time" are
+#   common and are widely understood, but that "Summer Time" is more
+#   popular; and that the leading "A" is also common but is omitted more
+#   often than not.  I just used AltaVista advanced search and got the
+#   following count of page hits:
+#
+#     1,103 "Eastern Summer Time" AND domain:au
+#       971 "Australian Eastern Summer Time" AND domain:au
+#       613 "Eastern Daylight Time" AND domain:au
+#       127 "Australian Eastern Daylight Time" AND domain:au
+#
+#   Here "Summer" seems quite a bit more popular than "Daylight",
+#   particularly when we know the time zone is Australian and not US,
+#   say.  The "Australian" prefix seems to be popular for Eastern Summer
+#   Time, but unpopular for Eastern Daylight Time.
+#
+#   For abbreviations, tools like AltaVista are less useful because of
+#   ambiguity.  Many hits are not really time zones, unfortunately, and
+#   many hits denote US time zones and not Australian ones.  But here
+#   are the hit counts anyway:
+#
+#     161,304 "EST" and domain:au
+#      25,156 "EDT" and domain:au
+#      18,263 "AEST" and domain:au
+#      10,416 "AEDT" and domain:au
+#
+#      14,538 "CST" and domain:au
+#       5,728 "CDT" and domain:au
+#         176 "ACST" and domain:au
+#          29 "ACDT" and domain:au
+#
+#       7,539 "WST" and domain:au
+#          68 "AWST" and domain:au
+#
+#   This data suggest that Australians tend to omit the "A" prefix in
+#   practice.  The situation for "ST" versus "DT" is less clear, given
+#   the ambiguities involved.
+#
+# * How do Australians feel about the abbreviations in the tz database?
+#
+#   If you just count Australians on this list, I count 2 in favor and 3
+#   against.  One of the "against" votes (David Keegel) counseled delay,
+#   saying that both AEST/AEDT and EST/EST are widely used and
+#   understood in Australia.
+
+# From Paul Eggert (1995-12-19):
+# Shanks & Pottenger report 2:00 for all autumn changes in Australia and NZ.
+# Mark Prior writes that his newspaper
+# reports that NSW's fall 1995 change will occur at 2:00,
+# but Robert Elz says it's been 3:00 in Victoria since 1970
+# and perhaps the newspaper's `2:00' is referring to standard time.
+# For now we'll continue to assume 2:00s for changes since 1960.
+
+# From Eric Ulevik (1998-01-05):
+#
+# Here are some URLs to Australian time legislation. These URLs are stable,
+# and should probably be included in the data file. There are probably more
+# relevant entries in this database.
+#
+# NSW (including LHI and Broken Hill):
+# <a href="http://www.austlii.edu.au/au/legis/nsw/consol_act/sta1987137/index.html">
+# Standard Time Act 1987 (updated 1995-04-04)
+# </a>
+# ACT
+# <a href="http://www.austlii.edu.au/au/legis/act/consol_act/stasta1972279/index.html">
+# Standard Time and Summer Time Act 1972
+# </a>
+# SA
+# <a href="http://www.austlii.edu.au/au/legis/sa/consol_act/sta1898137/index.html">
+# Standard Time Act, 1898
+# </a>
+
+# From David Grosz (2005-06-13):
+# It was announced last week that Daylight Saving would be extended by
+# one week next year to allow for the 2006 Commonwealth Games.
+# Daylight Saving is now to end for next year only on the first Sunday
+# in April instead of the last Sunday in March.
+#
+# From Gwillim Law (2005-06-14):
+# I did some Googling and found that all of those states (and territory) plan
+# to extend DST together in 2006.
+# ACT: http://www.cmd.act.gov.au/mediareleases/fileread.cfm?file=86.txt
+# New South Wales: http://www.thecouriermail.news.com.au/common/story_page/0,5936,15538869%255E1702,00.html
+# South Australia: http://www.news.com.au/story/0,10117,15555031-1246,00.html
+# Tasmania: http://www.media.tas.gov.au/release.php?id=14772
+# Victoria: I wasn't able to find anything separate, but the other articles
+# allude to it.
+# But not Queensland
+# http://www.news.com.au/story/0,10117,15564030-1248,00.html.
+
+# Northern Territory
+
+# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
+# # The NORTHERN TERRITORY..  [ Courtesy N.T. Dept of the Chief Minister ]
+# #					[ Nov 1990 ]
+# #	N.T. have never utilised any DST due to sub-tropical/tropical location.
+# ...
+# Zone        Australia/North         9:30    -       CST
+
+# From Bradley White (1991-03-04):
+# A recent excerpt from an Australian newspaper...
+# the Northern Territory do[es] not have daylight saving.
+
+# Western Australia
+
+# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
+# #  The state of WESTERN AUSTRALIA..  [ Courtesy W.A. dept Premier+Cabinet ]
+# #						[ Nov 1990 ]
+# #	W.A. suffers from a great deal of public and political opposition to
+# #	DST in principle. A bill is brought before parliament in most years, but
+# #	usually defeated either in the upper house, or in party caucus
+# #	before reaching parliament.
+# ...
+# Zone	Australia/West		8:00	AW	%sST
+# ...
+# Rule	AW	1974	only	-	Oct	lastSun	2:00	1:00	D
+# Rule	AW	1975	only	-	Mar	Sun>=1	3:00	0	W
+# Rule	AW	1983	only	-	Oct	lastSun	2:00	1:00	D
+# Rule	AW	1984	only	-	Mar	Sun>=1	3:00	0	W
+
+# From Bradley White (1991-03-04):
+# A recent excerpt from an Australian newspaper...
+# Western Australia...do[es] not have daylight saving.
+
+# From John D. Newman via Bradley White (1991-11-02):
+# Western Australia is still on "winter time". Some DH in Sydney
+# rang me at home a few days ago at 6.00am. (He had just arrived at
+# work at 9.00am.)
+# W.A. is switching to Summer Time on Nov 17th just to confuse
+# everybody again.
+
+# From Arthur David Olson (1992-03-08):
+# The 1992 ending date used in the rules is a best guess;
+# it matches what was used in the past.
+
+# <a href="http://www.bom.gov.au/faq/faqgen.htm">
+# The Australian Bureau of Meteorology FAQ
+# </a> (1999-09-27) writes that Giles Meteorological Station uses
+# South Australian time even though it's located in Western Australia.
+
+# Queensland
+# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
+# #   The state of QUEENSLAND.. [ Courtesy Qld. Dept Premier Econ&Trade Devel ]
+# #						[ Dec 1990 ]
+# ...
+# Zone	Australia/Queensland	10:00	AQ	%sST
+# ...
+# Rule	AQ	1971	only	-	Oct	lastSun	2:00	1:00	D
+# Rule	AQ	1972	only	-	Feb	lastSun	3:00	0	E
+# Rule	AQ	1989	max	-	Oct	lastSun	2:00	1:00	D
+# Rule	AQ	1990	max	-	Mar	Sun>=1	3:00	0	E
+
+# From Bradley White (1989-12-24):
+# "Australia/Queensland" now observes daylight time (i.e. from
+# October 1989).
+
+# From Bradley White (1991-03-04):
+# A recent excerpt from an Australian newspaper...
+# ...Queensland...[has] agreed to end daylight saving
+# at 3am tomorrow (March 3)...
+
+# From John Mackin (1991-03-06):
+# I can certainly confirm for my part that Daylight Saving in NSW did in fact
+# end on Sunday, 3 March.  I don't know at what hour, though.  (It surprised
+# me.)
+
+# From Bradley White (1992-03-08):
+# ...there was recently a referendum in Queensland which resulted
+# in the experimental daylight saving system being abandoned. So, ...
+# ...
+# Rule	QLD	1989	1991	-	Oct	lastSun	2:00	1:00	D
+# Rule	QLD	1990	1992	-	Mar	Sun>=1	3:00	0	S
+# ...
+
+# From Arthur David Olson (1992-03-08):
+# The chosen rules the union of the 1971/1972 change and the 1989-1992 changes.
+
+# From Christopher Hunt (2006-11-21), after an advance warning
+# from Jesper Norgaard Welen (2006-11-01):
+# WA are trialing DST for three years.
+# <http://www.parliament.wa.gov.au/parliament/bills.nsf/9A1B183144403DA54825721200088DF1/$File/Bill175-1B.pdf>
+
+# From Rives McDow (2002-04-09):
+# The most interesting region I have found consists of three towns on the
+# southern coast....  South Australia observes daylight saving time; Western
+# Australia does not.  The two states are one and a half hours apart.  The
+# residents decided to forget about this nonsense of changing the clock so
+# much and set the local time 20 hours and 45 minutes from the
+# international date line, or right in the middle of the time of South
+# Australia and Western Australia....
+#
+# From Paul Eggert (2002-04-09):
+# This is confirmed by the section entitled
+# "What's the deal with time zones???" in
+# <http://www.earthsci.unimelb.edu.au/~awatkins/null.html>.
+#
+# From Alex Livingston (2006-12-07):
+# ... it was just on four years ago that I drove along the Eyre Highway,
+# which passes through eastern Western Australia close to the southern
+# coast of the continent.
+#
+# I paid particular attention to the time kept there. There can be no
+# dispute that UTC+08:45 was considered "the time" from the border
+# village just inside the border with South Australia to as far west
+# as just east of Caiguna. There can also be no dispute that Eucla is
+# the largest population centre in this zone....
+#
+# Now that Western Australia is observing daylight saving, the
+# question arose whether this part of the state would follow suit. I
+# just called the border village and confirmed that indeed they have,
+# meaning that they are now observing UTC+09:45.
+#
+# (2006-12-09):
+# I personally doubt that either experimentation with daylight saving
+# in WA or its introduction in SA had anything to do with the genesis
+# of this time zone.  My hunch is that it's been around since well
+# before 1975.  I remember seeing it noted on road maps decades ago.
+
+# From Paul Eggert (2006-12-15):
+# For lack of better info, assume the tradition dates back to the
+# introduction of standard time in 1895.
+
+
+# southeast Australia
+#
+# From Paul Eggert (2007-07-23):
+# Starting autumn 2008 Victoria, NSW, South Australia, Tasmania and the ACT
+# end DST the first Sunday in April and start DST the first Sunday in October.
+# http://www.theage.com.au/news/national/daylight-savings-to-span-six-months/2007/06/27/1182623966703.html
+
+
+# South Australia
+
+# From Bradley White (1991-03-04):
+# A recent excerpt from an Australian newspaper...
+# ...South Australia...[has] agreed to end daylight saving
+# at 3am tomorrow (March 3)...
+
+# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
+# #   The state of SOUTH AUSTRALIA....[ Courtesy of S.A. Dept of Labour ]
+# #						[ Nov 1990 ]
+# ...
+# Zone	Australia/South		9:30	AS	%sST
+# ...
+# Rule	 AS	1971	max	-	Oct	lastSun	2:00	1:00	D
+# Rule	 AS	1972	1985	-	Mar	Sun>=1	3:00	0	C
+# Rule	 AS	1986	1990	-	Mar	Sun>=15	3:00	0	C
+# Rule	 AS	1991	max	-	Mar	Sun>=1	3:00	0	C
+
+# From Bradley White (1992-03-11):
+# Recent correspondence with a friend in Adelaide
+# contained the following exchange:  "Due to the Adelaide Festival,
+# South Australia delays setting back our clocks for a few weeks."
+
+# From Robert Elz (1992-03-13):
+# I heard that apparently (or at least, it appears that)
+# South Aus will have an extra 3 weeks daylight saving every even
+# numbered year (from 1990).  That's when the Adelaide Festival
+# is on...
+
+# From Robert Elz (1992-03-16, 00:57:07 +1000):
+# DST didn't end in Adelaide today (yesterday)....
+# But whether it's "4th Sunday" or "2nd last Sunday" I have no idea whatever...
+# (it's just as likely to be "the Sunday we pick for this year"...).
+
+# From Bradley White (1994-04-11):
+# If Sun, 15 March, 1992 was at +1030 as kre asserts, but yet Sun, 20 March,
+# 1994 was at +0930 as John Connolly's customer seems to assert, then I can
+# only conclude that the actual rule is more complicated....
+
+# From John Warburton (1994-10-07):
+# The new Daylight Savings dates for South Australia ...
+# was gazetted in the Government Hansard on Sep 26 1994....
+# start on last Sunday in October and end in last sunday in March.
+
+# From Paul Eggert (2007-07-23):
+# See "southeast Australia" above for 2008 and later.
+
+# Tasmania
+
+# The rules for 1967 through 1991 were reported by George Shepherd
+# via Simon Woodhead via Robert Elz (1991-03-06):
+# #  The state of TASMANIA.. [Courtesy Tasmanian Dept of Premier + Cabinet ]
+# #					[ Nov 1990 ]
+
+# From Bill Hart via Guy Harris (1991-10-10):
+# Oh yes, the new daylight savings rules are uniquely tasmanian, we have
+# 6 weeks a year now when we are out of sync with the rest of Australia
+# (but nothing new about that).
+
+# From Alex Livingston (1999-10-04):
+# I heard on the ABC (Australian Broadcasting Corporation) radio news on the
+# (long) weekend that Tasmania, which usually goes its own way in this regard,
+# has decided to join with most of NSW, the ACT, and most of Victoria
+# (Australia) and start daylight saving on the last Sunday in August in 2000
+# instead of the first Sunday in October.
+
+# Sim Alam (2000-07-03) reported a legal citation for the 2000/2001 rules:
+# http://www.thelaw.tas.gov.au/fragview/42++1968+GS3A@EN+2000070300
+
+# From Paul Eggert (2007-07-23):
+# See "southeast Australia" above for 2008 and later.
+
+# Victoria
+
+# The rules for 1971 through 1991 were reported by George Shepherd
+# via Simon Woodhead via Robert Elz (1991-03-06):
+# #   The state of VICTORIA.. [ Courtesy of Vic. Dept of Premier + Cabinet ]
+# #						[ Nov 1990 ]
+
+# From Scott Harrington (2001-08-29):
+# On KQED's "City Arts and Lectures" program last night I heard an
+# interesting story about daylight savings time.  Dr. John Heilbron was
+# discussing his book "The Sun in the Church: Cathedrals as Solar
+# Observatories"[1], and in particular the Shrine of Remembrance[2] located
+# in Melbourne, Australia.
+#
+# Apparently the shrine's main purpose is a beam of sunlight which
+# illuminates a special spot on the floor at the 11th hour of the 11th day
+# of the 11th month (Remembrance Day) every year in memory of Australia's
+# fallen WWI soldiers.  And if you go there on Nov. 11, at 11am local time,
+# you will indeed see the sunbeam illuminate the special spot at the
+# expected time.
+#
+# However, that is only because of some special mirror contraption that had
+# to be employed, since due to daylight savings time, the true solar time of
+# the remembrance moment occurs one hour later (or earlier?).  Perhaps
+# someone with more information on this jury-rig can tell us more.
+#
+# [1] http://www.hup.harvard.edu/catalog/HEISUN.html
+# [2] http://www.shrine.org.au
+
+# From Paul Eggert (2007-07-23):
+# See "southeast Australia" above for 2008 and later.
+
+# New South Wales
+
+# From Arthur David Olson:
+# New South Wales and subjurisdictions have their own ideas of a fun time.
+# Based on law library research by John Mackin,
+# who notes:
+#	In Australia, time is not legislated federally, but rather by the
+#	individual states.  Thus, while such terms as ``Eastern Standard Time''
+#	[I mean, of course, Australian EST, not any other kind] are in common
+#	use, _they have NO REAL MEANING_, as they are not defined in the
+#	legislation.  This is very important to understand.
+#	I have researched New South Wales time only...
+
+# From Eric Ulevik (1999-05-26):
+# DST will start in NSW on the last Sunday of August, rather than the usual
+# October in 2000.  [See: Matthew Moore,
+# <a href="http://www.smh.com.au/news/9905/26/pageone/pageone4.html">
+# Two months more daylight saving
+# </a>
+# Sydney Morning Herald (1999-05-26).]
+
+# From Paul Eggert (1999-09-27):
+# See the following official NSW source:
+# <a href="http://dir.gis.nsw.gov.au/cgi-bin/genobject/document/other/daylightsaving/tigGmZ">
+# Daylight Saving in New South Wales.
+# </a>
+#
+# Narrabri Shire (NSW) council has announced it will ignore the extension of
+# daylight saving next year.  See:
+# <a href="http://abc.net.au/news/regionals/neweng/monthly/regeng-22jul1999-1.htm">
+# Narrabri Council to ignore daylight saving
+# </a> (1999-07-22).  For now, we'll wait to see if this really happens.
+#
+# Victoria will following NSW.  See:
+# <a href="http://abc.net.au/local/news/olympics/1999/07/item19990728112314_1.htm">
+# Vic to extend daylight saving
+# </a> (1999-07-28).
+#
+# However, South Australia rejected the DST request.  See:
+# <a href="http://abc.net.au/news/olympics/1999/07/item19990719151754_1.htm">
+# South Australia rejects Olympics daylight savings request
+# </a> (1999-07-19).
+#
+# Queensland also will not observe DST for the Olympics.  See:
+# <a href="http://abc.net.au/news/olympics/1999/06/item19990601114608_1.htm">
+# Qld says no to daylight savings for Olympics
+# </a> (1999-06-01), which quotes Queensland Premier Peter Beattie as saying
+# ``Look you've got to remember in my family when this came up last time
+# I voted for it, my wife voted against it and she said to me it's all very
+# well for you, you don't have to worry about getting the children out of
+# bed, getting them to school, getting them to sleep at night.
+# I've been through all this argument domestically...my wife rules.''
+#
+# Broken Hill will stick with South Australian time in 2000.  See:
+# <a href="http://abc.net.au/news/regionals/brokenh/monthly/regbrok-21jul1999-6.htm">
+# Broken Hill to be behind the times
+# </a> (1999-07-21).
+
+# IATA SSIM (1998-09) says that the spring 2000 change for Australian
+# Capital Territory, New South Wales except Lord Howe Island and Broken
+# Hill, and Victoria will be August 27, presumably due to the Sydney Olympics.
+
+# From Eric Ulevik, referring to Sydney's Sun Herald (2000-08-13), page 29:
+# The Queensland Premier Peter Beattie is encouraging northern NSW
+# towns to use Queensland time.
+
+# From Paul Eggert (2007-07-23):
+# See "southeast Australia" above for 2008 and later.
+
+# Yancowinna
+
+# From John Mackin (1989-01-04):
+# `Broken Hill' means the County of Yancowinna.
+
+# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
+# # YANCOWINNA..  [ Confirmation courtesy of Broken Hill Postmaster ]
+# #					[ Dec 1990 ]
+# ...
+# # Yancowinna uses Central Standard Time, despite [its] location on the
+# # New South Wales side of the S.A. border. Most business and social dealings
+# # are with CST zones, therefore CST is legislated by local government
+# # although the switch to Summer Time occurs in line with N.S.W. There have
+# # been years when this did not apply, but the historical data is not
+# # presently available.
+# Zone	Australia/Yancowinna	9:30	 AY	%sST
+# ...
+# Rule	 AY	1971	1985	-	Oct	lastSun	2:00	1:00	D
+# Rule	 AY	1972	only	-	Feb	lastSun	3:00	0	C
+# [followed by other Rules]
+
+# Lord Howe Island
+
+# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
+# LHI...		[ Courtesy of Pauline Van Winsen ]
+#					[ Dec 1990 ]
+# Lord Howe Island is located off the New South Wales coast, and is half an
+# hour ahead of NSW time.
+
+# From James Lonergan, Secretary, Lord Howe Island Board (2000-01-27):
+# Lord Howe Island summer time in 2000/2001 will commence on the same
+# date as the rest of NSW (i.e. 2000-08-27).  For your information the
+# Lord Howe Island Board (controlling authority for the Island) is
+# seeking the community's views on various options for summer time
+# arrangements on the Island, e.g. advance clocks by 1 full hour
+# instead of only 30 minutes.  Dependant on the wishes of residents
+# the Board may approach the NSW government to change the existing
+# arrangements.  The starting date for summer time on the Island will
+# however always coincide with the rest of NSW.
+
+# From James Lonergan, Secretary, Lord Howe Island Board (2000-10-25):
+# Lord Howe Island advances clocks by 30 minutes during DST in NSW and retards
+# clocks by 30 minutes when DST finishes. Since DST was most recently
+# introduced in NSW, the "changeover" time on the Island has been 02:00 as
+# shown on clocks on LHI. I guess this means that for 30 minutes at the start
+# of DST, LHI is actually 1 hour ahead of the rest of NSW.
+
+# From Paul Eggert (2006-03-22):
+# For Lord Howe dates we use Shanks & Pottenger through 1989, and
+# Lonergan thereafter.  For times we use Lonergan.
+
+# From Paul Eggert (2007-07-23):
+# See "southeast Australia" above for 2008 and later.
+
+# From Steffen Thorsen (2009-04-28):
+# According to the official press release, South Australia's extended daylight 
+# saving period will continue with the same rules as used during the 2008-2009 
+# summer (southern hemisphere).
+# 
+# From
+# <a href="http://www.safework.sa.gov.au/uploaded_files/DaylightDatesSet.pdf">
+# http://www.safework.sa.gov.au/uploaded_files/DaylightDatesSet.pdf
+# </a>
+# The extended daylight saving period that South Australia has been trialling 
+# for over the last year is now set to be ongoing.
+# Daylight saving will continue to start on the first Sunday in October each 
+# year and finish on the first Sunday in April the following year.
+# Industrial Relations Minister, Paul Caica, says this provides South Australia 
+# with a consistent half hour time difference with NSW, Victoria, Tasmania and 
+# the ACT for all 52 weeks of the year...
+# 
+# We have a wrap-up here:
+# <a href="http://www.timeanddate.com/news/time/south-australia-extends-dst.html">
+# http://www.timeanddate.com/news/time/south-australia-extends-dst.html
+# </a>
+###############################################################################
+
+# New Zealand
+
+# From Mark Davies (1990-10-03):
+# the 1989/90 year was a trial of an extended "daylight saving" period.
+# This trial was deemed successful and the extended period adopted for
+# subsequent years (with the addition of a further week at the start).
+# source -- phone call to Ministry of Internal Affairs Head Office.
+
+# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):
+# # The Country of New Zealand   (Australia's east island -) Gee they hate that!
+# #				   or is Australia the west island of N.Z.
+# #	[ courtesy of Geoff Tribble.. Auckland N.Z. ]
+# #				[ Nov 1990 ]
+# ...
+# Rule	NZ      1974    1988	-	Oct	lastSun	2:00	1:00	D
+# Rule	NZ	1989	max	-	Oct	Sun>=1	2:00	1:00	D
+# Rule	NZ      1975    1989	-	Mar	Sun>=1	3:00	0	S
+# Rule	NZ	1990	max	-	Mar	lastSun	3:00	0	S
+# ...
+# Zone	NZ			12:00	NZ		NZ%sT	# New Zealand
+# Zone	NZ-CHAT			12:45	-		NZ-CHAT # Chatham Island
+
+# From Arthur David Olson (1992-03-08):
+# The chosen rules use the Davies October 8 values for the start of DST in 1989
+# rather than the October 1 value.
+
+# From Paul Eggert (1995-12-19);
+# Shank & Pottenger report 2:00 for all autumn changes in Australia and NZ.
+# Robert Uzgalis writes that the New Zealand Daylight
+# Savings Time Order in Council dated 1990-06-18 specifies 2:00 standard
+# time on both the first Sunday in October and the third Sunday in March.
+# As with Australia, we'll assume the tradition is 2:00s, not 2:00.
+#
+# From Paul Eggert (2006-03-22):
+# The Department of Internal Affairs (DIA) maintains a brief history,
+# as does Carol Squires; see tz-link.htm for the full references.
+# Use these sources in preference to Shanks & Pottenger.
+#
+# For Chatham, IATA SSIM (1991/1999) gives the NZ rules but with
+# transitions at 2:45 local standard time; this confirms that Chatham
+# is always exactly 45 minutes ahead of Auckland.
+
+# From Colin Sharples (2007-04-30):
+# DST will now start on the last Sunday in September, and end on the
+# first Sunday in April.  The changes take effect this year, meaning
+# that DST will begin on 2007-09-30 2008-04-06.
+# http://www.dia.govt.nz/diawebsite.nsf/wpg_URL/Services-Daylight-Saving-Daylight-saving-to-be-extended
+
+###############################################################################
+
+
+# Fiji
+
+# Howse writes (p 153) that in 1879 the British governor of Fiji
+# enacted an ordinance standardizing the islands on Antipodean Time
+# instead of the American system (which was one day behind).
+
+# From Rives McDow (1998-10-08):
+# Fiji will introduce DST effective 0200 local time, 1998-11-01
+# until 0300 local time 1999-02-28.  Each year the DST period will
+# be from the first Sunday in November until the last Sunday in February.
+
+# From Paul Eggert (2000-01-08):
+# IATA SSIM (1999-09) says DST ends 0100 local time.  Go with McDow.
+
+# From the BBC World Service (1998-10-31 11:32 UTC):
+# The Fijiian government says the main reasons for the time change is to
+# improve productivity and reduce road accidents.  But correspondents say it
+# also hopes the move will boost Fiji's ability to compete with other pacific
+# islands in the effort to attract tourists to witness the dawning of the new
+# millenium.
+
+# http://www.fiji.gov.fj/press/2000_09/2000_09_13-05.shtml (2000-09-13)
+# reports that Fiji has discontinued DST.
+
+# Johnston
+
+# Johnston data is from usno1995.
+
+
+# Kiribati
+
+# From Paul Eggert (1996-01-22):
+# Today's _Wall Street Journal_ (page 1) reports that Kiribati
+# ``declared it the same day throught the country as of Jan. 1, 1995''
+# as part of the competition to be first into the 21st century.
+
+
+# Kwajalein
+
+# In comp.risks 14.87 (26 August 1993), Peter Neumann writes:
+# I wonder what happened in Kwajalein, where there was NO Friday,
+# 1993-08-20.  Thursday night at midnight Kwajalein switched sides with
+# respect to the International Date Line, to rejoin its fellow islands,
+# going from 11:59 p.m. Thursday to 12:00 m. Saturday in a blink.
+
+
+# N Mariana Is, Guam
+
+# Howse writes (p 153) ``The Spaniards, on the other hand, reached the
+# Philippines and the Ladrones from America,'' and implies that the Ladrones
+# (now called the Marianas) kept American date for quite some time.
+# For now, we assume the Ladrones switched at the same time as the Philippines;
+# see Asia/Manila.
+
+# US Public Law 106-564 (2000-12-23) made UTC+10 the official standard time,
+# under the name "Chamorro Standard Time".  There is no official abbreviation,
+# but Congressman Robert A. Underwood, author of the bill that became law,
+# wrote in a press release (2000-12-27) that he will seek the use of "ChST".
+
+
+# Micronesia
+
+# Alan Eugene Davis writes (1996-03-16),
+# ``I am certain, having lived there for the past decade, that "Truk"
+# (now properly known as Chuuk) ... is in the time zone GMT+10.''
+#
+# Shanks & Pottenger write that Truk switched from UTC+10 to UTC+11
+# on 1978-10-01; ignore this for now.
+
+# From Paul Eggert (1999-10-29):
+# The Federated States of Micronesia Visitors Board writes in
+# <a href="http://www.fsmgov.org/info/clocks.html">
+# The Federated States of Micronesia - Visitor Information
+# </a> (1999-01-26)
+# that Truk and Yap are UTC+10, and Ponape and Kosrae are UTC+11.
+# We don't know when Kosrae switched from UTC+12; assume January 1 for now.
+
+
+# Midway
+
+# From Charles T O'Connor, KMTH DJ (1956),
+# quoted in the KTMH section of the Radio Heritage Collection
+# <http://radiodx.com/spdxr/KMTH.htm> (2002-12-31):
+# For the past two months we've been on what is known as Daylight
+# Saving Time.  This time has put us on air at 5am in the morning,
+# your time down there in New Zealand.  Starting September 2, 1956
+# we'll again go back to Standard Time.  This'll mean that we'll go to
+# air at 6am your time.
+#
+# From Paul Eggert (2003-03-23):
+# We don't know the date of that quote, but we'll guess they
+# started DST on June 3.  Possibly DST was observed other years
+# in Midway, but we have no record of it.
+
+
+# Pitcairn
+
+# From Rives McDow (1999-11-08):
+# A Proclamation was signed by the Governor of Pitcairn on the 27th March 1998
+# with regard to Pitcairn Standard Time.  The Proclamation is as follows.
+#
+#	The local time for general purposes in the Islands shall be
+#	Co-ordinated Universal time minus 8 hours and shall be known
+#	as Pitcairn Standard Time.
+#
+# ... I have also seen Pitcairn listed as UTC minus 9 hours in several
+# references, and can only assume that this was an error in interpretation
+# somehow in light of this proclamation.
+
+# From Rives McDow (1999-11-09):
+# The Proclamation regarding Pitcairn time came into effect on 27 April 1998
+# ... at midnight.
+
+# From Howie Phelps (1999-11-10), who talked to a Pitcairner via shortwave:
+# Betty Christian told me yesterday that their local time is the same as
+# Pacific Standard Time. They used to be 1/2 hour different from us here in
+# Sacramento but it was changed a couple of years ago.
+
+
+# Samoa
+
+# Howse writes (p 153, citing p 10 of the 1883-11-18 New York Herald)
+# that in 1879 the King of Samoa decided to change
+# ``the date in his kingdom from the Antipodean to the American system,
+# ordaining -- by a masterpiece of diplomatic flattery -- that
+# the Fourth of July should be celebrated twice in that year.''
+
+
+# Tonga
+
+# From Paul Eggert (1996-01-22):
+# Today's _Wall Street Journal_ (p 1) reports that ``Tonga has been plotting
+# to sneak ahead of [New Zealanders] by introducing daylight-saving time.''
+# Since Kiribati has moved the Date Line it's not clear what Tonga will do.
+
+# Don Mundell writes in the 1997-02-20 Tonga Chronicle
+# <a href="http://www.tongatapu.net.to/tonga/homeland/timebegins.htm">
+# How Tonga became `The Land where Time Begins'
+# </a>:
+
+# Until 1941 Tonga maintained a standard time 50 minutes ahead of NZST
+# 12 hours and 20 minutes ahead of GMT.  When New Zealand adjusted its
+# standard time in 1940s, Tonga had the choice of subtracting from its
+# local time to come on the same standard time as New Zealand or of
+# advancing its time to maintain the differential of 13 degrees
+# (approximately 50 minutes ahead of New Zealand time).
+#
+# Because His Majesty King Taufa'ahau Tupou IV, then Crown Prince
+# Tungi, preferred to ensure Tonga's title as the land where time
+# begins, the Legislative Assembly approved the latter change.
+#
+# But some of the older, more conservative members from the outer
+# islands objected. "If at midnight on Dec. 31, we move ahead 40
+# minutes, as your Royal Highness wishes, what becomes of the 40
+# minutes we have lost?"
+#
+# The Crown Prince, presented an unanswerable argument: "Remember that
+# on the World Day of Prayer, you would be the first people on Earth
+# to say your prayers in the morning."
+
+# From Paul Eggert (2006-03-22):
+# Shanks & Pottenger say the transition was on 1968-10-01; go with Mundell.
+
+# From Eric Ulevik (1999-05-03):
+# Tonga's director of tourism, who is also secretary of the National Millenium
+# Committee, has a plan to get Tonga back in front.
+# He has proposed a one-off move to tropical daylight saving for Tonga from
+# October to March, which has won approval in principle from the Tongan
+# Government.
+
+# From Steffen Thorsen (1999-09-09):
+# * Tonga will introduce DST in November
+#
+# I was given this link by John Letts:
+# <a href="http://news.bbc.co.uk/hi/english/world/asia-pacific/newsid_424000/424764.stm">
+# http://news.bbc.co.uk/hi/english/world/asia-pacific/newsid_424000/424764.stm
+# </a>
+#
+# I have not been able to find exact dates for the transition in November
+# yet. By reading this article it seems like Fiji will be 14 hours ahead
+# of UTC as well, but as far as I know Fiji will only be 13 hours ahead
+# (12 + 1 hour DST).
+
+# From Arthur David Olson (1999-09-20):
+# According to <a href="http://www.tongaonline.com/news/sept1799.html">
+# http://www.tongaonline.com/news/sept1799.html
+# </a>:
+# "Daylight Savings Time will take effect on Oct. 2 through April 15, 2000
+# and annually thereafter from the first Saturday in October through the
+# third Saturday of April.  Under the system approved by Privy Council on
+# Sept. 10, clocks must be turned ahead one hour on the opening day and
+# set back an hour on the closing date."
+# Alas, no indication of the time of day.
+
+# From Rives McDow (1999-10-06):
+# Tonga started its Daylight Saving on Saturday morning October 2nd at 0200am.
+# Daylight Saving ends on April 16 at 0300am which is Sunday morning.
+
+# From Steffen Thorsen (2000-10-31):
+# Back in March I found a notice on the website http://www.tongaonline.com
+# that Tonga changed back to standard time one month early, on March 19
+# instead of the original reported date April 16. Unfortunately, the article
+# is no longer available on the site, and I did not make a copy of the
+# text, and I have forgotten to report it here.
+# (Original URL was: http://www.tongaonline.com/news/march162000.htm )
+
+# From Rives McDow (2000-12-01):
+# Tonga is observing DST as of 2000-11-04 and will stop on 2001-01-27.
+
+# From Sione Moala-Mafi (2001-09-20) via Rives McDow:
+# At 2:00am on the first Sunday of November, the standard time in the Kingdom
+# shall be moved forward by one hour to 3:00am.  At 2:00am on the last Sunday
+# of January the standard time in the Kingdom shall be moved backward by one
+# hour to 1:00am.
+
+# From Pulu 'Anau (2002-11-05):
+# The law was for 3 years, supposedly to get renewed.  It wasn't.
+
+
+# Wake
+
+# From Vernice Anderson, Personal Secretary to Philip Jessup,
+# US Ambassador At Large (oral history interview, 1971-02-02):
+#
+# Saturday, the 14th [of October, 1950] -- ...  The time was all the
+# more confusing at that point, because we had crossed the
+# International Date Line, thus getting two Sundays.  Furthermore, we
+# discovered that Wake Island had two hours of daylight saving time
+# making calculation of time in Washington difficult if not almost
+# impossible.
+#
+# http://www.trumanlibrary.org/wake/meeting.htm
+
+# From Paul Eggert (2003-03-23):
+# We have no other report of DST in Wake Island, so omit this info for now.
+
+###############################################################################
+
+# The International Date Line
+
+# From Gwillim Law (2000-01-03):
+#
+# The International Date Line is not defined by any international standard,
+# convention, or treaty.  Mapmakers are free to draw it as they please.
+# Reputable mapmakers will simply ensure that every point of land appears on
+# the correct side of the IDL, according to the date legally observed there.
+#
+# When Kiribati adopted a uniform date in 1995, thereby moving the Phoenix and
+# Line Islands to the west side of the IDL (or, if you prefer, moving the IDL
+# to the east side of the Phoenix and Line Islands), I suppose that most
+# mapmakers redrew the IDL following the boundary of Kiribati.  Even that line
+# has a rather arbitrary nature.  The straight-line boundaries between Pacific
+# island nations that are shown on many maps are based on an international
+# convention, but are not legally binding national borders.... The date is
+# governed by the IDL; therefore, even on the high seas, there may be some
+# places as late as fourteen hours later than UTC.  And, since the IDL is not
+# an international standard, there are some places on the high seas where the
+# correct date is ambiguous.
+
+# From Wikipedia <http://en.wikipedia.org/wiki/Time_zone> (2005-08-31):
+# Before 1920, all ships kept local apparent time on the high seas by setting
+# their clocks at night or at the morning sight so that, given the ship's
+# speed and direction, it would be 12 o'clock when the Sun crossed the ship's
+# meridian (12 o'clock = local apparent noon).  During 1917, at the
+# Anglo-French Conference on Time-keeping at Sea, it was recommended that all
+# ships, both military and civilian, should adopt hourly standard time zones
+# on the high seas.  Whenever a ship was within the territorial waters of any
+# nation it would use that nation's standard time.  The captain was permitted
+# to change his ship's clocks at a time of his choice following his ship's
+# entry into another zone time--he often chose midnight.  These zones were
+# adopted by all major fleets between 1920 and 1925 but not by many
+# independent merchant ships until World War II.
+
+# From Paul Eggert, using references suggested by Oscar van Vlijmen
+# (2005-03-20):
+#
+# The American Practical Navigator (2002)
+# <http://pollux.nss.nima.mil/pubs/pubs_j_apn_sections.html?rid=187>
+# talks only about the 180-degree meridian with respect to ships in
+# international waters; it ignores the international date line.
diff --git a/JodaTime/src/java/org/joda/time/tz/src/backward b/JodaTime/src/java/org/joda/time/tz/src/backward
index 87308259a..f1f95a894 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/backward
+++ b/JodaTime/src/java/org/joda/time/tz/src/backward
@@ -1,112 +1,118 @@
-# @(#)backward	8.6
-
-# This file provides links between current names for time zones
-# and their old names.  Many names changed in late 1993.
-
-Link	Africa/Asmara		Africa/Asmera
-Link	Africa/Bamako		Africa/Timbuktu
-Link	America/Argentina/Catamarca	America/Argentina/ComodRivadavia
-Link	America/Adak		America/Atka
-Link	America/Argentina/Buenos_Aires	America/Buenos_Aires
-Link	America/Argentina/Catamarca	America/Catamarca
-Link	America/Atikokan	America/Coral_Harbour
-Link	America/Argentina/Cordoba	America/Cordoba
-Link	America/Tijuana		America/Ensenada
-Link	America/Indiana/Indianapolis	America/Fort_Wayne
-Link	America/Indiana/Indianapolis	America/Indianapolis
-Link	America/Argentina/Jujuy	America/Jujuy
-Link	America/Indiana/Knox	America/Knox_IN
-Link	America/Kentucky/Louisville	America/Louisville
-Link	America/Argentina/Mendoza	America/Mendoza
-Link	America/Rio_Branco	America/Porto_Acre
-Link	America/Argentina/Cordoba	America/Rosario
-Link	America/St_Thomas	America/Virgin
-Link	Asia/Ashgabat		Asia/Ashkhabad
-Link	Asia/Chongqing		Asia/Chungking
-Link	Asia/Dhaka		Asia/Dacca
-Link	Asia/Kolkata		Asia/Calcutta
-Link	Asia/Macau		Asia/Macao
-Link	Asia/Jerusalem		Asia/Tel_Aviv
-Link	Asia/Ho_Chi_Minh	Asia/Saigon
-Link	Asia/Thimphu		Asia/Thimbu
-Link	Asia/Makassar		Asia/Ujung_Pandang
-Link	Asia/Ulaanbaatar	Asia/Ulan_Bator
-Link	Atlantic/Faroe		Atlantic/Faeroe
-Link	Europe/Oslo		Atlantic/Jan_Mayen
-Link	Australia/Sydney	Australia/ACT
-Link	Australia/Sydney	Australia/Canberra
-Link	Australia/Lord_Howe	Australia/LHI
-Link	Australia/Sydney	Australia/NSW
-Link	Australia/Darwin	Australia/North
-Link	Australia/Brisbane	Australia/Queensland
-Link	Australia/Adelaide	Australia/South
-Link	Australia/Hobart	Australia/Tasmania
-Link	Australia/Melbourne	Australia/Victoria
-Link	Australia/Perth		Australia/West
-Link	Australia/Broken_Hill	Australia/Yancowinna
-Link	America/Rio_Branco	Brazil/Acre
-Link	America/Noronha		Brazil/DeNoronha
-Link	America/Sao_Paulo	Brazil/East
-Link	America/Manaus		Brazil/West
-Link	America/Halifax		Canada/Atlantic
-Link	America/Winnipeg	Canada/Central
-Link	America/Regina		Canada/East-Saskatchewan
-Link	America/Toronto		Canada/Eastern
-Link	America/Edmonton	Canada/Mountain
-Link	America/St_Johns	Canada/Newfoundland
-Link	America/Vancouver	Canada/Pacific
-Link	America/Regina		Canada/Saskatchewan
-Link	America/Whitehorse	Canada/Yukon
-Link	America/Santiago	Chile/Continental
-Link	Pacific/Easter		Chile/EasterIsland
-Link	America/Havana		Cuba
-Link	Africa/Cairo		Egypt
-Link	Europe/Dublin		Eire
-Link	Europe/London		Europe/Belfast
-Link	Europe/Chisinau		Europe/Tiraspol
-Link	Europe/London		GB
-Link	Europe/London		GB-Eire
-Link	Etc/GMT			GMT+0
-Link	Etc/GMT			GMT-0
-Link	Etc/GMT			GMT0
-Link	Etc/GMT			Greenwich
-Link	Asia/Hong_Kong		Hongkong
-Link	Atlantic/Reykjavik	Iceland
-Link	Asia/Tehran		Iran
-Link	Asia/Jerusalem		Israel
-Link	America/Jamaica		Jamaica
-Link	Asia/Tokyo		Japan
-Link	Pacific/Kwajalein	Kwajalein
-Link	Africa/Tripoli		Libya
-Link	America/Tijuana		Mexico/BajaNorte
-Link	America/Mazatlan	Mexico/BajaSur
-Link	America/Mexico_City	Mexico/General
-Link	Pacific/Auckland	NZ
-Link	Pacific/Chatham		NZ-CHAT
-Link	America/Denver		Navajo
-Link	Asia/Shanghai		PRC
-Link	Pacific/Pago_Pago	Pacific/Samoa
-Link	Pacific/Truk		Pacific/Yap
-Link	Europe/Warsaw		Poland
-Link	Europe/Lisbon		Portugal
-Link	Asia/Taipei		ROC
-Link	Asia/Seoul		ROK
-Link	Asia/Singapore		Singapore
-Link	Europe/Istanbul		Turkey
-Link	Etc/UCT			UCT
-Link	America/Anchorage	US/Alaska
-Link	America/Adak		US/Aleutian
-Link	America/Phoenix		US/Arizona
-Link	America/Chicago		US/Central
-Link	America/Indiana/Indianapolis	US/East-Indiana
-Link	America/New_York	US/Eastern
-Link	Pacific/Honolulu	US/Hawaii
-Link	America/Indiana/Knox	US/Indiana-Starke
-Link	America/Detroit		US/Michigan
-Link	America/Denver		US/Mountain
-Link	America/Los_Angeles	US/Pacific
-Link	Pacific/Pago_Pago	US/Samoa
-Link	Etc/UTC			UTC
-Link	Etc/UTC			Universal
-Link	Europe/Moscow		W-SU
-Link	Etc/UTC			Zulu
+# <pre>
+# @(#)backward	8.9
+# This file is in the public domain, so clarified as of
+# 2009-05-17 by Arthur David Olson.
+
+# This file provides links between current names for time zones
+# and their old names.  Many names changed in late 1993.
+
+Link	Africa/Asmara		Africa/Asmera
+Link	Africa/Bamako		Africa/Timbuktu
+Link	America/Argentina/Catamarca	America/Argentina/ComodRivadavia
+Link	America/Adak		America/Atka
+Link	America/Argentina/Buenos_Aires	America/Buenos_Aires
+Link	America/Argentina/Catamarca	America/Catamarca
+Link	America/Atikokan	America/Coral_Harbour
+Link	America/Argentina/Cordoba	America/Cordoba
+Link	America/Tijuana		America/Ensenada
+Link	America/Indiana/Indianapolis	America/Fort_Wayne
+Link	America/Indiana/Indianapolis	America/Indianapolis
+Link	America/Argentina/Jujuy	America/Jujuy
+Link	America/Indiana/Knox	America/Knox_IN
+Link	America/Kentucky/Louisville	America/Louisville
+Link	America/Argentina/Mendoza	America/Mendoza
+Link	America/Rio_Branco	America/Porto_Acre
+Link	America/Argentina/Cordoba	America/Rosario
+Link	America/St_Thomas	America/Virgin
+Link	Asia/Ashgabat		Asia/Ashkhabad
+Link	Asia/Chongqing		Asia/Chungking
+Link	Asia/Dhaka		Asia/Dacca
+Link	Asia/Kathmandu		Asia/Katmandu
+Link	Asia/Kolkata		Asia/Calcutta
+Link	Asia/Macau		Asia/Macao
+Link	Asia/Jerusalem		Asia/Tel_Aviv
+Link	Asia/Ho_Chi_Minh	Asia/Saigon
+Link	Asia/Thimphu		Asia/Thimbu
+Link	Asia/Makassar		Asia/Ujung_Pandang
+Link	Asia/Ulaanbaatar	Asia/Ulan_Bator
+Link	Atlantic/Faroe		Atlantic/Faeroe
+Link	Europe/Oslo		Atlantic/Jan_Mayen
+Link	Australia/Sydney	Australia/ACT
+Link	Australia/Sydney	Australia/Canberra
+Link	Australia/Lord_Howe	Australia/LHI
+Link	Australia/Sydney	Australia/NSW
+Link	Australia/Darwin	Australia/North
+Link	Australia/Brisbane	Australia/Queensland
+Link	Australia/Adelaide	Australia/South
+Link	Australia/Hobart	Australia/Tasmania
+Link	Australia/Melbourne	Australia/Victoria
+Link	Australia/Perth		Australia/West
+Link	Australia/Broken_Hill	Australia/Yancowinna
+Link	America/Rio_Branco	Brazil/Acre
+Link	America/Noronha		Brazil/DeNoronha
+Link	America/Sao_Paulo	Brazil/East
+Link	America/Manaus		Brazil/West
+Link	America/Halifax		Canada/Atlantic
+Link	America/Winnipeg	Canada/Central
+Link	America/Regina		Canada/East-Saskatchewan
+Link	America/Toronto		Canada/Eastern
+Link	America/Edmonton	Canada/Mountain
+Link	America/St_Johns	Canada/Newfoundland
+Link	America/Vancouver	Canada/Pacific
+Link	America/Regina		Canada/Saskatchewan
+Link	America/Whitehorse	Canada/Yukon
+Link	America/Santiago	Chile/Continental
+Link	Pacific/Easter		Chile/EasterIsland
+Link	America/Havana		Cuba
+Link	Africa/Cairo		Egypt
+Link	Europe/Dublin		Eire
+Link	Europe/London		Europe/Belfast
+Link	Europe/Chisinau		Europe/Tiraspol
+Link	Europe/London		GB
+Link	Europe/London		GB-Eire
+Link	Etc/GMT			GMT+0
+Link	Etc/GMT			GMT-0
+Link	Etc/GMT			GMT0
+Link	Etc/GMT			Greenwich
+Link	Asia/Hong_Kong		Hongkong
+Link	Atlantic/Reykjavik	Iceland
+Link	Asia/Tehran		Iran
+Link	Asia/Jerusalem		Israel
+Link	America/Jamaica		Jamaica
+Link	Asia/Tokyo		Japan
+Link	Pacific/Kwajalein	Kwajalein
+Link	Africa/Tripoli		Libya
+Link	America/Tijuana		Mexico/BajaNorte
+Link	America/Mazatlan	Mexico/BajaSur
+Link	America/Mexico_City	Mexico/General
+Link	Pacific/Auckland	NZ
+Link	Pacific/Chatham		NZ-CHAT
+Link	America/Denver		Navajo
+Link	Asia/Shanghai		PRC
+Link	Pacific/Pago_Pago	Pacific/Samoa
+Link	Pacific/Chuuk		Pacific/Yap
+Link	Pacific/Chuuk		Pacific/Truk
+Link	Pacific/Pohnpei		Pacific/Ponape
+Link	Europe/Warsaw		Poland
+Link	Europe/Lisbon		Portugal
+Link	Asia/Taipei		ROC
+Link	Asia/Seoul		ROK
+Link	Asia/Singapore		Singapore
+Link	Europe/Istanbul		Turkey
+Link	Etc/UCT			UCT
+Link	America/Anchorage	US/Alaska
+Link	America/Adak		US/Aleutian
+Link	America/Phoenix		US/Arizona
+Link	America/Chicago		US/Central
+Link	America/Indiana/Indianapolis	US/East-Indiana
+Link	America/New_York	US/Eastern
+Link	Pacific/Honolulu	US/Hawaii
+Link	America/Indiana/Knox	US/Indiana-Starke
+Link	America/Detroit		US/Michigan
+Link	America/Denver		US/Mountain
+Link	America/Los_Angeles	US/Pacific
+Link	Pacific/Pago_Pago	US/Samoa
+Link	Etc/UTC			UTC
+Link	Etc/UTC			Universal
+Link	Europe/Moscow		W-SU
+Link	Etc/UTC			Zulu
diff --git a/JodaTime/src/java/org/joda/time/tz/src/etcetera b/JodaTime/src/java/org/joda/time/tz/src/etcetera
index a258a897a..5c9368298 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/etcetera
+++ b/JodaTime/src/java/org/joda/time/tz/src/etcetera
@@ -1,80 +1,83 @@
-# @(#)etcetera	8.1
-
-# These entries are mostly present for historical reasons, so that
-# people in areas not otherwise covered by the tz files could "zic -l"
-# to a time zone that was right for their area.  These days, the
-# tz files cover almost all the inhabited world, and the only practical
-# need now for the entries that are not on UTC are for ships at sea
-# that cannot use POSIX TZ settings.
-
-Zone	Etc/GMT		0	-	GMT
-Zone	Etc/UTC		0	-	UTC
-Zone	Etc/UCT		0	-	UCT
-
-# The following link uses older naming conventions,
-# but it belongs here, not in the file `backward',
-# as functions like gmtime load the "GMT" file to handle leap seconds properly.
-# We want this to work even on installations that omit the other older names.
-Link	Etc/GMT				GMT
-
-Link	Etc/UTC				Etc/Universal
-Link	Etc/UTC				Etc/Zulu
-
-Link	Etc/GMT				Etc/Greenwich
-Link	Etc/GMT				Etc/GMT-0
-Link	Etc/GMT				Etc/GMT+0
-Link	Etc/GMT				Etc/GMT0
-
-# We use POSIX-style signs in the Zone names and the output abbreviations,
-# even though this is the opposite of what many people expect.
-# POSIX has positive signs west of Greenwich, but many people expect
-# positive signs east of Greenwich.  For example, TZ='Etc/GMT+4' uses
-# the abbreviation "GMT+4" and corresponds to 4 hours behind UTC
-# (i.e. west of Greenwich) even though many people would expect it to
-# mean 4 hours ahead of UTC (i.e. east of Greenwich).
-#
-# In the draft 5 of POSIX 1003.1-200x, the angle bracket notation
-# (which is not yet supported by the tz code) allows for
-# TZ='<GMT-4>+4'; if you want time zone abbreviations conforming to
-# ISO 8601 you can use TZ='<-0400>+4'.  Thus the commonly-expected
-# offset is kept within the angle bracket (and is used for display)
-# while the POSIX sign is kept outside the angle bracket (and is used
-# for calculation).
-#
-# Do not use a TZ setting like TZ='GMT+4', which is four hours behind
-# GMT but uses the completely misleading abbreviation "GMT".
-
-# Earlier incarnations of this package were not POSIX-compliant,
-# and had lines such as
-#		Zone	GMT-12		-12	-	GMT-1200
-# We did not want things to change quietly if someone accustomed to the old
-# way does a
-#		zic -l GMT-12
-# so we moved the names into the Etc subdirectory.
-
-Zone	Etc/GMT-14	14	-	GMT-14	# 14 hours ahead of GMT
-Zone	Etc/GMT-13	13	-	GMT-13
-Zone	Etc/GMT-12	12	-	GMT-12
-Zone	Etc/GMT-11	11	-	GMT-11
-Zone	Etc/GMT-10	10	-	GMT-10
-Zone	Etc/GMT-9	9	-	GMT-9
-Zone	Etc/GMT-8	8	-	GMT-8
-Zone	Etc/GMT-7	7	-	GMT-7
-Zone	Etc/GMT-6	6	-	GMT-6
-Zone	Etc/GMT-5	5	-	GMT-5
-Zone	Etc/GMT-4	4	-	GMT-4
-Zone	Etc/GMT-3	3	-	GMT-3
-Zone	Etc/GMT-2	2	-	GMT-2
-Zone	Etc/GMT-1	1	-	GMT-1
-Zone	Etc/GMT+1	-1	-	GMT+1
-Zone	Etc/GMT+2	-2	-	GMT+2
-Zone	Etc/GMT+3	-3	-	GMT+3
-Zone	Etc/GMT+4	-4	-	GMT+4
-Zone	Etc/GMT+5	-5	-	GMT+5
-Zone	Etc/GMT+6	-6	-	GMT+6
-Zone	Etc/GMT+7	-7	-	GMT+7
-Zone	Etc/GMT+8	-8	-	GMT+8
-Zone	Etc/GMT+9	-9	-	GMT+9
-Zone	Etc/GMT+10	-10	-	GMT+10
-Zone	Etc/GMT+11	-11	-	GMT+11
-Zone	Etc/GMT+12	-12	-	GMT+12
+# <pre>
+# @(#)etcetera	8.2
+# This file is in the public domain, so clarified as of
+# 2009-05-17 by Arthur David Olson.
+
+# These entries are mostly present for historical reasons, so that
+# people in areas not otherwise covered by the tz files could "zic -l"
+# to a time zone that was right for their area.  These days, the
+# tz files cover almost all the inhabited world, and the only practical
+# need now for the entries that are not on UTC are for ships at sea
+# that cannot use POSIX TZ settings.
+
+Zone	Etc/GMT		0	-	GMT
+Zone	Etc/UTC		0	-	UTC
+Zone	Etc/UCT		0	-	UCT
+
+# The following link uses older naming conventions,
+# but it belongs here, not in the file `backward',
+# as functions like gmtime load the "GMT" file to handle leap seconds properly.
+# We want this to work even on installations that omit the other older names.
+Link	Etc/GMT				GMT
+
+Link	Etc/UTC				Etc/Universal
+Link	Etc/UTC				Etc/Zulu
+
+Link	Etc/GMT				Etc/Greenwich
+Link	Etc/GMT				Etc/GMT-0
+Link	Etc/GMT				Etc/GMT+0
+Link	Etc/GMT				Etc/GMT0
+
+# We use POSIX-style signs in the Zone names and the output abbreviations,
+# even though this is the opposite of what many people expect.
+# POSIX has positive signs west of Greenwich, but many people expect
+# positive signs east of Greenwich.  For example, TZ='Etc/GMT+4' uses
+# the abbreviation "GMT+4" and corresponds to 4 hours behind UTC
+# (i.e. west of Greenwich) even though many people would expect it to
+# mean 4 hours ahead of UTC (i.e. east of Greenwich).
+#
+# In the draft 5 of POSIX 1003.1-200x, the angle bracket notation
+# (which is not yet supported by the tz code) allows for
+# TZ='<GMT-4>+4'; if you want time zone abbreviations conforming to
+# ISO 8601 you can use TZ='<-0400>+4'.  Thus the commonly-expected
+# offset is kept within the angle bracket (and is used for display)
+# while the POSIX sign is kept outside the angle bracket (and is used
+# for calculation).
+#
+# Do not use a TZ setting like TZ='GMT+4', which is four hours behind
+# GMT but uses the completely misleading abbreviation "GMT".
+
+# Earlier incarnations of this package were not POSIX-compliant,
+# and had lines such as
+#		Zone	GMT-12		-12	-	GMT-1200
+# We did not want things to change quietly if someone accustomed to the old
+# way does a
+#		zic -l GMT-12
+# so we moved the names into the Etc subdirectory.
+
+Zone	Etc/GMT-14	14	-	GMT-14	# 14 hours ahead of GMT
+Zone	Etc/GMT-13	13	-	GMT-13
+Zone	Etc/GMT-12	12	-	GMT-12
+Zone	Etc/GMT-11	11	-	GMT-11
+Zone	Etc/GMT-10	10	-	GMT-10
+Zone	Etc/GMT-9	9	-	GMT-9
+Zone	Etc/GMT-8	8	-	GMT-8
+Zone	Etc/GMT-7	7	-	GMT-7
+Zone	Etc/GMT-6	6	-	GMT-6
+Zone	Etc/GMT-5	5	-	GMT-5
+Zone	Etc/GMT-4	4	-	GMT-4
+Zone	Etc/GMT-3	3	-	GMT-3
+Zone	Etc/GMT-2	2	-	GMT-2
+Zone	Etc/GMT-1	1	-	GMT-1
+Zone	Etc/GMT+1	-1	-	GMT+1
+Zone	Etc/GMT+2	-2	-	GMT+2
+Zone	Etc/GMT+3	-3	-	GMT+3
+Zone	Etc/GMT+4	-4	-	GMT+4
+Zone	Etc/GMT+5	-5	-	GMT+5
+Zone	Etc/GMT+6	-6	-	GMT+6
+Zone	Etc/GMT+7	-7	-	GMT+7
+Zone	Etc/GMT+8	-8	-	GMT+8
+Zone	Etc/GMT+9	-9	-	GMT+9
+Zone	Etc/GMT+10	-10	-	GMT+10
+Zone	Etc/GMT+11	-11	-	GMT+11
+Zone	Etc/GMT+12	-12	-	GMT+12
diff --git a/JodaTime/src/java/org/joda/time/tz/src/europe b/JodaTime/src/java/org/joda/time/tz/src/europe
index 0ad51270b..8ca6d8f71 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/europe
+++ b/JodaTime/src/java/org/joda/time/tz/src/europe
@@ -1,2594 +1,2724 @@
-# @(#)europe	8.18
-# <pre>
-
-# This data is by no means authoritative; if you think you know better,
-# go ahead and edit the file (and please send any changes to
-# tz@elsie.nci.nih.gov for general use in the future).
-
-# From Paul Eggert (2006-03-22):
-# A good source for time zone historical data outside the U.S. is
-# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),
-# San Diego: ACS Publications, Inc. (2003).
-#
-# Gwillim Law writes that a good source
-# for recent time zone data is the International Air Transport
-# Association's Standard Schedules Information Manual (IATA SSIM),
-# published semiannually.  Law sent in several helpful summaries
-# of the IATA's data after 1990.
-#
-# Except where otherwise noted, Shanks & Pottenger is the source for
-# entries through 1991, and IATA SSIM is the source for entries afterwards.
-#
-# Other sources occasionally used include:
-#
-#	Edward W. Whitman, World Time Differences,
-#	Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated),
-#	which I found in the UCLA library.
-#
-#	<a href="http://www.pettswoodvillage.co.uk/Daylight_Savings_William_Willett.pdf">
-#	William Willett, The Waste of Daylight, 19th edition
-#	</a> (1914-03)
-#
-#	Brazil's Departamento Servico da Hora (DSH),
-#	<a href="http://pcdsh01.on.br/HISTHV.htm">
-#	History of Summer Time
-#	</a> (1998-09-21, in Portuguese)
-
-#
-# I invented the abbreviations marked `*' in the following table;
-# the rest are from earlier versions of this file, or from other sources.
-# Corrections are welcome!
-#                   std dst  2dst
-#                   LMT           Local Mean Time
-#       -4:00       AST ADT       Atlantic
-#       -3:00       WGT WGST      Western Greenland*
-#       -1:00       EGT EGST      Eastern Greenland*
-#        0:00       GMT BST  BDST Greenwich, British Summer
-#        0:00       GMT IST       Greenwich, Irish Summer
-#        0:00       WET WEST WEMT Western Europe
-#        0:19:32.13 AMT NST       Amsterdam, Netherlands Summer (1835-1937)*
-#        0:20       NET NEST      Netherlands (1937-1940)*
-#        1:00       CET CEST CEMT Central Europe
-#        1:00:14    SET           Swedish (1879-1899)*
-#        2:00       EET EEST      Eastern Europe
-#        3:00       MSK MSD       Moscow
-#
-# A reliable and entertaining source about time zones, especially in Britain,
-# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).
-
-# From Peter Ilieve (1994-12-04),
-# The original six [EU members]: Belgium, France, (West) Germany, Italy,
-# Luxembourg, the Netherlands.
-# Plus, from 1 Jan 73: Denmark, Ireland, United Kingdom.
-# Plus, from 1 Jan 81: Greece.
-# Plus, from 1 Jan 86: Spain, Portugal.
-# Plus, from 1 Jan 95: Austria, Finland, Sweden. (Norway negotiated terms for
-# entry but in a referendum on 28 Nov 94 the people voted No by 52.2% to 47.8%
-# on a turnout of 88.6%. This was almost the same result as Norway's previous
-# referendum in 1972, they are the only country to have said No twice.
-# Referendums in the other three countries voted Yes.)
-# ...
-# Estonia ... uses EU dates but not at 01:00 GMT, they use midnight GMT.
-# I don't think they know yet what they will do from 1996 onwards.
-# ...
-# There shouldn't be any [current members who are not using EU rules].
-# A Directive has the force of law, member states are obliged to enact
-# national law to implement it. The only contentious issue was the
-# different end date for the UK and Ireland, and this was always allowed
-# in the Directive.
-
-
-###############################################################################
-
-# Britain (United Kingdom) and Ireland (Eire)
-
-# From Peter Ilieve (1994-07-06):
-#
-# On 17 Jan 1994 the Independent, a UK quality newspaper, had a piece about
-# historical vistas along the Thames in west London. There was a photo
-# and a sketch map showing some of the sightlines involved. One paragraph
-# of the text said:
-#
-# `An old stone obelisk marking a forgotten terrestrial meridian stands
-# beside the river at Kew. In the 18th century, before time and longitude
-# was standardised by the Royal Observatory in Greenwich, scholars observed
-# this stone and the movement of stars from Kew Observatory nearby. They
-# made their calculations and set the time for the Horse Guards and Parliament,
-# but now the stone is obscured by scrubwood and can only be seen by walking
-# along the towpath within a few yards of it.'
-#
-# I have a one inch to one mile map of London and my estimate of the stone's
-# position is 51 deg. 28' 30" N, 0 deg. 18' 45" W. The longitude should
-# be within about +-2". The Ordnance Survey grid reference is TQ172761.
-#
-# [This yields GMTOFF = -0:01:15 for London LMT in the 18th century.]
-
-# From Paul Eggert (1993-11-18):
-#
-# Howse writes that Britain was the first country to use standard time.
-# The railways cared most about the inconsistencies of local mean time,
-# and it was they who forced a uniform time on the country.
-# The original idea was credited to Dr. William Hyde Wollaston (1766-1828)
-# and was popularized by Abraham Follett Osler (1808-1903).
-# The first railway to adopt London time was the Great Western Railway
-# in November 1840; other railways followed suit, and by 1847 most
-# (though not all) railways used London time.  On 1847-09-22 the
-# Railway Clearing House, an industry standards body, recommended that GMT be
-# adopted at all stations as soon as the General Post Office permitted it.
-# The transition occurred on 12-01 for the L&NW, the Caledonian,
-# and presumably other railways; the January 1848 Bradshaw's lists many
-# railways as using GMT.  By 1855 the vast majority of public
-# clocks in Britain were set to GMT (though some, like the great clock
-# on Tom Tower at Christ Church, Oxford, were fitted with two minute hands,
-# one for local time and one for GMT).  The last major holdout was the legal
-# system, which stubbornly stuck to local time for many years, leading
-# to oddities like polls opening at 08:13 and closing at 16:13.
-# The legal system finally switched to GMT when the Statutes (Definition
-# of Time) Act took effect; it received the Royal Assent on 1880-08-02.
-#
-# In the tables below, we condense this complicated story into a single
-# transition date for London, namely 1847-12-01.  We don't know as much
-# about Dublin, so we use 1880-08-02, the legal transition time.
-
-# From Paul Eggert (2003-09-27):
-# Summer Time was first seriously proposed by William Willett (1857-1915),
-# a London builder and member of the Royal Astronomical Society
-# who circulated a pamphlet ``The Waste of Daylight'' (1907)
-# that proposed advancing clocks 20 minutes on each of four Sundays in April,
-# and retarding them by the same amount on four Sundays in September.
-# A bill was drafted in 1909 and introduced in Parliament several times,
-# but it met with ridicule and opposition, especially from farming interests.
-# Later editions of the pamphlet proposed one-hour summer time, and
-# it was eventually adopted as a wartime measure in 1916.
-# See: Summer Time Arrives Early, The Times (2000-05-18).
-# A monument to Willett was unveiled on 1927-05-21, in an open space in
-# a 45-acre wood near Chislehurst, Kent that was purchased by popular
-# subscription and open to the public.  On the south face of the monolith,
-# designed by G. W. Miller, is the the William Willett Memorial Sundial,
-# which is permanently set to Summer Time.
-
-# From Winston Churchill (1934-04-28):
-# It is one of the paradoxes of history that we should owe the boon of
-# summer time, which gives every year to the people of this country
-# between 160 and 170 hours more daylight leisure, to a war which
-# plunged Europe into darkness for four years, and shook the
-# foundations of civilization throughout the world.
-#	-- <a href="http://www.winstonchurchill.org/fh114willett.htm">
-#	"A Silent Toast to William Willett", Pictorial Weekly
-#	</a>
-
-# From Paul Eggert (1996-09-03):
-# The OED Supplement says that the English originally said ``Daylight Saving''
-# when they were debating the adoption of DST in 1908; but by 1916 this
-# term appears only in quotes taken from DST's opponents, whereas the
-# proponents (who eventually won the argument) are quoted as using ``Summer''.
-
-# From Arthur David Olson (1989-01-19):
-#
-# A source at the British Information Office in New York avers that it's
-# known as "British" Summer Time in all parts of the United Kingdom.
-
-# Date: 4 Jan 89 08:57:25 GMT (Wed)
-# From: Jonathan Leffler
-# [British Summer Time] is fixed annually by Act of Parliament.
-# If you can predict what Parliament will do, you should be in
-# politics making a fortune, not computing.
-
-# From Chris Carrier (1996-06-14):
-# I remember reading in various wartime issues of the London Times the
-# acronym BDST for British Double Summer Time.  Look for the published
-# time of sunrise and sunset in The Times, when BDST was in effect, and
-# if you find a zone reference it will say, "All times B.D.S.T."
-
-# From Joseph S. Myers (1999-09-02):
-# ... some military cables (WO 219/4100 - this is a copy from the
-# main SHAEF archives held in the US National Archives, SHAEF/5252/8/516)
-# agree that the usage is BDST (this appears in a message dated 17 Feb 1945).
-
-# From Joseph S. Myers (2000-10-03):
-# On 18th April 1941, Sir Stephen Tallents of the BBC wrote to Sir
-# Alexander Maxwell of the Home Office asking whether there was any
-# official designation; the reply of the 21st was that there wasn't
-# but he couldn't think of anything better than the "Double British
-# Summer Time" that the BBC had been using informally.
-# http://student.cusu.cam.ac.uk/~jsm28/british-time/bbc-19410418.png
-# http://student.cusu.cam.ac.uk/~jsm28/british-time/ho-19410421.png
-
-# From Sir Alexander Maxwell in the above-mentioned letter (1941-04-21):
-# [N]o official designation has as far as I know been adopted for the time
-# which is to be introduced in May....
-# I cannot think of anything better than "Double British Summer Time"
-# which could not be said to run counter to any official description.
-
-# From Paul Eggert (2000-10-02):
-# Howse writes (p 157) `DBST' too, but `BDST' seems to have been common
-# and follows the more usual convention of putting the location name first,
-# so we use `BDST'.
-
-# Peter Ilieve (1998-04-19) described at length
-# the history of summer time legislation in the United Kingdom.
-# Since 1998 Joseph S. Myers has been updating
-# and extending this list, which can be found in
-# <a href="http://student.cusu.cam.ac.uk/~jsm28/british-time/">
-# History of legal time in Britain
-# </a>
-
-# From Joseph S. Myers (1998-01-06):
-#
-# The legal time in the UK outside of summer time is definitely GMT, not UTC;
-# see Lord Tanlaw's speech
-# <a href="http://www.parliament.the-stationery-office.co.uk/pa/ld199697/ldhansrd/pdvn/lds97/text/70611-20.htm#70611-20_head0">
-# (Lords Hansard 11 June 1997 columns 964 to 976)
-# </a>.
-
-# From Paul Eggert (2006-03-22):
-#
-# For lack of other data, follow Shanks & Pottenger for Eire in 1940-1948.
-#
-# Given Ilieve and Myers's data, the following claims by Shanks & Pottenger
-# are incorrect:
-#     * Wales did not switch from GMT to daylight saving time until
-#	1921 Apr 3, when they began to conform with the rest of Great Britain.
-# Actually, Wales was identical after 1880.
-#     * Eire had two transitions on 1916 Oct 1.
-# It actually just had one transition.
-#     * Northern Ireland used single daylight saving time throughout WW II.
-# Actually, it conformed to Britain.
-#     * GB-Eire changed standard time to 1 hour ahead of GMT on 1968-02-18.
-# Actually, that date saw the usual switch to summer time.
-# Standard time was not changed until 1968-10-27 (the clocks didn't change).
-#
-# Here is another incorrect claim by Shanks & Pottenger:
-#     * Jersey, Guernsey, and the Isle of Man did not switch from GMT
-#	to daylight saving time until 1921 Apr 3, when they began to
-#	conform with Great Britain.
-# S.R.&O. 1916, No. 382 and HO 45/10811/312364 (quoted above) say otherwise.
-#
-# The following claim by Shanks & Pottenger is possible though doubtful;
-# we'll ignore it for now.
-#     * Dublin's 1971-10-31 switch was at 02:00, even though London's was 03:00.
-#
-#
-# Whitman says Dublin Mean Time was -0:25:21, which is more precise than
-# Shanks & Pottenger.
-# Perhaps this was Dunsink Observatory Time, as Dunsink Observatory
-# (8 km NW of Dublin's center) seemingly was to Dublin as Greenwich was
-# to London.  For example:
-#
-#   "Timeball on the ballast office is down.  Dunsink time."
-#   -- James Joyce, Ulysses
-
-# From Joseph S. Myers (2005-01-26):
-# Irish laws are available online at www.irishstatutebook.ie.  These include
-# various relating to legal time, for example:
-#
-# ZZA13Y1923.html ZZA12Y1924.html ZZA8Y1925.html ZZSIV20PG1267.html
-#
-# ZZSI71Y1947.html ZZSI128Y1948.html ZZSI23Y1949.html ZZSI41Y1950.html
-# ZZSI27Y1951.html ZZSI73Y1952.html
-#
-# ZZSI11Y1961.html ZZSI232Y1961.html ZZSI182Y1962.html
-# ZZSI167Y1963.html ZZSI257Y1964.html ZZSI198Y1967.html
-# ZZA23Y1968.html ZZA17Y1971.html
-#
-# ZZSI67Y1981.html ZZSI212Y1982.html ZZSI45Y1986.html
-# ZZSI264Y1988.html ZZSI52Y1990.html ZZSI371Y1992.html
-# ZZSI395Y1994.html ZZSI484Y1997.html ZZSI506Y2001.html
-#
-# [These are all relative to the root, e.g., the first is
-# <http://www.irishstatutebook.ie/ZZA13Y1923.html>.]
-#
-# (These are those I found, but there could be more.  In any case these
-# should allow various updates to the comments in the europe file to cover
-# the laws applicable in Ireland.)
-#
-# (Note that the time in the Republic of Ireland since 1968 has been defined
-# in terms of standard time being GMT+1 with a period of winter time when it
-# is GMT, rather than standard time being GMT with a period of summer time
-# being GMT+1.)
-
-# From Paul Eggert (1999-03-28):
-# Clive Feather (<news:859845706.26043.0@office.demon.net>, 1997-03-31)
-# reports that Folkestone (Cheriton) Shuttle Terminal uses Concession Time
-# (CT), equivalent to French civil time.
-# Julian Hill (<news:36118128.5A14@virgin.net>, 1998-09-30) reports that
-# trains between Dollands Moor (the freight facility next door)
-# and Frethun run in CT.
-# My admittedly uninformed guess is that the terminal has two authorities,
-# the French concession operators and the British civil authorities,
-# and that the time depends on who you're talking to.
-# If, say, the British police were called to the station for some reason,
-# I would expect the official police report to use GMT/BST and not CET/CEST.
-# This is a borderline case, but for now let's stick to GMT/BST.
-
-# From an anonymous contributor (1996-06-02):
-# The law governing time in Ireland is under Statutory Instrument SI 395/94,
-# which gives force to European Union 7th Council Directive # 94/21/EC.
-# Under this directive, the Minister for Justice in Ireland makes appropriate
-# regulations. I spoke this morning with the Secretary of the Department of
-# Justice (tel +353 1 678 9711) who confirmed to me that the correct name is
-# "Irish Summer Time", abbreviated to "IST".
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-# Summer Time Act, 1916
-Rule	GB-Eire	1916	only	-	May	21	2:00s	1:00	BST
-Rule	GB-Eire	1916	only	-	Oct	 1	2:00s	0	GMT
-# S.R.&O. 1917, No. 358
-Rule	GB-Eire	1917	only	-	Apr	 8	2:00s	1:00	BST
-Rule	GB-Eire	1917	only	-	Sep	17	2:00s	0	GMT
-# S.R.&O. 1918, No. 274
-Rule	GB-Eire	1918	only	-	Mar	24	2:00s	1:00	BST
-Rule	GB-Eire	1918	only	-	Sep	30	2:00s	0	GMT
-# S.R.&O. 1919, No. 297
-Rule	GB-Eire	1919	only	-	Mar	30	2:00s	1:00	BST
-Rule	GB-Eire	1919	only	-	Sep	29	2:00s	0	GMT
-# S.R.&O. 1920, No. 458
-Rule	GB-Eire	1920	only	-	Mar	28	2:00s	1:00	BST
-# S.R.&O. 1920, No. 1844
-Rule	GB-Eire	1920	only	-	Oct	25	2:00s	0	GMT
-# S.R.&O. 1921, No. 363
-Rule	GB-Eire	1921	only	-	Apr	 3	2:00s	1:00	BST
-Rule	GB-Eire	1921	only	-	Oct	 3	2:00s	0	GMT
-# S.R.&O. 1922, No. 264
-Rule	GB-Eire	1922	only	-	Mar	26	2:00s	1:00	BST
-Rule	GB-Eire	1922	only	-	Oct	 8	2:00s	0	GMT
-# The Summer Time Act, 1922
-Rule	GB-Eire	1923	only	-	Apr	Sun>=16	2:00s	1:00	BST
-Rule	GB-Eire	1923	1924	-	Sep	Sun>=16	2:00s	0	GMT
-Rule	GB-Eire	1924	only	-	Apr	Sun>=9	2:00s	1:00	BST
-Rule	GB-Eire	1925	1926	-	Apr	Sun>=16	2:00s	1:00	BST
-# The Summer Time Act, 1925
-Rule	GB-Eire	1925	1938	-	Oct	Sun>=2	2:00s	0	GMT
-Rule	GB-Eire	1927	only	-	Apr	Sun>=9	2:00s	1:00	BST
-Rule	GB-Eire	1928	1929	-	Apr	Sun>=16	2:00s	1:00	BST
-Rule	GB-Eire	1930	only	-	Apr	Sun>=9	2:00s	1:00	BST
-Rule	GB-Eire	1931	1932	-	Apr	Sun>=16	2:00s	1:00	BST
-Rule	GB-Eire	1933	only	-	Apr	Sun>=9	2:00s	1:00	BST
-Rule	GB-Eire	1934	only	-	Apr	Sun>=16	2:00s	1:00	BST
-Rule	GB-Eire	1935	only	-	Apr	Sun>=9	2:00s	1:00	BST
-Rule	GB-Eire	1936	1937	-	Apr	Sun>=16	2:00s	1:00	BST
-Rule	GB-Eire	1938	only	-	Apr	Sun>=9	2:00s	1:00	BST
-Rule	GB-Eire	1939	only	-	Apr	Sun>=16	2:00s	1:00	BST
-# S.R.&O. 1939, No. 1379
-Rule	GB-Eire	1939	only	-	Nov	Sun>=16	2:00s	0	GMT
-# S.R.&O. 1940, No. 172 and No. 1883
-Rule	GB-Eire	1940	only	-	Feb	Sun>=23	2:00s	1:00	BST
-# S.R.&O. 1941, No. 476
-Rule	GB-Eire	1941	only	-	May	Sun>=2	1:00s	2:00	BDST
-Rule	GB-Eire	1941	1943	-	Aug	Sun>=9	1:00s	1:00	BST
-# S.R.&O. 1942, No. 506
-Rule	GB-Eire	1942	1944	-	Apr	Sun>=2	1:00s	2:00	BDST
-# S.R.&O. 1944, No. 932
-Rule	GB-Eire	1944	only	-	Sep	Sun>=16	1:00s	1:00	BST
-# S.R.&O. 1945, No. 312
-Rule	GB-Eire	1945	only	-	Apr	Mon>=2	1:00s	2:00	BDST
-Rule	GB-Eire	1945	only	-	Jul	Sun>=9	1:00s	1:00	BST
-# S.R.&O. 1945, No. 1208
-Rule	GB-Eire	1945	1946	-	Oct	Sun>=2	2:00s	0	GMT
-Rule	GB-Eire	1946	only	-	Apr	Sun>=9	2:00s	1:00	BST
-# The Summer Time Act, 1947
-Rule	GB-Eire	1947	only	-	Mar	16	2:00s	1:00	BST
-Rule	GB-Eire	1947	only	-	Apr	13	1:00s	2:00	BDST
-Rule	GB-Eire	1947	only	-	Aug	10	1:00s	1:00	BST
-Rule	GB-Eire	1947	only	-	Nov	 2	2:00s	0	GMT
-# Summer Time Order, 1948 (S.I. 1948/495)
-Rule	GB-Eire	1948	only	-	Mar	14	2:00s	1:00	BST
-Rule	GB-Eire	1948	only	-	Oct	31	2:00s	0	GMT
-# Summer Time Order, 1949 (S.I. 1949/373)
-Rule	GB-Eire	1949	only	-	Apr	 3	2:00s	1:00	BST
-Rule	GB-Eire	1949	only	-	Oct	30	2:00s	0	GMT
-# Summer Time Order, 1950 (S.I. 1950/518)
-# Summer Time Order, 1951 (S.I. 1951/430)
-# Summer Time Order, 1952 (S.I. 1952/451)
-Rule	GB-Eire	1950	1952	-	Apr	Sun>=14	2:00s	1:00	BST
-Rule	GB-Eire	1950	1952	-	Oct	Sun>=21	2:00s	0	GMT
-# revert to the rules of the Summer Time Act, 1925
-Rule	GB-Eire	1953	only	-	Apr	Sun>=16	2:00s	1:00	BST
-Rule	GB-Eire	1953	1960	-	Oct	Sun>=2	2:00s	0	GMT
-Rule	GB-Eire	1954	only	-	Apr	Sun>=9	2:00s	1:00	BST
-Rule	GB-Eire	1955	1956	-	Apr	Sun>=16	2:00s	1:00	BST
-Rule	GB-Eire	1957	only	-	Apr	Sun>=9	2:00s	1:00	BST
-Rule	GB-Eire	1958	1959	-	Apr	Sun>=16	2:00s	1:00	BST
-Rule	GB-Eire	1960	only	-	Apr	Sun>=9	2:00s	1:00	BST
-# Summer Time Order, 1961 (S.I. 1961/71)
-# Summer Time (1962) Order, 1961 (S.I. 1961/2465)
-# Summer Time Order, 1963 (S.I. 1963/81)
-Rule	GB-Eire	1961	1963	-	Mar	lastSun	2:00s	1:00	BST
-Rule	GB-Eire	1961	1968	-	Oct	Sun>=23	2:00s	0	GMT
-# Summer Time (1964) Order, 1963 (S.I. 1963/2101)
-# Summer Time Order, 1964 (S.I. 1964/1201)
-# Summer Time Order, 1967 (S.I. 1967/1148)
-Rule	GB-Eire	1964	1967	-	Mar	Sun>=19	2:00s	1:00	BST
-# Summer Time Order, 1968 (S.I. 1968/117)
-Rule	GB-Eire	1968	only	-	Feb	18	2:00s	1:00	BST
-# The British Standard Time Act, 1968
-#	(no summer time)
-# The Summer Time Act, 1972
-Rule	GB-Eire	1972	1980	-	Mar	Sun>=16	2:00s	1:00	BST
-Rule	GB-Eire	1972	1980	-	Oct	Sun>=23	2:00s	0	GMT
-# Summer Time Order, 1980 (S.I. 1980/1089)
-# Summer Time Order, 1982 (S.I. 1982/1673)
-# Summer Time Order, 1986 (S.I. 1986/223)
-# Summer Time Order, 1988 (S.I. 1988/931)
-Rule	GB-Eire	1981	1995	-	Mar	lastSun	1:00u	1:00	BST
-Rule	GB-Eire 1981	1989	-	Oct	Sun>=23	1:00u	0	GMT
-# Summer Time Order, 1989 (S.I. 1989/985)
-# Summer Time Order, 1992 (S.I. 1992/1729)
-# Summer Time Order 1994 (S.I. 1994/2798)
-Rule	GB-Eire 1990	1995	-	Oct	Sun>=22	1:00u	0	GMT
-# Summer Time Order 1997 (S.I. 1997/2982)
-# See EU for rules starting in 1996.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/London	-0:01:15 -	LMT	1847 Dec  1 0:00s
-			 0:00	GB-Eire	%s	1968 Oct 27
-			 1:00	-	BST	1971 Oct 31 2:00u
-			 0:00	GB-Eire	%s	1996
-			 0:00	EU	GMT/BST
-Link	Europe/London	Europe/Jersey
-Link	Europe/London	Europe/Guernsey
-Link	Europe/London	Europe/Isle_of_Man
-Zone	Europe/Dublin	-0:25:00 -	LMT	1880 Aug  2
-			-0:25:21 -	DMT	1916 May 21 2:00
-			-0:25:21 1:00	IST	1916 Oct  1 2:00s
-			 0:00	GB-Eire	%s	1921 Dec  6 # independence
-			 0:00	GB-Eire	GMT/IST	1940 Feb 25 2:00
-			 0:00	1:00	IST	1946 Oct  6 2:00
-			 0:00	-	GMT	1947 Mar 16 2:00
-			 0:00	1:00	IST	1947 Nov  2 2:00
-			 0:00	-	GMT	1948 Apr 18 2:00
-			 0:00	GB-Eire	GMT/IST	1968 Oct 27
-			 1:00	-	IST	1971 Oct 31 2:00u
-			 0:00	GB-Eire	GMT/IST	1996
-			 0:00	EU	GMT/IST
-
-###############################################################################
-
-# Europe
-
-# EU rules are for the European Union, previously known as the EC, EEC,
-# Common Market, etc.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	EU	1977	1980	-	Apr	Sun>=1	 1:00u	1:00	S
-Rule	EU	1977	only	-	Sep	lastSun	 1:00u	0	-
-Rule	EU	1978	only	-	Oct	 1	 1:00u	0	-
-Rule	EU	1979	1995	-	Sep	lastSun	 1:00u	0	-
-Rule	EU	1981	max	-	Mar	lastSun	 1:00u	1:00	S
-Rule	EU	1996	max	-	Oct	lastSun	 1:00u	0	-
-# The most recent directive covers the years starting in 2002.  See:
-# <a href="http://europa.eu.int/eur-lex/en/lif/dat/2000/en_300L0084.html">
-# Directive 2000/84/EC of the European Parliament and of the Council
-# of 19 January 2001 on summer-time arrangements.
-# </a>
-
-# W-Eur differs from EU only in that W-Eur uses standard time.
-Rule	W-Eur	1977	1980	-	Apr	Sun>=1	 1:00s	1:00	S
-Rule	W-Eur	1977	only	-	Sep	lastSun	 1:00s	0	-
-Rule	W-Eur	1978	only	-	Oct	 1	 1:00s	0	-
-Rule	W-Eur	1979	1995	-	Sep	lastSun	 1:00s	0	-
-Rule	W-Eur	1981	max	-	Mar	lastSun	 1:00s	1:00	S
-Rule	W-Eur	1996	max	-	Oct	lastSun	 1:00s	0	-
-
-# Older C-Eur rules are for convenience in the tables.
-# From 1977 on, C-Eur differs from EU only in that C-Eur uses standard time.
-Rule	C-Eur	1916	only	-	Apr	30	23:00	1:00	S
-Rule	C-Eur	1916	only	-	Oct	 1	 1:00	0	-
-Rule	C-Eur	1917	1918	-	Apr	Mon>=15	 2:00s	1:00	S
-Rule	C-Eur	1917	1918	-	Sep	Mon>=15	 2:00s	0	-
-Rule	C-Eur	1940	only	-	Apr	 1	 2:00s	1:00	S
-Rule	C-Eur	1942	only	-	Nov	 2	 2:00s	0	-
-Rule	C-Eur	1943	only	-	Mar	29	 2:00s	1:00	S
-Rule	C-Eur	1943	only	-	Oct	 4	 2:00s	0	-
-Rule	C-Eur	1944	1945	-	Apr	Mon>=1	 2:00s	1:00	S
-# Whitman gives 1944 Oct 7; go with Shanks & Pottenger.
-Rule	C-Eur	1944	only	-	Oct	 2	 2:00s	0	-
-# From Jesper Norgaard Welen (2008-07-13):
-#
-# I found what is probably a typo of 2:00 which should perhaps be 2:00s
-# in the C-Eur rule from tz database version 2008d (this part was
-# corrected in version 2008d). The circumstancial evidence is simply the
-# tz database itself, as seen below:
-#
-# Zone Europe/Paris 0:09:21 - LMT 1891 Mar 15  0:01
-#    0:00 France WE%sT 1945 Sep 16  3:00
-#
-# Zone Europe/Monaco 0:29:32 - LMT 1891 Mar 15
-#    0:00 France WE%sT 1945 Sep 16 3:00
-#
-# Zone Europe/Belgrade 1:22:00 - LMT 1884
-#    1:00 1:00 CEST 1945 Sep 16  2:00s
-#
-# Rule France 1945 only - Sep 16  3:00 0 -
-# Rule Belgium 1945 only - Sep 16  2:00s 0 -
-# Rule Neth 1945 only - Sep 16 2:00s 0 -
-#
-# The rule line to be changed is:
-#
-# Rule C-Eur 1945 only - Sep 16  2:00 0 -
-#
-# It seems that Paris, Monaco, Rule France, Rule Belgium all agree on
-# 2:00 standard time, e.g. 3:00 local time.  However there are no
-# countries that use C-Eur rules in September 1945, so the only items
-# affected are apparently these ficticious zones that translates acronyms
-# CET and MET:
-#
-# Zone CET  1:00 C-Eur CE%sT
-# Zone MET  1:00 C-Eur ME%sT
-#
-# It this is right then the corrected version would look like:
-#
-# Rule C-Eur 1945 only - Sep 16  2:00s 0 -
-#
-# A small step for mankind though 8-)
-Rule	C-Eur	1945	only	-	Sep	16	 2:00s	0	-
-Rule	C-Eur	1977	1980	-	Apr	Sun>=1	 2:00s	1:00	S
-Rule	C-Eur	1977	only	-	Sep	lastSun	 2:00s	0	-
-Rule	C-Eur	1978	only	-	Oct	 1	 2:00s	0	-
-Rule	C-Eur	1979	1995	-	Sep	lastSun	 2:00s	0	-
-Rule	C-Eur	1981	max	-	Mar	lastSun	 2:00s	1:00	S
-Rule	C-Eur	1996	max	-	Oct	lastSun	 2:00s	0	-
-
-# E-Eur differs from EU only in that E-Eur switches at midnight local time.
-Rule	E-Eur	1977	1980	-	Apr	Sun>=1	 0:00	1:00	S
-Rule	E-Eur	1977	only	-	Sep	lastSun	 0:00	0	-
-Rule	E-Eur	1978	only	-	Oct	 1	 0:00	0	-
-Rule	E-Eur	1979	1995	-	Sep	lastSun	 0:00	0	-
-Rule	E-Eur	1981	max	-	Mar	lastSun	 0:00	1:00	S
-Rule	E-Eur	1996	max	-	Oct	lastSun	 0:00	0	-
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Russia	1917	only	-	Jul	 1	23:00	1:00	MST	# Moscow Summer Time
-Rule	Russia	1917	only	-	Dec	28	 0:00	0	MMT	# Moscow Mean Time
-Rule	Russia	1918	only	-	May	31	22:00	2:00	MDST	# Moscow Double Summer Time
-Rule	Russia	1918	only	-	Sep	16	 1:00	1:00	MST
-Rule	Russia	1919	only	-	May	31	23:00	2:00	MDST
-Rule	Russia	1919	only	-	Jul	 1	 2:00	1:00	S
-Rule	Russia	1919	only	-	Aug	16	 0:00	0	-
-Rule	Russia	1921	only	-	Feb	14	23:00	1:00	S
-Rule	Russia	1921	only	-	Mar	20	23:00	2:00	M # Midsummer
-Rule	Russia	1921	only	-	Sep	 1	 0:00	1:00	S
-Rule	Russia	1921	only	-	Oct	 1	 0:00	0	-
-# Act No.925 of the Council of Ministers of the USSR (1980-10-24):
-Rule	Russia	1981	1984	-	Apr	 1	 0:00	1:00	S
-Rule	Russia	1981	1983	-	Oct	 1	 0:00	0	-
-# Act No.967 of the Council of Ministers of the USSR (1984-09-13), repeated in
-# Act No.227 of the Council of Ministers of the USSR (1989-03-14):
-Rule	Russia	1984	1991	-	Sep	lastSun	 2:00s	0	-
-Rule	Russia	1985	1991	-	Mar	lastSun	 2:00s	1:00	S
-#
-Rule	Russia	1992	only	-	Mar	lastSat	 23:00	1:00	S
-Rule	Russia	1992	only	-	Sep	lastSat	 23:00	0	-
-Rule	Russia	1993	max	-	Mar	lastSun	 2:00s	1:00	S
-Rule	Russia	1993	1995	-	Sep	lastSun	 2:00s	0	-
-Rule	Russia	1996	max	-	Oct	lastSun	 2:00s	0	-
-
-# These are for backward compatibility with older versions.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	WET		0:00	EU	WE%sT
-Zone	CET		1:00	C-Eur	CE%sT
-Zone	MET		1:00	C-Eur	ME%sT
-Zone	EET		2:00	EU	EE%sT
-
-# Previous editions of this database used abbreviations like MET DST
-# for Central European Summer Time, but this didn't agree with common usage.
-
-# From Markus Kuhn (1996-07-12):
-# The official German names ... are
-#
-#	Mitteleuropaeische Zeit (MEZ)         = UTC+01:00
-#	Mitteleuropaeische Sommerzeit (MESZ)  = UTC+02:00
-#
-# as defined in the German Time Act (Gesetz ueber die Zeitbestimmung (ZeitG),
-# 1978-07-25, Bundesgesetzblatt, Jahrgang 1978, Teil I, S. 1110-1111)....
-# I wrote ... to the German Federal Physical-Technical Institution
-#
-#	Physikalisch-Technische Bundesanstalt (PTB)
-#	Laboratorium 4.41 "Zeiteinheit"
-#	Postfach 3345
-#	D-38023 Braunschweig
-#	phone: +49 531 592-0
-#
-# ... I received today an answer letter from Dr. Peter Hetzel, head of the PTB
-# department for time and frequency transmission.  He explained that the
-# PTB translates MEZ and MESZ into English as
-#
-#	Central European Time (CET)         = UTC+01:00
-#	Central European Summer Time (CEST) = UTC+02:00
-
-
-# Albania
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Albania	1940	only	-	Jun	16	0:00	1:00	S
-Rule	Albania	1942	only	-	Nov	 2	3:00	0	-
-Rule	Albania	1943	only	-	Mar	29	2:00	1:00	S
-Rule	Albania	1943	only	-	Apr	10	3:00	0	-
-Rule	Albania	1974	only	-	May	 4	0:00	1:00	S
-Rule	Albania	1974	only	-	Oct	 2	0:00	0	-
-Rule	Albania	1975	only	-	May	 1	0:00	1:00	S
-Rule	Albania	1975	only	-	Oct	 2	0:00	0	-
-Rule	Albania	1976	only	-	May	 2	0:00	1:00	S
-Rule	Albania	1976	only	-	Oct	 3	0:00	0	-
-Rule	Albania	1977	only	-	May	 8	0:00	1:00	S
-Rule	Albania	1977	only	-	Oct	 2	0:00	0	-
-Rule	Albania	1978	only	-	May	 6	0:00	1:00	S
-Rule	Albania	1978	only	-	Oct	 1	0:00	0	-
-Rule	Albania	1979	only	-	May	 5	0:00	1:00	S
-Rule	Albania	1979	only	-	Sep	30	0:00	0	-
-Rule	Albania	1980	only	-	May	 3	0:00	1:00	S
-Rule	Albania	1980	only	-	Oct	 4	0:00	0	-
-Rule	Albania	1981	only	-	Apr	26	0:00	1:00	S
-Rule	Albania	1981	only	-	Sep	27	0:00	0	-
-Rule	Albania	1982	only	-	May	 2	0:00	1:00	S
-Rule	Albania	1982	only	-	Oct	 3	0:00	0	-
-Rule	Albania	1983	only	-	Apr	18	0:00	1:00	S
-Rule	Albania	1983	only	-	Oct	 1	0:00	0	-
-Rule	Albania	1984	only	-	Apr	 1	0:00	1:00	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Tirane	1:19:20 -	LMT	1914
-			1:00	-	CET	1940 Jun 16
-			1:00	Albania	CE%sT	1984 Jul
-			1:00	EU	CE%sT
-
-# Andorra
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Andorra	0:06:04 -	LMT	1901
-			0:00	-	WET	1946 Sep 30
-			1:00	-	CET	1985 Mar 31 2:00
-			1:00	EU	CE%sT
-
-# Austria
-
-# From Paul Eggert (2006-03-22): Shanks & Pottenger give 1918-06-16 and
-# 1945-11-18, but the Austrian Federal Office of Metrology and
-# Surveying (BEV) gives 1918-09-16 and for Vienna gives the "alleged"
-# date of 1945-04-12 with no time.  For the 1980-04-06 transition
-# Shanks & Pottenger give 02:00, the BEV 00:00.  Go with the BEV,
-# and guess 02:00 for 1945-04-12.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Austria	1920	only	-	Apr	 5	2:00s	1:00	S
-Rule	Austria	1920	only	-	Sep	13	2:00s	0	-
-Rule	Austria	1946	only	-	Apr	14	2:00s	1:00	S
-Rule	Austria	1946	1948	-	Oct	Sun>=1	2:00s	0	-
-Rule	Austria	1947	only	-	Apr	 6	2:00s	1:00	S
-Rule	Austria	1948	only	-	Apr	18	2:00s	1:00	S
-Rule	Austria	1980	only	-	Apr	 6	0:00	1:00	S
-Rule	Austria	1980	only	-	Sep	28	0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Vienna	1:05:20 -	LMT	1893 Apr
-			1:00	C-Eur	CE%sT	1920
-			1:00	Austria	CE%sT	1940 Apr  1 2:00s
-			1:00	C-Eur	CE%sT	1945 Apr  2 2:00s
-			1:00	1:00	CEST	1945 Apr 12 2:00s
-			1:00	-	CET	1946
-			1:00	Austria	CE%sT	1981
-			1:00	EU	CE%sT
-
-# Belarus
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Minsk	1:50:16 -	LMT	1880
-			1:50	-	MMT	1924 May 2 # Minsk Mean Time
-			2:00	-	EET	1930 Jun 21
-			3:00	-	MSK	1941 Jun 28
-			1:00	C-Eur	CE%sT	1944 Jul  3
-			3:00	Russia	MSK/MSD	1990
-			3:00	-	MSK	1991 Mar 31 2:00s
-			2:00	1:00	EEST	1991 Sep 29 2:00s
-			2:00	-	EET	1992 Mar 29 0:00s
-			2:00	1:00	EEST	1992 Sep 27 0:00s
-			2:00	Russia	EE%sT
-
-# Belgium
-#
-# From Paul Eggert (1997-07-02):
-# Entries from 1918 through 1991 are taken from:
-#	Annuaire de L'Observatoire Royal de Belgique,
-#	Avenue Circulaire, 3, B-1180 BRUXELLES, CLVIIe annee, 1991
-#	(Imprimerie HAYEZ, s.p.r.l., Rue Fin, 4, 1080 BRUXELLES, MCMXC),
-#	pp 8-9.
-# LMT before 1892 was 0:17:30, according to the official journal of Belgium:
-#	Moniteur Belge, Samedi 30 Avril 1892, N.121.
-# Thanks to Pascal Delmoitie for these references.
-# The 1918 rules are listed for completeness; they apply to unoccupied Belgium.
-# Assume Brussels switched to WET in 1918 when the armistice took effect.
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Belgium	1918	only	-	Mar	 9	 0:00s	1:00	S
-Rule	Belgium	1918	1919	-	Oct	Sat>=1	23:00s	0	-
-Rule	Belgium	1919	only	-	Mar	 1	23:00s	1:00	S
-Rule	Belgium	1920	only	-	Feb	14	23:00s	1:00	S
-Rule	Belgium	1920	only	-	Oct	23	23:00s	0	-
-Rule	Belgium	1921	only	-	Mar	14	23:00s	1:00	S
-Rule	Belgium	1921	only	-	Oct	25	23:00s	0	-
-Rule	Belgium	1922	only	-	Mar	25	23:00s	1:00	S
-Rule	Belgium	1922	1927	-	Oct	Sat>=1	23:00s	0	-
-Rule	Belgium	1923	only	-	Apr	21	23:00s	1:00	S
-Rule	Belgium	1924	only	-	Mar	29	23:00s	1:00	S
-Rule	Belgium	1925	only	-	Apr	 4	23:00s	1:00	S
-# DSH writes that a royal decree of 1926-02-22 specified the Sun following 3rd
-# Sat in Apr (except if it's Easter, in which case it's one Sunday earlier),
-# to Sun following 1st Sat in Oct, and that a royal decree of 1928-09-15
-# changed the transition times to 02:00 GMT.
-Rule	Belgium	1926	only	-	Apr	17	23:00s	1:00	S
-Rule	Belgium	1927	only	-	Apr	 9	23:00s	1:00	S
-Rule	Belgium	1928	only	-	Apr	14	23:00s	1:00	S
-Rule	Belgium	1928	1938	-	Oct	Sun>=2	 2:00s	0	-
-Rule	Belgium	1929	only	-	Apr	21	 2:00s	1:00	S
-Rule	Belgium	1930	only	-	Apr	13	 2:00s	1:00	S
-Rule	Belgium	1931	only	-	Apr	19	 2:00s	1:00	S
-Rule	Belgium	1932	only	-	Apr	 3	 2:00s	1:00	S
-Rule	Belgium	1933	only	-	Mar	26	 2:00s	1:00	S
-Rule	Belgium	1934	only	-	Apr	 8	 2:00s	1:00	S
-Rule	Belgium	1935	only	-	Mar	31	 2:00s	1:00	S
-Rule	Belgium	1936	only	-	Apr	19	 2:00s	1:00	S
-Rule	Belgium	1937	only	-	Apr	 4	 2:00s	1:00	S
-Rule	Belgium	1938	only	-	Mar	27	 2:00s	1:00	S
-Rule	Belgium	1939	only	-	Apr	16	 2:00s	1:00	S
-Rule	Belgium	1939	only	-	Nov	19	 2:00s	0	-
-Rule	Belgium	1940	only	-	Feb	25	 2:00s	1:00	S
-Rule	Belgium	1944	only	-	Sep	17	 2:00s	0	-
-Rule	Belgium	1945	only	-	Apr	 2	 2:00s	1:00	S
-Rule	Belgium	1945	only	-	Sep	16	 2:00s	0	-
-Rule	Belgium	1946	only	-	May	19	 2:00s	1:00	S
-Rule	Belgium	1946	only	-	Oct	 7	 2:00s	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Brussels	0:17:30 -	LMT	1880
-			0:17:30	-	BMT	1892 May  1 12:00 # Brussels MT
-			0:00	-	WET	1914 Nov  8
-			1:00	-	CET	1916 May  1  0:00
-			1:00	C-Eur	CE%sT	1918 Nov 11 11:00u
-			0:00	Belgium	WE%sT	1940 May 20  2:00s
-			1:00	C-Eur	CE%sT	1944 Sep  3
-			1:00	Belgium	CE%sT	1977
-			1:00	EU	CE%sT
-
-# Bosnia and Herzegovina
-# see Serbia
-
-# Bulgaria
-#
-# From Plamen Simenov via Steffen Thorsen (1999-09-09):
-# A document of Government of Bulgaria (No.94/1997) says:
-# EET --> EETDST is in 03:00 Local time in last Sunday of March ...
-# EETDST --> EET is in 04:00 Local time in last Sunday of October
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Bulg	1979	only	-	Mar	31	23:00	1:00	S
-Rule	Bulg	1979	only	-	Oct	 1	 1:00	0	-
-Rule	Bulg	1980	1982	-	Apr	Sat>=1	23:00	1:00	S
-Rule	Bulg	1980	only	-	Sep	29	 1:00	0	-
-Rule	Bulg	1981	only	-	Sep	27	 2:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Sofia	1:33:16 -	LMT	1880
-			1:56:56	-	IMT	1894 Nov 30 # Istanbul MT?
-			2:00	-	EET	1942 Nov  2  3:00
-			1:00	C-Eur	CE%sT	1945
-			1:00	-	CET	1945 Apr 2 3:00
-			2:00	-	EET	1979 Mar 31 23:00
-			2:00	Bulg	EE%sT	1982 Sep 26  2:00
-			2:00	C-Eur	EE%sT	1991
-			2:00	E-Eur	EE%sT	1997
-			2:00	EU	EE%sT
-
-# Croatia
-# see Serbia
-
-# Cyprus
-# Please see the `asia' file for Asia/Nicosia.
-
-# Czech Republic
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Czech	1945	only	-	Apr	 8	2:00s	1:00	S
-Rule	Czech	1945	only	-	Nov	18	2:00s	0	-
-Rule	Czech	1946	only	-	May	 6	2:00s	1:00	S
-Rule	Czech	1946	1949	-	Oct	Sun>=1	2:00s	0	-
-Rule	Czech	1947	only	-	Apr	20	2:00s	1:00	S
-Rule	Czech	1948	only	-	Apr	18	2:00s	1:00	S
-Rule	Czech	1949	only	-	Apr	 9	2:00s	1:00	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Prague	0:57:44 -	LMT	1850
-			0:57:44	-	PMT	1891 Oct     # Prague Mean Time
-			1:00	C-Eur	CE%sT	1944 Sep 17 2:00s
-			1:00	Czech	CE%sT	1979
-			1:00	EU	CE%sT
-
-# Denmark, Faroe Islands, and Greenland
-
-# From Jesper Norgaard Welen (2005-04-26):
-# http://www.hum.aau.dk/~poe/tid/tine/DanskTid.htm says that the law
-# [introducing standard time] was in effect from 1894-01-01....
-# The page http://www.retsinfo.dk/_GETDOCI_/ACCN/A18930008330-REGL
-# confirms this, and states that the law was put forth 1893-03-29.
-#
-# The EU treaty with effect from 1973:
-# http://www.retsinfo.dk/_GETDOCI_/ACCN/A19722110030-REGL
-#
-# This provoked a new law from 1974 to make possible summer time changes
-# in subsequenet decrees with the law
-# http://www.retsinfo.dk/_GETDOCI_/ACCN/A19740022330-REGL
-#
-# It seems however that no decree was set forward until 1980.  I have
-# not found any decree, but in another related law, the effecting DST
-# changes are stated explicitly to be from 1980-04-06 at 02:00 to
-# 1980-09-28 at 02:00.  If this is true, this differs slightly from
-# the EU rule in that DST runs to 02:00, not 03:00.  We don't know
-# when Denmark began using the EU rule correctly, but we have only
-# confirmation of the 1980-time, so I presume it was correct in 1981:
-# The law is about the management of the extra hour, concerning
-# working hours reported and effect on obligatory-rest rules (which
-# was suspended on that night):
-# http://www.retsinfo.dk/_GETDOCI_/ACCN/C19801120554-REGL
-
-# From Jesper Norgaard Welen (2005-06-11):
-# The Herning Folkeblad (1980-09-26) reported that the night between
-# Saturday and Sunday the clock is set back from three to two.
-
-# From Paul Eggert (2005-06-11):
-# Hence the "02:00" of the 1980 law refers to standard time, not
-# wall-clock time, and so the EU rules were in effect in 1980.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Denmark	1916	only	-	May	14	23:00	1:00	S
-Rule	Denmark	1916	only	-	Sep	30	23:00	0	-
-Rule	Denmark	1940	only	-	May	15	 0:00	1:00	S
-Rule	Denmark	1945	only	-	Apr	 2	 2:00s	1:00	S
-Rule	Denmark	1945	only	-	Aug	15	 2:00s	0	-
-Rule	Denmark	1946	only	-	May	 1	 2:00s	1:00	S
-Rule	Denmark	1946	only	-	Sep	 1	 2:00s	0	-
-Rule	Denmark	1947	only	-	May	 4	 2:00s	1:00	S
-Rule	Denmark	1947	only	-	Aug	10	 2:00s	0	-
-Rule	Denmark	1948	only	-	May	 9	 2:00s	1:00	S
-Rule	Denmark	1948	only	-	Aug	 8	 2:00s	0	-
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Europe/Copenhagen	 0:50:20 -	LMT	1890
-			 0:50:20 -	CMT	1894 Jan  1 # Copenhagen MT
-			 1:00	Denmark	CE%sT	1942 Nov  2 2:00s
-			 1:00	C-Eur	CE%sT	1945 Apr  2 2:00
-			 1:00	Denmark	CE%sT	1980
-			 1:00	EU	CE%sT
-Zone Atlantic/Faroe	-0:27:04 -	LMT	1908 Jan 11	# Torshavn
-			 0:00	-	WET	1981
-			 0:00	EU	WE%sT
-#
-# From Paul Eggert (2004-10-31):
-# During World War II, Germany maintained secret manned weather stations in
-# East Greenland and Franz Josef Land, but we don't know their time zones.
-# My source for this is Wilhelm Dege's book mentioned under Svalbard.
-#
-# From Paul Eggert (2006-03-22):
-# Greenland joined the EU as part of Denmark, obtained home rule on 1979-05-01,
-# and left the EU on 1985-02-01.  It therefore should have been using EU
-# rules at least through 1984.  Shanks & Pottenger say Scoresbysund and Godthab
-# used C-Eur rules after 1980, but IATA SSIM (1991/1996) says they use EU
-# rules since at least 1991.  Assume EU rules since 1980.
-
-# From Gwillin Law (2001-06-06), citing
-# <http://www.statkart.no/efs/efshefter/2001/efs5-2001.pdf> (2001-03-15),
-# and with translations corrected by Steffen Thorsen:
-#
-# Greenland has four local times, and the relation to UTC
-# is according to the following time line:
-#
-# The military zone near Thule	UTC-4
-# Standard Greenland time	UTC-3
-# Scoresbysund			UTC-1
-# Danmarkshavn			UTC
-#
-# In the military area near Thule and in Danmarkshavn DST will not be
-# introduced.
-
-# From Rives McDow (2001-11-01):
-#
-# I correspond regularly with the Dansk Polarcenter, and wrote them at
-# the time to clarify the situation in Thule.  Unfortunately, I have
-# not heard back from them regarding my recent letter.  [But I have
-# info from earlier correspondence.]
-#
-# According to the center, a very small local time zone around Thule
-# Air Base keeps the time according to UTC-4, implementing daylight
-# savings using North America rules, changing the time at 02:00 local time....
-#
-# The east coast of Greenland north of the community of Scoresbysund
-# uses UTC in the same way as in Iceland, year round, with no dst.
-# There are just a few stations on this coast, including the
-# Danmarkshavn ICAO weather station mentioned in your September 29th
-# email.  The other stations are two sledge patrol stations in
-# Mestersvig and Daneborg, the air force base at Station Nord, and the
-# DPC research station at Zackenberg.
-#
-# Scoresbysund and two small villages nearby keep time UTC-1 and use
-# the same daylight savings time period as in West Greenland (Godthab).
-#
-# The rest of Greenland, including Godthab (this area, although it
-# includes central Greenland, is known as west Greenland), keeps time
-# UTC-3, with daylight savings methods according to European rules.
-#
-# It is common procedure to use UTC 0 in the wilderness of East and
-# North Greenland, because it is mainly Icelandic aircraft operators
-# maintaining traffic in these areas.  However, the official status of
-# this area is that it sticks with Godthab time.  This area might be
-# considered a dual time zone in some respects because of this.
-
-# From Rives McDow (2001-11-19):
-# I heard back from someone stationed at Thule; the time change took place
-# there at 2:00 AM.
-
-# From Paul Eggert (2006-03-22):
-# From 1997 on the CIA map shows Danmarkshavn on GMT;
-# the 1995 map as like Godthab.
-# For lack of better info, assume they were like Godthab before 1996.
-# startkart.no says Thule does not observe DST, but this is clearly an error,
-# so go with Shanks & Pottenger for Thule transitions until this year.
-# For 2007 on assume Thule will stay in sync with US DST rules.
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Thule	1991	1992	-	Mar	lastSun	2:00	1:00	D
-Rule	Thule	1991	1992	-	Sep	lastSun	2:00	0	S
-Rule	Thule	1993	2006	-	Apr	Sun>=1	2:00	1:00	D
-Rule	Thule	1993	2006	-	Oct	lastSun	2:00	0	S
-Rule	Thule	2007	max	-	Mar	Sun>=8	2:00	1:00	D
-Rule	Thule	2007	max	-	Nov	Sun>=1	2:00	0	S
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Danmarkshavn -1:14:40 -	LMT	1916 Jul 28
-			-3:00	-	WGT	1980 Apr  6 2:00
-			-3:00	EU	WG%sT	1996
-			0:00	-	GMT
-Zone America/Scoresbysund -1:27:52 -	LMT	1916 Jul 28 # Ittoqqortoormiit
-			-2:00	-	CGT	1980 Apr  6 2:00
-			-2:00	C-Eur	CG%sT	1981 Mar 29
-			-1:00	EU	EG%sT
-Zone America/Godthab	-3:26:56 -	LMT	1916 Jul 28 # Nuuk
-			-3:00	-	WGT	1980 Apr  6 2:00
-			-3:00	EU	WG%sT
-Zone America/Thule	-4:35:08 -	LMT	1916 Jul 28 # Pituffik air base
-			-4:00	Thule	A%sT
-
-# Estonia
-# From Peter Ilieve (1994-10-15):
-# A relative in Tallinn confirms the accuracy of the data for 1989 onwards
-# [through 1994] and gives the legal authority for it,
-# a regulation of the Government of Estonia, No. 111 of 1989....
-#
-# From Peter Ilieve (1996-10-28):
-# [IATA SSIM (1992/1996) claims that the Baltic republics switch at 01:00s,
-# but a relative confirms that Estonia still switches at 02:00s, writing:]
-# ``I do not [know] exactly but there are some little different
-# (confusing) rules for International Air and Railway Transport Schedules
-# conversion in Sunday connected with end of summer time in Estonia....
-# A discussion is running about the summer time efficiency and effect on
-# human physiology.  It seems that Estonia maybe will not change to
-# summer time next spring.''
-
-# From Peter Ilieve (1998-11-04), heavily edited:
-# <a href="http://trip.rk.ee/cgi-bin/thw?${BASE}=akt&${OOHTML}=rtd&TA=1998&TO=1&AN=1390">
-# The 1998-09-22 Estonian time law
-# </a>
-# refers to the Eighth Directive and cites the association agreement between
-# the EU and Estonia, ratified by the Estonian law (RT II 1995, 22--27, 120).
-#
-# I also asked [my relative] whether they use any standard abbreviation
-# for their standard and summer times. He says no, they use "suveaeg"
-# (summer time) and "talveaeg" (winter time).
-
-# From <a href="http://www.baltictimes.com/">The Baltic Times</a> (1999-09-09)
-# via Steffen Thorsen:
-# This year will mark the last time Estonia shifts to summer time,
-# a council of the ruling coalition announced Sept. 6....
-# But what this could mean for Estonia's chances of joining the European
-# Union are still unclear.  In 1994, the EU declared summer time compulsory
-# for all member states until 2001.  Brussels has yet to decide what to do
-# after that.
-
-# From Mart Oruaas (2000-01-29):
-# Regulation no. 301 (1999-10-12) obsoletes previous regulation
-# no. 206 (1998-09-22) and thus sticks Estonia to +02:00 GMT for all
-# the year round.  The regulation is effective 1999-11-01.
-
-# From Toomas Soome (2002-02-21):
-# The Estonian government has changed once again timezone politics.
-# Now we are using again EU rules.
-#
-# From Urmet Jaanes (2002-03-28):
-# The legislative reference is Government decree No. 84 on 2002-02-21.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Tallinn	1:39:00	-	LMT	1880
-			1:39:00	-	TMT	1918 Feb # Tallinn Mean Time
-			1:00	C-Eur	CE%sT	1919 Jul
-			1:39:00	-	TMT	1921 May
-			2:00	-	EET	1940 Aug  6
-			3:00	-	MSK	1941 Sep 15
-			1:00	C-Eur	CE%sT	1944 Sep 22
-			3:00	Russia	MSK/MSD	1989 Mar 26 2:00s
-			2:00	1:00	EEST	1989 Sep 24 2:00s
-			2:00	C-Eur	EE%sT	1998 Sep 22
-			2:00	EU	EE%sT	1999 Nov  1
-			2:00	-	EET	2002 Feb 21
-			2:00	EU	EE%sT
-
-# Finland
-#
-# From Hannu Strang (1994-09-25 06:03:37 UTC):
-# Well, here in Helsinki we're just changing from summer time to regular one,
-# and it's supposed to change at 4am...
-#
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger say Finland has switched at 02:00 standard time
-# since 1981.  Go with Strang instead.
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Finland	1942	only	-	Apr	3	0:00	1:00	S
-Rule	Finland	1942	only	-	Oct	3	0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Helsinki	1:39:52 -	LMT	1878 May 31
-			1:39:52	-	HMT	1921 May    # Helsinki Mean Time
-			2:00	Finland	EE%sT	1981 Mar 29 2:00
-			2:00	EU	EE%sT
-
-# Aaland Is
-Link	Europe/Helsinki	Europe/Mariehamn
-
-
-# France
-
-# From Ciro Discepolo (2000-12-20):
-#
-# Henri Le Corre, Regimes Horaires pour le monde entier, Editions
-# Traditionnelles - Paris 2 books, 1993
-#
-# Gabriel, Traite de l'heure dans le monde, Guy Tredaniel editeur,
-# Paris, 1991
-#
-# Francoise Gauquelin, Problemes de l'heure resolus en astrologie,
-# Guy tredaniel, Paris 1987
-
-
-#
-# Shank & Pottenger seem to use `24:00' ambiguously; resolve it with Whitman.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	France	1916	only	-	Jun	14	23:00s	1:00	S
-Rule	France	1916	1919	-	Oct	Sun>=1	23:00s	0	-
-Rule	France	1917	only	-	Mar	24	23:00s	1:00	S
-Rule	France	1918	only	-	Mar	 9	23:00s	1:00	S
-Rule	France	1919	only	-	Mar	 1	23:00s	1:00	S
-Rule	France	1920	only	-	Feb	14	23:00s	1:00	S
-Rule	France	1920	only	-	Oct	23	23:00s	0	-
-Rule	France	1921	only	-	Mar	14	23:00s	1:00	S
-Rule	France	1921	only	-	Oct	25	23:00s	0	-
-Rule	France	1922	only	-	Mar	25	23:00s	1:00	S
-# DSH writes that a law of 1923-05-24 specified 3rd Sat in Apr at 23:00 to 1st
-# Sat in Oct at 24:00; and that in 1930, because of Easter, the transitions
-# were Apr 12 and Oct 5.  Go with Shanks & Pottenger.
-Rule	France	1922	1938	-	Oct	Sat>=1	23:00s	0	-
-Rule	France	1923	only	-	May	26	23:00s	1:00	S
-Rule	France	1924	only	-	Mar	29	23:00s	1:00	S
-Rule	France	1925	only	-	Apr	 4	23:00s	1:00	S
-Rule	France	1926	only	-	Apr	17	23:00s	1:00	S
-Rule	France	1927	only	-	Apr	 9	23:00s	1:00	S
-Rule	France	1928	only	-	Apr	14	23:00s	1:00	S
-Rule	France	1929	only	-	Apr	20	23:00s	1:00	S
-Rule	France	1930	only	-	Apr	12	23:00s	1:00	S
-Rule	France	1931	only	-	Apr	18	23:00s	1:00	S
-Rule	France	1932	only	-	Apr	 2	23:00s	1:00	S
-Rule	France	1933	only	-	Mar	25	23:00s	1:00	S
-Rule	France	1934	only	-	Apr	 7	23:00s	1:00	S
-Rule	France	1935	only	-	Mar	30	23:00s	1:00	S
-Rule	France	1936	only	-	Apr	18	23:00s	1:00	S
-Rule	France	1937	only	-	Apr	 3	23:00s	1:00	S
-Rule	France	1938	only	-	Mar	26	23:00s	1:00	S
-Rule	France	1939	only	-	Apr	15	23:00s	1:00	S
-Rule	France	1939	only	-	Nov	18	23:00s	0	-
-Rule	France	1940	only	-	Feb	25	 2:00	1:00	S
-# The French rules for 1941-1944 were not used in Paris, but Shanks & Pottenger
-# write that they were used in Monaco and in many French locations.
-# Le Corre writes that the upper limit of the free zone was Arneguy, Orthez,
-# Mont-de-Marsan, Bazas, Langon, Lamotte-Montravel, Marouil, La
-# Rochefoucault, Champagne-Mouton, La Roche-Posay, La Haye-Decartes,
-# Loches, Montrichard, Vierzon, Bourges, Moulins, Digoin,
-# Paray-le-Monial, Montceau-les-Mines, Chalons-sur-Saone, Arbois,
-# Dole, Morez, St-Claude, and Collognes (Haute-Savioe).
-Rule	France	1941	only	-	May	 5	 0:00	2:00	M # Midsummer
-# Shanks & Pottenger say this transition occurred at Oct 6 1:00,
-# but go with Denis Excoffier (1997-12-12),
-# who quotes the Ephemerides Astronomiques for 1998 from Bureau des Longitudes
-# as saying 5/10/41 22hUT.
-Rule	France	1941	only	-	Oct	 6	 0:00	1:00	S
-Rule	France	1942	only	-	Mar	 9	 0:00	2:00	M
-Rule	France	1942	only	-	Nov	 2	 3:00	1:00	S
-Rule	France	1943	only	-	Mar	29	 2:00	2:00	M
-Rule	France	1943	only	-	Oct	 4	 3:00	1:00	S
-Rule	France	1944	only	-	Apr	 3	 2:00	2:00	M
-Rule	France	1944	only	-	Oct	 8	 1:00	1:00	S
-Rule	France	1945	only	-	Apr	 2	 2:00	2:00	M
-Rule	France	1945	only	-	Sep	16	 3:00	0	-
-# Shanks & Pottenger give Mar 28 2:00 and Sep 26 3:00;
-# go with Excoffier's 28/3/76 0hUT and 25/9/76 23hUT.
-Rule	France	1976	only	-	Mar	28	 1:00	1:00	S
-Rule	France	1976	only	-	Sep	26	 1:00	0	-
-# Shanks & Pottenger give 0:09:20 for Paris Mean Time, and Whitman 0:09:05,
-# but Howse quotes the actual French legislation as saying 0:09:21.
-# Go with Howse.  Howse writes that the time in France was officially based
-# on PMT-0:09:21 until 1978-08-09, when the time base finally switched to UTC.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Paris	0:09:21 -	LMT	1891 Mar 15  0:01
-			0:09:21	-	PMT	1911 Mar 11  0:01  # Paris MT
-# Shanks & Pottenger give 1940 Jun 14 0:00; go with Excoffier and Le Corre.
-			0:00	France	WE%sT	1940 Jun 14 23:00
-# Le Corre says Paris stuck with occupied-France time after the liberation;
-# go with Shanks & Pottenger.
-			1:00	C-Eur	CE%sT	1944 Aug 25
-			0:00	France	WE%sT	1945 Sep 16  3:00
-			1:00	France	CE%sT	1977
-			1:00	EU	CE%sT
-
-# Germany
-
-# From Markus Kuhn (1998-09-29):
-# The German time zone web site by the Physikalisch-Technische
-# Bundesanstalt contains DST information back to 1916.
-# [See tz-link.htm for the URL.]
-
-# From Joerg Schilling (2002-10-23):
-# In 1945, Berlin was switched to Moscow Summer time (GMT+4) by
-# <a href="http://www.dhm.de/lemo/html/biografien/BersarinNikolai/">
-# General [Nikolai] Bersarin</a>.
-
-# From Paul Eggert (2003-03-08):
-# <a href="http://www.parlament-berlin.de/pds-fraktion.nsf/727459127c8b66ee8525662300459099/defc77cb784f180ac1256c2b0030274b/$FILE/bersarint.pdf">
-# http://www.parlament-berlin.de/pds-fraktion.nsf/727459127c8b66ee8525662300459099/defc77cb784f180ac1256c2b0030274b/$FILE/bersarint.pdf
-# </a>
-# says that Bersarin issued an order to use Moscow time on May 20.
-# However, Moscow did not observe daylight saving in 1945, so
-# this was equivalent to CEMT (GMT+3), not GMT+4.
-
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Germany	1946	only	-	Apr	14	2:00s	1:00	S
-Rule	Germany	1946	only	-	Oct	 7	2:00s	0	-
-Rule	Germany	1947	1949	-	Oct	Sun>=1	2:00s	0	-
-# http://www.ptb.de/de/org/4/44/441/salt.htm says the following transition
-# occurred at 3:00 MEZ, not the 2:00 MEZ given in Shanks & Pottenger.
-# Go with the PTB.
-Rule	Germany	1947	only	-	Apr	 6	3:00s	1:00	S
-Rule	Germany	1947	only	-	May	11	2:00s	2:00	M
-Rule	Germany	1947	only	-	Jun	29	3:00	1:00	S
-Rule	Germany	1948	only	-	Apr	18	2:00s	1:00	S
-Rule	Germany	1949	only	-	Apr	10	2:00s	1:00	S
-
-Rule SovietZone	1945	only	-	May	24	2:00	2:00	M # Midsummer
-Rule SovietZone	1945	only	-	Sep	24	3:00	1:00	S
-Rule SovietZone	1945	only	-	Nov	18	2:00s	0	-
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Berlin	0:53:28 -	LMT	1893 Apr
-			1:00	C-Eur	CE%sT	1945 May 24 2:00
-			1:00 SovietZone	CE%sT	1946
-			1:00	Germany	CE%sT	1980
-			1:00	EU	CE%sT
-
-# Georgia
-# Please see the "asia" file for Asia/Tbilisi.
-# Herodotus (Histories, IV.45) says Georgia north of the Phasis (now Rioni)
-# is in Europe.  Our reference location Tbilisi is in the Asian part.
-
-# Gibraltar
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Europe/Gibraltar	-0:21:24 -	LMT	1880 Aug  2 0:00s
-			0:00	GB-Eire	%s	1957 Apr 14 2:00
-			1:00	-	CET	1982
-			1:00	EU	CE%sT
-
-# Greece
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-# Whitman gives 1932 Jul 5 - Nov 1; go with Shanks & Pottenger.
-Rule	Greece	1932	only	-	Jul	 7	0:00	1:00	S
-Rule	Greece	1932	only	-	Sep	 1	0:00	0	-
-# Whitman gives 1941 Apr 25 - ?; go with Shanks & Pottenger.
-Rule	Greece	1941	only	-	Apr	 7	0:00	1:00	S
-# Whitman gives 1942 Feb 2 - ?; go with Shanks & Pottenger.
-Rule	Greece	1942	only	-	Nov	 2	3:00	0	-
-Rule	Greece	1943	only	-	Mar	30	0:00	1:00	S
-Rule	Greece	1943	only	-	Oct	 4	0:00	0	-
-# Whitman gives 1944 Oct 3 - Oct 31; go with Shanks & Pottenger.
-Rule	Greece	1952	only	-	Jul	 1	0:00	1:00	S
-Rule	Greece	1952	only	-	Nov	 2	0:00	0	-
-Rule	Greece	1975	only	-	Apr	12	0:00s	1:00	S
-Rule	Greece	1975	only	-	Nov	26	0:00s	0	-
-Rule	Greece	1976	only	-	Apr	11	2:00s	1:00	S
-Rule	Greece	1976	only	-	Oct	10	2:00s	0	-
-Rule	Greece	1977	1978	-	Apr	Sun>=1	2:00s	1:00	S
-Rule	Greece	1977	only	-	Sep	26	2:00s	0	-
-Rule	Greece	1978	only	-	Sep	24	4:00	0	-
-Rule	Greece	1979	only	-	Apr	 1	9:00	1:00	S
-Rule	Greece	1979	only	-	Sep	29	2:00	0	-
-Rule	Greece	1980	only	-	Apr	 1	0:00	1:00	S
-Rule	Greece	1980	only	-	Sep	28	0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Athens	1:34:52 -	LMT	1895 Sep 14
-			1:34:52	-	AMT	1916 Jul 28 0:01     # Athens MT
-			2:00	Greece	EE%sT	1941 Apr 30
-			1:00	Greece	CE%sT	1944 Apr  4
-			2:00	Greece	EE%sT	1981
-			# Shanks & Pottenger say it switched to C-Eur in 1981;
-			# go with EU instead, since Greece joined it on Jan 1.
-			2:00	EU	EE%sT
-
-# Hungary
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Hungary	1918	only	-	Apr	 1	 3:00	1:00	S
-Rule	Hungary	1918	only	-	Sep	29	 3:00	0	-
-Rule	Hungary	1919	only	-	Apr	15	 3:00	1:00	S
-Rule	Hungary	1919	only	-	Sep	15	 3:00	0	-
-Rule	Hungary	1920	only	-	Apr	 5	 3:00	1:00	S
-Rule	Hungary	1920	only	-	Sep	30	 3:00	0	-
-Rule	Hungary	1945	only	-	May	 1	23:00	1:00	S
-Rule	Hungary	1945	only	-	Nov	 3	 0:00	0	-
-Rule	Hungary	1946	only	-	Mar	31	 2:00s	1:00	S
-Rule	Hungary	1946	1949	-	Oct	Sun>=1	 2:00s	0	-
-Rule	Hungary	1947	1949	-	Apr	Sun>=4	 2:00s	1:00	S
-Rule	Hungary	1950	only	-	Apr	17	 2:00s	1:00	S
-Rule	Hungary	1950	only	-	Oct	23	 2:00s	0	-
-Rule	Hungary	1954	1955	-	May	23	 0:00	1:00	S
-Rule	Hungary	1954	1955	-	Oct	 3	 0:00	0	-
-Rule	Hungary	1956	only	-	Jun	Sun>=1	 0:00	1:00	S
-Rule	Hungary	1956	only	-	Sep	lastSun	 0:00	0	-
-Rule	Hungary	1957	only	-	Jun	Sun>=1	 1:00	1:00	S
-Rule	Hungary	1957	only	-	Sep	lastSun	 3:00	0	-
-Rule	Hungary	1980	only	-	Apr	 6	 1:00	1:00	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Budapest	1:16:20 -	LMT	1890 Oct
-			1:00	C-Eur	CE%sT	1918
-			1:00	Hungary	CE%sT	1941 Apr  6  2:00
-			1:00	C-Eur	CE%sT	1945
-			1:00	Hungary	CE%sT	1980 Sep 28  2:00s
-			1:00	EU	CE%sT
-
-# Iceland
-#
-# From Adam David (1993-11-06):
-# The name of the timezone in Iceland for system / mail / news purposes is GMT.
-#
-# (1993-12-05):
-# This material is paraphrased from the 1988 edition of the University of
-# Iceland Almanak.
-#
-# From January 1st, 1908 the whole of Iceland was standardised at 1 hour
-# behind GMT. Previously, local mean solar time was used in different parts
-# of Iceland, the almanak had been based on Reykjavik mean solar time which
-# was 1 hour and 28 minutes behind GMT.
-#
-# "first day of winter" referred to [below] means the first day of the 26 weeks
-# of winter, according to the old icelandic calendar that dates back to the
-# time the norsemen first settled Iceland.  The first day of winter is always
-# Saturday, but is not dependent on the Julian or Gregorian calendars.
-#
-# (1993-12-10):
-# I have a reference from the Oxford Icelandic-English dictionary for the
-# beginning of winter, which ties it to the ecclesiastical calendar (and thus
-# to the julian/gregorian calendar) over the period in question.
-#	the winter begins on the Saturday next before St. Luke's day
-#	(old style), or on St. Luke's day, if a Saturday.
-# St. Luke's day ought to be traceable from ecclesiastical sources. "old style"
-# might be a reference to the Julian calendar as opposed to Gregorian, or it
-# might mean something else (???).
-#
-# From Paul Eggert (2006-03-22):
-# The Iceland Almanak, Shanks & Pottenger, and Whitman disagree on many points.
-# We go with the Almanak, except for one claim from Shanks & Pottenger, namely
-# that Reykavik was 21W57 from 1837 to 1908, local mean time before that.
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Iceland	1917	1918	-	Feb	19	23:00	1:00	S
-Rule	Iceland	1917	only	-	Oct	21	 1:00	0	-
-Rule	Iceland	1918	only	-	Nov	16	 1:00	0	-
-Rule	Iceland	1939	only	-	Apr	29	23:00	1:00	S
-Rule	Iceland	1939	only	-	Nov	29	 2:00	0	-
-Rule	Iceland	1940	only	-	Feb	25	 2:00	1:00	S
-Rule	Iceland	1940	only	-	Nov	 3	 2:00	0	-
-Rule	Iceland	1941	only	-	Mar	 2	 1:00s	1:00	S
-Rule	Iceland	1941	only	-	Nov	 2	 1:00s	0	-
-Rule	Iceland	1942	only	-	Mar	 8	 1:00s	1:00	S
-Rule	Iceland	1942	only	-	Oct	25	 1:00s	0	-
-# 1943-1946 - first Sunday in March until first Sunday in winter
-Rule	Iceland	1943	1946	-	Mar	Sun>=1	 1:00s	1:00	S
-Rule	Iceland	1943	1948	-	Oct	Sun>=22	 1:00s	0	-
-# 1947-1967 - first Sunday in April until first Sunday in winter
-Rule	Iceland	1947	1967	-	Apr	Sun>=1	 1:00s	1:00	S
-# 1949 Oct transition delayed by 1 week
-Rule	Iceland	1949	only	-	Oct	30	 1:00s	0	-
-Rule	Iceland	1950	1966	-	Oct	Sun>=22	 1:00s	0	-
-Rule	Iceland	1967	only	-	Oct	29	 1:00s	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Atlantic/Reykjavik	-1:27:24 -	LMT	1837
-			-1:27:48 -	RMT	1908 # Reykjavik Mean Time?
-			-1:00	Iceland	IS%sT	1968 Apr 7 1:00s
-			 0:00	-	GMT
-
-# Italy
-#
-# From Paul Eggert (2001-03-06):
-# Sicily and Sardinia each had their own time zones from 1866 to 1893,
-# called Palermo Time (+00:53:28) and Cagliari Time (+00:36:32).
-# During World War II, German-controlled Italy used German time.
-# But these events all occurred before the 1970 cutoff,
-# so record only the time in Rome.
-#
-# From Paul Eggert (2006-03-22):
-# For Italian DST we have three sources: Shanks & Pottenger, Whitman, and
-# F. Pollastri
-# <a href="http://toi.iriti.cnr.it/uk/ienitlt.html">
-# Day-light Saving Time in Italy (2006-02-03)
-# </a>
-# (`FP' below), taken from an Italian National Electrotechnical Institute
-# publication. When the three sources disagree, guess who's right, as follows:
-#
-# year	FP	Shanks&P. (S)	Whitman (W)	Go with:
-# 1916	06-03	06-03 24:00	06-03 00:00	FP & W
-#	09-30	09-30 24:00	09-30 01:00	FP; guess 24:00s
-# 1917	04-01	03-31 24:00	03-31 00:00	FP & S
-#	09-30	09-29 24:00	09-30 01:00	FP & W
-# 1918	03-09	03-09 24:00	03-09 00:00	FP & S
-#	10-06	10-05 24:00	10-06 01:00	FP & W
-# 1919	03-01	03-01 24:00	03-01 00:00	FP & S
-#	10-04	10-04 24:00	10-04 01:00	FP; guess 24:00s
-# 1920	03-20	03-20 24:00	03-20 00:00	FP & S
-#	09-18	09-18 24:00	10-01 01:00	FP; guess 24:00s
-# 1944	04-02	04-03 02:00			S (see C-Eur)
-#	09-16	10-02 03:00			FP; guess 24:00s
-# 1945	09-14	09-16 24:00			FP; guess 24:00s
-# 1970	05-21	05-31 00:00			S
-#	09-20	09-27 00:00			S
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Italy	1916	only	-	Jun	 3	0:00s	1:00	S
-Rule	Italy	1916	only	-	Oct	 1	0:00s	0	-
-Rule	Italy	1917	only	-	Apr	 1	0:00s	1:00	S
-Rule	Italy	1917	only	-	Sep	30	0:00s	0	-
-Rule	Italy	1918	only	-	Mar	10	0:00s	1:00	S
-Rule	Italy	1918	1919	-	Oct	Sun>=1	0:00s	0	-
-Rule	Italy	1919	only	-	Mar	 2	0:00s	1:00	S
-Rule	Italy	1920	only	-	Mar	21	0:00s	1:00	S
-Rule	Italy	1920	only	-	Sep	19	0:00s	0	-
-Rule	Italy	1940	only	-	Jun	15	0:00s	1:00	S
-Rule	Italy	1944	only	-	Sep	17	0:00s	0	-
-Rule	Italy	1945	only	-	Apr	 2	2:00	1:00	S
-Rule	Italy	1945	only	-	Sep	15	0:00s	0	-
-Rule	Italy	1946	only	-	Mar	17	2:00s	1:00	S
-Rule	Italy	1946	only	-	Oct	 6	2:00s	0	-
-Rule	Italy	1947	only	-	Mar	16	0:00s	1:00	S
-Rule	Italy	1947	only	-	Oct	 5	0:00s	0	-
-Rule	Italy	1948	only	-	Feb	29	2:00s	1:00	S
-Rule	Italy	1948	only	-	Oct	 3	2:00s	0	-
-Rule	Italy	1966	1968	-	May	Sun>=22	0:00	1:00	S
-Rule	Italy	1966	1969	-	Sep	Sun>=22	0:00	0	-
-Rule	Italy	1969	only	-	Jun	 1	0:00	1:00	S
-Rule	Italy	1970	only	-	May	31	0:00	1:00	S
-Rule	Italy	1970	only	-	Sep	lastSun	0:00	0	-
-Rule	Italy	1971	1972	-	May	Sun>=22	0:00	1:00	S
-Rule	Italy	1971	only	-	Sep	lastSun	1:00	0	-
-Rule	Italy	1972	only	-	Oct	 1	0:00	0	-
-Rule	Italy	1973	only	-	Jun	 3	0:00	1:00	S
-Rule	Italy	1973	1974	-	Sep	lastSun	0:00	0	-
-Rule	Italy	1974	only	-	May	26	0:00	1:00	S
-Rule	Italy	1975	only	-	Jun	 1	0:00s	1:00	S
-Rule	Italy	1975	1977	-	Sep	lastSun	0:00s	0	-
-Rule	Italy	1976	only	-	May	30	0:00s	1:00	S
-Rule	Italy	1977	1979	-	May	Sun>=22	0:00s	1:00	S
-Rule	Italy	1978	only	-	Oct	 1	0:00s	0	-
-Rule	Italy	1979	only	-	Sep	30	0:00s	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Rome	0:49:56 -	LMT	1866 Sep 22
-			0:49:56	-	RMT	1893 Nov  1 0:00s # Rome Mean
-			1:00	Italy	CE%sT	1942 Nov  2 2:00s
-			1:00	C-Eur	CE%sT	1944 Jul
-			1:00	Italy	CE%sT	1980
-			1:00	EU	CE%sT
-
-Link	Europe/Rome	Europe/Vatican
-Link	Europe/Rome	Europe/San_Marino
-
-# Latvia
-
-# From Liene Kanepe (1998-09-17):
-
-# I asked about this matter Scientific Secretary of the Institute of Astronomy
-# of The University of Latvia Dr. paed Mr. Ilgonis Vilks. I also searched the
-# correct data in juridical acts and I found some juridical documents about
-# changes in the counting of time in Latvia from 1981....
-#
-# Act No.35 of the Council of Ministers of Latvian SSR of 1981-01-22 ...
-# according to the Act No.925 of the Council of Ministers of USSR of 1980-10-24
-# ...: all year round the time of 2nd time zone + 1 hour, in addition turning
-# the hands of the clock 1 hour forward on 1 April at 00:00 (GMT 31 March 21:00)
-# and 1 hour backward on the 1 October at 00:00 (GMT 30 September 20:00).
-#
-# Act No.592 of the Council of Ministers of Latvian SSR of 1984-09-24 ...
-# according to the Act No.967 of the Council of Ministers of USSR of 1984-09-13
-# ...: all year round the time of 2nd time zone + 1 hour, in addition turning
-# the hands of the clock 1 hour forward on the last Sunday of March at 02:00
-# (GMT 23:00 on the previous day) and 1 hour backward on the last Sunday of
-# September at 03:00 (GMT 23:00 on the previous day).
-#
-# Act No.81 of the Council of Ministers of Latvian SSR of 1989-03-22 ...
-# according to the Act No.227 of the Council of Ministers of USSR of 1989-03-14
-# ...: since the last Sunday of March 1989 in Lithuanian SSR, Latvian SSR,
-# Estonian SSR and Kaliningrad region of Russian Federation all year round the
-# time of 2nd time zone (Moscow time minus one hour). On the territory of Latvia
-# transition to summer time is performed on the last Sunday of March at 02:00
-# (GMT 00:00), turning the hands of the clock 1 hour forward.  The end of
-# daylight saving time is performed on the last Sunday of September at 03:00
-# (GMT 00:00), turning the hands of the clock 1 hour backward. Exception is
-# 1989-03-26, when we must not turn the hands of the clock....
-#
-# The Regulations of the Cabinet of Ministers of the Republic of Latvia of
-# 1997-01-21 on transition to Summer time ... established the same order of
-# daylight savings time settings as in the States of the European Union.
-
-# From Andrei Ivanov (2000-03-06):
-# This year Latvia will not switch to Daylight Savings Time (as specified in
-# <a href="http://www.lv-laiks.lv/wwwraksti/2000/071072/vd4.htm">
-# The Regulations of the Cabinet of Ministers of the Rep. of Latvia of
-# 29-Feb-2000 (#79)</a>, in Latvian for subscribers only).
-
-# <a href="http://www.rferl.org/newsline/2001/01/3-CEE/cee-030101.html">
-# From RFE/RL Newsline (2001-01-03), noted after a heads-up by Rives McDow:
-# </a>
-# The Latvian government on 2 January decided that the country will
-# institute daylight-saving time this spring, LETA reported.
-# Last February the three Baltic states decided not to turn back their
-# clocks one hour in the spring....
-# Minister of Economy Aigars Kalvitis noted that Latvia had too few
-# daylight hours and thus decided to comply with a draft European
-# Commission directive that provides for instituting daylight-saving
-# time in EU countries between 2002 and 2006. The Latvian government
-# urged Lithuania and Estonia to adopt a similar time policy, but it
-# appears that they will not do so....
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Latvia	1989	1996	-	Mar	lastSun	 2:00s	1:00	S
-Rule	Latvia	1989	1996	-	Sep	lastSun	 2:00s	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Riga	1:36:24	-	LMT	1880
-			1:36:24	-	RMT	1918 Apr 15 2:00 #Riga Mean Time
-			1:36:24	1:00	LST	1918 Sep 16 3:00 #Latvian Summer
-			1:36:24	-	RMT	1919 Apr  1 2:00
-			1:36:24	1:00	LST	1919 May 22 3:00
-			1:36:24	-	RMT	1926 May 11
-			2:00	-	EET	1940 Aug  5
-			3:00	-	MSK	1941 Jul
-			1:00	C-Eur	CE%sT	1944 Oct 13
-			3:00	Russia	MSK/MSD	1989 Mar lastSun 2:00s
-			2:00	1:00	EEST	1989 Sep lastSun 2:00s
-			2:00	Latvia	EE%sT	1997 Jan 21
-			2:00	EU	EE%sT	2000 Feb 29
-			2:00	-	EET	2001 Jan  2
-			2:00	EU	EE%sT
-
-# Liechtenstein
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Vaduz	0:38:04 -	LMT	1894 Jun
-			1:00	-	CET	1981
-			1:00	EU	CE%sT
-
-# Lithuania
-
-# From Paul Eggert (1996-11-22):
-# IATA SSIM (1992/1996) says Lithuania uses W-Eur rules, but since it is
-# known to be wrong about Estonia and Latvia, assume it's wrong here too.
-
-# From Marius Gedminas (1998-08-07):
-# I would like to inform that in this year Lithuanian time zone
-# (Europe/Vilnius) was changed.
-
-# From <a href="http://www.elta.lt/">ELTA</a> No. 972 (2582) (1999-09-29),
-# via Steffen Thorsen:
-# Lithuania has shifted back to the second time zone (GMT plus two hours)
-# to be valid here starting from October 31,
-# as decided by the national government on Wednesday....
-# The Lithuanian government also announced plans to consider a
-# motion to give up shifting to summer time in spring, as it was
-# already done by Estonia.
-
-# From the <a href="http://www.tourism.lt/informa/ff.htm">
-# Fact File, Lithuanian State Department of Tourism
-# </a> (2000-03-27): Local time is GMT+2 hours ..., no daylight saving.
-
-# From a user via Klaus Marten (2003-02-07):
-# As a candidate for membership of the European Union, Lithuania will
-# observe Summer Time in 2003, changing its clocks at the times laid
-# down in EU Directive 2000/84 of 19.I.01 (i.e. at the same times as its
-# neighbour Latvia). The text of the Lithuanian government Order of
-# 7.XI.02 to this effect can be found at
-# http://www.lrvk.lt/nut/11/n1749.htm
-
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Vilnius	1:41:16	-	LMT	1880
-			1:24:00	-	WMT	1917	    # Warsaw Mean Time
-			1:35:36	-	KMT	1919 Oct 10 # Kaunas Mean Time
-			1:00	-	CET	1920 Jul 12
-			2:00	-	EET	1920 Oct  9
-			1:00	-	CET	1940 Aug  3
-			3:00	-	MSK	1941 Jun 24
-			1:00	C-Eur	CE%sT	1944 Aug
-			3:00	Russia	MSK/MSD	1991 Mar 31 2:00s
-			2:00	1:00	EEST	1991 Sep 29 2:00s
-			2:00	C-Eur	EE%sT	1998
-			2:00	-	EET	1998 Mar 29 1:00u
-			1:00	EU	CE%sT	1999 Oct 31 1:00u
-			2:00	-	EET	2003 Jan  1
-			2:00	EU	EE%sT
-
-# Luxembourg
-# Whitman disagrees with most of these dates in minor ways;
-# go with Shanks & Pottenger.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Lux	1916	only	-	May	14	23:00	1:00	S
-Rule	Lux	1916	only	-	Oct	 1	 1:00	0	-
-Rule	Lux	1917	only	-	Apr	28	23:00	1:00	S
-Rule	Lux	1917	only	-	Sep	17	 1:00	0	-
-Rule	Lux	1918	only	-	Apr	Mon>=15	 2:00s	1:00	S
-Rule	Lux	1918	only	-	Sep	Mon>=15	 2:00s	0	-
-Rule	Lux	1919	only	-	Mar	 1	23:00	1:00	S
-Rule	Lux	1919	only	-	Oct	 5	 3:00	0	-
-Rule	Lux	1920	only	-	Feb	14	23:00	1:00	S
-Rule	Lux	1920	only	-	Oct	24	 2:00	0	-
-Rule	Lux	1921	only	-	Mar	14	23:00	1:00	S
-Rule	Lux	1921	only	-	Oct	26	 2:00	0	-
-Rule	Lux	1922	only	-	Mar	25	23:00	1:00	S
-Rule	Lux	1922	only	-	Oct	Sun>=2	 1:00	0	-
-Rule	Lux	1923	only	-	Apr	21	23:00	1:00	S
-Rule	Lux	1923	only	-	Oct	Sun>=2	 2:00	0	-
-Rule	Lux	1924	only	-	Mar	29	23:00	1:00	S
-Rule	Lux	1924	1928	-	Oct	Sun>=2	 1:00	0	-
-Rule	Lux	1925	only	-	Apr	 5	23:00	1:00	S
-Rule	Lux	1926	only	-	Apr	17	23:00	1:00	S
-Rule	Lux	1927	only	-	Apr	 9	23:00	1:00	S
-Rule	Lux	1928	only	-	Apr	14	23:00	1:00	S
-Rule	Lux	1929	only	-	Apr	20	23:00	1:00	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Europe/Luxembourg	0:24:36 -	LMT	1904 Jun
-			1:00	Lux	CE%sT	1918 Nov 25
-			0:00	Lux	WE%sT	1929 Oct  6 2:00s
-			0:00	Belgium	WE%sT	1940 May 14 3:00
-			1:00	C-Eur	WE%sT	1944 Sep 18 3:00
-			1:00	Belgium	CE%sT	1977
-			1:00	EU	CE%sT
-
-# Macedonia
-# see Serbia
-
-# Malta
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Malta	1973	only	-	Mar	31	0:00s	1:00	S
-Rule	Malta	1973	only	-	Sep	29	0:00s	0	-
-Rule	Malta	1974	only	-	Apr	21	0:00s	1:00	S
-Rule	Malta	1974	only	-	Sep	16	0:00s	0	-
-Rule	Malta	1975	1979	-	Apr	Sun>=15	2:00	1:00	S
-Rule	Malta	1975	1980	-	Sep	Sun>=15	2:00	0	-
-Rule	Malta	1980	only	-	Mar	31	2:00	1:00	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Malta	0:58:04 -	LMT	1893 Nov  2 0:00s # Valletta
-			1:00	Italy	CE%sT	1942 Nov  2 2:00s
-			1:00	C-Eur	CE%sT	1945 Apr  2 2:00s
-			1:00	Italy	CE%sT	1973 Mar 31
-			1:00	Malta	CE%sT	1981
-			1:00	EU	CE%sT
-
-# Moldova
-
-# From Paul Eggert (2006-03-22):
-# A previous version of this database followed Shanks & Pottenger, who write
-# that Tiraspol switched to Moscow time on 1992-01-19 at 02:00.
-# However, this is most likely an error, as Moldova declared independence
-# on 1991-08-27 (the 1992-01-19 date is that of a Russian decree).
-# In early 1992 there was large-scale interethnic violence in the area
-# and it's possible that some Russophones continued to observe Moscow time.
-# But [two people] separately reported via
-# Jesper Norgaard that as of 2001-01-24 Tiraspol was like Chisinau.
-# The Tiraspol entry has therefore been removed for now.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Chisinau	1:55:20 -	LMT	1880
-			1:55	-	CMT	1918 Feb 15 # Chisinau MT
-			1:44:24	-	BMT	1931 Jul 24 # Bucharest MT
-			2:00	Romania	EE%sT	1940 Aug 15
-			2:00	1:00	EEST	1941 Jul 17
-			1:00	C-Eur	CE%sT	1944 Aug 24
-			3:00	Russia	MSK/MSD	1990
-			3:00	-	MSK	1990 May 6
-			2:00	-	EET	1991
-			2:00	Russia	EE%sT	1992
-			2:00	E-Eur	EE%sT	1997
-# See Romania commentary for the guessed 1997 transition to EU rules.
-			2:00	EU	EE%sT
-
-# Monaco
-# Shanks & Pottenger give 0:09:20 for Paris Mean Time; go with Howse's
-# more precise 0:09:21.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Monaco	0:29:32 -	LMT	1891 Mar 15
-			0:09:21	-	PMT	1911 Mar 11    # Paris Mean Time
-			0:00	France	WE%sT	1945 Sep 16 3:00
-			1:00	France	CE%sT	1977
-			1:00	EU	CE%sT
-
-# Montenegro
-# see Serbia
-
-# Netherlands
-
-# Howse writes that the Netherlands' railways used GMT between 1892 and 1940,
-# but for other purposes the Netherlands used Amsterdam mean time.
-
-# However, Robert H. van Gent writes (2001-04-01):
-# Howse's statement is only correct up to 1909. From 1909-05-01 (00:00:00
-# Amsterdam mean time) onwards, the whole of the Netherlands (including
-# the Dutch railways) was required by law to observe Amsterdam mean time
-# (19 minutes 32.13 seconds ahead of GMT). This had already been the
-# common practice (except for the railways) for many decades but it was
-# not until 1909 when the Dutch government finally defined this by law.
-# On 1937-07-01 this was changed to 20 minutes (exactly) ahead of GMT and
-# was generally known as Dutch Time ("Nederlandse Tijd").
-#
-# (2001-04-08):
-# 1892-05-01 was the date when the Dutch railways were by law required to
-# observe GMT while the remainder of the Netherlands adhered to the common
-# practice of following Amsterdam mean time.
-#
-# (2001-04-09):
-# In 1835 the authorities of the province of North Holland requested the
-# municipal authorities of the towns and cities in the province to observe
-# Amsterdam mean time but I do not know in how many cases this request was
-# actually followed.
-#
-# From 1852 onwards the Dutch telegraph offices were by law required to
-# observe Amsterdam mean time. As the time signals from the observatory of
-# Leiden were also distributed by the telegraph system, I assume that most
-# places linked up with the telegraph (and railway) system automatically
-# adopted Amsterdam mean time.
-#
-# Although the early Dutch railway companies initially observed a variety
-# of times, most of them had adopted Amsterdam mean time by 1858 but it
-# was not until 1866 when they were all required by law to observe
-# Amsterdam mean time.
-
-# The data before 1945 are taken from
-# <http://www.phys.uu.nl/~vgent/wettijd/wettijd.htm>.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Neth	1916	only	-	May	 1	0:00	1:00	NST	# Netherlands Summer Time
-Rule	Neth	1916	only	-	Oct	 1	0:00	0	AMT	# Amsterdam Mean Time
-Rule	Neth	1917	only	-	Apr	16	2:00s	1:00	NST
-Rule	Neth	1917	only	-	Sep	17	2:00s	0	AMT
-Rule	Neth	1918	1921	-	Apr	Mon>=1	2:00s	1:00	NST
-Rule	Neth	1918	1921	-	Sep	lastMon	2:00s	0	AMT
-Rule	Neth	1922	only	-	Mar	lastSun	2:00s	1:00	NST
-Rule	Neth	1922	1936	-	Oct	Sun>=2	2:00s	0	AMT
-Rule	Neth	1923	only	-	Jun	Fri>=1	2:00s	1:00	NST
-Rule	Neth	1924	only	-	Mar	lastSun	2:00s	1:00	NST
-Rule	Neth	1925	only	-	Jun	Fri>=1	2:00s	1:00	NST
-# From 1926 through 1939 DST began 05-15, except that it was delayed by a week
-# in years when 05-15 fell in the Pentecost weekend.
-Rule	Neth	1926	1931	-	May	15	2:00s	1:00	NST
-Rule	Neth	1932	only	-	May	22	2:00s	1:00	NST
-Rule	Neth	1933	1936	-	May	15	2:00s	1:00	NST
-Rule	Neth	1937	only	-	May	22	2:00s	1:00	NST
-Rule	Neth	1937	only	-	Jul	 1	0:00	1:00	S
-Rule	Neth	1937	1939	-	Oct	Sun>=2	2:00s	0	-
-Rule	Neth	1938	1939	-	May	15	2:00s	1:00	S
-Rule	Neth	1945	only	-	Apr	 2	2:00s	1:00	S
-Rule	Neth	1945	only	-	Sep	16	2:00s	0	-
-#
-# Amsterdam Mean Time was +00:19:32.13 exactly, but the .13 is omitted
-# below because the current format requires GMTOFF to be an integer.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Europe/Amsterdam	0:19:32 -	LMT	1835
-			0:19:32	Neth	%s	1937 Jul  1
-			0:20	Neth	NE%sT	1940 May 16 0:00 # Dutch Time
-			1:00	C-Eur	CE%sT	1945 Apr  2 2:00
-			1:00	Neth	CE%sT	1977
-			1:00	EU	CE%sT
-
-# Norway
-# http://met.no/met/met_lex/q_u/sommertid.html (2004-01) agrees with Shanks &
-# Pottenger.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Norway	1916	only	-	May	22	1:00	1:00	S
-Rule	Norway	1916	only	-	Sep	30	0:00	0	-
-Rule	Norway	1945	only	-	Apr	 2	2:00s	1:00	S
-Rule	Norway	1945	only	-	Oct	 1	2:00s	0	-
-Rule	Norway	1959	1964	-	Mar	Sun>=15	2:00s	1:00	S
-Rule	Norway	1959	1965	-	Sep	Sun>=15	2:00s	0	-
-Rule	Norway	1965	only	-	Apr	25	2:00s	1:00	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Oslo	0:43:00 -	LMT	1895 Jan  1
-			1:00	Norway	CE%sT	1940 Aug 10 23:00
-			1:00	C-Eur	CE%sT	1945 Apr  2  2:00
-			1:00	Norway	CE%sT	1980
-			1:00	EU	CE%sT
-
-# Svalbard & Jan Mayen
-
-# From Steffen Thorsen (2001-05-01):
-# Although I could not find it explicitly, it seems that Jan Mayen and
-# Svalbard have been using the same time as Norway at least since the
-# time they were declared as parts of Norway.  Svalbard was declared
-# as a part of Norway by law of 1925-07-17 no 11, section 4 and Jan
-# Mayen by law of 1930-02-27 no 2, section 2. (From
-# http://www.lovdata.no/all/nl-19250717-011.html and
-# http://www.lovdata.no/all/nl-19300227-002.html).  The law/regulation
-# for normal/standard time in Norway is from 1894-06-29 no 1 (came
-# into operation on 1895-01-01) and Svalbard/Jan Mayen seem to be a
-# part of this law since 1925/1930. (From
-# http://www.lovdata.no/all/nl-18940629-001.html ) I have not been
-# able to find if Jan Mayen used a different time zone (e.g. -0100)
-# before 1930. Jan Mayen has only been "inhabitated" since 1921 by
-# Norwegian meteorologists and maybe used the same time as Norway ever
-# since 1921.  Svalbard (Arctic/Longyearbyen) has been inhabited since
-# before 1895, and therefore probably changed the local time somewhere
-# between 1895 and 1925 (inclusive).
-
-# From Paul Eggert (2001-05-01):
-#
-# Actually, Jan Mayen was never occupied by Germany during World War II,
-# so it must have diverged from Oslo time during the war, as Oslo was
-# keeping Berlin time.
-#
-# <http://home.no.net/janmayen/history.htm> says that the meteorologists
-# burned down their station in 1940 and left the island, but returned in
-# 1941 with a small Norwegian garrison and continued operations despite
-# frequent air ttacks from Germans.  In 1943 the Americans established a
-# radiolocating station on the island, called "Atlantic City".  Possibly
-# the UTC offset changed during the war, but I think it unlikely that
-# Jan Mayen used German daylight-saving rules.
-#
-# Svalbard is more complicated, as it was raided in August 1941 by an
-# Allied party that evacuated the civilian population to England (says
-# <http://www.bartleby.com/65/sv/Svalbard.html>).  The Svalbard FAQ
-# <http://www.svalbard.com/SvalbardFAQ.html> says that the Germans were
-# expelled on 1942-05-14.  However, small parties of Germans did return,
-# and according to Wilhelm Dege's book "War North of 80" (1954)
-# <http://www.ucalgary.ca/UofC/departments/UP/1-55238/1-55238-110-2.html>
-# the German armed forces at the Svalbard weather station code-named
-# Haudegen did not surrender to the Allies until September 1945.
-#
-# All these events predate our cutoff date of 1970.  Unless we can
-# come up with more definitive info about the timekeeping during the
-# war years it's probably best just do do the following for now:
-Link	Europe/Oslo	Arctic/Longyearbyen
-
-# Poland
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Poland	1918	1919	-	Sep	16	2:00s	0	-
-Rule	Poland	1919	only	-	Apr	15	2:00s	1:00	S
-Rule	Poland	1944	only	-	Apr	 3	2:00s	1:00	S
-# Whitman gives 1944 Nov 30; go with Shanks & Pottenger.
-Rule	Poland	1944	only	-	Oct	 4	2:00	0	-
-# For 1944-1948 Whitman gives the previous day; go with Shanks & Pottenger.
-Rule	Poland	1945	only	-	Apr	29	0:00	1:00	S
-Rule	Poland	1945	only	-	Nov	 1	0:00	0	-
-# For 1946 on the source is Kazimierz Borkowski,
-# Torun Center for Astronomy, Dept. of Radio Astronomy, Nicolaus Copernicus U.,
-# <http://www.astro.uni.torun.pl/~kb/Artykuly/U-PA/Czas2.htm#tth_tAb1>
-# Thanks to Przemyslaw Augustyniak (2005-05-28) for this reference.
-# He also gives these further references:
-# Mon Pol nr 13, poz 162 (1995) <http://www.abc.com.pl/serwis/mp/1995/0162.htm>
-# Druk nr 2180 (2003) <http://www.senat.gov.pl/k5/dok/sejm/053/2180.pdf>
-Rule	Poland	1946	only	-	Apr	14	0:00s	1:00	S
-Rule	Poland	1946	only	-	Oct	 7	2:00s	0	-
-Rule	Poland	1947	only	-	May	 4	2:00s	1:00	S
-Rule	Poland	1947	1949	-	Oct	Sun>=1	2:00s	0	-
-Rule	Poland	1948	only	-	Apr	18	2:00s	1:00	S
-Rule	Poland	1949	only	-	Apr	10	2:00s	1:00	S
-Rule	Poland	1957	only	-	Jun	 2	1:00s	1:00	S
-Rule	Poland	1957	1958	-	Sep	lastSun	1:00s	0	-
-Rule	Poland	1958	only	-	Mar	30	1:00s	1:00	S
-Rule	Poland	1959	only	-	May	31	1:00s	1:00	S
-Rule	Poland	1959	1961	-	Oct	Sun>=1	1:00s	0	-
-Rule	Poland	1960	only	-	Apr	 3	1:00s	1:00	S
-Rule	Poland	1961	1964	-	May	lastSun	1:00s	1:00	S
-Rule	Poland	1962	1964	-	Sep	lastSun	1:00s	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Warsaw	1:24:00 -	LMT	1880
-			1:24:00	-	WMT	1915 Aug  5   # Warsaw Mean Time
-			1:00	C-Eur	CE%sT	1918 Sep 16 3:00
-			2:00	Poland	EE%sT	1922 Jun
-			1:00	Poland	CE%sT	1940 Jun 23 2:00
-			1:00	C-Eur	CE%sT	1944 Oct
-			1:00	Poland	CE%sT	1977
-			1:00	W-Eur	CE%sT	1988
-			1:00	EU	CE%sT
-
-# Portugal
-#
-# From Rui Pedro Salgueiro (1992-11-12):
-# Portugal has recently (September, 27) changed timezone
-# (from WET to MET or CET) to harmonize with EEC.
-#
-# Martin Bruckmann (1996-02-29) reports via Peter Ilieve
-# that Portugal is reverting to 0:00 by not moving its clocks this spring.
-# The new Prime Minister was fed up with getting up in the dark in the winter.
-#
-# From Paul Eggert (1996-11-12):
-# IATA SSIM (1991-09) reports several 1991-09 and 1992-09 transitions
-# at 02:00u, not 01:00u.  Assume that these are typos.
-# IATA SSIM (1991/1992) reports that the Azores were at -1:00.
-# IATA SSIM (1993-02) says +0:00; later issues (through 1996-09) say -1:00.
-# Guess that the Azores changed to EU rules in 1992 (since that's when Portugal
-# harmonized with the EU), and that they stayed +0:00 that winter.
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-# DSH writes that despite Decree 1,469 (1915), the change to the clocks was not
-# done every year, depending on what Spain did, because of railroad schedules.
-# Go with Shanks & Pottenger.
-Rule	Port	1916	only	-	Jun	17	23:00	1:00	S
-# Whitman gives 1916 Oct 31; go with Shanks & Pottenger.
-Rule	Port	1916	only	-	Nov	 1	 1:00	0	-
-Rule	Port	1917	only	-	Feb	28	23:00s	1:00	S
-Rule	Port	1917	1921	-	Oct	14	23:00s	0	-
-Rule	Port	1918	only	-	Mar	 1	23:00s	1:00	S
-Rule	Port	1919	only	-	Feb	28	23:00s	1:00	S
-Rule	Port	1920	only	-	Feb	29	23:00s	1:00	S
-Rule	Port	1921	only	-	Feb	28	23:00s	1:00	S
-Rule	Port	1924	only	-	Apr	16	23:00s	1:00	S
-Rule	Port	1924	only	-	Oct	14	23:00s	0	-
-Rule	Port	1926	only	-	Apr	17	23:00s	1:00	S
-Rule	Port	1926	1929	-	Oct	Sat>=1	23:00s	0	-
-Rule	Port	1927	only	-	Apr	 9	23:00s	1:00	S
-Rule	Port	1928	only	-	Apr	14	23:00s	1:00	S
-Rule	Port	1929	only	-	Apr	20	23:00s	1:00	S
-Rule	Port	1931	only	-	Apr	18	23:00s	1:00	S
-# Whitman gives 1931 Oct 8; go with Shanks & Pottenger.
-Rule	Port	1931	1932	-	Oct	Sat>=1	23:00s	0	-
-Rule	Port	1932	only	-	Apr	 2	23:00s	1:00	S
-Rule	Port	1934	only	-	Apr	 7	23:00s	1:00	S
-# Whitman gives 1934 Oct 5; go with Shanks & Pottenger.
-Rule	Port	1934	1938	-	Oct	Sat>=1	23:00s	0	-
-# Shanks & Pottenger give 1935 Apr 30; go with Whitman.
-Rule	Port	1935	only	-	Mar	30	23:00s	1:00	S
-Rule	Port	1936	only	-	Apr	18	23:00s	1:00	S
-# Whitman gives 1937 Apr 2; go with Shanks & Pottenger.
-Rule	Port	1937	only	-	Apr	 3	23:00s	1:00	S
-Rule	Port	1938	only	-	Mar	26	23:00s	1:00	S
-Rule	Port	1939	only	-	Apr	15	23:00s	1:00	S
-# Whitman gives 1939 Oct 7; go with Shanks & Pottenger.
-Rule	Port	1939	only	-	Nov	18	23:00s	0	-
-Rule	Port	1940	only	-	Feb	24	23:00s	1:00	S
-# Shanks & Pottenger give 1940 Oct 7; go with Whitman.
-Rule	Port	1940	1941	-	Oct	 5	23:00s	0	-
-Rule	Port	1941	only	-	Apr	 5	23:00s	1:00	S
-Rule	Port	1942	1945	-	Mar	Sat>=8	23:00s	1:00	S
-Rule	Port	1942	only	-	Apr	25	22:00s	2:00	M # Midsummer
-Rule	Port	1942	only	-	Aug	15	22:00s	1:00	S
-Rule	Port	1942	1945	-	Oct	Sat>=24	23:00s	0	-
-Rule	Port	1943	only	-	Apr	17	22:00s	2:00	M
-Rule	Port	1943	1945	-	Aug	Sat>=25	22:00s	1:00	S
-Rule	Port	1944	1945	-	Apr	Sat>=21	22:00s	2:00	M
-Rule	Port	1946	only	-	Apr	Sat>=1	23:00s	1:00	S
-Rule	Port	1946	only	-	Oct	Sat>=1	23:00s	0	-
-Rule	Port	1947	1949	-	Apr	Sun>=1	 2:00s	1:00	S
-Rule	Port	1947	1949	-	Oct	Sun>=1	 2:00s	0	-
-# Shanks & Pottenger say DST was observed in 1950; go with Whitman.
-# Whitman gives Oct lastSun for 1952 on; go with Shanks & Pottenger.
-Rule	Port	1951	1965	-	Apr	Sun>=1	 2:00s	1:00	S
-Rule	Port	1951	1965	-	Oct	Sun>=1	 2:00s	0	-
-Rule	Port	1977	only	-	Mar	27	 0:00s	1:00	S
-Rule	Port	1977	only	-	Sep	25	 0:00s	0	-
-Rule	Port	1978	1979	-	Apr	Sun>=1	 0:00s	1:00	S
-Rule	Port	1978	only	-	Oct	 1	 0:00s	0	-
-Rule	Port	1979	1982	-	Sep	lastSun	 1:00s	0	-
-Rule	Port	1980	only	-	Mar	lastSun	 0:00s	1:00	S
-Rule	Port	1981	1982	-	Mar	lastSun	 1:00s	1:00	S
-Rule	Port	1983	only	-	Mar	lastSun	 2:00s	1:00	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-# Shanks & Pottenger say the transition from LMT to WET occurred 1911-05-24;
-# Willett says 1912-01-01.  Go with Willett.
-Zone	Europe/Lisbon	-0:36:32 -	LMT	1884
-			-0:36:32 -	LMT	1912 Jan  1  # Lisbon Mean Time
-			 0:00	Port	WE%sT	1966 Apr  3 2:00
-			 1:00	-	CET	1976 Sep 26 1:00
-			 0:00	Port	WE%sT	1983 Sep 25 1:00s
-			 0:00	W-Eur	WE%sT	1992 Sep 27 1:00s
-			 1:00	EU	CE%sT	1996 Mar 31 1:00u
-			 0:00	EU	WE%sT
-Zone Atlantic/Azores	-1:42:40 -	LMT	1884		# Ponta Delgada
-			-1:54:32 -	HMT	1911 May 24  # Horta Mean Time
-			-2:00	Port	AZO%sT	1966 Apr  3 2:00 # Azores Time
-			-1:00	Port	AZO%sT	1983 Sep 25 1:00s
-			-1:00	W-Eur	AZO%sT	1992 Sep 27 1:00s
-			 0:00	EU	WE%sT	1993 Mar 28 1:00u
-			-1:00	EU	AZO%sT
-Zone Atlantic/Madeira	-1:07:36 -	LMT	1884		# Funchal
-			-1:07:36 -	FMT	1911 May 24  # Funchal Mean Time
-			-1:00	Port	MAD%sT	1966 Apr  3 2:00 # Madeira Time
-			 0:00	Port	WE%sT	1983 Sep 25 1:00s
-			 0:00	EU	WE%sT
-
-# Romania
-#
-# From Paul Eggert (1999-10-07):
-# <a href="http://www.nineoclock.ro/POL/1778pol.html">
-# Nine O'clock</a> (1998-10-23) reports that the switch occurred at
-# 04:00 local time in fall 1998.  For lack of better info,
-# assume that Romania and Moldova switched to EU rules in 1997,
-# the same year as Bulgaria.
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Romania	1932	only	-	May	21	 0:00s	1:00	S
-Rule	Romania	1932	1939	-	Oct	Sun>=1	 0:00s	0	-
-Rule	Romania	1933	1939	-	Apr	Sun>=2	 0:00s	1:00	S
-Rule	Romania	1979	only	-	May	27	 0:00	1:00	S
-Rule	Romania	1979	only	-	Sep	lastSun	 0:00	0	-
-Rule	Romania	1980	only	-	Apr	 5	23:00	1:00	S
-Rule	Romania	1980	only	-	Sep	lastSun	 1:00	0	-
-Rule	Romania	1991	1993	-	Mar	lastSun	 0:00s	1:00	S
-Rule	Romania	1991	1993	-	Sep	lastSun	 0:00s	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Europe/Bucharest	1:44:24 -	LMT	1891 Oct
-			1:44:24	-	BMT	1931 Jul 24	# Bucharest MT
-			2:00	Romania	EE%sT	1981 Mar 29 2:00s
-			2:00	C-Eur	EE%sT	1991
-			2:00	Romania	EE%sT	1994
-			2:00	E-Eur	EE%sT	1997
-			2:00	EU	EE%sT
-
-# Russia
-
-# From Paul Eggert (2006-03-22):
-# Except for Moscow after 1919-07-01, I invented the time zone abbreviations.
-# Moscow time zone abbreviations after 1919-07-01, and Moscow rules after 1991,
-# are from Andrey A. Chernov.  The rest is from Shanks & Pottenger,
-# except we follow Chernov's report that 1992 DST transitions were Sat
-# 23:00, not Sun 02:00s.
-#
-# From Stanislaw A. Kuzikowski (1994-06-29):
-# But now it is some months since Novosibirsk is 3 hours ahead of Moscow!
-# I do not know why they have decided to make this change;
-# as far as I remember it was done exactly during winter->summer switching
-# so we (Novosibirsk) simply did not switch.
-#
-# From Andrey A. Chernov (1996-10-04):
-# `MSK' and `MSD' were born and used initially on Moscow computers with
-# UNIX-like OSes by several developer groups (e.g. Demos group, Kiae group)....
-# The next step was the UUCP network, the Relcom predecessor
-# (used mainly for mail), and MSK/MSD was actively used there.
-#
-# From Chris Carrier (1996-10-30):
-# According to a friend of mine who rode the Trans-Siberian Railroad from
-# Moscow to Irkutsk in 1995, public air and rail transport in Russia ...
-# still follows Moscow time, no matter where in Russia it is located.
-#
-# For Grozny, Chechnya, we have the following story from
-# John Daniszewski, "Scavengers in the Rubble", Los Angeles Times (2001-02-07):
-# News--often false--is spread by word of mouth.  A rumor that it was
-# time to move the clocks back put this whole city out of sync with
-# the rest of Russia for two weeks--even soldiers stationed here began
-# enforcing curfew at the wrong time.
-#
-# From Gwillim Law (2001-06-05):
-# There's considerable evidence that Sakhalin Island used to be in
-# UTC+11, and has changed to UTC+10, in this decade.  I start with the
-# SSIM, which listed Yuzhno-Sakhalinsk in zone RU10 along with Magadan
-# until February 1997, and then in RU9 with Khabarovsk and Vladivostok
-# since September 1997....  Although the Kuril Islands are
-# administratively part of Sakhalin oblast', they appear to have
-# remained on UTC+11 along with Magadan.
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-#
-# Kaliningradskaya oblast'.
-Zone Europe/Kaliningrad	 1:22:00 -	LMT	1893 Apr
-			 1:00	C-Eur	CE%sT	1945
-			 2:00	Poland	CE%sT	1946
-			 3:00	Russia	MSK/MSD	1991 Mar 31 2:00s
-			 2:00	Russia	EE%sT
-#
-# From Oscar van Vlijmen (2001-08-25): [This region consists of]
-# Respublika Adygeya, Arkhangel'skaya oblast',
-# Belgorodskaya oblast', Bryanskaya oblast', Vladimirskaya oblast',
-# Vologodskaya oblast', Voronezhskaya oblast',
-# Respublika Dagestan, Ivanovskaya oblast', Respublika Ingushetiya,
-# Kabarbino-Balkarskaya Respublika, Respublika Kalmykiya,
-# Kalyzhskaya oblast', Respublika Karachaevo-Cherkessiya,
-# Respublika Kareliya, Respublika Komi,
-# Kostromskaya oblast', Krasnodarskij kraj, Kurskaya oblast',
-# Leningradskaya oblast', Lipetskaya oblast', Respublika Marij El,
-# Respublika Mordoviya, Moskva, Moskovskaya oblast',
-# Murmanskaya oblast', Nenetskij avtonomnyj okrug,
-# Nizhegorodskaya oblast', Novgorodskaya oblast', Orlovskaya oblast',
-# Penzenskaya oblast', Pskovskaya oblast', Rostovskaya oblast',
-# Ryazanskaya oblast', Sankt-Peterburg,
-# Respublika Severnaya Osetiya, Smolenskaya oblast',
-# Stavropol'skij kraj, Tambovskaya oblast', Respublika Tatarstan,
-# Tverskaya oblast', Tyl'skaya oblast', Ul'yanovskaya oblast',
-# Chechenskaya Respublika, Chuvashskaya oblast',
-# Yaroslavskaya oblast'
-Zone Europe/Moscow	 2:30:20 -	LMT	1880
-			 2:30	-	MMT	1916 Jul  3 # Moscow Mean Time
-			 2:30:48 Russia	%s	1919 Jul  1 2:00
-			 3:00	Russia	MSK/MSD	1922 Oct
-			 2:00	-	EET	1930 Jun 21
-			 3:00	Russia	MSK/MSD	1991 Mar 31 2:00s
-			 2:00	Russia	EE%sT	1992 Jan 19 2:00s
-			 3:00	Russia	MSK/MSD
-#
-# Astrakhanskaya oblast', Kirovskaya oblast', Saratovskaya oblast',
-# Volgogradskaya oblast'.  Shanks & Pottenger say Kirov is still at +0400
-# but Wikipedia (2006-05-09) says +0300.  Perhaps it switched after the
-# others?  But we have no data.
-Zone Europe/Volgograd	 2:57:40 -	LMT	1920 Jan  3
-			 3:00	-	TSAT	1925 Apr  6 # Tsaritsyn Time
-			 3:00	-	STAT	1930 Jun 21 # Stalingrad Time
-			 4:00	-	STAT	1961 Nov 11
-			 4:00	Russia	VOL%sT	1989 Mar 26 2:00s # Volgograd T
-			 3:00	Russia	VOL%sT	1991 Mar 31 2:00s
-			 4:00	-	VOLT	1992 Mar 29 2:00s
-			 3:00	Russia	VOL%sT
-#
-# From Oscar van Vlijmen (2001-08-25): [This region consists of]
-# Samarskaya oblast', Udmyrtskaya respublika
-Zone Europe/Samara	 3:20:36 -	LMT	1919 Jul  1 2:00
-			 3:00	-	SAMT	1930 Jun 21
-			 4:00	-	SAMT	1935 Jan 27
-			 4:00	Russia	KUY%sT	1989 Mar 26 2:00s # Kuybyshev
-			 3:00	Russia	KUY%sT	1991 Mar 31 2:00s
-			 2:00	Russia	KUY%sT	1991 Sep 29 2:00s
-			 3:00	-	KUYT	1991 Oct 20 3:00
-			 4:00	Russia	SAM%sT	# Samara Time
-#
-# From Oscar van Vlijmen (2001-08-25): [This region consists of]
-# Respublika Bashkortostan, Komi-Permyatskij avtonomnyj okrug,
-# Kurganskaya oblast', Orenburgskaya oblast', Permskaya oblast',
-# Sverdlovskaya oblast', Tyumenskaya oblast',
-# Khanty-Manskijskij avtonomnyj okrug, Chelyabinskaya oblast',
-# Yamalo-Nenetskij avtonomnyj okrug.
-Zone Asia/Yekaterinburg	 4:02:24 -	LMT	1919 Jul 15 4:00
-			 4:00	-	SVET	1930 Jun 21 # Sverdlovsk Time
-			 5:00	Russia	SVE%sT	1991 Mar 31 2:00s
-			 4:00	Russia	SVE%sT	1992 Jan 19 2:00s
-			 5:00	Russia	YEK%sT	# Yekaterinburg Time
-#
-# From Oscar van Vlijmen (2001-08-25): [This region consists of]
-# Respublika Altaj, Altajskij kraj, Omskaya oblast'.
-Zone Asia/Omsk		 4:53:36 -	LMT	1919 Nov 14
-			 5:00	-	OMST	1930 Jun 21 # Omsk TIme
-			 6:00	Russia	OMS%sT	1991 Mar 31 2:00s
-			 5:00	Russia	OMS%sT	1992 Jan 19 2:00s
-			 6:00	Russia	OMS%sT
-#
-# From Paul Eggert (2006-08-19): I'm guessing about Tomsk here; it's
-# not clear when it switched from +7 to +6.
-# Novosibirskaya oblast', Tomskaya oblast'.
-Zone Asia/Novosibirsk	 5:31:40 -	LMT	1919 Dec 14 6:00
-			 6:00	-	NOVT	1930 Jun 21 # Novosibirsk Time
-			 7:00	Russia	NOV%sT	1991 Mar 31 2:00s
-			 6:00	Russia	NOV%sT	1992 Jan 19 2:00s
-			 7:00	Russia	NOV%sT	1993 May 23 # say Shanks & P.
-			 6:00	Russia	NOV%sT
-#
-# From Oscar van Vlijmen (2001-08-25): [This region consists of]
-# Kemerovskaya oblast', Krasnoyarskij kraj,
-# Tajmyrskij (Dolgano-Nenetskij) avtonomnyj okrug,
-# Respublika Tuva, Respublika Khakasiya, Evenkijskij avtonomnyj okrug.
-Zone Asia/Krasnoyarsk	 6:11:20 -	LMT	1920 Jan  6
-			 6:00	-	KRAT	1930 Jun 21 # Krasnoyarsk Time
-			 7:00	Russia	KRA%sT	1991 Mar 31 2:00s
-			 6:00	Russia	KRA%sT	1992 Jan 19 2:00s
-			 7:00	Russia	KRA%sT
-#
-# From Oscar van Vlijmen (2001-08-25): [This region consists of]
-# Respublika Buryatiya, Irkutskaya oblast',
-# Ust'-Ordynskij Buryatskij avtonomnyj okrug.
-Zone Asia/Irkutsk	 6:57:20 -	LMT	1880
-			 6:57:20 -	IMT	1920 Jan 25 # Irkutsk Mean Time
-			 7:00	-	IRKT	1930 Jun 21 # Irkutsk Time
-			 8:00	Russia	IRK%sT	1991 Mar 31 2:00s
-			 7:00	Russia	IRK%sT	1992 Jan 19 2:00s
-			 8:00	Russia	IRK%sT
-#
-# From Oscar van Vlijmen (2003-10-18): [This region consists of]
-# Aginskij Buryatskij avtonomnyj okrug, Amurskaya oblast',
-# [parts of] Respublika Sakha (Yakutiya), Chitinskaya oblast'.
-# The Sakha districts are: Aldanskij, Amginskij, Anabarskij,
-# Bulunskij, Verkhnekolymskij, Verkhnevilyujskij, Vilyujskij, Gornyj,
-# Zhiganskij, Kobyajskij, Lenskij, Megino-Kangalasskij, Mirninskij,
-# Namskij, Nyurbinskij, Olenekskij, Olekminskij, Srednekolymskij,
-# Suntarskij, Tattinskij, Ust'-Aldanskij, Khangalasskij,
-# Churapchinskij, Eveno-Bytantajskij.
-Zone Asia/Yakutsk	 8:38:40 -	LMT	1919 Dec 15
-			 8:00	-	YAKT	1930 Jun 21 # Yakutsk Time
-			 9:00	Russia	YAK%sT	1991 Mar 31 2:00s
-			 8:00	Russia	YAK%sT	1992 Jan 19 2:00s
-			 9:00	Russia	YAK%sT
-#
-# From Oscar van Vlijmen (2003-10-18): [This region consists of]
-# Evrejskaya avtonomnaya oblast', Khabarovskij kraj, Primorskij kraj,
-# [parts of] Respublika Sakha (Yakutiya).
-# The Sakha districts are: Verkhoyanskij, Tomponskij, Ust'-Majskij,
-# Ust'-Yanskij.
-Zone Asia/Vladivostok	 8:47:44 -	LMT	1922 Nov 15
-			 9:00	-	VLAT	1930 Jun 21 # Vladivostok Time
-			10:00	Russia	VLA%sT	1991 Mar 31 2:00s
-			 9:00	Russia	VLA%sST	1992 Jan 19 2:00s
-			10:00	Russia	VLA%sT
-#
-# Sakhalinskaya oblast'.
-# The Zone name should be Yuzhno-Sakhalinsk, but that's too long.
-Zone Asia/Sakhalin	 9:30:48 -	LMT	1905 Aug 23
-			 9:00	-	CJT	1938
-			 9:00	-	JST	1945 Aug 25
-			11:00	Russia	SAK%sT	1991 Mar 31 2:00s # Sakhalin T.
-			10:00	Russia	SAK%sT	1992 Jan 19 2:00s
-			11:00	Russia	SAK%sT	1997 Mar lastSun 2:00s
-			10:00	Russia	SAK%sT
-#
-# From Oscar van Vlijmen (2003-10-18): [This region consists of]
-# Magadanskaya oblast', Respublika Sakha (Yakutiya).
-# Probably also: Kuril Islands.
-# The Sakha districts are: Abyjskij, Allaikhovskij, Momskij,
-# Nizhnekolymskij, Ojmyakonskij.
-Zone Asia/Magadan	10:03:12 -	LMT	1924 May  2
-			10:00	-	MAGT	1930 Jun 21 # Magadan Time
-			11:00	Russia	MAG%sT	1991 Mar 31 2:00s
-			10:00	Russia	MAG%sT	1992 Jan 19 2:00s
-			11:00	Russia	MAG%sT
-#
-# From Oscar van Vlijmen (2001-08-25): [This region consists of]
-# Kamchatskaya oblast', Koryakskij avtonomnyj okrug.
-#
-# The Zone name should be Asia/Petropavlovsk-Kamchatski, but that's too long.
-Zone Asia/Kamchatka	10:34:36 -	LMT	1922 Nov 10
-			11:00	-	PETT	1930 Jun 21 # P-K Time
-			12:00	Russia	PET%sT	1991 Mar 31 2:00s
-			11:00	Russia	PET%sT	1992 Jan 19 2:00s
-			12:00	Russia	PET%sT
-#
-# Chukotskij avtonomnyj okrug
-Zone Asia/Anadyr	11:49:56 -	LMT	1924 May  2
-			12:00	-	ANAT	1930 Jun 21 # Anadyr Time
-			13:00	Russia	ANA%sT	1982 Apr  1 0:00s
-			12:00	Russia	ANA%sT	1991 Mar 31 2:00s
-			11:00	Russia	ANA%sT	1992 Jan 19 2:00s
-			12:00	Russia	ANA%sT
-
-# Serbia
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Belgrade	1:22:00	-	LMT	1884
-			1:00	-	CET	1941 Apr 18 23:00
-			1:00	C-Eur	CE%sT	1945
-			1:00	-	CET	1945 May 8 2:00s
-			1:00	1:00	CEST	1945 Sep 16  2:00s
-# Metod Kozelj reports that the legal date of
-# transition to EU rules was 1982-11-27, for all of Yugoslavia at the time.
-# Shanks & Pottenger don't give as much detail, so go with Kozelj.
-			1:00	-	CET	1982 Nov 27
-			1:00	EU	CE%sT
-Link Europe/Belgrade Europe/Ljubljana	# Slovenia
-Link Europe/Belgrade Europe/Podgorica	# Montenegro
-Link Europe/Belgrade Europe/Sarajevo	# Bosnia and Herzegovina
-Link Europe/Belgrade Europe/Skopje	# Macedonia
-Link Europe/Belgrade Europe/Zagreb	# Croatia
-
-# Slovakia
-Link Europe/Prague Europe/Bratislava
-
-# Slovenia
-# see Serbia
-
-# Spain
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-# For 1917-1919 Whitman gives Apr Sat>=1 - Oct Sat>=1;
-# go with Shanks & Pottenger.
-Rule	Spain	1917	only	-	May	 5	23:00s	1:00	S
-Rule	Spain	1917	1919	-	Oct	 6	23:00s	0	-
-Rule	Spain	1918	only	-	Apr	15	23:00s	1:00	S
-Rule	Spain	1919	only	-	Apr	 5	23:00s	1:00	S
-# Whitman gives 1921 Feb 28 - Oct 14; go with Shanks & Pottenger.
-Rule	Spain	1924	only	-	Apr	16	23:00s	1:00	S
-# Whitman gives 1924 Oct 14; go with Shanks & Pottenger.
-Rule	Spain	1924	only	-	Oct	 4	23:00s	0	-
-Rule	Spain	1926	only	-	Apr	17	23:00s	1:00	S
-# Whitman says no DST in 1929; go with Shanks & Pottenger.
-Rule	Spain	1926	1929	-	Oct	Sat>=1	23:00s	0	-
-Rule	Spain	1927	only	-	Apr	 9	23:00s	1:00	S
-Rule	Spain	1928	only	-	Apr	14	23:00s	1:00	S
-Rule	Spain	1929	only	-	Apr	20	23:00s	1:00	S
-# Whitman gives 1937 Jun 16, 1938 Apr 16, 1940 Apr 13;
-# go with Shanks & Pottenger.
-Rule	Spain	1937	only	-	May	22	23:00s	1:00	S
-Rule	Spain	1937	1939	-	Oct	Sat>=1	23:00s	0	-
-Rule	Spain	1938	only	-	Mar	22	23:00s	1:00	S
-Rule	Spain	1939	only	-	Apr	15	23:00s	1:00	S
-Rule	Spain	1940	only	-	Mar	16	23:00s	1:00	S
-# Whitman says no DST 1942-1945; go with Shanks & Pottenger.
-Rule	Spain	1942	only	-	May	 2	22:00s	2:00	M # Midsummer
-Rule	Spain	1942	only	-	Sep	 1	22:00s	1:00	S
-Rule	Spain	1943	1946	-	Apr	Sat>=13	22:00s	2:00	M
-Rule	Spain	1943	only	-	Oct	 3	22:00s	1:00	S
-Rule	Spain	1944	only	-	Oct	10	22:00s	1:00	S
-Rule	Spain	1945	only	-	Sep	30	 1:00	1:00	S
-Rule	Spain	1946	only	-	Sep	30	 0:00	0	-
-Rule	Spain	1949	only	-	Apr	30	23:00	1:00	S
-Rule	Spain	1949	only	-	Sep	30	 1:00	0	-
-Rule	Spain	1974	1975	-	Apr	Sat>=13	23:00	1:00	S
-Rule	Spain	1974	1975	-	Oct	Sun>=1	 1:00	0	-
-Rule	Spain	1976	only	-	Mar	27	23:00	1:00	S
-Rule	Spain	1976	1977	-	Sep	lastSun	 1:00	0	-
-Rule	Spain	1977	1978	-	Apr	 2	23:00	1:00	S
-Rule	Spain	1978	only	-	Oct	 1	 1:00	0	-
-# The following rules are copied from Morocco from 1967 through 1978.
-Rule SpainAfrica 1967	only	-	Jun	 3	12:00	1:00	S
-Rule SpainAfrica 1967	only	-	Oct	 1	 0:00	0	-
-Rule SpainAfrica 1974	only	-	Jun	24	 0:00	1:00	S
-Rule SpainAfrica 1974	only	-	Sep	 1	 0:00	0	-
-Rule SpainAfrica 1976	1977	-	May	 1	 0:00	1:00	S
-Rule SpainAfrica 1976	only	-	Aug	 1	 0:00	0	-
-Rule SpainAfrica 1977	only	-	Sep	28	 0:00	0	-
-Rule SpainAfrica 1978	only	-	Jun	 1	 0:00	1:00	S
-Rule SpainAfrica 1978	only	-	Aug	 4	 0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Madrid	-0:14:44 -	LMT	1901 Jan  1  0:00s
-			 0:00	Spain	WE%sT	1946 Sep 30
-			 1:00	Spain	CE%sT	1979
-			 1:00	EU	CE%sT
-Zone	Africa/Ceuta	-0:21:16 -	LMT	1901
-			 0:00	-	WET	1918 May  6 23:00
-			 0:00	1:00	WEST	1918 Oct  7 23:00
-			 0:00	-	WET	1924
-			 0:00	Spain	WE%sT	1929
-			 0:00 SpainAfrica WE%sT 1984 Mar 16
-			 1:00	-	CET	1986
-			 1:00	EU	CE%sT
-Zone	Atlantic/Canary	-1:01:36 -	LMT	1922 Mar # Las Palmas de Gran C.
-			-1:00	-	CANT	1946 Sep 30 1:00 # Canaries Time
-			 0:00	-	WET	1980 Apr  6 0:00s
-			 0:00	1:00	WEST	1980 Sep 28 0:00s
-			 0:00	EU	WE%sT
-# IATA SSIM (1996-09) says the Canaries switch at 2:00u, not 1:00u.
-# Ignore this for now, as the Canaries are part of the EU.
-
-# Sweden
-
-# From Ivan Nilsson (2001-04-13), superseding Shanks & Pottenger:
-#
-# The law "Svensk forfattningssamling 1878, no 14" about standard time in 1879:
-# From the beginning of 1879 (that is 01-01 00:00) the time for all
-# places in the country is "the mean solar time for the meridian at
-# three degrees, or twelve minutes of time, to the west of the
-# meridian of the Observatory of Stockholm".  The law is dated 1878-05-31.
-#
-# The observatory at that time had the meridian 18 degrees 03' 30"
-# eastern longitude = 01:12:14 in time.  Less 12 minutes gives the
-# national standard time as 01:00:14 ahead of GMT....
-#
-# About the beginning of CET in Sweden. The lawtext ("Svensk
-# forfattningssamling 1899, no 44") states, that "from the beginning
-# of 1900... ... the same as the mean solar time for the meridian at
-# the distance of one hour of time from the meridian of the English
-# observatory at Greenwich, or at 12 minutes 14 seconds to the west
-# from the meridian of the Observatory of Stockholm". The law is dated
-# 1899-06-16.  In short: At 1900-01-01 00:00:00 the new standard time
-# in Sweden is 01:00:00 ahead of GMT.
-#
-# 1916: The lawtext ("Svensk forfattningssamling 1916, no 124") states
-# that "1916-05-15 is considered to begin one hour earlier". It is
-# pretty obvious that at 05-14 23:00 the clocks are set to 05-15 00:00....
-# Further the law says, that "1916-09-30 is considered to end one hour later".
-#
-# The laws regulating [DST] are available on the site of the Swedish
-# Parliament beginning with 1985 - the laws regulating 1980/1984 are
-# not available on the site (to my knowledge they are only available
-# in Swedish): <http://www.riksdagen.se/english/work/sfst.asp> (type
-# "sommartid" without the quotes in the field "Fritext" and then click
-# the Sok-button).
-#
-# (2001-05-13):
-#
-# I have now found a newspaper stating that at 1916-10-01 01:00
-# summertime the church-clocks etc were set back one hour to show
-# 1916-10-01 00:00 standard time.  The article also reports that some
-# people thought the switch to standard time would take place already
-# at 1916-10-01 00:00 summer time, but they had to wait for another
-# hour before the event took place.
-#
-# Source: The newspaper "Dagens Nyheter", 1916-10-01, page 7 upper left.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Europe/Stockholm	1:12:12 -	LMT	1879 Jan  1
-			1:00:14	-	SET	1900 Jan  1	# Swedish Time
-			1:00	-	CET	1916 May 14 23:00
-			1:00	1:00	CEST	1916 Oct  1 01:00
-			1:00	-	CET	1980
-			1:00	EU	CE%sT
-
-# Switzerland
-# From Howse:
-# By the end of the 18th century clocks and watches became commonplace
-# and their performance improved enormously.  Communities began to keep
-# mean time in preference to apparent time -- Geneva from 1780 ....
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-# From Whitman (who writes ``Midnight?''):
-Rule	Swiss	1940	only	-	Nov	 2	0:00	1:00	S
-Rule	Swiss	1940	only	-	Dec	31	0:00	0	-
-# From Shanks & Pottenger:
-Rule	Swiss	1941	1942	-	May	Sun>=1	2:00	1:00	S
-Rule	Swiss	1941	1942	-	Oct	Sun>=1	0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Zurich	0:34:08 -	LMT	1848 Sep 12
-			0:29:44	-	BMT	1894 Jun # Bern Mean Time
-			1:00	Swiss	CE%sT	1981
-			1:00	EU	CE%sT
-
-# Turkey
-
-# From Amar Devegowda (2007-01-03):
-# The time zone rules for Istanbul, Turkey have not been changed for years now.
-# ... The latest rules are available at -
-# http://www.timeanddate.com/worldclock/timezone.html?n=107
-# From Steffen Thorsen (2007-01-03):
-# I have been able to find press records back to 1996 which all say that
-# DST started 01:00 local time and end at 02:00 local time.  I am not sure
-# what happened before that.  One example for each year from 1996 to 2001:
-# http://newspot.byegm.gov.tr/arsiv/1996/21/N4.htm
-# http://www.byegm.gov.tr/YAYINLARIMIZ/CHR/ING97/03/97X03X25.TXT
-# http://www.byegm.gov.tr/YAYINLARIMIZ/CHR/ING98/03/98X03X02.HTM
-# http://www.byegm.gov.tr/YAYINLARIMIZ/CHR/ING99/10/99X10X26.HTM#%2016
-# http://www.byegm.gov.tr/YAYINLARIMIZ/CHR/ING2000/03/00X03X06.HTM#%2021
-# http://www.byegm.gov.tr/YAYINLARIMIZ/CHR/ING2001/03/23x03x01.HTM#%2027
-# From Paul Eggert (2007-01-03):
-# Prefer the above source to Shanks & Pottenger for time stamps after 1990.
-
-# From Steffen Thorsen (2007-03-09):
-# Starting 2007 though, it seems that they are adopting EU's 1:00 UTC
-# start/end time, according to the following page (2007-03-07):
-# http://www.ntvmsnbc.com/news/402029.asp
-# The official document is located here - it is in Turkish...:
-# http://rega.basbakanlik.gov.tr/eskiler/2007/03/20070307-7.htm
-# I was able to locate the following seemingly official document
-# (on a non-government server though) describing dates between 2002 and 2006:
-# http://www.alomaliye.com/bkk_2002_3769.htm
-
-# From Sue Williams (2008-08-11):
-# I spotted this news article about a potential change in Turkey.
-#
-# <a href="http://www.hurriyet.com.tr/english/domestic/9626174.asp?scr=1">
-# http://www.hurriyet.com.tr/english/domestic/9626174.asp?scr=1
-# </a>
-
-# From Sue Williams (2008-08-20):
-# This article says that around the end of March 2011, Turkey wants to
-# adjust the clocks forward by 1/2 hour and stay that way permanently.
-# The article indicates that this is a change in timezone offset in addition
-# to stopping observance of DST.
-# This proposal has not yet been approved.
-#
-# Read more here...
-#
-# Turkey to abandon daylight saving time in 2011
-# <a href="http://www.turkishdailynews.com.tr/article.php?enewsid=112989">
-# http://www.turkishdailynews.com.tr/article.php?enewsid=112989
-# </a>
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Turkey	1916	only	-	May	 1	0:00	1:00	S
-Rule	Turkey	1916	only	-	Oct	 1	0:00	0	-
-Rule	Turkey	1920	only	-	Mar	28	0:00	1:00	S
-Rule	Turkey	1920	only	-	Oct	25	0:00	0	-
-Rule	Turkey	1921	only	-	Apr	 3	0:00	1:00	S
-Rule	Turkey	1921	only	-	Oct	 3	0:00	0	-
-Rule	Turkey	1922	only	-	Mar	26	0:00	1:00	S
-Rule	Turkey	1922	only	-	Oct	 8	0:00	0	-
-# Whitman gives 1923 Apr 28 - Sep 16 and no DST in 1924-1925;
-# go with Shanks & Pottenger.
-Rule	Turkey	1924	only	-	May	13	0:00	1:00	S
-Rule	Turkey	1924	1925	-	Oct	 1	0:00	0	-
-Rule	Turkey	1925	only	-	May	 1	0:00	1:00	S
-Rule	Turkey	1940	only	-	Jun	30	0:00	1:00	S
-Rule	Turkey	1940	only	-	Oct	 5	0:00	0	-
-Rule	Turkey	1940	only	-	Dec	 1	0:00	1:00	S
-Rule	Turkey	1941	only	-	Sep	21	0:00	0	-
-Rule	Turkey	1942	only	-	Apr	 1	0:00	1:00	S
-# Whitman omits the next two transition and gives 1945 Oct 1;
-# go with Shanks & Pottenger.
-Rule	Turkey	1942	only	-	Nov	 1	0:00	0	-
-Rule	Turkey	1945	only	-	Apr	 2	0:00	1:00	S
-Rule	Turkey	1945	only	-	Oct	 8	0:00	0	-
-Rule	Turkey	1946	only	-	Jun	 1	0:00	1:00	S
-Rule	Turkey	1946	only	-	Oct	 1	0:00	0	-
-Rule	Turkey	1947	1948	-	Apr	Sun>=16	0:00	1:00	S
-Rule	Turkey	1947	1950	-	Oct	Sun>=2	0:00	0	-
-Rule	Turkey	1949	only	-	Apr	10	0:00	1:00	S
-Rule	Turkey	1950	only	-	Apr	19	0:00	1:00	S
-Rule	Turkey	1951	only	-	Apr	22	0:00	1:00	S
-Rule	Turkey	1951	only	-	Oct	 8	0:00	0	-
-Rule	Turkey	1962	only	-	Jul	15	0:00	1:00	S
-Rule	Turkey	1962	only	-	Oct	 8	0:00	0	-
-Rule	Turkey	1964	only	-	May	15	0:00	1:00	S
-Rule	Turkey	1964	only	-	Oct	 1	0:00	0	-
-Rule	Turkey	1970	1972	-	May	Sun>=2	0:00	1:00	S
-Rule	Turkey	1970	1972	-	Oct	Sun>=2	0:00	0	-
-Rule	Turkey	1973	only	-	Jun	 3	1:00	1:00	S
-Rule	Turkey	1973	only	-	Nov	 4	3:00	0	-
-Rule	Turkey	1974	only	-	Mar	31	2:00	1:00	S
-Rule	Turkey	1974	only	-	Nov	 3	5:00	0	-
-Rule	Turkey	1975	only	-	Mar	30	0:00	1:00	S
-Rule	Turkey	1975	1976	-	Oct	lastSun	0:00	0	-
-Rule	Turkey	1976	only	-	Jun	 1	0:00	1:00	S
-Rule	Turkey	1977	1978	-	Apr	Sun>=1	0:00	1:00	S
-Rule	Turkey	1977	only	-	Oct	16	0:00	0	-
-Rule	Turkey	1979	1980	-	Apr	Sun>=1	3:00	1:00	S
-Rule	Turkey	1979	1982	-	Oct	Mon>=11	0:00	0	-
-Rule	Turkey	1981	1982	-	Mar	lastSun	3:00	1:00	S
-Rule	Turkey	1983	only	-	Jul	31	0:00	1:00	S
-Rule	Turkey	1983	only	-	Oct	 2	0:00	0	-
-Rule	Turkey	1985	only	-	Apr	20	0:00	1:00	S
-Rule	Turkey	1985	only	-	Sep	28	0:00	0	-
-Rule	Turkey	1986	1990	-	Mar	lastSun	2:00s	1:00	S
-Rule	Turkey	1986	1990	-	Sep	lastSun	2:00s	0	-
-Rule	Turkey	1991	2006	-	Mar	lastSun	1:00s	1:00	S
-Rule	Turkey	1991	1995	-	Sep	lastSun	1:00s	0	-
-Rule	Turkey	1996	2006	-	Oct	lastSun	1:00s	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	Europe/Istanbul	1:55:52 -	LMT	1880
-			1:56:56	-	IMT	1910 Oct # Istanbul Mean Time?
-			2:00	Turkey	EE%sT	1978 Oct 15
-			3:00	Turkey	TR%sT	1985 Apr 20 # Turkey Time
-			2:00	Turkey	EE%sT	2007
-			2:00	EU	EE%sT
-Link	Europe/Istanbul	Asia/Istanbul	# Istanbul is in both continents.
-
-# Ukraine
-#
-# From Igor Karpov, who works for the Ukranian Ministry of Justice,
-# via Garrett Wollman (2003-01-27):
-# BTW, I've found the official document on this matter. It's goverment
-# regulations number 509, May 13, 1996. In my poor translation it says:
-# "Time in Ukraine is set to second timezone (Kiev time). Each last Sunday
-# of March at 3am the time is changing to 4am and each last Sunday of
-# October the time at 4am is changing to 3am"
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-# Most of Ukraine since 1970 has been like Kiev.
-# "Kyiv" is the transliteration of the Ukrainian name, but
-# "Kiev" is more common in English.
-Zone Europe/Kiev	2:02:04 -	LMT	1880
-			2:02:04	-	KMT	1924 May  2 # Kiev Mean Time
-			2:00	-	EET	1930 Jun 21
-			3:00	-	MSK	1941 Sep 20
-			1:00	C-Eur	CE%sT	1943 Nov  6
-			3:00	Russia	MSK/MSD	1990
-			3:00	-	MSK	1990 Jul  1 2:00
-			2:00	-	EET	1992
-			2:00	E-Eur	EE%sT	1995
-			2:00	EU	EE%sT
-# Ruthenia used CET 1990/1991.
-# "Uzhhorod" is the transliteration of the Ukrainian name, but
-# "Uzhgorod" is more common in English.
-Zone Europe/Uzhgorod	1:29:12 -	LMT	1890 Oct
-			1:00	-	CET	1940
-			1:00	C-Eur	CE%sT	1944 Oct
-			1:00	1:00	CEST	1944 Oct 26
-			1:00	-	CET	1945 Jun 29
-			3:00	Russia	MSK/MSD	1990
-			3:00	-	MSK	1990 Jul  1 2:00
-			1:00	-	CET	1991 Mar 31 3:00
-			2:00	-	EET	1992
-			2:00	E-Eur	EE%sT	1995
-			2:00	EU	EE%sT
-# Zaporozh'ye and eastern Lugansk oblasts observed DST 1990/1991.
-# "Zaporizhia" is the transliteration of the Ukrainian name, but
-# "Zaporozh'ye" is more common in English.  Use the common English
-# spelling, except omit the apostrophe as it is not allowed in
-# portable Posix file names.
-Zone Europe/Zaporozhye	2:20:40 -	LMT	1880
-			2:20	-	CUT	1924 May  2 # Central Ukraine T
-			2:00	-	EET	1930 Jun 21
-			3:00	-	MSK	1941 Aug 25
-			1:00	C-Eur	CE%sT	1943 Oct 25
-			3:00	Russia	MSK/MSD	1991 Mar 31 2:00
-			2:00	E-Eur	EE%sT	1995
-			2:00	EU	EE%sT
-# Central Crimea used Moscow time 1994/1997.
-Zone Europe/Simferopol	2:16:24 -	LMT	1880
-			2:16	-	SMT	1924 May  2 # Simferopol Mean T
-			2:00	-	EET	1930 Jun 21
-			3:00	-	MSK	1941 Nov
-			1:00	C-Eur	CE%sT	1944 Apr 13
-			3:00	Russia	MSK/MSD	1990
-			3:00	-	MSK	1990 Jul  1 2:00
-			2:00	-	EET	1992
-# From Paul Eggert (2006-03-22):
-# The _Economist_ (1994-05-28, p 45) reports that central Crimea switched
-# from Kiev to Moscow time sometime after the January 1994 elections.
-# Shanks (1999) says ``date of change uncertain'', but implies that it happened
-# sometime between the 1994 DST switches.  Shanks & Pottenger simply say
-# 1994-09-25 03:00, but that can't be right.  For now, guess it
-# changed in May.
-			2:00	E-Eur	EE%sT	1994 May
-# From IATA SSIM (1994/1997), which also says that Kerch is still like Kiev.
-			3:00	E-Eur	MSK/MSD	1996 Mar 31 3:00s
-			3:00	1:00	MSD	1996 Oct 27 3:00s
-# IATA SSIM (1997-09) says Crimea switched to EET/EEST.
-# Assume it happened in March by not changing the clocks.
-			3:00	Russia	MSK/MSD	1997
-			3:00	-	MSK	1997 Mar lastSun 1:00u
-			2:00	EU	EE%sT
-
-###############################################################################
-
-# One source shows that Bulgaria, Cyprus, Finland, and Greece observe DST from
-# the last Sunday in March to the last Sunday in September in 1986.
-# The source shows Romania changing a day later than everybody else.
-#
-# According to Bernard Sieloff's source, Poland is in the MET time zone but
-# uses the WE DST rules.  The Western USSR uses EET+1 and ME DST rules.
-# Bernard Sieloff's source claims Romania switches on the same day, but at
-# 00:00 standard time (i.e., 01:00 DST).  It also claims that Turkey
-# switches on the same day, but switches on at 01:00 standard time
-# and off at 00:00 standard time (i.e., 01:00 DST)
-
-# ...
-# Date: Wed, 28 Jan 87 16:56:27 -0100
-# From: Tom Hofmann
-# ...
-#
-# ...the European time rules are...standardized since 1981, when
-# most European coun[tr]ies started DST.  Before that year, only
-# a few countries (UK, France, Italy) had DST, each according
-# to own national rules.  In 1981, however, DST started on
-# 'Apr firstSun', and not on 'Mar lastSun' as in the following
-# years...
-# But also since 1981 there are some more national exceptions
-# than listed in 'europe': Switzerland, for example, joined DST
-# one year later, Denmark ended DST on 'Oct 1' instead of 'Sep
-# lastSun' in 1981---I don't know how they handle now.
-#
-# Finally, DST ist always from 'Apr 1' to 'Oct 1' in the
-# Soviet Union (as far as I know).
-#
-# Tom Hofmann, Scientific Computer Center, CIBA-GEIGY AG,
-# 4002 Basle, Switzerland
-# ...
-
-# ...
-# Date: Wed, 4 Feb 87 22:35:22 +0100
-# From: Dik T. Winter
-# ...
-#
-# The information from Tom Hofmann is (as far as I know) not entirely correct.
-# After a request from chongo at amdahl I tried to retrieve all information
-# about DST in Europe.  I was able to find all from about 1969.
-#
-# ...standardization on DST in Europe started in about 1977 with switches on
-# first Sunday in April and last Sunday in September...
-# In 1981 UK joined Europe insofar that
-# the starting day for both shifted to last Sunday in March.  And from 1982
-# the whole of Europe used DST, with switch dates April 1 and October 1 in
-# the Sov[i]et Union.  In 1985 the SU reverted to standard Europe[a]n switch
-# dates...
-#
-# It should also be remembered that time-zones are not constants; e.g.
-# Portugal switched in 1976 from MET (or CET) to WET with DST...
-# Note also that though there were rules for switch dates not
-# all countries abided to these dates, and many individual deviations
-# occurred, though not since 1982 I believe.  Another note: it is always
-# assumed that DST is 1 hour ahead of normal time, this need not be the
-# case; at least in the Netherlands there have been times when DST was 2 hours
-# in advance of normal time.
-#
-# ...
-# dik t. winter, cwi, amsterdam, nederland
-# ...
-
-# From Bob Devine (1988-01-28):
-# ...
-# Greece: Last Sunday in April to last Sunday in September (iffy on dates).
-# Since 1978.  Change at midnight.
-# ...
-# Monaco: has same DST as France.
-# ...
+# <pre>
+# @(#)europe	8.27
+# This file is in the public domain, so clarified as of
+# 2009-05-17 by Arthur David Olson.
+
+# This data is by no means authoritative; if you think you know better,
+# go ahead and edit the file (and please send any changes to
+# tz@elsie.nci.nih.gov for general use in the future).
+
+# From Paul Eggert (2006-03-22):
+# A good source for time zone historical data outside the U.S. is
+# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),
+# San Diego: ACS Publications, Inc. (2003).
+#
+# Gwillim Law writes that a good source
+# for recent time zone data is the International Air Transport
+# Association's Standard Schedules Information Manual (IATA SSIM),
+# published semiannually.  Law sent in several helpful summaries
+# of the IATA's data after 1990.
+#
+# Except where otherwise noted, Shanks & Pottenger is the source for
+# entries through 1991, and IATA SSIM is the source for entries afterwards.
+#
+# Other sources occasionally used include:
+#
+#	Edward W. Whitman, World Time Differences,
+#	Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated),
+#	which I found in the UCLA library.
+#
+#	<a href="http://www.pettswoodvillage.co.uk/Daylight_Savings_William_Willett.pdf">
+#	William Willett, The Waste of Daylight, 19th edition
+#	</a> (1914-03)
+#
+#	Brazil's Departamento Servico da Hora (DSH),
+#	<a href="http://pcdsh01.on.br/HISTHV.htm">
+#	History of Summer Time
+#	</a> (1998-09-21, in Portuguese)
+
+#
+# I invented the abbreviations marked `*' in the following table;
+# the rest are from earlier versions of this file, or from other sources.
+# Corrections are welcome!
+#                   std dst  2dst
+#                   LMT           Local Mean Time
+#       -4:00       AST ADT       Atlantic
+#       -3:00       WGT WGST      Western Greenland*
+#       -1:00       EGT EGST      Eastern Greenland*
+#        0:00       GMT BST  BDST Greenwich, British Summer
+#        0:00       GMT IST       Greenwich, Irish Summer
+#        0:00       WET WEST WEMT Western Europe
+#        0:19:32.13 AMT NST       Amsterdam, Netherlands Summer (1835-1937)*
+#        0:20       NET NEST      Netherlands (1937-1940)*
+#        1:00       CET CEST CEMT Central Europe
+#        1:00:14    SET           Swedish (1879-1899)*
+#        2:00       EET EEST      Eastern Europe
+#        3:00       MSK MSD       Moscow
+#
+# A reliable and entertaining source about time zones, especially in Britain,
+# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).
+
+# From Peter Ilieve (1994-12-04),
+# The original six [EU members]: Belgium, France, (West) Germany, Italy,
+# Luxembourg, the Netherlands.
+# Plus, from 1 Jan 73: Denmark, Ireland, United Kingdom.
+# Plus, from 1 Jan 81: Greece.
+# Plus, from 1 Jan 86: Spain, Portugal.
+# Plus, from 1 Jan 95: Austria, Finland, Sweden. (Norway negotiated terms for
+# entry but in a referendum on 28 Nov 94 the people voted No by 52.2% to 47.8%
+# on a turnout of 88.6%. This was almost the same result as Norway's previous
+# referendum in 1972, they are the only country to have said No twice.
+# Referendums in the other three countries voted Yes.)
+# ...
+# Estonia ... uses EU dates but not at 01:00 GMT, they use midnight GMT.
+# I don't think they know yet what they will do from 1996 onwards.
+# ...
+# There shouldn't be any [current members who are not using EU rules].
+# A Directive has the force of law, member states are obliged to enact
+# national law to implement it. The only contentious issue was the
+# different end date for the UK and Ireland, and this was always allowed
+# in the Directive.
+
+
+###############################################################################
+
+# Britain (United Kingdom) and Ireland (Eire)
+
+# From Peter Ilieve (1994-07-06):
+#
+# On 17 Jan 1994 the Independent, a UK quality newspaper, had a piece about
+# historical vistas along the Thames in west London. There was a photo
+# and a sketch map showing some of the sightlines involved. One paragraph
+# of the text said:
+#
+# `An old stone obelisk marking a forgotten terrestrial meridian stands
+# beside the river at Kew. In the 18th century, before time and longitude
+# was standardised by the Royal Observatory in Greenwich, scholars observed
+# this stone and the movement of stars from Kew Observatory nearby. They
+# made their calculations and set the time for the Horse Guards and Parliament,
+# but now the stone is obscured by scrubwood and can only be seen by walking
+# along the towpath within a few yards of it.'
+#
+# I have a one inch to one mile map of London and my estimate of the stone's
+# position is 51 deg. 28' 30" N, 0 deg. 18' 45" W. The longitude should
+# be within about +-2". The Ordnance Survey grid reference is TQ172761.
+#
+# [This yields GMTOFF = -0:01:15 for London LMT in the 18th century.]
+
+# From Paul Eggert (1993-11-18):
+#
+# Howse writes that Britain was the first country to use standard time.
+# The railways cared most about the inconsistencies of local mean time,
+# and it was they who forced a uniform time on the country.
+# The original idea was credited to Dr. William Hyde Wollaston (1766-1828)
+# and was popularized by Abraham Follett Osler (1808-1903).
+# The first railway to adopt London time was the Great Western Railway
+# in November 1840; other railways followed suit, and by 1847 most
+# (though not all) railways used London time.  On 1847-09-22 the
+# Railway Clearing House, an industry standards body, recommended that GMT be
+# adopted at all stations as soon as the General Post Office permitted it.
+# The transition occurred on 12-01 for the L&NW, the Caledonian,
+# and presumably other railways; the January 1848 Bradshaw's lists many
+# railways as using GMT.  By 1855 the vast majority of public
+# clocks in Britain were set to GMT (though some, like the great clock
+# on Tom Tower at Christ Church, Oxford, were fitted with two minute hands,
+# one for local time and one for GMT).  The last major holdout was the legal
+# system, which stubbornly stuck to local time for many years, leading
+# to oddities like polls opening at 08:13 and closing at 16:13.
+# The legal system finally switched to GMT when the Statutes (Definition
+# of Time) Act took effect; it received the Royal Assent on 1880-08-02.
+#
+# In the tables below, we condense this complicated story into a single
+# transition date for London, namely 1847-12-01.  We don't know as much
+# about Dublin, so we use 1880-08-02, the legal transition time.
+
+# From Paul Eggert (2003-09-27):
+# Summer Time was first seriously proposed by William Willett (1857-1915),
+# a London builder and member of the Royal Astronomical Society
+# who circulated a pamphlet ``The Waste of Daylight'' (1907)
+# that proposed advancing clocks 20 minutes on each of four Sundays in April,
+# and retarding them by the same amount on four Sundays in September.
+# A bill was drafted in 1909 and introduced in Parliament several times,
+# but it met with ridicule and opposition, especially from farming interests.
+# Later editions of the pamphlet proposed one-hour summer time, and
+# it was eventually adopted as a wartime measure in 1916.
+# See: Summer Time Arrives Early, The Times (2000-05-18).
+# A monument to Willett was unveiled on 1927-05-21, in an open space in
+# a 45-acre wood near Chislehurst, Kent that was purchased by popular
+# subscription and open to the public.  On the south face of the monolith,
+# designed by G. W. Miller, is the the William Willett Memorial Sundial,
+# which is permanently set to Summer Time.
+
+# From Winston Churchill (1934-04-28):
+# It is one of the paradoxes of history that we should owe the boon of
+# summer time, which gives every year to the people of this country
+# between 160 and 170 hours more daylight leisure, to a war which
+# plunged Europe into darkness for four years, and shook the
+# foundations of civilization throughout the world.
+#	-- <a href="http://www.winstonchurchill.org/fh114willett.htm">
+#	"A Silent Toast to William Willett", Pictorial Weekly
+#	</a>
+
+# From Paul Eggert (1996-09-03):
+# The OED Supplement says that the English originally said ``Daylight Saving''
+# when they were debating the adoption of DST in 1908; but by 1916 this
+# term appears only in quotes taken from DST's opponents, whereas the
+# proponents (who eventually won the argument) are quoted as using ``Summer''.
+
+# From Arthur David Olson (1989-01-19):
+#
+# A source at the British Information Office in New York avers that it's
+# known as "British" Summer Time in all parts of the United Kingdom.
+
+# Date: 4 Jan 89 08:57:25 GMT (Wed)
+# From: Jonathan Leffler
+# [British Summer Time] is fixed annually by Act of Parliament.
+# If you can predict what Parliament will do, you should be in
+# politics making a fortune, not computing.
+
+# From Chris Carrier (1996-06-14):
+# I remember reading in various wartime issues of the London Times the
+# acronym BDST for British Double Summer Time.  Look for the published
+# time of sunrise and sunset in The Times, when BDST was in effect, and
+# if you find a zone reference it will say, "All times B.D.S.T."
+
+# From Joseph S. Myers (1999-09-02):
+# ... some military cables (WO 219/4100 - this is a copy from the
+# main SHAEF archives held in the US National Archives, SHAEF/5252/8/516)
+# agree that the usage is BDST (this appears in a message dated 17 Feb 1945).
+
+# From Joseph S. Myers (2000-10-03):
+# On 18th April 1941, Sir Stephen Tallents of the BBC wrote to Sir
+# Alexander Maxwell of the Home Office asking whether there was any
+# official designation; the reply of the 21st was that there wasn't
+# but he couldn't think of anything better than the "Double British
+# Summer Time" that the BBC had been using informally.
+# http://student.cusu.cam.ac.uk/~jsm28/british-time/bbc-19410418.png
+# http://student.cusu.cam.ac.uk/~jsm28/british-time/ho-19410421.png
+
+# From Sir Alexander Maxwell in the above-mentioned letter (1941-04-21):
+# [N]o official designation has as far as I know been adopted for the time
+# which is to be introduced in May....
+# I cannot think of anything better than "Double British Summer Time"
+# which could not be said to run counter to any official description.
+
+# From Paul Eggert (2000-10-02):
+# Howse writes (p 157) `DBST' too, but `BDST' seems to have been common
+# and follows the more usual convention of putting the location name first,
+# so we use `BDST'.
+
+# Peter Ilieve (1998-04-19) described at length
+# the history of summer time legislation in the United Kingdom.
+# Since 1998 Joseph S. Myers has been updating
+# and extending this list, which can be found in
+# <a href="http://student.cusu.cam.ac.uk/~jsm28/british-time/">
+# History of legal time in Britain
+# </a>
+
+# From Joseph S. Myers (1998-01-06):
+#
+# The legal time in the UK outside of summer time is definitely GMT, not UTC;
+# see Lord Tanlaw's speech
+# <a href="http://www.parliament.the-stationery-office.co.uk/pa/ld199697/ldhansrd/pdvn/lds97/text/70611-20.htm#70611-20_head0">
+# (Lords Hansard 11 June 1997 columns 964 to 976)
+# </a>.
+
+# From Paul Eggert (2006-03-22):
+#
+# For lack of other data, follow Shanks & Pottenger for Eire in 1940-1948.
+#
+# Given Ilieve and Myers's data, the following claims by Shanks & Pottenger
+# are incorrect:
+#     * Wales did not switch from GMT to daylight saving time until
+#	1921 Apr 3, when they began to conform with the rest of Great Britain.
+# Actually, Wales was identical after 1880.
+#     * Eire had two transitions on 1916 Oct 1.
+# It actually just had one transition.
+#     * Northern Ireland used single daylight saving time throughout WW II.
+# Actually, it conformed to Britain.
+#     * GB-Eire changed standard time to 1 hour ahead of GMT on 1968-02-18.
+# Actually, that date saw the usual switch to summer time.
+# Standard time was not changed until 1968-10-27 (the clocks didn't change).
+#
+# Here is another incorrect claim by Shanks & Pottenger:
+#     * Jersey, Guernsey, and the Isle of Man did not switch from GMT
+#	to daylight saving time until 1921 Apr 3, when they began to
+#	conform with Great Britain.
+# S.R.&O. 1916, No. 382 and HO 45/10811/312364 (quoted above) say otherwise.
+#
+# The following claim by Shanks & Pottenger is possible though doubtful;
+# we'll ignore it for now.
+#     * Dublin's 1971-10-31 switch was at 02:00, even though London's was 03:00.
+#
+#
+# Whitman says Dublin Mean Time was -0:25:21, which is more precise than
+# Shanks & Pottenger.
+# Perhaps this was Dunsink Observatory Time, as Dunsink Observatory
+# (8 km NW of Dublin's center) seemingly was to Dublin as Greenwich was
+# to London.  For example:
+#
+#   "Timeball on the ballast office is down.  Dunsink time."
+#   -- James Joyce, Ulysses
+
+# From Joseph S. Myers (2005-01-26):
+# Irish laws are available online at www.irishstatutebook.ie.  These include
+# various relating to legal time, for example:
+#
+# ZZA13Y1923.html ZZA12Y1924.html ZZA8Y1925.html ZZSIV20PG1267.html
+#
+# ZZSI71Y1947.html ZZSI128Y1948.html ZZSI23Y1949.html ZZSI41Y1950.html
+# ZZSI27Y1951.html ZZSI73Y1952.html
+#
+# ZZSI11Y1961.html ZZSI232Y1961.html ZZSI182Y1962.html
+# ZZSI167Y1963.html ZZSI257Y1964.html ZZSI198Y1967.html
+# ZZA23Y1968.html ZZA17Y1971.html
+#
+# ZZSI67Y1981.html ZZSI212Y1982.html ZZSI45Y1986.html
+# ZZSI264Y1988.html ZZSI52Y1990.html ZZSI371Y1992.html
+# ZZSI395Y1994.html ZZSI484Y1997.html ZZSI506Y2001.html
+#
+# [These are all relative to the root, e.g., the first is
+# <http://www.irishstatutebook.ie/ZZA13Y1923.html>.]
+#
+# (These are those I found, but there could be more.  In any case these
+# should allow various updates to the comments in the europe file to cover
+# the laws applicable in Ireland.)
+#
+# (Note that the time in the Republic of Ireland since 1968 has been defined
+# in terms of standard time being GMT+1 with a period of winter time when it
+# is GMT, rather than standard time being GMT with a period of summer time
+# being GMT+1.)
+
+# From Paul Eggert (1999-03-28):
+# Clive Feather (<news:859845706.26043.0@office.demon.net>, 1997-03-31)
+# reports that Folkestone (Cheriton) Shuttle Terminal uses Concession Time
+# (CT), equivalent to French civil time.
+# Julian Hill (<news:36118128.5A14@virgin.net>, 1998-09-30) reports that
+# trains between Dollands Moor (the freight facility next door)
+# and Frethun run in CT.
+# My admittedly uninformed guess is that the terminal has two authorities,
+# the French concession operators and the British civil authorities,
+# and that the time depends on who you're talking to.
+# If, say, the British police were called to the station for some reason,
+# I would expect the official police report to use GMT/BST and not CET/CEST.
+# This is a borderline case, but for now let's stick to GMT/BST.
+
+# From an anonymous contributor (1996-06-02):
+# The law governing time in Ireland is under Statutory Instrument SI 395/94,
+# which gives force to European Union 7th Council Directive # 94/21/EC.
+# Under this directive, the Minister for Justice in Ireland makes appropriate
+# regulations. I spoke this morning with the Secretary of the Department of
+# Justice (tel +353 1 678 9711) who confirmed to me that the correct name is
+# "Irish Summer Time", abbreviated to "IST".
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+# Summer Time Act, 1916
+Rule	GB-Eire	1916	only	-	May	21	2:00s	1:00	BST
+Rule	GB-Eire	1916	only	-	Oct	 1	2:00s	0	GMT
+# S.R.&O. 1917, No. 358
+Rule	GB-Eire	1917	only	-	Apr	 8	2:00s	1:00	BST
+Rule	GB-Eire	1917	only	-	Sep	17	2:00s	0	GMT
+# S.R.&O. 1918, No. 274
+Rule	GB-Eire	1918	only	-	Mar	24	2:00s	1:00	BST
+Rule	GB-Eire	1918	only	-	Sep	30	2:00s	0	GMT
+# S.R.&O. 1919, No. 297
+Rule	GB-Eire	1919	only	-	Mar	30	2:00s	1:00	BST
+Rule	GB-Eire	1919	only	-	Sep	29	2:00s	0	GMT
+# S.R.&O. 1920, No. 458
+Rule	GB-Eire	1920	only	-	Mar	28	2:00s	1:00	BST
+# S.R.&O. 1920, No. 1844
+Rule	GB-Eire	1920	only	-	Oct	25	2:00s	0	GMT
+# S.R.&O. 1921, No. 363
+Rule	GB-Eire	1921	only	-	Apr	 3	2:00s	1:00	BST
+Rule	GB-Eire	1921	only	-	Oct	 3	2:00s	0	GMT
+# S.R.&O. 1922, No. 264
+Rule	GB-Eire	1922	only	-	Mar	26	2:00s	1:00	BST
+Rule	GB-Eire	1922	only	-	Oct	 8	2:00s	0	GMT
+# The Summer Time Act, 1922
+Rule	GB-Eire	1923	only	-	Apr	Sun>=16	2:00s	1:00	BST
+Rule	GB-Eire	1923	1924	-	Sep	Sun>=16	2:00s	0	GMT
+Rule	GB-Eire	1924	only	-	Apr	Sun>=9	2:00s	1:00	BST
+Rule	GB-Eire	1925	1926	-	Apr	Sun>=16	2:00s	1:00	BST
+# The Summer Time Act, 1925
+Rule	GB-Eire	1925	1938	-	Oct	Sun>=2	2:00s	0	GMT
+Rule	GB-Eire	1927	only	-	Apr	Sun>=9	2:00s	1:00	BST
+Rule	GB-Eire	1928	1929	-	Apr	Sun>=16	2:00s	1:00	BST
+Rule	GB-Eire	1930	only	-	Apr	Sun>=9	2:00s	1:00	BST
+Rule	GB-Eire	1931	1932	-	Apr	Sun>=16	2:00s	1:00	BST
+Rule	GB-Eire	1933	only	-	Apr	Sun>=9	2:00s	1:00	BST
+Rule	GB-Eire	1934	only	-	Apr	Sun>=16	2:00s	1:00	BST
+Rule	GB-Eire	1935	only	-	Apr	Sun>=9	2:00s	1:00	BST
+Rule	GB-Eire	1936	1937	-	Apr	Sun>=16	2:00s	1:00	BST
+Rule	GB-Eire	1938	only	-	Apr	Sun>=9	2:00s	1:00	BST
+Rule	GB-Eire	1939	only	-	Apr	Sun>=16	2:00s	1:00	BST
+# S.R.&O. 1939, No. 1379
+Rule	GB-Eire	1939	only	-	Nov	Sun>=16	2:00s	0	GMT
+# S.R.&O. 1940, No. 172 and No. 1883
+Rule	GB-Eire	1940	only	-	Feb	Sun>=23	2:00s	1:00	BST
+# S.R.&O. 1941, No. 476
+Rule	GB-Eire	1941	only	-	May	Sun>=2	1:00s	2:00	BDST
+Rule	GB-Eire	1941	1943	-	Aug	Sun>=9	1:00s	1:00	BST
+# S.R.&O. 1942, No. 506
+Rule	GB-Eire	1942	1944	-	Apr	Sun>=2	1:00s	2:00	BDST
+# S.R.&O. 1944, No. 932
+Rule	GB-Eire	1944	only	-	Sep	Sun>=16	1:00s	1:00	BST
+# S.R.&O. 1945, No. 312
+Rule	GB-Eire	1945	only	-	Apr	Mon>=2	1:00s	2:00	BDST
+Rule	GB-Eire	1945	only	-	Jul	Sun>=9	1:00s	1:00	BST
+# S.R.&O. 1945, No. 1208
+Rule	GB-Eire	1945	1946	-	Oct	Sun>=2	2:00s	0	GMT
+Rule	GB-Eire	1946	only	-	Apr	Sun>=9	2:00s	1:00	BST
+# The Summer Time Act, 1947
+Rule	GB-Eire	1947	only	-	Mar	16	2:00s	1:00	BST
+Rule	GB-Eire	1947	only	-	Apr	13	1:00s	2:00	BDST
+Rule	GB-Eire	1947	only	-	Aug	10	1:00s	1:00	BST
+Rule	GB-Eire	1947	only	-	Nov	 2	2:00s	0	GMT
+# Summer Time Order, 1948 (S.I. 1948/495)
+Rule	GB-Eire	1948	only	-	Mar	14	2:00s	1:00	BST
+Rule	GB-Eire	1948	only	-	Oct	31	2:00s	0	GMT
+# Summer Time Order, 1949 (S.I. 1949/373)
+Rule	GB-Eire	1949	only	-	Apr	 3	2:00s	1:00	BST
+Rule	GB-Eire	1949	only	-	Oct	30	2:00s	0	GMT
+# Summer Time Order, 1950 (S.I. 1950/518)
+# Summer Time Order, 1951 (S.I. 1951/430)
+# Summer Time Order, 1952 (S.I. 1952/451)
+Rule	GB-Eire	1950	1952	-	Apr	Sun>=14	2:00s	1:00	BST
+Rule	GB-Eire	1950	1952	-	Oct	Sun>=21	2:00s	0	GMT
+# revert to the rules of the Summer Time Act, 1925
+Rule	GB-Eire	1953	only	-	Apr	Sun>=16	2:00s	1:00	BST
+Rule	GB-Eire	1953	1960	-	Oct	Sun>=2	2:00s	0	GMT
+Rule	GB-Eire	1954	only	-	Apr	Sun>=9	2:00s	1:00	BST
+Rule	GB-Eire	1955	1956	-	Apr	Sun>=16	2:00s	1:00	BST
+Rule	GB-Eire	1957	only	-	Apr	Sun>=9	2:00s	1:00	BST
+Rule	GB-Eire	1958	1959	-	Apr	Sun>=16	2:00s	1:00	BST
+Rule	GB-Eire	1960	only	-	Apr	Sun>=9	2:00s	1:00	BST
+# Summer Time Order, 1961 (S.I. 1961/71)
+# Summer Time (1962) Order, 1961 (S.I. 1961/2465)
+# Summer Time Order, 1963 (S.I. 1963/81)
+Rule	GB-Eire	1961	1963	-	Mar	lastSun	2:00s	1:00	BST
+Rule	GB-Eire	1961	1968	-	Oct	Sun>=23	2:00s	0	GMT
+# Summer Time (1964) Order, 1963 (S.I. 1963/2101)
+# Summer Time Order, 1964 (S.I. 1964/1201)
+# Summer Time Order, 1967 (S.I. 1967/1148)
+Rule	GB-Eire	1964	1967	-	Mar	Sun>=19	2:00s	1:00	BST
+# Summer Time Order, 1968 (S.I. 1968/117)
+Rule	GB-Eire	1968	only	-	Feb	18	2:00s	1:00	BST
+# The British Standard Time Act, 1968
+#	(no summer time)
+# The Summer Time Act, 1972
+Rule	GB-Eire	1972	1980	-	Mar	Sun>=16	2:00s	1:00	BST
+Rule	GB-Eire	1972	1980	-	Oct	Sun>=23	2:00s	0	GMT
+# Summer Time Order, 1980 (S.I. 1980/1089)
+# Summer Time Order, 1982 (S.I. 1982/1673)
+# Summer Time Order, 1986 (S.I. 1986/223)
+# Summer Time Order, 1988 (S.I. 1988/931)
+Rule	GB-Eire	1981	1995	-	Mar	lastSun	1:00u	1:00	BST
+Rule	GB-Eire 1981	1989	-	Oct	Sun>=23	1:00u	0	GMT
+# Summer Time Order, 1989 (S.I. 1989/985)
+# Summer Time Order, 1992 (S.I. 1992/1729)
+# Summer Time Order 1994 (S.I. 1994/2798)
+Rule	GB-Eire 1990	1995	-	Oct	Sun>=22	1:00u	0	GMT
+# Summer Time Order 1997 (S.I. 1997/2982)
+# See EU for rules starting in 1996.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/London	-0:01:15 -	LMT	1847 Dec  1 0:00s
+			 0:00	GB-Eire	%s	1968 Oct 27
+			 1:00	-	BST	1971 Oct 31 2:00u
+			 0:00	GB-Eire	%s	1996
+			 0:00	EU	GMT/BST
+Link	Europe/London	Europe/Jersey
+Link	Europe/London	Europe/Guernsey
+Link	Europe/London	Europe/Isle_of_Man
+Zone	Europe/Dublin	-0:25:00 -	LMT	1880 Aug  2
+			-0:25:21 -	DMT	1916 May 21 2:00
+			-0:25:21 1:00	IST	1916 Oct  1 2:00s
+			 0:00	GB-Eire	%s	1921 Dec  6 # independence
+			 0:00	GB-Eire	GMT/IST	1940 Feb 25 2:00
+			 0:00	1:00	IST	1946 Oct  6 2:00
+			 0:00	-	GMT	1947 Mar 16 2:00
+			 0:00	1:00	IST	1947 Nov  2 2:00
+			 0:00	-	GMT	1948 Apr 18 2:00
+			 0:00	GB-Eire	GMT/IST	1968 Oct 27
+			 1:00	-	IST	1971 Oct 31 2:00u
+			 0:00	GB-Eire	GMT/IST	1996
+			 0:00	EU	GMT/IST
+
+###############################################################################
+
+# Europe
+
+# EU rules are for the European Union, previously known as the EC, EEC,
+# Common Market, etc.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	EU	1977	1980	-	Apr	Sun>=1	 1:00u	1:00	S
+Rule	EU	1977	only	-	Sep	lastSun	 1:00u	0	-
+Rule	EU	1978	only	-	Oct	 1	 1:00u	0	-
+Rule	EU	1979	1995	-	Sep	lastSun	 1:00u	0	-
+Rule	EU	1981	max	-	Mar	lastSun	 1:00u	1:00	S
+Rule	EU	1996	max	-	Oct	lastSun	 1:00u	0	-
+# The most recent directive covers the years starting in 2002.  See:
+# <a="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=CELEX:32000L0084:EN:NOT">
+# Directive 2000/84/EC of the European Parliament and of the Council
+# of 19 January 2001 on summer-time arrangements.
+# </a>
+
+# W-Eur differs from EU only in that W-Eur uses standard time.
+Rule	W-Eur	1977	1980	-	Apr	Sun>=1	 1:00s	1:00	S
+Rule	W-Eur	1977	only	-	Sep	lastSun	 1:00s	0	-
+Rule	W-Eur	1978	only	-	Oct	 1	 1:00s	0	-
+Rule	W-Eur	1979	1995	-	Sep	lastSun	 1:00s	0	-
+Rule	W-Eur	1981	max	-	Mar	lastSun	 1:00s	1:00	S
+Rule	W-Eur	1996	max	-	Oct	lastSun	 1:00s	0	-
+
+# Older C-Eur rules are for convenience in the tables.
+# From 1977 on, C-Eur differs from EU only in that C-Eur uses standard time.
+Rule	C-Eur	1916	only	-	Apr	30	23:00	1:00	S
+Rule	C-Eur	1916	only	-	Oct	 1	 1:00	0	-
+Rule	C-Eur	1917	1918	-	Apr	Mon>=15	 2:00s	1:00	S
+Rule	C-Eur	1917	1918	-	Sep	Mon>=15	 2:00s	0	-
+Rule	C-Eur	1940	only	-	Apr	 1	 2:00s	1:00	S
+Rule	C-Eur	1942	only	-	Nov	 2	 2:00s	0	-
+Rule	C-Eur	1943	only	-	Mar	29	 2:00s	1:00	S
+Rule	C-Eur	1943	only	-	Oct	 4	 2:00s	0	-
+Rule	C-Eur	1944	1945	-	Apr	Mon>=1	 2:00s	1:00	S
+# Whitman gives 1944 Oct 7; go with Shanks & Pottenger.
+Rule	C-Eur	1944	only	-	Oct	 2	 2:00s	0	-
+# From Jesper Norgaard Welen (2008-07-13):
+#
+# I found what is probably a typo of 2:00 which should perhaps be 2:00s
+# in the C-Eur rule from tz database version 2008d (this part was
+# corrected in version 2008d). The circumstancial evidence is simply the
+# tz database itself, as seen below:
+#
+# Zone Europe/Paris 0:09:21 - LMT 1891 Mar 15  0:01
+#    0:00 France WE%sT 1945 Sep 16  3:00
+#
+# Zone Europe/Monaco 0:29:32 - LMT 1891 Mar 15
+#    0:00 France WE%sT 1945 Sep 16 3:00
+#
+# Zone Europe/Belgrade 1:22:00 - LMT 1884
+#    1:00 1:00 CEST 1945 Sep 16  2:00s
+#
+# Rule France 1945 only - Sep 16  3:00 0 -
+# Rule Belgium 1945 only - Sep 16  2:00s 0 -
+# Rule Neth 1945 only - Sep 16 2:00s 0 -
+#
+# The rule line to be changed is:
+#
+# Rule C-Eur 1945 only - Sep 16  2:00 0 -
+#
+# It seems that Paris, Monaco, Rule France, Rule Belgium all agree on
+# 2:00 standard time, e.g. 3:00 local time.  However there are no
+# countries that use C-Eur rules in September 1945, so the only items
+# affected are apparently these ficticious zones that translates acronyms
+# CET and MET:
+#
+# Zone CET  1:00 C-Eur CE%sT
+# Zone MET  1:00 C-Eur ME%sT
+#
+# It this is right then the corrected version would look like:
+#
+# Rule C-Eur 1945 only - Sep 16  2:00s 0 -
+#
+# A small step for mankind though 8-)
+Rule	C-Eur	1945	only	-	Sep	16	 2:00s	0	-
+Rule	C-Eur	1977	1980	-	Apr	Sun>=1	 2:00s	1:00	S
+Rule	C-Eur	1977	only	-	Sep	lastSun	 2:00s	0	-
+Rule	C-Eur	1978	only	-	Oct	 1	 2:00s	0	-
+Rule	C-Eur	1979	1995	-	Sep	lastSun	 2:00s	0	-
+Rule	C-Eur	1981	max	-	Mar	lastSun	 2:00s	1:00	S
+Rule	C-Eur	1996	max	-	Oct	lastSun	 2:00s	0	-
+
+# E-Eur differs from EU only in that E-Eur switches at midnight local time.
+Rule	E-Eur	1977	1980	-	Apr	Sun>=1	 0:00	1:00	S
+Rule	E-Eur	1977	only	-	Sep	lastSun	 0:00	0	-
+Rule	E-Eur	1978	only	-	Oct	 1	 0:00	0	-
+Rule	E-Eur	1979	1995	-	Sep	lastSun	 0:00	0	-
+Rule	E-Eur	1981	max	-	Mar	lastSun	 0:00	1:00	S
+Rule	E-Eur	1996	max	-	Oct	lastSun	 0:00	0	-
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Russia	1917	only	-	Jul	 1	23:00	1:00	MST	# Moscow Summer Time
+Rule	Russia	1917	only	-	Dec	28	 0:00	0	MMT	# Moscow Mean Time
+Rule	Russia	1918	only	-	May	31	22:00	2:00	MDST	# Moscow Double Summer Time
+Rule	Russia	1918	only	-	Sep	16	 1:00	1:00	MST
+Rule	Russia	1919	only	-	May	31	23:00	2:00	MDST
+Rule	Russia	1919	only	-	Jul	 1	 2:00	1:00	S
+Rule	Russia	1919	only	-	Aug	16	 0:00	0	-
+Rule	Russia	1921	only	-	Feb	14	23:00	1:00	S
+Rule	Russia	1921	only	-	Mar	20	23:00	2:00	M # Midsummer
+Rule	Russia	1921	only	-	Sep	 1	 0:00	1:00	S
+Rule	Russia	1921	only	-	Oct	 1	 0:00	0	-
+# Act No.925 of the Council of Ministers of the USSR (1980-10-24):
+Rule	Russia	1981	1984	-	Apr	 1	 0:00	1:00	S
+Rule	Russia	1981	1983	-	Oct	 1	 0:00	0	-
+# Act No.967 of the Council of Ministers of the USSR (1984-09-13), repeated in
+# Act No.227 of the Council of Ministers of the USSR (1989-03-14):
+Rule	Russia	1984	1991	-	Sep	lastSun	 2:00s	0	-
+Rule	Russia	1985	1991	-	Mar	lastSun	 2:00s	1:00	S
+#
+Rule	Russia	1992	only	-	Mar	lastSat	 23:00	1:00	S
+Rule	Russia	1992	only	-	Sep	lastSat	 23:00	0	-
+Rule	Russia	1993	max	-	Mar	lastSun	 2:00s	1:00	S
+Rule	Russia	1993	1995	-	Sep	lastSun	 2:00s	0	-
+Rule	Russia	1996	max	-	Oct	lastSun	 2:00s	0	-
+
+# These are for backward compatibility with older versions.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	WET		0:00	EU	WE%sT
+Zone	CET		1:00	C-Eur	CE%sT
+Zone	MET		1:00	C-Eur	ME%sT
+Zone	EET		2:00	EU	EE%sT
+
+# Previous editions of this database used abbreviations like MET DST
+# for Central European Summer Time, but this didn't agree with common usage.
+
+# From Markus Kuhn (1996-07-12):
+# The official German names ... are
+#
+#	Mitteleuropaeische Zeit (MEZ)         = UTC+01:00
+#	Mitteleuropaeische Sommerzeit (MESZ)  = UTC+02:00
+#
+# as defined in the German Time Act (Gesetz ueber die Zeitbestimmung (ZeitG),
+# 1978-07-25, Bundesgesetzblatt, Jahrgang 1978, Teil I, S. 1110-1111)....
+# I wrote ... to the German Federal Physical-Technical Institution
+#
+#	Physikalisch-Technische Bundesanstalt (PTB)
+#	Laboratorium 4.41 "Zeiteinheit"
+#	Postfach 3345
+#	D-38023 Braunschweig
+#	phone: +49 531 592-0
+#
+# ... I received today an answer letter from Dr. Peter Hetzel, head of the PTB
+# department for time and frequency transmission.  He explained that the
+# PTB translates MEZ and MESZ into English as
+#
+#	Central European Time (CET)         = UTC+01:00
+#	Central European Summer Time (CEST) = UTC+02:00
+
+
+# Albania
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Albania	1940	only	-	Jun	16	0:00	1:00	S
+Rule	Albania	1942	only	-	Nov	 2	3:00	0	-
+Rule	Albania	1943	only	-	Mar	29	2:00	1:00	S
+Rule	Albania	1943	only	-	Apr	10	3:00	0	-
+Rule	Albania	1974	only	-	May	 4	0:00	1:00	S
+Rule	Albania	1974	only	-	Oct	 2	0:00	0	-
+Rule	Albania	1975	only	-	May	 1	0:00	1:00	S
+Rule	Albania	1975	only	-	Oct	 2	0:00	0	-
+Rule	Albania	1976	only	-	May	 2	0:00	1:00	S
+Rule	Albania	1976	only	-	Oct	 3	0:00	0	-
+Rule	Albania	1977	only	-	May	 8	0:00	1:00	S
+Rule	Albania	1977	only	-	Oct	 2	0:00	0	-
+Rule	Albania	1978	only	-	May	 6	0:00	1:00	S
+Rule	Albania	1978	only	-	Oct	 1	0:00	0	-
+Rule	Albania	1979	only	-	May	 5	0:00	1:00	S
+Rule	Albania	1979	only	-	Sep	30	0:00	0	-
+Rule	Albania	1980	only	-	May	 3	0:00	1:00	S
+Rule	Albania	1980	only	-	Oct	 4	0:00	0	-
+Rule	Albania	1981	only	-	Apr	26	0:00	1:00	S
+Rule	Albania	1981	only	-	Sep	27	0:00	0	-
+Rule	Albania	1982	only	-	May	 2	0:00	1:00	S
+Rule	Albania	1982	only	-	Oct	 3	0:00	0	-
+Rule	Albania	1983	only	-	Apr	18	0:00	1:00	S
+Rule	Albania	1983	only	-	Oct	 1	0:00	0	-
+Rule	Albania	1984	only	-	Apr	 1	0:00	1:00	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Tirane	1:19:20 -	LMT	1914
+			1:00	-	CET	1940 Jun 16
+			1:00	Albania	CE%sT	1984 Jul
+			1:00	EU	CE%sT
+
+# Andorra
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Andorra	0:06:04 -	LMT	1901
+			0:00	-	WET	1946 Sep 30
+			1:00	-	CET	1985 Mar 31 2:00
+			1:00	EU	CE%sT
+
+# Austria
+
+# From Paul Eggert (2006-03-22): Shanks & Pottenger give 1918-06-16 and
+# 1945-11-18, but the Austrian Federal Office of Metrology and
+# Surveying (BEV) gives 1918-09-16 and for Vienna gives the "alleged"
+# date of 1945-04-12 with no time.  For the 1980-04-06 transition
+# Shanks & Pottenger give 02:00, the BEV 00:00.  Go with the BEV,
+# and guess 02:00 for 1945-04-12.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Austria	1920	only	-	Apr	 5	2:00s	1:00	S
+Rule	Austria	1920	only	-	Sep	13	2:00s	0	-
+Rule	Austria	1946	only	-	Apr	14	2:00s	1:00	S
+Rule	Austria	1946	1948	-	Oct	Sun>=1	2:00s	0	-
+Rule	Austria	1947	only	-	Apr	 6	2:00s	1:00	S
+Rule	Austria	1948	only	-	Apr	18	2:00s	1:00	S
+Rule	Austria	1980	only	-	Apr	 6	0:00	1:00	S
+Rule	Austria	1980	only	-	Sep	28	0:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Vienna	1:05:20 -	LMT	1893 Apr
+			1:00	C-Eur	CE%sT	1920
+			1:00	Austria	CE%sT	1940 Apr  1 2:00s
+			1:00	C-Eur	CE%sT	1945 Apr  2 2:00s
+			1:00	1:00	CEST	1945 Apr 12 2:00s
+			1:00	-	CET	1946
+			1:00	Austria	CE%sT	1981
+			1:00	EU	CE%sT
+
+# Belarus
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Minsk	1:50:16 -	LMT	1880
+			1:50	-	MMT	1924 May 2 # Minsk Mean Time
+			2:00	-	EET	1930 Jun 21
+			3:00	-	MSK	1941 Jun 28
+			1:00	C-Eur	CE%sT	1944 Jul  3
+			3:00	Russia	MSK/MSD	1990
+			3:00	-	MSK	1991 Mar 31 2:00s
+			2:00	1:00	EEST	1991 Sep 29 2:00s
+			2:00	-	EET	1992 Mar 29 0:00s
+			2:00	1:00	EEST	1992 Sep 27 0:00s
+			2:00	Russia	EE%sT
+
+# Belgium
+#
+# From Paul Eggert (1997-07-02):
+# Entries from 1918 through 1991 are taken from:
+#	Annuaire de L'Observatoire Royal de Belgique,
+#	Avenue Circulaire, 3, B-1180 BRUXELLES, CLVIIe annee, 1991
+#	(Imprimerie HAYEZ, s.p.r.l., Rue Fin, 4, 1080 BRUXELLES, MCMXC),
+#	pp 8-9.
+# LMT before 1892 was 0:17:30, according to the official journal of Belgium:
+#	Moniteur Belge, Samedi 30 Avril 1892, N.121.
+# Thanks to Pascal Delmoitie for these references.
+# The 1918 rules are listed for completeness; they apply to unoccupied Belgium.
+# Assume Brussels switched to WET in 1918 when the armistice took effect.
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Belgium	1918	only	-	Mar	 9	 0:00s	1:00	S
+Rule	Belgium	1918	1919	-	Oct	Sat>=1	23:00s	0	-
+Rule	Belgium	1919	only	-	Mar	 1	23:00s	1:00	S
+Rule	Belgium	1920	only	-	Feb	14	23:00s	1:00	S
+Rule	Belgium	1920	only	-	Oct	23	23:00s	0	-
+Rule	Belgium	1921	only	-	Mar	14	23:00s	1:00	S
+Rule	Belgium	1921	only	-	Oct	25	23:00s	0	-
+Rule	Belgium	1922	only	-	Mar	25	23:00s	1:00	S
+Rule	Belgium	1922	1927	-	Oct	Sat>=1	23:00s	0	-
+Rule	Belgium	1923	only	-	Apr	21	23:00s	1:00	S
+Rule	Belgium	1924	only	-	Mar	29	23:00s	1:00	S
+Rule	Belgium	1925	only	-	Apr	 4	23:00s	1:00	S
+# DSH writes that a royal decree of 1926-02-22 specified the Sun following 3rd
+# Sat in Apr (except if it's Easter, in which case it's one Sunday earlier),
+# to Sun following 1st Sat in Oct, and that a royal decree of 1928-09-15
+# changed the transition times to 02:00 GMT.
+Rule	Belgium	1926	only	-	Apr	17	23:00s	1:00	S
+Rule	Belgium	1927	only	-	Apr	 9	23:00s	1:00	S
+Rule	Belgium	1928	only	-	Apr	14	23:00s	1:00	S
+Rule	Belgium	1928	1938	-	Oct	Sun>=2	 2:00s	0	-
+Rule	Belgium	1929	only	-	Apr	21	 2:00s	1:00	S
+Rule	Belgium	1930	only	-	Apr	13	 2:00s	1:00	S
+Rule	Belgium	1931	only	-	Apr	19	 2:00s	1:00	S
+Rule	Belgium	1932	only	-	Apr	 3	 2:00s	1:00	S
+Rule	Belgium	1933	only	-	Mar	26	 2:00s	1:00	S
+Rule	Belgium	1934	only	-	Apr	 8	 2:00s	1:00	S
+Rule	Belgium	1935	only	-	Mar	31	 2:00s	1:00	S
+Rule	Belgium	1936	only	-	Apr	19	 2:00s	1:00	S
+Rule	Belgium	1937	only	-	Apr	 4	 2:00s	1:00	S
+Rule	Belgium	1938	only	-	Mar	27	 2:00s	1:00	S
+Rule	Belgium	1939	only	-	Apr	16	 2:00s	1:00	S
+Rule	Belgium	1939	only	-	Nov	19	 2:00s	0	-
+Rule	Belgium	1940	only	-	Feb	25	 2:00s	1:00	S
+Rule	Belgium	1944	only	-	Sep	17	 2:00s	0	-
+Rule	Belgium	1945	only	-	Apr	 2	 2:00s	1:00	S
+Rule	Belgium	1945	only	-	Sep	16	 2:00s	0	-
+Rule	Belgium	1946	only	-	May	19	 2:00s	1:00	S
+Rule	Belgium	1946	only	-	Oct	 7	 2:00s	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Brussels	0:17:30 -	LMT	1880
+			0:17:30	-	BMT	1892 May  1 12:00 # Brussels MT
+			0:00	-	WET	1914 Nov  8
+			1:00	-	CET	1916 May  1  0:00
+			1:00	C-Eur	CE%sT	1918 Nov 11 11:00u
+			0:00	Belgium	WE%sT	1940 May 20  2:00s
+			1:00	C-Eur	CE%sT	1944 Sep  3
+			1:00	Belgium	CE%sT	1977
+			1:00	EU	CE%sT
+
+# Bosnia and Herzegovina
+# see Serbia
+
+# Bulgaria
+#
+# From Plamen Simenov via Steffen Thorsen (1999-09-09):
+# A document of Government of Bulgaria (No.94/1997) says:
+# EET --> EETDST is in 03:00 Local time in last Sunday of March ...
+# EETDST --> EET is in 04:00 Local time in last Sunday of October
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Bulg	1979	only	-	Mar	31	23:00	1:00	S
+Rule	Bulg	1979	only	-	Oct	 1	 1:00	0	-
+Rule	Bulg	1980	1982	-	Apr	Sat>=1	23:00	1:00	S
+Rule	Bulg	1980	only	-	Sep	29	 1:00	0	-
+Rule	Bulg	1981	only	-	Sep	27	 2:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Sofia	1:33:16 -	LMT	1880
+			1:56:56	-	IMT	1894 Nov 30 # Istanbul MT?
+			2:00	-	EET	1942 Nov  2  3:00
+			1:00	C-Eur	CE%sT	1945
+			1:00	-	CET	1945 Apr 2 3:00
+			2:00	-	EET	1979 Mar 31 23:00
+			2:00	Bulg	EE%sT	1982 Sep 26  2:00
+			2:00	C-Eur	EE%sT	1991
+			2:00	E-Eur	EE%sT	1997
+			2:00	EU	EE%sT
+
+# Croatia
+# see Serbia
+
+# Cyprus
+# Please see the `asia' file for Asia/Nicosia.
+
+# Czech Republic
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Czech	1945	only	-	Apr	 8	2:00s	1:00	S
+Rule	Czech	1945	only	-	Nov	18	2:00s	0	-
+Rule	Czech	1946	only	-	May	 6	2:00s	1:00	S
+Rule	Czech	1946	1949	-	Oct	Sun>=1	2:00s	0	-
+Rule	Czech	1947	only	-	Apr	20	2:00s	1:00	S
+Rule	Czech	1948	only	-	Apr	18	2:00s	1:00	S
+Rule	Czech	1949	only	-	Apr	 9	2:00s	1:00	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Prague	0:57:44 -	LMT	1850
+			0:57:44	-	PMT	1891 Oct     # Prague Mean Time
+			1:00	C-Eur	CE%sT	1944 Sep 17 2:00s
+			1:00	Czech	CE%sT	1979
+			1:00	EU	CE%sT
+
+# Denmark, Faroe Islands, and Greenland
+
+# From Jesper Norgaard Welen (2005-04-26):
+# http://www.hum.aau.dk/~poe/tid/tine/DanskTid.htm says that the law
+# [introducing standard time] was in effect from 1894-01-01....
+# The page http://www.retsinfo.dk/_GETDOCI_/ACCN/A18930008330-REGL
+# confirms this, and states that the law was put forth 1893-03-29.
+#
+# The EU treaty with effect from 1973:
+# http://www.retsinfo.dk/_GETDOCI_/ACCN/A19722110030-REGL
+#
+# This provoked a new law from 1974 to make possible summer time changes
+# in subsequenet decrees with the law
+# http://www.retsinfo.dk/_GETDOCI_/ACCN/A19740022330-REGL
+#
+# It seems however that no decree was set forward until 1980.  I have
+# not found any decree, but in another related law, the effecting DST
+# changes are stated explicitly to be from 1980-04-06 at 02:00 to
+# 1980-09-28 at 02:00.  If this is true, this differs slightly from
+# the EU rule in that DST runs to 02:00, not 03:00.  We don't know
+# when Denmark began using the EU rule correctly, but we have only
+# confirmation of the 1980-time, so I presume it was correct in 1981:
+# The law is about the management of the extra hour, concerning
+# working hours reported and effect on obligatory-rest rules (which
+# was suspended on that night):
+# http://www.retsinfo.dk/_GETDOCI_/ACCN/C19801120554-REGL
+
+# From Jesper Norgaard Welen (2005-06-11):
+# The Herning Folkeblad (1980-09-26) reported that the night between
+# Saturday and Sunday the clock is set back from three to two.
+
+# From Paul Eggert (2005-06-11):
+# Hence the "02:00" of the 1980 law refers to standard time, not
+# wall-clock time, and so the EU rules were in effect in 1980.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Denmark	1916	only	-	May	14	23:00	1:00	S
+Rule	Denmark	1916	only	-	Sep	30	23:00	0	-
+Rule	Denmark	1940	only	-	May	15	 0:00	1:00	S
+Rule	Denmark	1945	only	-	Apr	 2	 2:00s	1:00	S
+Rule	Denmark	1945	only	-	Aug	15	 2:00s	0	-
+Rule	Denmark	1946	only	-	May	 1	 2:00s	1:00	S
+Rule	Denmark	1946	only	-	Sep	 1	 2:00s	0	-
+Rule	Denmark	1947	only	-	May	 4	 2:00s	1:00	S
+Rule	Denmark	1947	only	-	Aug	10	 2:00s	0	-
+Rule	Denmark	1948	only	-	May	 9	 2:00s	1:00	S
+Rule	Denmark	1948	only	-	Aug	 8	 2:00s	0	-
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Europe/Copenhagen	 0:50:20 -	LMT	1890
+			 0:50:20 -	CMT	1894 Jan  1 # Copenhagen MT
+			 1:00	Denmark	CE%sT	1942 Nov  2 2:00s
+			 1:00	C-Eur	CE%sT	1945 Apr  2 2:00
+			 1:00	Denmark	CE%sT	1980
+			 1:00	EU	CE%sT
+Zone Atlantic/Faroe	-0:27:04 -	LMT	1908 Jan 11	# Torshavn
+			 0:00	-	WET	1981
+			 0:00	EU	WE%sT
+#
+# From Paul Eggert (2004-10-31):
+# During World War II, Germany maintained secret manned weather stations in
+# East Greenland and Franz Josef Land, but we don't know their time zones.
+# My source for this is Wilhelm Dege's book mentioned under Svalbard.
+#
+# From Paul Eggert (2006-03-22):
+# Greenland joined the EU as part of Denmark, obtained home rule on 1979-05-01,
+# and left the EU on 1985-02-01.  It therefore should have been using EU
+# rules at least through 1984.  Shanks & Pottenger say Scoresbysund and Godthab
+# used C-Eur rules after 1980, but IATA SSIM (1991/1996) says they use EU
+# rules since at least 1991.  Assume EU rules since 1980.
+
+# From Gwillin Law (2001-06-06), citing
+# <http://www.statkart.no/efs/efshefter/2001/efs5-2001.pdf> (2001-03-15),
+# and with translations corrected by Steffen Thorsen:
+#
+# Greenland has four local times, and the relation to UTC
+# is according to the following time line:
+#
+# The military zone near Thule	UTC-4
+# Standard Greenland time	UTC-3
+# Scoresbysund			UTC-1
+# Danmarkshavn			UTC
+#
+# In the military area near Thule and in Danmarkshavn DST will not be
+# introduced.
+
+# From Rives McDow (2001-11-01):
+#
+# I correspond regularly with the Dansk Polarcenter, and wrote them at
+# the time to clarify the situation in Thule.  Unfortunately, I have
+# not heard back from them regarding my recent letter.  [But I have
+# info from earlier correspondence.]
+#
+# According to the center, a very small local time zone around Thule
+# Air Base keeps the time according to UTC-4, implementing daylight
+# savings using North America rules, changing the time at 02:00 local time....
+#
+# The east coast of Greenland north of the community of Scoresbysund
+# uses UTC in the same way as in Iceland, year round, with no dst.
+# There are just a few stations on this coast, including the
+# Danmarkshavn ICAO weather station mentioned in your September 29th
+# email.  The other stations are two sledge patrol stations in
+# Mestersvig and Daneborg, the air force base at Station Nord, and the
+# DPC research station at Zackenberg.
+#
+# Scoresbysund and two small villages nearby keep time UTC-1 and use
+# the same daylight savings time period as in West Greenland (Godthab).
+#
+# The rest of Greenland, including Godthab (this area, although it
+# includes central Greenland, is known as west Greenland), keeps time
+# UTC-3, with daylight savings methods according to European rules.
+#
+# It is common procedure to use UTC 0 in the wilderness of East and
+# North Greenland, because it is mainly Icelandic aircraft operators
+# maintaining traffic in these areas.  However, the official status of
+# this area is that it sticks with Godthab time.  This area might be
+# considered a dual time zone in some respects because of this.
+
+# From Rives McDow (2001-11-19):
+# I heard back from someone stationed at Thule; the time change took place
+# there at 2:00 AM.
+
+# From Paul Eggert (2006-03-22):
+# From 1997 on the CIA map shows Danmarkshavn on GMT;
+# the 1995 map as like Godthab.
+# For lack of better info, assume they were like Godthab before 1996.
+# startkart.no says Thule does not observe DST, but this is clearly an error,
+# so go with Shanks & Pottenger for Thule transitions until this year.
+# For 2007 on assume Thule will stay in sync with US DST rules.
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Thule	1991	1992	-	Mar	lastSun	2:00	1:00	D
+Rule	Thule	1991	1992	-	Sep	lastSun	2:00	0	S
+Rule	Thule	1993	2006	-	Apr	Sun>=1	2:00	1:00	D
+Rule	Thule	1993	2006	-	Oct	lastSun	2:00	0	S
+Rule	Thule	2007	max	-	Mar	Sun>=8	2:00	1:00	D
+Rule	Thule	2007	max	-	Nov	Sun>=1	2:00	0	S
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Danmarkshavn -1:14:40 -	LMT	1916 Jul 28
+			-3:00	-	WGT	1980 Apr  6 2:00
+			-3:00	EU	WG%sT	1996
+			0:00	-	GMT
+Zone America/Scoresbysund -1:27:52 -	LMT	1916 Jul 28 # Ittoqqortoormiit
+			-2:00	-	CGT	1980 Apr  6 2:00
+			-2:00	C-Eur	CG%sT	1981 Mar 29
+			-1:00	EU	EG%sT
+Zone America/Godthab	-3:26:56 -	LMT	1916 Jul 28 # Nuuk
+			-3:00	-	WGT	1980 Apr  6 2:00
+			-3:00	EU	WG%sT
+Zone America/Thule	-4:35:08 -	LMT	1916 Jul 28 # Pituffik air base
+			-4:00	Thule	A%sT
+
+# Estonia
+# From Peter Ilieve (1994-10-15):
+# A relative in Tallinn confirms the accuracy of the data for 1989 onwards
+# [through 1994] and gives the legal authority for it,
+# a regulation of the Government of Estonia, No. 111 of 1989....
+#
+# From Peter Ilieve (1996-10-28):
+# [IATA SSIM (1992/1996) claims that the Baltic republics switch at 01:00s,
+# but a relative confirms that Estonia still switches at 02:00s, writing:]
+# ``I do not [know] exactly but there are some little different
+# (confusing) rules for International Air and Railway Transport Schedules
+# conversion in Sunday connected with end of summer time in Estonia....
+# A discussion is running about the summer time efficiency and effect on
+# human physiology.  It seems that Estonia maybe will not change to
+# summer time next spring.''
+
+# From Peter Ilieve (1998-11-04), heavily edited:
+# <a href="http://trip.rk.ee/cgi-bin/thw?${BASE}=akt&${OOHTML}=rtd&TA=1998&TO=1&AN=1390">
+# The 1998-09-22 Estonian time law
+# </a>
+# refers to the Eighth Directive and cites the association agreement between
+# the EU and Estonia, ratified by the Estonian law (RT II 1995, 22--27, 120).
+#
+# I also asked [my relative] whether they use any standard abbreviation
+# for their standard and summer times. He says no, they use "suveaeg"
+# (summer time) and "talveaeg" (winter time).
+
+# From <a href="http://www.baltictimes.com/">The Baltic Times</a> (1999-09-09)
+# via Steffen Thorsen:
+# This year will mark the last time Estonia shifts to summer time,
+# a council of the ruling coalition announced Sept. 6....
+# But what this could mean for Estonia's chances of joining the European
+# Union are still unclear.  In 1994, the EU declared summer time compulsory
+# for all member states until 2001.  Brussels has yet to decide what to do
+# after that.
+
+# From Mart Oruaas (2000-01-29):
+# Regulation no. 301 (1999-10-12) obsoletes previous regulation
+# no. 206 (1998-09-22) and thus sticks Estonia to +02:00 GMT for all
+# the year round.  The regulation is effective 1999-11-01.
+
+# From Toomas Soome (2002-02-21):
+# The Estonian government has changed once again timezone politics.
+# Now we are using again EU rules.
+#
+# From Urmet Jaanes (2002-03-28):
+# The legislative reference is Government decree No. 84 on 2002-02-21.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Tallinn	1:39:00	-	LMT	1880
+			1:39:00	-	TMT	1918 Feb # Tallinn Mean Time
+			1:00	C-Eur	CE%sT	1919 Jul
+			1:39:00	-	TMT	1921 May
+			2:00	-	EET	1940 Aug  6
+			3:00	-	MSK	1941 Sep 15
+			1:00	C-Eur	CE%sT	1944 Sep 22
+			3:00	Russia	MSK/MSD	1989 Mar 26 2:00s
+			2:00	1:00	EEST	1989 Sep 24 2:00s
+			2:00	C-Eur	EE%sT	1998 Sep 22
+			2:00	EU	EE%sT	1999 Nov  1
+			2:00	-	EET	2002 Feb 21
+			2:00	EU	EE%sT
+
+# Finland
+
+# From Hannu Strang (1994-09-25 06:03:37 UTC):
+# Well, here in Helsinki we're just changing from summer time to regular one,
+# and it's supposed to change at 4am...
+
+# From Janne Snabb (2010-0715):
+#
+# I noticed that the Finland data is not accurate for years 1981 and 1982.
+# During these two first trial years the DST adjustment was made one hour
+# earlier than in forthcoming years. Starting 1983 the adjustment was made
+# according to the central European standards.
+#
+# This is documented in Heikki Oja: Aikakirja 2007, published by The Almanac
+# Office of University of Helsinki, ISBN 952-10-3221-9, available online (in
+# Finnish) at
+#
+# <a href="http://almanakka.helsinki.fi/aikakirja/Aikakirja2007kokonaan.pdf">
+# http://almanakka.helsinki.fi/aikakirja/Aikakirja2007kokonaan.pdf
+# </a>
+#
+# Page 105 (56 in PDF version) has a handy table of all past daylight savings
+# transitions. It is easy enough to interpret without Finnish skills.
+#
+# This is also confirmed by Finnish Broadcasting Company's archive at:
+#
+# <a href="http://www.yle.fi/elavaarkisto/?s=s&g=1&ag=5&t=&a=3401">
+# http://www.yle.fi/elavaarkisto/?s=s&g=1&ag=5&t=&a=3401
+# </a>
+#
+# The news clip from 1981 says that "the time between 2 and 3 o'clock does not
+# exist tonight."
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Finland	1942	only	-	Apr	3	0:00	1:00	S
+Rule	Finland	1942	only	-	Oct	3	0:00	0	-
+Rule	Finland	1981	1982	-	Mar	lastSun	2:00	1:00	S
+Rule	Finland	1981	1982	-	Sep	lastSun	3:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Helsinki	1:39:52 -	LMT	1878 May 31
+			1:39:52	-	HMT	1921 May    # Helsinki Mean Time
+			2:00	Finland	EE%sT	1983
+			2:00	EU	EE%sT
+
+# Aaland Is
+Link	Europe/Helsinki	Europe/Mariehamn
+
+
+# France
+
+# From Ciro Discepolo (2000-12-20):
+#
+# Henri Le Corre, Regimes Horaires pour le monde entier, Editions
+# Traditionnelles - Paris 2 books, 1993
+#
+# Gabriel, Traite de l'heure dans le monde, Guy Tredaniel editeur,
+# Paris, 1991
+#
+# Francoise Gauquelin, Problemes de l'heure resolus en astrologie,
+# Guy tredaniel, Paris 1987
+
+
+#
+# Shank & Pottenger seem to use `24:00' ambiguously; resolve it with Whitman.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	France	1916	only	-	Jun	14	23:00s	1:00	S
+Rule	France	1916	1919	-	Oct	Sun>=1	23:00s	0	-
+Rule	France	1917	only	-	Mar	24	23:00s	1:00	S
+Rule	France	1918	only	-	Mar	 9	23:00s	1:00	S
+Rule	France	1919	only	-	Mar	 1	23:00s	1:00	S
+Rule	France	1920	only	-	Feb	14	23:00s	1:00	S
+Rule	France	1920	only	-	Oct	23	23:00s	0	-
+Rule	France	1921	only	-	Mar	14	23:00s	1:00	S
+Rule	France	1921	only	-	Oct	25	23:00s	0	-
+Rule	France	1922	only	-	Mar	25	23:00s	1:00	S
+# DSH writes that a law of 1923-05-24 specified 3rd Sat in Apr at 23:00 to 1st
+# Sat in Oct at 24:00; and that in 1930, because of Easter, the transitions
+# were Apr 12 and Oct 5.  Go with Shanks & Pottenger.
+Rule	France	1922	1938	-	Oct	Sat>=1	23:00s	0	-
+Rule	France	1923	only	-	May	26	23:00s	1:00	S
+Rule	France	1924	only	-	Mar	29	23:00s	1:00	S
+Rule	France	1925	only	-	Apr	 4	23:00s	1:00	S
+Rule	France	1926	only	-	Apr	17	23:00s	1:00	S
+Rule	France	1927	only	-	Apr	 9	23:00s	1:00	S
+Rule	France	1928	only	-	Apr	14	23:00s	1:00	S
+Rule	France	1929	only	-	Apr	20	23:00s	1:00	S
+Rule	France	1930	only	-	Apr	12	23:00s	1:00	S
+Rule	France	1931	only	-	Apr	18	23:00s	1:00	S
+Rule	France	1932	only	-	Apr	 2	23:00s	1:00	S
+Rule	France	1933	only	-	Mar	25	23:00s	1:00	S
+Rule	France	1934	only	-	Apr	 7	23:00s	1:00	S
+Rule	France	1935	only	-	Mar	30	23:00s	1:00	S
+Rule	France	1936	only	-	Apr	18	23:00s	1:00	S
+Rule	France	1937	only	-	Apr	 3	23:00s	1:00	S
+Rule	France	1938	only	-	Mar	26	23:00s	1:00	S
+Rule	France	1939	only	-	Apr	15	23:00s	1:00	S
+Rule	France	1939	only	-	Nov	18	23:00s	0	-
+Rule	France	1940	only	-	Feb	25	 2:00	1:00	S
+# The French rules for 1941-1944 were not used in Paris, but Shanks & Pottenger
+# write that they were used in Monaco and in many French locations.
+# Le Corre writes that the upper limit of the free zone was Arneguy, Orthez,
+# Mont-de-Marsan, Bazas, Langon, Lamotte-Montravel, Marouil, La
+# Rochefoucault, Champagne-Mouton, La Roche-Posay, La Haye-Decartes,
+# Loches, Montrichard, Vierzon, Bourges, Moulins, Digoin,
+# Paray-le-Monial, Montceau-les-Mines, Chalons-sur-Saone, Arbois,
+# Dole, Morez, St-Claude, and Collognes (Haute-Savioe).
+Rule	France	1941	only	-	May	 5	 0:00	2:00	M # Midsummer
+# Shanks & Pottenger say this transition occurred at Oct 6 1:00,
+# but go with Denis Excoffier (1997-12-12),
+# who quotes the Ephemerides Astronomiques for 1998 from Bureau des Longitudes
+# as saying 5/10/41 22hUT.
+Rule	France	1941	only	-	Oct	 6	 0:00	1:00	S
+Rule	France	1942	only	-	Mar	 9	 0:00	2:00	M
+Rule	France	1942	only	-	Nov	 2	 3:00	1:00	S
+Rule	France	1943	only	-	Mar	29	 2:00	2:00	M
+Rule	France	1943	only	-	Oct	 4	 3:00	1:00	S
+Rule	France	1944	only	-	Apr	 3	 2:00	2:00	M
+Rule	France	1944	only	-	Oct	 8	 1:00	1:00	S
+Rule	France	1945	only	-	Apr	 2	 2:00	2:00	M
+Rule	France	1945	only	-	Sep	16	 3:00	0	-
+# Shanks & Pottenger give Mar 28 2:00 and Sep 26 3:00;
+# go with Excoffier's 28/3/76 0hUT and 25/9/76 23hUT.
+Rule	France	1976	only	-	Mar	28	 1:00	1:00	S
+Rule	France	1976	only	-	Sep	26	 1:00	0	-
+# Shanks & Pottenger give 0:09:20 for Paris Mean Time, and Whitman 0:09:05,
+# but Howse quotes the actual French legislation as saying 0:09:21.
+# Go with Howse.  Howse writes that the time in France was officially based
+# on PMT-0:09:21 until 1978-08-09, when the time base finally switched to UTC.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Paris	0:09:21 -	LMT	1891 Mar 15  0:01
+			0:09:21	-	PMT	1911 Mar 11  0:01  # Paris MT
+# Shanks & Pottenger give 1940 Jun 14 0:00; go with Excoffier and Le Corre.
+			0:00	France	WE%sT	1940 Jun 14 23:00
+# Le Corre says Paris stuck with occupied-France time after the liberation;
+# go with Shanks & Pottenger.
+			1:00	C-Eur	CE%sT	1944 Aug 25
+			0:00	France	WE%sT	1945 Sep 16  3:00
+			1:00	France	CE%sT	1977
+			1:00	EU	CE%sT
+
+# Germany
+
+# From Markus Kuhn (1998-09-29):
+# The German time zone web site by the Physikalisch-Technische
+# Bundesanstalt contains DST information back to 1916.
+# [See tz-link.htm for the URL.]
+
+# From Joerg Schilling (2002-10-23):
+# In 1945, Berlin was switched to Moscow Summer time (GMT+4) by
+# <a href="http://www.dhm.de/lemo/html/biografien/BersarinNikolai/">
+# General [Nikolai] Bersarin</a>.
+
+# From Paul Eggert (2003-03-08):
+# <a href="http://www.parlament-berlin.de/pds-fraktion.nsf/727459127c8b66ee8525662300459099/defc77cb784f180ac1256c2b0030274b/$FILE/bersarint.pdf">
+# http://www.parlament-berlin.de/pds-fraktion.nsf/727459127c8b66ee8525662300459099/defc77cb784f180ac1256c2b0030274b/$FILE/bersarint.pdf
+# </a>
+# says that Bersarin issued an order to use Moscow time on May 20.
+# However, Moscow did not observe daylight saving in 1945, so
+# this was equivalent to CEMT (GMT+3), not GMT+4.
+
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Germany	1946	only	-	Apr	14	2:00s	1:00	S
+Rule	Germany	1946	only	-	Oct	 7	2:00s	0	-
+Rule	Germany	1947	1949	-	Oct	Sun>=1	2:00s	0	-
+# http://www.ptb.de/de/org/4/44/441/salt.htm says the following transition
+# occurred at 3:00 MEZ, not the 2:00 MEZ given in Shanks & Pottenger.
+# Go with the PTB.
+Rule	Germany	1947	only	-	Apr	 6	3:00s	1:00	S
+Rule	Germany	1947	only	-	May	11	2:00s	2:00	M
+Rule	Germany	1947	only	-	Jun	29	3:00	1:00	S
+Rule	Germany	1948	only	-	Apr	18	2:00s	1:00	S
+Rule	Germany	1949	only	-	Apr	10	2:00s	1:00	S
+
+Rule SovietZone	1945	only	-	May	24	2:00	2:00	M # Midsummer
+Rule SovietZone	1945	only	-	Sep	24	3:00	1:00	S
+Rule SovietZone	1945	only	-	Nov	18	2:00s	0	-
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Berlin	0:53:28 -	LMT	1893 Apr
+			1:00	C-Eur	CE%sT	1945 May 24 2:00
+			1:00 SovietZone	CE%sT	1946
+			1:00	Germany	CE%sT	1980
+			1:00	EU	CE%sT
+
+# Georgia
+# Please see the "asia" file for Asia/Tbilisi.
+# Herodotus (Histories, IV.45) says Georgia north of the Phasis (now Rioni)
+# is in Europe.  Our reference location Tbilisi is in the Asian part.
+
+# Gibraltar
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Europe/Gibraltar	-0:21:24 -	LMT	1880 Aug  2 0:00s
+			0:00	GB-Eire	%s	1957 Apr 14 2:00
+			1:00	-	CET	1982
+			1:00	EU	CE%sT
+
+# Greece
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+# Whitman gives 1932 Jul 5 - Nov 1; go with Shanks & Pottenger.
+Rule	Greece	1932	only	-	Jul	 7	0:00	1:00	S
+Rule	Greece	1932	only	-	Sep	 1	0:00	0	-
+# Whitman gives 1941 Apr 25 - ?; go with Shanks & Pottenger.
+Rule	Greece	1941	only	-	Apr	 7	0:00	1:00	S
+# Whitman gives 1942 Feb 2 - ?; go with Shanks & Pottenger.
+Rule	Greece	1942	only	-	Nov	 2	3:00	0	-
+Rule	Greece	1943	only	-	Mar	30	0:00	1:00	S
+Rule	Greece	1943	only	-	Oct	 4	0:00	0	-
+# Whitman gives 1944 Oct 3 - Oct 31; go with Shanks & Pottenger.
+Rule	Greece	1952	only	-	Jul	 1	0:00	1:00	S
+Rule	Greece	1952	only	-	Nov	 2	0:00	0	-
+Rule	Greece	1975	only	-	Apr	12	0:00s	1:00	S
+Rule	Greece	1975	only	-	Nov	26	0:00s	0	-
+Rule	Greece	1976	only	-	Apr	11	2:00s	1:00	S
+Rule	Greece	1976	only	-	Oct	10	2:00s	0	-
+Rule	Greece	1977	1978	-	Apr	Sun>=1	2:00s	1:00	S
+Rule	Greece	1977	only	-	Sep	26	2:00s	0	-
+Rule	Greece	1978	only	-	Sep	24	4:00	0	-
+Rule	Greece	1979	only	-	Apr	 1	9:00	1:00	S
+Rule	Greece	1979	only	-	Sep	29	2:00	0	-
+Rule	Greece	1980	only	-	Apr	 1	0:00	1:00	S
+Rule	Greece	1980	only	-	Sep	28	0:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Athens	1:34:52 -	LMT	1895 Sep 14
+			1:34:52	-	AMT	1916 Jul 28 0:01     # Athens MT
+			2:00	Greece	EE%sT	1941 Apr 30
+			1:00	Greece	CE%sT	1944 Apr  4
+			2:00	Greece	EE%sT	1981
+			# Shanks & Pottenger say it switched to C-Eur in 1981;
+			# go with EU instead, since Greece joined it on Jan 1.
+			2:00	EU	EE%sT
+
+# Hungary
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Hungary	1918	only	-	Apr	 1	 3:00	1:00	S
+Rule	Hungary	1918	only	-	Sep	29	 3:00	0	-
+Rule	Hungary	1919	only	-	Apr	15	 3:00	1:00	S
+Rule	Hungary	1919	only	-	Sep	15	 3:00	0	-
+Rule	Hungary	1920	only	-	Apr	 5	 3:00	1:00	S
+Rule	Hungary	1920	only	-	Sep	30	 3:00	0	-
+Rule	Hungary	1945	only	-	May	 1	23:00	1:00	S
+Rule	Hungary	1945	only	-	Nov	 3	 0:00	0	-
+Rule	Hungary	1946	only	-	Mar	31	 2:00s	1:00	S
+Rule	Hungary	1946	1949	-	Oct	Sun>=1	 2:00s	0	-
+Rule	Hungary	1947	1949	-	Apr	Sun>=4	 2:00s	1:00	S
+Rule	Hungary	1950	only	-	Apr	17	 2:00s	1:00	S
+Rule	Hungary	1950	only	-	Oct	23	 2:00s	0	-
+Rule	Hungary	1954	1955	-	May	23	 0:00	1:00	S
+Rule	Hungary	1954	1955	-	Oct	 3	 0:00	0	-
+Rule	Hungary	1956	only	-	Jun	Sun>=1	 0:00	1:00	S
+Rule	Hungary	1956	only	-	Sep	lastSun	 0:00	0	-
+Rule	Hungary	1957	only	-	Jun	Sun>=1	 1:00	1:00	S
+Rule	Hungary	1957	only	-	Sep	lastSun	 3:00	0	-
+Rule	Hungary	1980	only	-	Apr	 6	 1:00	1:00	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Budapest	1:16:20 -	LMT	1890 Oct
+			1:00	C-Eur	CE%sT	1918
+			1:00	Hungary	CE%sT	1941 Apr  6  2:00
+			1:00	C-Eur	CE%sT	1945
+			1:00	Hungary	CE%sT	1980 Sep 28  2:00s
+			1:00	EU	CE%sT
+
+# Iceland
+#
+# From Adam David (1993-11-06):
+# The name of the timezone in Iceland for system / mail / news purposes is GMT.
+#
+# (1993-12-05):
+# This material is paraphrased from the 1988 edition of the University of
+# Iceland Almanak.
+#
+# From January 1st, 1908 the whole of Iceland was standardised at 1 hour
+# behind GMT. Previously, local mean solar time was used in different parts
+# of Iceland, the almanak had been based on Reykjavik mean solar time which
+# was 1 hour and 28 minutes behind GMT.
+#
+# "first day of winter" referred to [below] means the first day of the 26 weeks
+# of winter, according to the old icelandic calendar that dates back to the
+# time the norsemen first settled Iceland.  The first day of winter is always
+# Saturday, but is not dependent on the Julian or Gregorian calendars.
+#
+# (1993-12-10):
+# I have a reference from the Oxford Icelandic-English dictionary for the
+# beginning of winter, which ties it to the ecclesiastical calendar (and thus
+# to the julian/gregorian calendar) over the period in question.
+#	the winter begins on the Saturday next before St. Luke's day
+#	(old style), or on St. Luke's day, if a Saturday.
+# St. Luke's day ought to be traceable from ecclesiastical sources. "old style"
+# might be a reference to the Julian calendar as opposed to Gregorian, or it
+# might mean something else (???).
+#
+# From Paul Eggert (2006-03-22):
+# The Iceland Almanak, Shanks & Pottenger, and Whitman disagree on many points.
+# We go with the Almanak, except for one claim from Shanks & Pottenger, namely
+# that Reykavik was 21W57 from 1837 to 1908, local mean time before that.
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Iceland	1917	1918	-	Feb	19	23:00	1:00	S
+Rule	Iceland	1917	only	-	Oct	21	 1:00	0	-
+Rule	Iceland	1918	only	-	Nov	16	 1:00	0	-
+Rule	Iceland	1939	only	-	Apr	29	23:00	1:00	S
+Rule	Iceland	1939	only	-	Nov	29	 2:00	0	-
+Rule	Iceland	1940	only	-	Feb	25	 2:00	1:00	S
+Rule	Iceland	1940	only	-	Nov	 3	 2:00	0	-
+Rule	Iceland	1941	only	-	Mar	 2	 1:00s	1:00	S
+Rule	Iceland	1941	only	-	Nov	 2	 1:00s	0	-
+Rule	Iceland	1942	only	-	Mar	 8	 1:00s	1:00	S
+Rule	Iceland	1942	only	-	Oct	25	 1:00s	0	-
+# 1943-1946 - first Sunday in March until first Sunday in winter
+Rule	Iceland	1943	1946	-	Mar	Sun>=1	 1:00s	1:00	S
+Rule	Iceland	1943	1948	-	Oct	Sun>=22	 1:00s	0	-
+# 1947-1967 - first Sunday in April until first Sunday in winter
+Rule	Iceland	1947	1967	-	Apr	Sun>=1	 1:00s	1:00	S
+# 1949 Oct transition delayed by 1 week
+Rule	Iceland	1949	only	-	Oct	30	 1:00s	0	-
+Rule	Iceland	1950	1966	-	Oct	Sun>=22	 1:00s	0	-
+Rule	Iceland	1967	only	-	Oct	29	 1:00s	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Atlantic/Reykjavik	-1:27:24 -	LMT	1837
+			-1:27:48 -	RMT	1908 # Reykjavik Mean Time?
+			-1:00	Iceland	IS%sT	1968 Apr 7 1:00s
+			 0:00	-	GMT
+
+# Italy
+#
+# From Paul Eggert (2001-03-06):
+# Sicily and Sardinia each had their own time zones from 1866 to 1893,
+# called Palermo Time (+00:53:28) and Cagliari Time (+00:36:32).
+# During World War II, German-controlled Italy used German time.
+# But these events all occurred before the 1970 cutoff,
+# so record only the time in Rome.
+#
+# From Paul Eggert (2006-03-22):
+# For Italian DST we have three sources: Shanks & Pottenger, Whitman, and
+# F. Pollastri
+# <a href="http://toi.iriti.cnr.it/uk/ienitlt.html">
+# Day-light Saving Time in Italy (2006-02-03)
+# </a>
+# (`FP' below), taken from an Italian National Electrotechnical Institute
+# publication. When the three sources disagree, guess who's right, as follows:
+#
+# year	FP	Shanks&P. (S)	Whitman (W)	Go with:
+# 1916	06-03	06-03 24:00	06-03 00:00	FP & W
+#	09-30	09-30 24:00	09-30 01:00	FP; guess 24:00s
+# 1917	04-01	03-31 24:00	03-31 00:00	FP & S
+#	09-30	09-29 24:00	09-30 01:00	FP & W
+# 1918	03-09	03-09 24:00	03-09 00:00	FP & S
+#	10-06	10-05 24:00	10-06 01:00	FP & W
+# 1919	03-01	03-01 24:00	03-01 00:00	FP & S
+#	10-04	10-04 24:00	10-04 01:00	FP; guess 24:00s
+# 1920	03-20	03-20 24:00	03-20 00:00	FP & S
+#	09-18	09-18 24:00	10-01 01:00	FP; guess 24:00s
+# 1944	04-02	04-03 02:00			S (see C-Eur)
+#	09-16	10-02 03:00			FP; guess 24:00s
+# 1945	09-14	09-16 24:00			FP; guess 24:00s
+# 1970	05-21	05-31 00:00			S
+#	09-20	09-27 00:00			S
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Italy	1916	only	-	Jun	 3	0:00s	1:00	S
+Rule	Italy	1916	only	-	Oct	 1	0:00s	0	-
+Rule	Italy	1917	only	-	Apr	 1	0:00s	1:00	S
+Rule	Italy	1917	only	-	Sep	30	0:00s	0	-
+Rule	Italy	1918	only	-	Mar	10	0:00s	1:00	S
+Rule	Italy	1918	1919	-	Oct	Sun>=1	0:00s	0	-
+Rule	Italy	1919	only	-	Mar	 2	0:00s	1:00	S
+Rule	Italy	1920	only	-	Mar	21	0:00s	1:00	S
+Rule	Italy	1920	only	-	Sep	19	0:00s	0	-
+Rule	Italy	1940	only	-	Jun	15	0:00s	1:00	S
+Rule	Italy	1944	only	-	Sep	17	0:00s	0	-
+Rule	Italy	1945	only	-	Apr	 2	2:00	1:00	S
+Rule	Italy	1945	only	-	Sep	15	0:00s	0	-
+Rule	Italy	1946	only	-	Mar	17	2:00s	1:00	S
+Rule	Italy	1946	only	-	Oct	 6	2:00s	0	-
+Rule	Italy	1947	only	-	Mar	16	0:00s	1:00	S
+Rule	Italy	1947	only	-	Oct	 5	0:00s	0	-
+Rule	Italy	1948	only	-	Feb	29	2:00s	1:00	S
+Rule	Italy	1948	only	-	Oct	 3	2:00s	0	-
+Rule	Italy	1966	1968	-	May	Sun>=22	0:00	1:00	S
+Rule	Italy	1966	1969	-	Sep	Sun>=22	0:00	0	-
+Rule	Italy	1969	only	-	Jun	 1	0:00	1:00	S
+Rule	Italy	1970	only	-	May	31	0:00	1:00	S
+Rule	Italy	1970	only	-	Sep	lastSun	0:00	0	-
+Rule	Italy	1971	1972	-	May	Sun>=22	0:00	1:00	S
+Rule	Italy	1971	only	-	Sep	lastSun	1:00	0	-
+Rule	Italy	1972	only	-	Oct	 1	0:00	0	-
+Rule	Italy	1973	only	-	Jun	 3	0:00	1:00	S
+Rule	Italy	1973	1974	-	Sep	lastSun	0:00	0	-
+Rule	Italy	1974	only	-	May	26	0:00	1:00	S
+Rule	Italy	1975	only	-	Jun	 1	0:00s	1:00	S
+Rule	Italy	1975	1977	-	Sep	lastSun	0:00s	0	-
+Rule	Italy	1976	only	-	May	30	0:00s	1:00	S
+Rule	Italy	1977	1979	-	May	Sun>=22	0:00s	1:00	S
+Rule	Italy	1978	only	-	Oct	 1	0:00s	0	-
+Rule	Italy	1979	only	-	Sep	30	0:00s	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Rome	0:49:56 -	LMT	1866 Sep 22
+			0:49:56	-	RMT	1893 Nov  1 0:00s # Rome Mean
+			1:00	Italy	CE%sT	1942 Nov  2 2:00s
+			1:00	C-Eur	CE%sT	1944 Jul
+			1:00	Italy	CE%sT	1980
+			1:00	EU	CE%sT
+
+Link	Europe/Rome	Europe/Vatican
+Link	Europe/Rome	Europe/San_Marino
+
+# Latvia
+
+# From Liene Kanepe (1998-09-17):
+
+# I asked about this matter Scientific Secretary of the Institute of Astronomy
+# of The University of Latvia Dr. paed Mr. Ilgonis Vilks. I also searched the
+# correct data in juridical acts and I found some juridical documents about
+# changes in the counting of time in Latvia from 1981....
+#
+# Act No.35 of the Council of Ministers of Latvian SSR of 1981-01-22 ...
+# according to the Act No.925 of the Council of Ministers of USSR of 1980-10-24
+# ...: all year round the time of 2nd time zone + 1 hour, in addition turning
+# the hands of the clock 1 hour forward on 1 April at 00:00 (GMT 31 March 21:00)
+# and 1 hour backward on the 1 October at 00:00 (GMT 30 September 20:00).
+#
+# Act No.592 of the Council of Ministers of Latvian SSR of 1984-09-24 ...
+# according to the Act No.967 of the Council of Ministers of USSR of 1984-09-13
+# ...: all year round the time of 2nd time zone + 1 hour, in addition turning
+# the hands of the clock 1 hour forward on the last Sunday of March at 02:00
+# (GMT 23:00 on the previous day) and 1 hour backward on the last Sunday of
+# September at 03:00 (GMT 23:00 on the previous day).
+#
+# Act No.81 of the Council of Ministers of Latvian SSR of 1989-03-22 ...
+# according to the Act No.227 of the Council of Ministers of USSR of 1989-03-14
+# ...: since the last Sunday of March 1989 in Lithuanian SSR, Latvian SSR,
+# Estonian SSR and Kaliningrad region of Russian Federation all year round the
+# time of 2nd time zone (Moscow time minus one hour). On the territory of Latvia
+# transition to summer time is performed on the last Sunday of March at 02:00
+# (GMT 00:00), turning the hands of the clock 1 hour forward.  The end of
+# daylight saving time is performed on the last Sunday of September at 03:00
+# (GMT 00:00), turning the hands of the clock 1 hour backward. Exception is
+# 1989-03-26, when we must not turn the hands of the clock....
+#
+# The Regulations of the Cabinet of Ministers of the Republic of Latvia of
+# 1997-01-21 on transition to Summer time ... established the same order of
+# daylight savings time settings as in the States of the European Union.
+
+# From Andrei Ivanov (2000-03-06):
+# This year Latvia will not switch to Daylight Savings Time (as specified in
+# <a href="http://www.lv-laiks.lv/wwwraksti/2000/071072/vd4.htm">
+# The Regulations of the Cabinet of Ministers of the Rep. of Latvia of
+# 29-Feb-2000 (#79)</a>, in Latvian for subscribers only).
+
+# <a href="http://www.rferl.org/newsline/2001/01/3-CEE/cee-030101.html">
+# From RFE/RL Newsline (2001-01-03), noted after a heads-up by Rives McDow:
+# </a>
+# The Latvian government on 2 January decided that the country will
+# institute daylight-saving time this spring, LETA reported.
+# Last February the three Baltic states decided not to turn back their
+# clocks one hour in the spring....
+# Minister of Economy Aigars Kalvitis noted that Latvia had too few
+# daylight hours and thus decided to comply with a draft European
+# Commission directive that provides for instituting daylight-saving
+# time in EU countries between 2002 and 2006. The Latvian government
+# urged Lithuania and Estonia to adopt a similar time policy, but it
+# appears that they will not do so....
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Latvia	1989	1996	-	Mar	lastSun	 2:00s	1:00	S
+Rule	Latvia	1989	1996	-	Sep	lastSun	 2:00s	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Riga	1:36:24	-	LMT	1880
+			1:36:24	-	RMT	1918 Apr 15 2:00 #Riga Mean Time
+			1:36:24	1:00	LST	1918 Sep 16 3:00 #Latvian Summer
+			1:36:24	-	RMT	1919 Apr  1 2:00
+			1:36:24	1:00	LST	1919 May 22 3:00
+			1:36:24	-	RMT	1926 May 11
+			2:00	-	EET	1940 Aug  5
+			3:00	-	MSK	1941 Jul
+			1:00	C-Eur	CE%sT	1944 Oct 13
+			3:00	Russia	MSK/MSD	1989 Mar lastSun 2:00s
+			2:00	1:00	EEST	1989 Sep lastSun 2:00s
+			2:00	Latvia	EE%sT	1997 Jan 21
+			2:00	EU	EE%sT	2000 Feb 29
+			2:00	-	EET	2001 Jan  2
+			2:00	EU	EE%sT
+
+# Liechtenstein
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Vaduz	0:38:04 -	LMT	1894 Jun
+			1:00	-	CET	1981
+			1:00	EU	CE%sT
+
+# Lithuania
+
+# From Paul Eggert (1996-11-22):
+# IATA SSIM (1992/1996) says Lithuania uses W-Eur rules, but since it is
+# known to be wrong about Estonia and Latvia, assume it's wrong here too.
+
+# From Marius Gedminas (1998-08-07):
+# I would like to inform that in this year Lithuanian time zone
+# (Europe/Vilnius) was changed.
+
+# From <a href="http://www.elta.lt/">ELTA</a> No. 972 (2582) (1999-09-29),
+# via Steffen Thorsen:
+# Lithuania has shifted back to the second time zone (GMT plus two hours)
+# to be valid here starting from October 31,
+# as decided by the national government on Wednesday....
+# The Lithuanian government also announced plans to consider a
+# motion to give up shifting to summer time in spring, as it was
+# already done by Estonia.
+
+# From the <a href="http://www.tourism.lt/informa/ff.htm">
+# Fact File, Lithuanian State Department of Tourism
+# </a> (2000-03-27): Local time is GMT+2 hours ..., no daylight saving.
+
+# From a user via Klaus Marten (2003-02-07):
+# As a candidate for membership of the European Union, Lithuania will
+# observe Summer Time in 2003, changing its clocks at the times laid
+# down in EU Directive 2000/84 of 19.I.01 (i.e. at the same times as its
+# neighbour Latvia). The text of the Lithuanian government Order of
+# 7.XI.02 to this effect can be found at
+# http://www.lrvk.lt/nut/11/n1749.htm
+
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Vilnius	1:41:16	-	LMT	1880
+			1:24:00	-	WMT	1917	    # Warsaw Mean Time
+			1:35:36	-	KMT	1919 Oct 10 # Kaunas Mean Time
+			1:00	-	CET	1920 Jul 12
+			2:00	-	EET	1920 Oct  9
+			1:00	-	CET	1940 Aug  3
+			3:00	-	MSK	1941 Jun 24
+			1:00	C-Eur	CE%sT	1944 Aug
+			3:00	Russia	MSK/MSD	1991 Mar 31 2:00s
+			2:00	1:00	EEST	1991 Sep 29 2:00s
+			2:00	C-Eur	EE%sT	1998
+			2:00	-	EET	1998 Mar 29 1:00u
+			1:00	EU	CE%sT	1999 Oct 31 1:00u
+			2:00	-	EET	2003 Jan  1
+			2:00	EU	EE%sT
+
+# Luxembourg
+# Whitman disagrees with most of these dates in minor ways;
+# go with Shanks & Pottenger.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Lux	1916	only	-	May	14	23:00	1:00	S
+Rule	Lux	1916	only	-	Oct	 1	 1:00	0	-
+Rule	Lux	1917	only	-	Apr	28	23:00	1:00	S
+Rule	Lux	1917	only	-	Sep	17	 1:00	0	-
+Rule	Lux	1918	only	-	Apr	Mon>=15	 2:00s	1:00	S
+Rule	Lux	1918	only	-	Sep	Mon>=15	 2:00s	0	-
+Rule	Lux	1919	only	-	Mar	 1	23:00	1:00	S
+Rule	Lux	1919	only	-	Oct	 5	 3:00	0	-
+Rule	Lux	1920	only	-	Feb	14	23:00	1:00	S
+Rule	Lux	1920	only	-	Oct	24	 2:00	0	-
+Rule	Lux	1921	only	-	Mar	14	23:00	1:00	S
+Rule	Lux	1921	only	-	Oct	26	 2:00	0	-
+Rule	Lux	1922	only	-	Mar	25	23:00	1:00	S
+Rule	Lux	1922	only	-	Oct	Sun>=2	 1:00	0	-
+Rule	Lux	1923	only	-	Apr	21	23:00	1:00	S
+Rule	Lux	1923	only	-	Oct	Sun>=2	 2:00	0	-
+Rule	Lux	1924	only	-	Mar	29	23:00	1:00	S
+Rule	Lux	1924	1928	-	Oct	Sun>=2	 1:00	0	-
+Rule	Lux	1925	only	-	Apr	 5	23:00	1:00	S
+Rule	Lux	1926	only	-	Apr	17	23:00	1:00	S
+Rule	Lux	1927	only	-	Apr	 9	23:00	1:00	S
+Rule	Lux	1928	only	-	Apr	14	23:00	1:00	S
+Rule	Lux	1929	only	-	Apr	20	23:00	1:00	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Europe/Luxembourg	0:24:36 -	LMT	1904 Jun
+			1:00	Lux	CE%sT	1918 Nov 25
+			0:00	Lux	WE%sT	1929 Oct  6 2:00s
+			0:00	Belgium	WE%sT	1940 May 14 3:00
+			1:00	C-Eur	WE%sT	1944 Sep 18 3:00
+			1:00	Belgium	CE%sT	1977
+			1:00	EU	CE%sT
+
+# Macedonia
+# see Serbia
+
+# Malta
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Malta	1973	only	-	Mar	31	0:00s	1:00	S
+Rule	Malta	1973	only	-	Sep	29	0:00s	0	-
+Rule	Malta	1974	only	-	Apr	21	0:00s	1:00	S
+Rule	Malta	1974	only	-	Sep	16	0:00s	0	-
+Rule	Malta	1975	1979	-	Apr	Sun>=15	2:00	1:00	S
+Rule	Malta	1975	1980	-	Sep	Sun>=15	2:00	0	-
+Rule	Malta	1980	only	-	Mar	31	2:00	1:00	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Malta	0:58:04 -	LMT	1893 Nov  2 0:00s # Valletta
+			1:00	Italy	CE%sT	1942 Nov  2 2:00s
+			1:00	C-Eur	CE%sT	1945 Apr  2 2:00s
+			1:00	Italy	CE%sT	1973 Mar 31
+			1:00	Malta	CE%sT	1981
+			1:00	EU	CE%sT
+
+# Moldova
+
+# From Paul Eggert (2006-03-22):
+# A previous version of this database followed Shanks & Pottenger, who write
+# that Tiraspol switched to Moscow time on 1992-01-19 at 02:00.
+# However, this is most likely an error, as Moldova declared independence
+# on 1991-08-27 (the 1992-01-19 date is that of a Russian decree).
+# In early 1992 there was large-scale interethnic violence in the area
+# and it's possible that some Russophones continued to observe Moscow time.
+# But [two people] separately reported via
+# Jesper Norgaard that as of 2001-01-24 Tiraspol was like Chisinau.
+# The Tiraspol entry has therefore been removed for now.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Chisinau	1:55:20 -	LMT	1880
+			1:55	-	CMT	1918 Feb 15 # Chisinau MT
+			1:44:24	-	BMT	1931 Jul 24 # Bucharest MT
+			2:00	Romania	EE%sT	1940 Aug 15
+			2:00	1:00	EEST	1941 Jul 17
+			1:00	C-Eur	CE%sT	1944 Aug 24
+			3:00	Russia	MSK/MSD	1990
+			3:00	-	MSK	1990 May 6
+			2:00	-	EET	1991
+			2:00	Russia	EE%sT	1992
+			2:00	E-Eur	EE%sT	1997
+# See Romania commentary for the guessed 1997 transition to EU rules.
+			2:00	EU	EE%sT
+
+# Monaco
+# Shanks & Pottenger give 0:09:20 for Paris Mean Time; go with Howse's
+# more precise 0:09:21.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Monaco	0:29:32 -	LMT	1891 Mar 15
+			0:09:21	-	PMT	1911 Mar 11    # Paris Mean Time
+			0:00	France	WE%sT	1945 Sep 16 3:00
+			1:00	France	CE%sT	1977
+			1:00	EU	CE%sT
+
+# Montenegro
+# see Serbia
+
+# Netherlands
+
+# Howse writes that the Netherlands' railways used GMT between 1892 and 1940,
+# but for other purposes the Netherlands used Amsterdam mean time.
+
+# However, Robert H. van Gent writes (2001-04-01):
+# Howse's statement is only correct up to 1909. From 1909-05-01 (00:00:00
+# Amsterdam mean time) onwards, the whole of the Netherlands (including
+# the Dutch railways) was required by law to observe Amsterdam mean time
+# (19 minutes 32.13 seconds ahead of GMT). This had already been the
+# common practice (except for the railways) for many decades but it was
+# not until 1909 when the Dutch government finally defined this by law.
+# On 1937-07-01 this was changed to 20 minutes (exactly) ahead of GMT and
+# was generally known as Dutch Time ("Nederlandse Tijd").
+#
+# (2001-04-08):
+# 1892-05-01 was the date when the Dutch railways were by law required to
+# observe GMT while the remainder of the Netherlands adhered to the common
+# practice of following Amsterdam mean time.
+#
+# (2001-04-09):
+# In 1835 the authorities of the province of North Holland requested the
+# municipal authorities of the towns and cities in the province to observe
+# Amsterdam mean time but I do not know in how many cases this request was
+# actually followed.
+#
+# From 1852 onwards the Dutch telegraph offices were by law required to
+# observe Amsterdam mean time. As the time signals from the observatory of
+# Leiden were also distributed by the telegraph system, I assume that most
+# places linked up with the telegraph (and railway) system automatically
+# adopted Amsterdam mean time.
+#
+# Although the early Dutch railway companies initially observed a variety
+# of times, most of them had adopted Amsterdam mean time by 1858 but it
+# was not until 1866 when they were all required by law to observe
+# Amsterdam mean time.
+
+# The data before 1945 are taken from
+# <http://www.phys.uu.nl/~vgent/wettijd/wettijd.htm>.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Neth	1916	only	-	May	 1	0:00	1:00	NST	# Netherlands Summer Time
+Rule	Neth	1916	only	-	Oct	 1	0:00	0	AMT	# Amsterdam Mean Time
+Rule	Neth	1917	only	-	Apr	16	2:00s	1:00	NST
+Rule	Neth	1917	only	-	Sep	17	2:00s	0	AMT
+Rule	Neth	1918	1921	-	Apr	Mon>=1	2:00s	1:00	NST
+Rule	Neth	1918	1921	-	Sep	lastMon	2:00s	0	AMT
+Rule	Neth	1922	only	-	Mar	lastSun	2:00s	1:00	NST
+Rule	Neth	1922	1936	-	Oct	Sun>=2	2:00s	0	AMT
+Rule	Neth	1923	only	-	Jun	Fri>=1	2:00s	1:00	NST
+Rule	Neth	1924	only	-	Mar	lastSun	2:00s	1:00	NST
+Rule	Neth	1925	only	-	Jun	Fri>=1	2:00s	1:00	NST
+# From 1926 through 1939 DST began 05-15, except that it was delayed by a week
+# in years when 05-15 fell in the Pentecost weekend.
+Rule	Neth	1926	1931	-	May	15	2:00s	1:00	NST
+Rule	Neth	1932	only	-	May	22	2:00s	1:00	NST
+Rule	Neth	1933	1936	-	May	15	2:00s	1:00	NST
+Rule	Neth	1937	only	-	May	22	2:00s	1:00	NST
+Rule	Neth	1937	only	-	Jul	 1	0:00	1:00	S
+Rule	Neth	1937	1939	-	Oct	Sun>=2	2:00s	0	-
+Rule	Neth	1938	1939	-	May	15	2:00s	1:00	S
+Rule	Neth	1945	only	-	Apr	 2	2:00s	1:00	S
+Rule	Neth	1945	only	-	Sep	16	2:00s	0	-
+#
+# Amsterdam Mean Time was +00:19:32.13 exactly, but the .13 is omitted
+# below because the current format requires GMTOFF to be an integer.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Europe/Amsterdam	0:19:32 -	LMT	1835
+			0:19:32	Neth	%s	1937 Jul  1
+			0:20	Neth	NE%sT	1940 May 16 0:00 # Dutch Time
+			1:00	C-Eur	CE%sT	1945 Apr  2 2:00
+			1:00	Neth	CE%sT	1977
+			1:00	EU	CE%sT
+
+# Norway
+# http://met.no/met/met_lex/q_u/sommertid.html (2004-01) agrees with Shanks &
+# Pottenger.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Norway	1916	only	-	May	22	1:00	1:00	S
+Rule	Norway	1916	only	-	Sep	30	0:00	0	-
+Rule	Norway	1945	only	-	Apr	 2	2:00s	1:00	S
+Rule	Norway	1945	only	-	Oct	 1	2:00s	0	-
+Rule	Norway	1959	1964	-	Mar	Sun>=15	2:00s	1:00	S
+Rule	Norway	1959	1965	-	Sep	Sun>=15	2:00s	0	-
+Rule	Norway	1965	only	-	Apr	25	2:00s	1:00	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Oslo	0:43:00 -	LMT	1895 Jan  1
+			1:00	Norway	CE%sT	1940 Aug 10 23:00
+			1:00	C-Eur	CE%sT	1945 Apr  2  2:00
+			1:00	Norway	CE%sT	1980
+			1:00	EU	CE%sT
+
+# Svalbard & Jan Mayen
+
+# From Steffen Thorsen (2001-05-01):
+# Although I could not find it explicitly, it seems that Jan Mayen and
+# Svalbard have been using the same time as Norway at least since the
+# time they were declared as parts of Norway.  Svalbard was declared
+# as a part of Norway by law of 1925-07-17 no 11, section 4 and Jan
+# Mayen by law of 1930-02-27 no 2, section 2. (From
+# http://www.lovdata.no/all/nl-19250717-011.html and
+# http://www.lovdata.no/all/nl-19300227-002.html).  The law/regulation
+# for normal/standard time in Norway is from 1894-06-29 no 1 (came
+# into operation on 1895-01-01) and Svalbard/Jan Mayen seem to be a
+# part of this law since 1925/1930. (From
+# http://www.lovdata.no/all/nl-18940629-001.html ) I have not been
+# able to find if Jan Mayen used a different time zone (e.g. -0100)
+# before 1930. Jan Mayen has only been "inhabitated" since 1921 by
+# Norwegian meteorologists and maybe used the same time as Norway ever
+# since 1921.  Svalbard (Arctic/Longyearbyen) has been inhabited since
+# before 1895, and therefore probably changed the local time somewhere
+# between 1895 and 1925 (inclusive).
+
+# From Paul Eggert (2001-05-01):
+#
+# Actually, Jan Mayen was never occupied by Germany during World War II,
+# so it must have diverged from Oslo time during the war, as Oslo was
+# keeping Berlin time.
+#
+# <http://home.no.net/janmayen/history.htm> says that the meteorologists
+# burned down their station in 1940 and left the island, but returned in
+# 1941 with a small Norwegian garrison and continued operations despite
+# frequent air ttacks from Germans.  In 1943 the Americans established a
+# radiolocating station on the island, called "Atlantic City".  Possibly
+# the UTC offset changed during the war, but I think it unlikely that
+# Jan Mayen used German daylight-saving rules.
+#
+# Svalbard is more complicated, as it was raided in August 1941 by an
+# Allied party that evacuated the civilian population to England (says
+# <http://www.bartleby.com/65/sv/Svalbard.html>).  The Svalbard FAQ
+# <http://www.svalbard.com/SvalbardFAQ.html> says that the Germans were
+# expelled on 1942-05-14.  However, small parties of Germans did return,
+# and according to Wilhelm Dege's book "War North of 80" (1954)
+# <http://www.ucalgary.ca/UofC/departments/UP/1-55238/1-55238-110-2.html>
+# the German armed forces at the Svalbard weather station code-named
+# Haudegen did not surrender to the Allies until September 1945.
+#
+# All these events predate our cutoff date of 1970.  Unless we can
+# come up with more definitive info about the timekeeping during the
+# war years it's probably best just do do the following for now:
+Link	Europe/Oslo	Arctic/Longyearbyen
+
+# Poland
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Poland	1918	1919	-	Sep	16	2:00s	0	-
+Rule	Poland	1919	only	-	Apr	15	2:00s	1:00	S
+Rule	Poland	1944	only	-	Apr	 3	2:00s	1:00	S
+# Whitman gives 1944 Nov 30; go with Shanks & Pottenger.
+Rule	Poland	1944	only	-	Oct	 4	2:00	0	-
+# For 1944-1948 Whitman gives the previous day; go with Shanks & Pottenger.
+Rule	Poland	1945	only	-	Apr	29	0:00	1:00	S
+Rule	Poland	1945	only	-	Nov	 1	0:00	0	-
+# For 1946 on the source is Kazimierz Borkowski,
+# Torun Center for Astronomy, Dept. of Radio Astronomy, Nicolaus Copernicus U.,
+# <http://www.astro.uni.torun.pl/~kb/Artykuly/U-PA/Czas2.htm#tth_tAb1>
+# Thanks to Przemyslaw Augustyniak (2005-05-28) for this reference.
+# He also gives these further references:
+# Mon Pol nr 13, poz 162 (1995) <http://www.abc.com.pl/serwis/mp/1995/0162.htm>
+# Druk nr 2180 (2003) <http://www.senat.gov.pl/k5/dok/sejm/053/2180.pdf>
+Rule	Poland	1946	only	-	Apr	14	0:00s	1:00	S
+Rule	Poland	1946	only	-	Oct	 7	2:00s	0	-
+Rule	Poland	1947	only	-	May	 4	2:00s	1:00	S
+Rule	Poland	1947	1949	-	Oct	Sun>=1	2:00s	0	-
+Rule	Poland	1948	only	-	Apr	18	2:00s	1:00	S
+Rule	Poland	1949	only	-	Apr	10	2:00s	1:00	S
+Rule	Poland	1957	only	-	Jun	 2	1:00s	1:00	S
+Rule	Poland	1957	1958	-	Sep	lastSun	1:00s	0	-
+Rule	Poland	1958	only	-	Mar	30	1:00s	1:00	S
+Rule	Poland	1959	only	-	May	31	1:00s	1:00	S
+Rule	Poland	1959	1961	-	Oct	Sun>=1	1:00s	0	-
+Rule	Poland	1960	only	-	Apr	 3	1:00s	1:00	S
+Rule	Poland	1961	1964	-	May	lastSun	1:00s	1:00	S
+Rule	Poland	1962	1964	-	Sep	lastSun	1:00s	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Warsaw	1:24:00 -	LMT	1880
+			1:24:00	-	WMT	1915 Aug  5   # Warsaw Mean Time
+			1:00	C-Eur	CE%sT	1918 Sep 16 3:00
+			2:00	Poland	EE%sT	1922 Jun
+			1:00	Poland	CE%sT	1940 Jun 23 2:00
+			1:00	C-Eur	CE%sT	1944 Oct
+			1:00	Poland	CE%sT	1977
+			1:00	W-Eur	CE%sT	1988
+			1:00	EU	CE%sT
+
+# Portugal
+#
+# From Rui Pedro Salgueiro (1992-11-12):
+# Portugal has recently (September, 27) changed timezone
+# (from WET to MET or CET) to harmonize with EEC.
+#
+# Martin Bruckmann (1996-02-29) reports via Peter Ilieve
+# that Portugal is reverting to 0:00 by not moving its clocks this spring.
+# The new Prime Minister was fed up with getting up in the dark in the winter.
+#
+# From Paul Eggert (1996-11-12):
+# IATA SSIM (1991-09) reports several 1991-09 and 1992-09 transitions
+# at 02:00u, not 01:00u.  Assume that these are typos.
+# IATA SSIM (1991/1992) reports that the Azores were at -1:00.
+# IATA SSIM (1993-02) says +0:00; later issues (through 1996-09) say -1:00.
+# Guess that the Azores changed to EU rules in 1992 (since that's when Portugal
+# harmonized with the EU), and that they stayed +0:00 that winter.
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+# DSH writes that despite Decree 1,469 (1915), the change to the clocks was not
+# done every year, depending on what Spain did, because of railroad schedules.
+# Go with Shanks & Pottenger.
+Rule	Port	1916	only	-	Jun	17	23:00	1:00	S
+# Whitman gives 1916 Oct 31; go with Shanks & Pottenger.
+Rule	Port	1916	only	-	Nov	 1	 1:00	0	-
+Rule	Port	1917	only	-	Feb	28	23:00s	1:00	S
+Rule	Port	1917	1921	-	Oct	14	23:00s	0	-
+Rule	Port	1918	only	-	Mar	 1	23:00s	1:00	S
+Rule	Port	1919	only	-	Feb	28	23:00s	1:00	S
+Rule	Port	1920	only	-	Feb	29	23:00s	1:00	S
+Rule	Port	1921	only	-	Feb	28	23:00s	1:00	S
+Rule	Port	1924	only	-	Apr	16	23:00s	1:00	S
+Rule	Port	1924	only	-	Oct	14	23:00s	0	-
+Rule	Port	1926	only	-	Apr	17	23:00s	1:00	S
+Rule	Port	1926	1929	-	Oct	Sat>=1	23:00s	0	-
+Rule	Port	1927	only	-	Apr	 9	23:00s	1:00	S
+Rule	Port	1928	only	-	Apr	14	23:00s	1:00	S
+Rule	Port	1929	only	-	Apr	20	23:00s	1:00	S
+Rule	Port	1931	only	-	Apr	18	23:00s	1:00	S
+# Whitman gives 1931 Oct 8; go with Shanks & Pottenger.
+Rule	Port	1931	1932	-	Oct	Sat>=1	23:00s	0	-
+Rule	Port	1932	only	-	Apr	 2	23:00s	1:00	S
+Rule	Port	1934	only	-	Apr	 7	23:00s	1:00	S
+# Whitman gives 1934 Oct 5; go with Shanks & Pottenger.
+Rule	Port	1934	1938	-	Oct	Sat>=1	23:00s	0	-
+# Shanks & Pottenger give 1935 Apr 30; go with Whitman.
+Rule	Port	1935	only	-	Mar	30	23:00s	1:00	S
+Rule	Port	1936	only	-	Apr	18	23:00s	1:00	S
+# Whitman gives 1937 Apr 2; go with Shanks & Pottenger.
+Rule	Port	1937	only	-	Apr	 3	23:00s	1:00	S
+Rule	Port	1938	only	-	Mar	26	23:00s	1:00	S
+Rule	Port	1939	only	-	Apr	15	23:00s	1:00	S
+# Whitman gives 1939 Oct 7; go with Shanks & Pottenger.
+Rule	Port	1939	only	-	Nov	18	23:00s	0	-
+Rule	Port	1940	only	-	Feb	24	23:00s	1:00	S
+# Shanks & Pottenger give 1940 Oct 7; go with Whitman.
+Rule	Port	1940	1941	-	Oct	 5	23:00s	0	-
+Rule	Port	1941	only	-	Apr	 5	23:00s	1:00	S
+Rule	Port	1942	1945	-	Mar	Sat>=8	23:00s	1:00	S
+Rule	Port	1942	only	-	Apr	25	22:00s	2:00	M # Midsummer
+Rule	Port	1942	only	-	Aug	15	22:00s	1:00	S
+Rule	Port	1942	1945	-	Oct	Sat>=24	23:00s	0	-
+Rule	Port	1943	only	-	Apr	17	22:00s	2:00	M
+Rule	Port	1943	1945	-	Aug	Sat>=25	22:00s	1:00	S
+Rule	Port	1944	1945	-	Apr	Sat>=21	22:00s	2:00	M
+Rule	Port	1946	only	-	Apr	Sat>=1	23:00s	1:00	S
+Rule	Port	1946	only	-	Oct	Sat>=1	23:00s	0	-
+Rule	Port	1947	1949	-	Apr	Sun>=1	 2:00s	1:00	S
+Rule	Port	1947	1949	-	Oct	Sun>=1	 2:00s	0	-
+# Shanks & Pottenger say DST was observed in 1950; go with Whitman.
+# Whitman gives Oct lastSun for 1952 on; go with Shanks & Pottenger.
+Rule	Port	1951	1965	-	Apr	Sun>=1	 2:00s	1:00	S
+Rule	Port	1951	1965	-	Oct	Sun>=1	 2:00s	0	-
+Rule	Port	1977	only	-	Mar	27	 0:00s	1:00	S
+Rule	Port	1977	only	-	Sep	25	 0:00s	0	-
+Rule	Port	1978	1979	-	Apr	Sun>=1	 0:00s	1:00	S
+Rule	Port	1978	only	-	Oct	 1	 0:00s	0	-
+Rule	Port	1979	1982	-	Sep	lastSun	 1:00s	0	-
+Rule	Port	1980	only	-	Mar	lastSun	 0:00s	1:00	S
+Rule	Port	1981	1982	-	Mar	lastSun	 1:00s	1:00	S
+Rule	Port	1983	only	-	Mar	lastSun	 2:00s	1:00	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+# Shanks & Pottenger say the transition from LMT to WET occurred 1911-05-24;
+# Willett says 1912-01-01.  Go with Willett.
+Zone	Europe/Lisbon	-0:36:32 -	LMT	1884
+			-0:36:32 -	LMT	1912 Jan  1  # Lisbon Mean Time
+			 0:00	Port	WE%sT	1966 Apr  3 2:00
+			 1:00	-	CET	1976 Sep 26 1:00
+			 0:00	Port	WE%sT	1983 Sep 25 1:00s
+			 0:00	W-Eur	WE%sT	1992 Sep 27 1:00s
+			 1:00	EU	CE%sT	1996 Mar 31 1:00u
+			 0:00	EU	WE%sT
+Zone Atlantic/Azores	-1:42:40 -	LMT	1884		# Ponta Delgada
+			-1:54:32 -	HMT	1911 May 24  # Horta Mean Time
+			-2:00	Port	AZO%sT	1966 Apr  3 2:00 # Azores Time
+			-1:00	Port	AZO%sT	1983 Sep 25 1:00s
+			-1:00	W-Eur	AZO%sT	1992 Sep 27 1:00s
+			 0:00	EU	WE%sT	1993 Mar 28 1:00u
+			-1:00	EU	AZO%sT
+Zone Atlantic/Madeira	-1:07:36 -	LMT	1884		# Funchal
+			-1:07:36 -	FMT	1911 May 24  # Funchal Mean Time
+			-1:00	Port	MAD%sT	1966 Apr  3 2:00 # Madeira Time
+			 0:00	Port	WE%sT	1983 Sep 25 1:00s
+			 0:00	EU	WE%sT
+
+# Romania
+#
+# From Paul Eggert (1999-10-07):
+# <a href="http://www.nineoclock.ro/POL/1778pol.html">
+# Nine O'clock</a> (1998-10-23) reports that the switch occurred at
+# 04:00 local time in fall 1998.  For lack of better info,
+# assume that Romania and Moldova switched to EU rules in 1997,
+# the same year as Bulgaria.
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Romania	1932	only	-	May	21	 0:00s	1:00	S
+Rule	Romania	1932	1939	-	Oct	Sun>=1	 0:00s	0	-
+Rule	Romania	1933	1939	-	Apr	Sun>=2	 0:00s	1:00	S
+Rule	Romania	1979	only	-	May	27	 0:00	1:00	S
+Rule	Romania	1979	only	-	Sep	lastSun	 0:00	0	-
+Rule	Romania	1980	only	-	Apr	 5	23:00	1:00	S
+Rule	Romania	1980	only	-	Sep	lastSun	 1:00	0	-
+Rule	Romania	1991	1993	-	Mar	lastSun	 0:00s	1:00	S
+Rule	Romania	1991	1993	-	Sep	lastSun	 0:00s	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Europe/Bucharest	1:44:24 -	LMT	1891 Oct
+			1:44:24	-	BMT	1931 Jul 24	# Bucharest MT
+			2:00	Romania	EE%sT	1981 Mar 29 2:00s
+			2:00	C-Eur	EE%sT	1991
+			2:00	Romania	EE%sT	1994
+			2:00	E-Eur	EE%sT	1997
+			2:00	EU	EE%sT
+
+# Russia
+
+# From Paul Eggert (2006-03-22):
+# Except for Moscow after 1919-07-01, I invented the time zone abbreviations.
+# Moscow time zone abbreviations after 1919-07-01, and Moscow rules after 1991,
+# are from Andrey A. Chernov.  The rest is from Shanks & Pottenger,
+# except we follow Chernov's report that 1992 DST transitions were Sat
+# 23:00, not Sun 02:00s.
+#
+# From Stanislaw A. Kuzikowski (1994-06-29):
+# But now it is some months since Novosibirsk is 3 hours ahead of Moscow!
+# I do not know why they have decided to make this change;
+# as far as I remember it was done exactly during winter->summer switching
+# so we (Novosibirsk) simply did not switch.
+#
+# From Andrey A. Chernov (1996-10-04):
+# `MSK' and `MSD' were born and used initially on Moscow computers with
+# UNIX-like OSes by several developer groups (e.g. Demos group, Kiae group)....
+# The next step was the UUCP network, the Relcom predecessor
+# (used mainly for mail), and MSK/MSD was actively used there.
+#
+# From Chris Carrier (1996-10-30):
+# According to a friend of mine who rode the Trans-Siberian Railroad from
+# Moscow to Irkutsk in 1995, public air and rail transport in Russia ...
+# still follows Moscow time, no matter where in Russia it is located.
+#
+# For Grozny, Chechnya, we have the following story from
+# John Daniszewski, "Scavengers in the Rubble", Los Angeles Times (2001-02-07):
+# News--often false--is spread by word of mouth.  A rumor that it was
+# time to move the clocks back put this whole city out of sync with
+# the rest of Russia for two weeks--even soldiers stationed here began
+# enforcing curfew at the wrong time.
+#
+# From Gwillim Law (2001-06-05):
+# There's considerable evidence that Sakhalin Island used to be in
+# UTC+11, and has changed to UTC+10, in this decade.  I start with the
+# SSIM, which listed Yuzhno-Sakhalinsk in zone RU10 along with Magadan
+# until February 1997, and then in RU9 with Khabarovsk and Vladivostok
+# since September 1997....  Although the Kuril Islands are
+# administratively part of Sakhalin oblast', they appear to have
+# remained on UTC+11 along with Magadan.
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+#
+# Kaliningradskaya oblast'.
+Zone Europe/Kaliningrad	 1:22:00 -	LMT	1893 Apr
+			 1:00	C-Eur	CE%sT	1945
+			 2:00	Poland	CE%sT	1946
+			 3:00	Russia	MSK/MSD	1991 Mar 31 2:00s
+			 2:00	Russia	EE%sT
+#
+# From Oscar van Vlijmen (2001-08-25): [This region consists of]
+# Respublika Adygeya, Arkhangel'skaya oblast',
+# Belgorodskaya oblast', Bryanskaya oblast', Vladimirskaya oblast',
+# Vologodskaya oblast', Voronezhskaya oblast',
+# Respublika Dagestan, Ivanovskaya oblast', Respublika Ingushetiya,
+# Kabarbino-Balkarskaya Respublika, Respublika Kalmykiya,
+# Kalyzhskaya oblast', Respublika Karachaevo-Cherkessiya,
+# Respublika Kareliya, Respublika Komi,
+# Kostromskaya oblast', Krasnodarskij kraj, Kurskaya oblast',
+# Leningradskaya oblast', Lipetskaya oblast', Respublika Marij El,
+# Respublika Mordoviya, Moskva, Moskovskaya oblast',
+# Murmanskaya oblast', Nenetskij avtonomnyj okrug,
+# Nizhegorodskaya oblast', Novgorodskaya oblast', Orlovskaya oblast',
+# Penzenskaya oblast', Pskovskaya oblast', Rostovskaya oblast',
+# Ryazanskaya oblast', Sankt-Peterburg,
+# Respublika Severnaya Osetiya, Smolenskaya oblast',
+# Stavropol'skij kraj, Tambovskaya oblast', Respublika Tatarstan,
+# Tverskaya oblast', Tyl'skaya oblast', Ul'yanovskaya oblast',
+# Chechenskaya Respublika, Chuvashskaya oblast',
+# Yaroslavskaya oblast'
+Zone Europe/Moscow	 2:30:20 -	LMT	1880
+			 2:30	-	MMT	1916 Jul  3 # Moscow Mean Time
+			 2:30:48 Russia	%s	1919 Jul  1 2:00
+			 3:00	Russia	MSK/MSD	1922 Oct
+			 2:00	-	EET	1930 Jun 21
+			 3:00	Russia	MSK/MSD	1991 Mar 31 2:00s
+			 2:00	Russia	EE%sT	1992 Jan 19 2:00s
+			 3:00	Russia	MSK/MSD
+#
+# Astrakhanskaya oblast', Kirovskaya oblast', Saratovskaya oblast',
+# Volgogradskaya oblast'.  Shanks & Pottenger say Kirov is still at +0400
+# but Wikipedia (2006-05-09) says +0300.  Perhaps it switched after the
+# others?  But we have no data.
+Zone Europe/Volgograd	 2:57:40 -	LMT	1920 Jan  3
+			 3:00	-	TSAT	1925 Apr  6 # Tsaritsyn Time
+			 3:00	-	STAT	1930 Jun 21 # Stalingrad Time
+			 4:00	-	STAT	1961 Nov 11
+			 4:00	Russia	VOL%sT	1989 Mar 26 2:00s # Volgograd T
+			 3:00	Russia	VOL%sT	1991 Mar 31 2:00s
+			 4:00	-	VOLT	1992 Mar 29 2:00s
+			 3:00	Russia	VOL%sT
+#
+# From Oscar van Vlijmen (2001-08-25): [This region consists of]
+# Samarskaya oblast', Udmyrtskaya respublika
+Zone Europe/Samara	 3:20:36 -	LMT	1919 Jul  1 2:00
+			 3:00	-	SAMT	1930 Jun 21
+			 4:00	-	SAMT	1935 Jan 27
+			 4:00	Russia	KUY%sT	1989 Mar 26 2:00s # Kuybyshev
+			 3:00	Russia	KUY%sT	1991 Mar 31 2:00s
+			 2:00	Russia	KUY%sT	1991 Sep 29 2:00s
+			 3:00	-	KUYT	1991 Oct 20 3:00
+			 4:00	Russia	SAM%sT	2010 Mar 28 2:00s # Samara Time
+			 3:00	Russia	SAM%sT
+
+#
+# From Oscar van Vlijmen (2001-08-25): [This region consists of]
+# Respublika Bashkortostan, Komi-Permyatskij avtonomnyj okrug,
+# Kurganskaya oblast', Orenburgskaya oblast', Permskaya oblast',
+# Sverdlovskaya oblast', Tyumenskaya oblast',
+# Khanty-Manskijskij avtonomnyj okrug, Chelyabinskaya oblast',
+# Yamalo-Nenetskij avtonomnyj okrug.
+Zone Asia/Yekaterinburg	 4:02:24 -	LMT	1919 Jul 15 4:00
+			 4:00	-	SVET	1930 Jun 21 # Sverdlovsk Time
+			 5:00	Russia	SVE%sT	1991 Mar 31 2:00s
+			 4:00	Russia	SVE%sT	1992 Jan 19 2:00s
+			 5:00	Russia	YEK%sT	# Yekaterinburg Time
+#
+# From Oscar van Vlijmen (2001-08-25): [This region consists of]
+# Respublika Altaj, Altajskij kraj, Omskaya oblast'.
+Zone Asia/Omsk		 4:53:36 -	LMT	1919 Nov 14
+			 5:00	-	OMST	1930 Jun 21 # Omsk TIme
+			 6:00	Russia	OMS%sT	1991 Mar 31 2:00s
+			 5:00	Russia	OMS%sT	1992 Jan 19 2:00s
+			 6:00	Russia	OMS%sT
+#
+# From Paul Eggert (2006-08-19): I'm guessing about Tomsk here; it's
+# not clear when it switched from +7 to +6.
+# Novosibirskaya oblast', Tomskaya oblast'.
+Zone Asia/Novosibirsk	 5:31:40 -	LMT	1919 Dec 14 6:00
+			 6:00	-	NOVT	1930 Jun 21 # Novosibirsk Time
+			 7:00	Russia	NOV%sT	1991 Mar 31 2:00s
+			 6:00	Russia	NOV%sT	1992 Jan 19 2:00s
+			 7:00	Russia	NOV%sT	1993 May 23 # say Shanks & P.
+			 6:00	Russia	NOV%sT
+
+# From Alexander Krivenyshev (2009-10-13):
+# Kemerovo oblast' (Kemerovo region) in Russia will change current time zone on
+# March 28, 2010:
+# from current Russia Zone 6 - Krasnoyarsk Time Zone (KRA) UTC +0700
+# to Russia Zone 5 - Novosibirsk Time Zone (NOV) UTC +0600
+#
+# This is according to Government of Russia decree # 740, on September
+# 14, 2009 "Application in the territory of the Kemerovo region the Fifth
+# time zone." ("Russia Zone 5" or old "USSR Zone 5" is GMT +0600)
+#
+# Russian Government web site (Russian language)
+# <a href="http://www.government.ru/content/governmentactivity/rfgovernmentdecisions/archiv">
+# http://www.government.ru/content/governmentactivity/rfgovernmentdecisions/archive/2009/09/14/991633.htm
+# </a>
+# or Russian-English translation by WorldTimeZone.com with reference
+# map to local region and new Russia Time Zone map after March 28, 2010
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_russia03.html">
+# http://www.worldtimezone.com/dst_news/dst_news_russia03.html
+# </a>
+#
+# Thus, when Russia will switch to DST on the night of March 28, 2010
+# Kemerovo region (Kemerovo oblast') will not change the clock.
+#
+# As a result, Kemerovo oblast' will be in the same time zone as
+# Novosibirsk, Omsk, Tomsk, Barnaul and Altai Republic.
+
+Zone Asia/Novokuznetsk	 5:48:48 -	NMT	1920 Jan  6
+			 6:00	-	KRAT	1930 Jun 21 # Krasnoyarsk Time
+			 7:00	Russia	KRA%sT	1991 Mar 31 2:00s
+			 6:00	Russia	KRA%sT	1992 Jan 19 2:00s
+			 7:00	Russia	KRA%sT	2010 Mar 28 2:00s
+			 6:00	Russia	NOV%sT # Novosibirsk/Novokuznetsk Time
+
+#
+# From Oscar van Vlijmen (2001-08-25): [This region consists of]
+# Krasnoyarskij kraj,
+# Tajmyrskij (Dolgano-Nenetskij) avtonomnyj okrug,
+# Respublika Tuva, Respublika Khakasiya, Evenkijskij avtonomnyj okrug.
+Zone Asia/Krasnoyarsk	 6:11:20 -	LMT	1920 Jan  6
+			 6:00	-	KRAT	1930 Jun 21 # Krasnoyarsk Time
+			 7:00	Russia	KRA%sT	1991 Mar 31 2:00s
+			 6:00	Russia	KRA%sT	1992 Jan 19 2:00s
+			 7:00	Russia	KRA%sT
+#
+# From Oscar van Vlijmen (2001-08-25): [This region consists of]
+# Respublika Buryatiya, Irkutskaya oblast',
+# Ust'-Ordynskij Buryatskij avtonomnyj okrug.
+Zone Asia/Irkutsk	 6:57:20 -	LMT	1880
+			 6:57:20 -	IMT	1920 Jan 25 # Irkutsk Mean Time
+			 7:00	-	IRKT	1930 Jun 21 # Irkutsk Time
+			 8:00	Russia	IRK%sT	1991 Mar 31 2:00s
+			 7:00	Russia	IRK%sT	1992 Jan 19 2:00s
+			 8:00	Russia	IRK%sT
+#
+# From Oscar van Vlijmen (2003-10-18): [This region consists of]
+# Aginskij Buryatskij avtonomnyj okrug, Amurskaya oblast',
+# [parts of] Respublika Sakha (Yakutiya), Chitinskaya oblast'.
+
+# From Oscar van Vlijmen (2009-11-29):
+# ...some regions of RUssia were merged with others since 2005...
+# Some names were changed, no big deal, except for one instance: a new name.
+# YAK/YAKST: UTC+9 Zabajkal'skij kraj.
+
+# From Oscar van Vlijmen (2009-11-29):
+# The Sakha districts are: Aldanskij, Amginskij, Anabarskij,
+# Verkhnevilyujskij, Vilyujskij, Gornyj,
+# Zhiganskij, Kobyajskij, Lenskij, Megino-Kangalasskij, Mirninskij,
+# Namskij, Nyurbinskij, Olenyokskij, Olyokminskij,
+# Suntarskij, Tattinskij, Ust'-Aldanskij, Khangalasskij,
+# Churapchinskij, Eveno-Bytantajskij Natsional'nij.
+
+Zone Asia/Yakutsk	 8:38:40 -	LMT	1919 Dec 15
+			 8:00	-	YAKT	1930 Jun 21 # Yakutsk Time
+			 9:00	Russia	YAK%sT	1991 Mar 31 2:00s
+			 8:00	Russia	YAK%sT	1992 Jan 19 2:00s
+			 9:00	Russia	YAK%sT
+#
+# From Oscar van Vlijmen (2003-10-18): [This region consists of]
+# Evrejskaya avtonomnaya oblast', Khabarovskij kraj, Primorskij kraj,
+# [parts of] Respublika Sakha (Yakutiya).
+
+# From Oscar van Vlijmen (2009-11-29):
+# The Sakha districts are: Bulunskij, Verkhoyanskij, Tomponskij, Ust'-Majskij,
+# Ust'-Yanskij.
+Zone Asia/Vladivostok	 8:47:44 -	LMT	1922 Nov 15
+			 9:00	-	VLAT	1930 Jun 21 # Vladivostok Time
+			10:00	Russia	VLA%sT	1991 Mar 31 2:00s
+			 9:00	Russia	VLA%sST	1992 Jan 19 2:00s
+			10:00	Russia	VLA%sT
+#
+# Sakhalinskaya oblast'.
+# The Zone name should be Yuzhno-Sakhalinsk, but that's too long.
+Zone Asia/Sakhalin	 9:30:48 -	LMT	1905 Aug 23
+			 9:00	-	CJT	1938
+			 9:00	-	JST	1945 Aug 25
+			11:00	Russia	SAK%sT	1991 Mar 31 2:00s # Sakhalin T.
+			10:00	Russia	SAK%sT	1992 Jan 19 2:00s
+			11:00	Russia	SAK%sT	1997 Mar lastSun 2:00s
+			10:00	Russia	SAK%sT
+#
+# From Oscar van Vlijmen (2003-10-18): [This region consists of]
+# Magadanskaya oblast', Respublika Sakha (Yakutiya).
+# Probably also: Kuril Islands.
+
+# From Oscar van Vlijmen (2009-11-29):
+# The Sakha districts are: Abyjskij, Allaikhovskij, Verkhhhnekolymskij, Momskij,
+# Nizhnekolymskij, Ojmyakonskij, Srednekolymskij.
+Zone Asia/Magadan	10:03:12 -	LMT	1924 May  2
+			10:00	-	MAGT	1930 Jun 21 # Magadan Time
+			11:00	Russia	MAG%sT	1991 Mar 31 2:00s
+			10:00	Russia	MAG%sT	1992 Jan 19 2:00s
+			11:00	Russia	MAG%sT
+#
+# From Oscar van Vlijmen (2001-08-25): [This region consists of]
+# Kamchatskaya oblast', Koryakskij avtonomnyj okrug.
+#
+# The Zone name should be Asia/Petropavlovsk-Kamchatski, but that's too long.
+Zone Asia/Kamchatka	10:34:36 -	LMT	1922 Nov 10
+			11:00	-	PETT	1930 Jun 21 # P-K Time
+			12:00	Russia	PET%sT	1991 Mar 31 2:00s
+			11:00	Russia	PET%sT	1992 Jan 19 2:00s
+			12:00	Russia	PET%sT	2010 Mar 28 2:00s
+			11:00	Russia	PET%sT
+#
+# Chukotskij avtonomnyj okrug
+Zone Asia/Anadyr	11:49:56 -	LMT	1924 May  2
+			12:00	-	ANAT	1930 Jun 21 # Anadyr Time
+			13:00	Russia	ANA%sT	1982 Apr  1 0:00s
+			12:00	Russia	ANA%sT	1991 Mar 31 2:00s
+			11:00	Russia	ANA%sT	1992 Jan 19 2:00s
+			12:00	Russia	ANA%sT	2010 Mar 28 2:00s
+			11:00	Russia	ANA%sT
+
+# Serbia
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Belgrade	1:22:00	-	LMT	1884
+			1:00	-	CET	1941 Apr 18 23:00
+			1:00	C-Eur	CE%sT	1945
+			1:00	-	CET	1945 May 8 2:00s
+			1:00	1:00	CEST	1945 Sep 16  2:00s
+# Metod Kozelj reports that the legal date of
+# transition to EU rules was 1982-11-27, for all of Yugoslavia at the time.
+# Shanks & Pottenger don't give as much detail, so go with Kozelj.
+			1:00	-	CET	1982 Nov 27
+			1:00	EU	CE%sT
+Link Europe/Belgrade Europe/Ljubljana	# Slovenia
+Link Europe/Belgrade Europe/Podgorica	# Montenegro
+Link Europe/Belgrade Europe/Sarajevo	# Bosnia and Herzegovina
+Link Europe/Belgrade Europe/Skopje	# Macedonia
+Link Europe/Belgrade Europe/Zagreb	# Croatia
+
+# Slovakia
+Link Europe/Prague Europe/Bratislava
+
+# Slovenia
+# see Serbia
+
+# Spain
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+# For 1917-1919 Whitman gives Apr Sat>=1 - Oct Sat>=1;
+# go with Shanks & Pottenger.
+Rule	Spain	1917	only	-	May	 5	23:00s	1:00	S
+Rule	Spain	1917	1919	-	Oct	 6	23:00s	0	-
+Rule	Spain	1918	only	-	Apr	15	23:00s	1:00	S
+Rule	Spain	1919	only	-	Apr	 5	23:00s	1:00	S
+# Whitman gives 1921 Feb 28 - Oct 14; go with Shanks & Pottenger.
+Rule	Spain	1924	only	-	Apr	16	23:00s	1:00	S
+# Whitman gives 1924 Oct 14; go with Shanks & Pottenger.
+Rule	Spain	1924	only	-	Oct	 4	23:00s	0	-
+Rule	Spain	1926	only	-	Apr	17	23:00s	1:00	S
+# Whitman says no DST in 1929; go with Shanks & Pottenger.
+Rule	Spain	1926	1929	-	Oct	Sat>=1	23:00s	0	-
+Rule	Spain	1927	only	-	Apr	 9	23:00s	1:00	S
+Rule	Spain	1928	only	-	Apr	14	23:00s	1:00	S
+Rule	Spain	1929	only	-	Apr	20	23:00s	1:00	S
+# Whitman gives 1937 Jun 16, 1938 Apr 16, 1940 Apr 13;
+# go with Shanks & Pottenger.
+Rule	Spain	1937	only	-	May	22	23:00s	1:00	S
+Rule	Spain	1937	1939	-	Oct	Sat>=1	23:00s	0	-
+Rule	Spain	1938	only	-	Mar	22	23:00s	1:00	S
+Rule	Spain	1939	only	-	Apr	15	23:00s	1:00	S
+Rule	Spain	1940	only	-	Mar	16	23:00s	1:00	S
+# Whitman says no DST 1942-1945; go with Shanks & Pottenger.
+Rule	Spain	1942	only	-	May	 2	22:00s	2:00	M # Midsummer
+Rule	Spain	1942	only	-	Sep	 1	22:00s	1:00	S
+Rule	Spain	1943	1946	-	Apr	Sat>=13	22:00s	2:00	M
+Rule	Spain	1943	only	-	Oct	 3	22:00s	1:00	S
+Rule	Spain	1944	only	-	Oct	10	22:00s	1:00	S
+Rule	Spain	1945	only	-	Sep	30	 1:00	1:00	S
+Rule	Spain	1946	only	-	Sep	30	 0:00	0	-
+Rule	Spain	1949	only	-	Apr	30	23:00	1:00	S
+Rule	Spain	1949	only	-	Sep	30	 1:00	0	-
+Rule	Spain	1974	1975	-	Apr	Sat>=13	23:00	1:00	S
+Rule	Spain	1974	1975	-	Oct	Sun>=1	 1:00	0	-
+Rule	Spain	1976	only	-	Mar	27	23:00	1:00	S
+Rule	Spain	1976	1977	-	Sep	lastSun	 1:00	0	-
+Rule	Spain	1977	1978	-	Apr	 2	23:00	1:00	S
+Rule	Spain	1978	only	-	Oct	 1	 1:00	0	-
+# The following rules are copied from Morocco from 1967 through 1978.
+Rule SpainAfrica 1967	only	-	Jun	 3	12:00	1:00	S
+Rule SpainAfrica 1967	only	-	Oct	 1	 0:00	0	-
+Rule SpainAfrica 1974	only	-	Jun	24	 0:00	1:00	S
+Rule SpainAfrica 1974	only	-	Sep	 1	 0:00	0	-
+Rule SpainAfrica 1976	1977	-	May	 1	 0:00	1:00	S
+Rule SpainAfrica 1976	only	-	Aug	 1	 0:00	0	-
+Rule SpainAfrica 1977	only	-	Sep	28	 0:00	0	-
+Rule SpainAfrica 1978	only	-	Jun	 1	 0:00	1:00	S
+Rule SpainAfrica 1978	only	-	Aug	 4	 0:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Madrid	-0:14:44 -	LMT	1901 Jan  1  0:00s
+			 0:00	Spain	WE%sT	1946 Sep 30
+			 1:00	Spain	CE%sT	1979
+			 1:00	EU	CE%sT
+Zone	Africa/Ceuta	-0:21:16 -	LMT	1901
+			 0:00	-	WET	1918 May  6 23:00
+			 0:00	1:00	WEST	1918 Oct  7 23:00
+			 0:00	-	WET	1924
+			 0:00	Spain	WE%sT	1929
+			 0:00 SpainAfrica WE%sT 1984 Mar 16
+			 1:00	-	CET	1986
+			 1:00	EU	CE%sT
+Zone	Atlantic/Canary	-1:01:36 -	LMT	1922 Mar # Las Palmas de Gran C.
+			-1:00	-	CANT	1946 Sep 30 1:00 # Canaries Time
+			 0:00	-	WET	1980 Apr  6 0:00s
+			 0:00	1:00	WEST	1980 Sep 28 0:00s
+			 0:00	EU	WE%sT
+# IATA SSIM (1996-09) says the Canaries switch at 2:00u, not 1:00u.
+# Ignore this for now, as the Canaries are part of the EU.
+
+# Sweden
+
+# From Ivan Nilsson (2001-04-13), superseding Shanks & Pottenger:
+#
+# The law "Svensk forfattningssamling 1878, no 14" about standard time in 1879:
+# From the beginning of 1879 (that is 01-01 00:00) the time for all
+# places in the country is "the mean solar time for the meridian at
+# three degrees, or twelve minutes of time, to the west of the
+# meridian of the Observatory of Stockholm".  The law is dated 1878-05-31.
+#
+# The observatory at that time had the meridian 18 degrees 03' 30"
+# eastern longitude = 01:12:14 in time.  Less 12 minutes gives the
+# national standard time as 01:00:14 ahead of GMT....
+#
+# About the beginning of CET in Sweden. The lawtext ("Svensk
+# forfattningssamling 1899, no 44") states, that "from the beginning
+# of 1900... ... the same as the mean solar time for the meridian at
+# the distance of one hour of time from the meridian of the English
+# observatory at Greenwich, or at 12 minutes 14 seconds to the west
+# from the meridian of the Observatory of Stockholm". The law is dated
+# 1899-06-16.  In short: At 1900-01-01 00:00:00 the new standard time
+# in Sweden is 01:00:00 ahead of GMT.
+#
+# 1916: The lawtext ("Svensk forfattningssamling 1916, no 124") states
+# that "1916-05-15 is considered to begin one hour earlier". It is
+# pretty obvious that at 05-14 23:00 the clocks are set to 05-15 00:00....
+# Further the law says, that "1916-09-30 is considered to end one hour later".
+#
+# The laws regulating [DST] are available on the site of the Swedish
+# Parliament beginning with 1985 - the laws regulating 1980/1984 are
+# not available on the site (to my knowledge they are only available
+# in Swedish): <http://www.riksdagen.se/english/work/sfst.asp> (type
+# "sommartid" without the quotes in the field "Fritext" and then click
+# the Sok-button).
+#
+# (2001-05-13):
+#
+# I have now found a newspaper stating that at 1916-10-01 01:00
+# summertime the church-clocks etc were set back one hour to show
+# 1916-10-01 00:00 standard time.  The article also reports that some
+# people thought the switch to standard time would take place already
+# at 1916-10-01 00:00 summer time, but they had to wait for another
+# hour before the event took place.
+#
+# Source: The newspaper "Dagens Nyheter", 1916-10-01, page 7 upper left.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Europe/Stockholm	1:12:12 -	LMT	1879 Jan  1
+			1:00:14	-	SET	1900 Jan  1	# Swedish Time
+			1:00	-	CET	1916 May 14 23:00
+			1:00	1:00	CEST	1916 Oct  1 01:00
+			1:00	-	CET	1980
+			1:00	EU	CE%sT
+
+# Switzerland
+# From Howse:
+# By the end of the 18th century clocks and watches became commonplace
+# and their performance improved enormously.  Communities began to keep
+# mean time in preference to apparent time -- Geneva from 1780 ....
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+# From Whitman (who writes ``Midnight?''):
+# Rule	Swiss	1940	only	-	Nov	 2	0:00	1:00	S
+# Rule	Swiss	1940	only	-	Dec	31	0:00	0	-
+# From Shanks & Pottenger:
+# Rule	Swiss	1941	1942	-	May	Sun>=1	2:00	1:00	S
+# Rule	Swiss	1941	1942	-	Oct	Sun>=1	0:00	0	-
+
+# From Alois Treindl (2008-12-17):
+# I have researched the DST usage in Switzerland during the 1940ies.
+#
+# As I wrote in an earlier message, I suspected the current tzdata values
+# to be wrong. This is now verified.
+#
+# I have found copies of the original ruling by the Swiss Federal
+# government, in 'Eidgen[o]ssische Gesetzessammlung 1941 and 1942' (Swiss
+# federal law collection)...
+#
+# DST began on Monday 5 May 1941, 1:00 am by shifting the clocks to 2:00 am
+# DST ended on Monday 6 Oct 1941, 2:00 am by shifting the clocks to 1:00 am.
+#
+# DST began on Monday, 4 May 1942 at 01:00 am
+# DST ended on Monday, 5 Oct 1942 at 02:00 am
+#
+# There was no DST in 1940, I have checked the law collection carefully.
+# It is also indicated by the fact that the 1942 entry in the law
+# collection points back to 1941 as a reference, but no reference to any
+# other years are made.
+#
+# Newspaper articles I have read in the archives on 6 May 1941 reported
+# about the introduction of DST (Sommerzeit in German) during the previous
+# night as an absolute novelty, because this was the first time that such
+# a thing had happened in Switzerland.
+#
+# I have also checked 1916, because one book source (Gabriel, Traite de
+# l'heure dans le monde) claims that Switzerland had DST in 1916. This is
+# false, no official document could be found. Probably Gabriel got misled
+# by references to Germany, which introduced DST in 1916 for the first time.
+#
+# The tzdata rules for Switzerland must be changed to:
+# Rule  Swiss   1941    1942    -       May     Mon>=1  1:00    1:00    S
+# Rule  Swiss   1941    1942    -       Oct     Mon>=1  2:00    0       -
+#
+# The 1940 rules must be deleted.
+#
+# One further detail for Switzerland, which is probably out of scope for
+# most users of tzdata:
+# The zone file
+# Zone    Europe/Zurich   0:34:08 -       LMT     1848 Sep 12
+#                          0:29:44 -       BMT     1894 Jun #Bern Mean Time
+#                          1:00    Swiss   CE%sT   1981
+#                          1:00    EU      CE%sT
+# describes all of Switzerland correctly, with the exception of
+# the Cantone Geneve (Geneva, Genf). Between 1848 and 1894 Geneve did not
+# follow Bern Mean Time but kept its own local mean time.
+# To represent this, an extra zone would be needed.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Swiss	1941	1942	-	May	Mon>=1	1:00	1:00	S
+Rule	Swiss	1941	1942	-	Oct	Mon>=1	2:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Zurich	0:34:08 -	LMT	1848 Sep 12
+			0:29:44	-	BMT	1894 Jun # Bern Mean Time
+			1:00	Swiss	CE%sT	1981
+			1:00	EU	CE%sT
+
+# Turkey
+
+# From Amar Devegowda (2007-01-03):
+# The time zone rules for Istanbul, Turkey have not been changed for years now.
+# ... The latest rules are available at -
+# http://www.timeanddate.com/worldclock/timezone.html?n=107
+# From Steffen Thorsen (2007-01-03):
+# I have been able to find press records back to 1996 which all say that
+# DST started 01:00 local time and end at 02:00 local time.  I am not sure
+# what happened before that.  One example for each year from 1996 to 2001:
+# http://newspot.byegm.gov.tr/arsiv/1996/21/N4.htm
+# http://www.byegm.gov.tr/YAYINLARIMIZ/CHR/ING97/03/97X03X25.TXT
+# http://www.byegm.gov.tr/YAYINLARIMIZ/CHR/ING98/03/98X03X02.HTM
+# http://www.byegm.gov.tr/YAYINLARIMIZ/CHR/ING99/10/99X10X26.HTM#%2016
+# http://www.byegm.gov.tr/YAYINLARIMIZ/CHR/ING2000/03/00X03X06.HTM#%2021
+# http://www.byegm.gov.tr/YAYINLARIMIZ/CHR/ING2001/03/23x03x01.HTM#%2027
+# From Paul Eggert (2007-01-03):
+# Prefer the above source to Shanks & Pottenger for time stamps after 1990.
+
+# From Steffen Thorsen (2007-03-09):
+# Starting 2007 though, it seems that they are adopting EU's 1:00 UTC
+# start/end time, according to the following page (2007-03-07):
+# http://www.ntvmsnbc.com/news/402029.asp
+# The official document is located here - it is in Turkish...:
+# http://rega.basbakanlik.gov.tr/eskiler/2007/03/20070307-7.htm
+# I was able to locate the following seemingly official document
+# (on a non-government server though) describing dates between 2002 and 2006:
+# http://www.alomaliye.com/bkk_2002_3769.htm
+
+# From Sue Williams (2008-08-11):
+# I spotted this news article about a potential change in Turkey.
+#
+# <a href="http://www.hurriyet.com.tr/english/domestic/9626174.asp?scr=1">
+# http://www.hurriyet.com.tr/english/domestic/9626174.asp?scr=1
+# </a>
+
+# From Sue Williams (2008-08-20):
+# This article says that around the end of March 2011, Turkey wants to
+# adjust the clocks forward by 1/2 hour and stay that way permanently.
+# The article indicates that this is a change in timezone offset in addition
+# to stopping observance of DST.
+# This proposal has not yet been approved.
+#
+# Read more here...
+#
+# Turkey to abandon daylight saving time in 2011
+# <a href="http://www.turkishdailynews.com.tr/article.php?enewsid=112989">
+# http://www.turkishdailynews.com.tr/article.php?enewsid=112989
+# </a>
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Turkey	1916	only	-	May	 1	0:00	1:00	S
+Rule	Turkey	1916	only	-	Oct	 1	0:00	0	-
+Rule	Turkey	1920	only	-	Mar	28	0:00	1:00	S
+Rule	Turkey	1920	only	-	Oct	25	0:00	0	-
+Rule	Turkey	1921	only	-	Apr	 3	0:00	1:00	S
+Rule	Turkey	1921	only	-	Oct	 3	0:00	0	-
+Rule	Turkey	1922	only	-	Mar	26	0:00	1:00	S
+Rule	Turkey	1922	only	-	Oct	 8	0:00	0	-
+# Whitman gives 1923 Apr 28 - Sep 16 and no DST in 1924-1925;
+# go with Shanks & Pottenger.
+Rule	Turkey	1924	only	-	May	13	0:00	1:00	S
+Rule	Turkey	1924	1925	-	Oct	 1	0:00	0	-
+Rule	Turkey	1925	only	-	May	 1	0:00	1:00	S
+Rule	Turkey	1940	only	-	Jun	30	0:00	1:00	S
+Rule	Turkey	1940	only	-	Oct	 5	0:00	0	-
+Rule	Turkey	1940	only	-	Dec	 1	0:00	1:00	S
+Rule	Turkey	1941	only	-	Sep	21	0:00	0	-
+Rule	Turkey	1942	only	-	Apr	 1	0:00	1:00	S
+# Whitman omits the next two transition and gives 1945 Oct 1;
+# go with Shanks & Pottenger.
+Rule	Turkey	1942	only	-	Nov	 1	0:00	0	-
+Rule	Turkey	1945	only	-	Apr	 2	0:00	1:00	S
+Rule	Turkey	1945	only	-	Oct	 8	0:00	0	-
+Rule	Turkey	1946	only	-	Jun	 1	0:00	1:00	S
+Rule	Turkey	1946	only	-	Oct	 1	0:00	0	-
+Rule	Turkey	1947	1948	-	Apr	Sun>=16	0:00	1:00	S
+Rule	Turkey	1947	1950	-	Oct	Sun>=2	0:00	0	-
+Rule	Turkey	1949	only	-	Apr	10	0:00	1:00	S
+Rule	Turkey	1950	only	-	Apr	19	0:00	1:00	S
+Rule	Turkey	1951	only	-	Apr	22	0:00	1:00	S
+Rule	Turkey	1951	only	-	Oct	 8	0:00	0	-
+Rule	Turkey	1962	only	-	Jul	15	0:00	1:00	S
+Rule	Turkey	1962	only	-	Oct	 8	0:00	0	-
+Rule	Turkey	1964	only	-	May	15	0:00	1:00	S
+Rule	Turkey	1964	only	-	Oct	 1	0:00	0	-
+Rule	Turkey	1970	1972	-	May	Sun>=2	0:00	1:00	S
+Rule	Turkey	1970	1972	-	Oct	Sun>=2	0:00	0	-
+Rule	Turkey	1973	only	-	Jun	 3	1:00	1:00	S
+Rule	Turkey	1973	only	-	Nov	 4	3:00	0	-
+Rule	Turkey	1974	only	-	Mar	31	2:00	1:00	S
+Rule	Turkey	1974	only	-	Nov	 3	5:00	0	-
+Rule	Turkey	1975	only	-	Mar	30	0:00	1:00	S
+Rule	Turkey	1975	1976	-	Oct	lastSun	0:00	0	-
+Rule	Turkey	1976	only	-	Jun	 1	0:00	1:00	S
+Rule	Turkey	1977	1978	-	Apr	Sun>=1	0:00	1:00	S
+Rule	Turkey	1977	only	-	Oct	16	0:00	0	-
+Rule	Turkey	1979	1980	-	Apr	Sun>=1	3:00	1:00	S
+Rule	Turkey	1979	1982	-	Oct	Mon>=11	0:00	0	-
+Rule	Turkey	1981	1982	-	Mar	lastSun	3:00	1:00	S
+Rule	Turkey	1983	only	-	Jul	31	0:00	1:00	S
+Rule	Turkey	1983	only	-	Oct	 2	0:00	0	-
+Rule	Turkey	1985	only	-	Apr	20	0:00	1:00	S
+Rule	Turkey	1985	only	-	Sep	28	0:00	0	-
+Rule	Turkey	1986	1990	-	Mar	lastSun	2:00s	1:00	S
+Rule	Turkey	1986	1990	-	Sep	lastSun	2:00s	0	-
+Rule	Turkey	1991	2006	-	Mar	lastSun	1:00s	1:00	S
+Rule	Turkey	1991	1995	-	Sep	lastSun	1:00s	0	-
+Rule	Turkey	1996	2006	-	Oct	lastSun	1:00s	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	Europe/Istanbul	1:55:52 -	LMT	1880
+			1:56:56	-	IMT	1910 Oct # Istanbul Mean Time?
+			2:00	Turkey	EE%sT	1978 Oct 15
+			3:00	Turkey	TR%sT	1985 Apr 20 # Turkey Time
+			2:00	Turkey	EE%sT	2007
+			2:00	EU	EE%sT
+Link	Europe/Istanbul	Asia/Istanbul	# Istanbul is in both continents.
+
+# Ukraine
+#
+# From Igor Karpov, who works for the Ukranian Ministry of Justice,
+# via Garrett Wollman (2003-01-27):
+# BTW, I've found the official document on this matter. It's goverment
+# regulations number 509, May 13, 1996. In my poor translation it says:
+# "Time in Ukraine is set to second timezone (Kiev time). Each last Sunday
+# of March at 3am the time is changing to 4am and each last Sunday of
+# October the time at 4am is changing to 3am"
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+# Most of Ukraine since 1970 has been like Kiev.
+# "Kyiv" is the transliteration of the Ukrainian name, but
+# "Kiev" is more common in English.
+Zone Europe/Kiev	2:02:04 -	LMT	1880
+			2:02:04	-	KMT	1924 May  2 # Kiev Mean Time
+			2:00	-	EET	1930 Jun 21
+			3:00	-	MSK	1941 Sep 20
+			1:00	C-Eur	CE%sT	1943 Nov  6
+			3:00	Russia	MSK/MSD	1990
+			3:00	-	MSK	1990 Jul  1 2:00
+			2:00	-	EET	1992
+			2:00	E-Eur	EE%sT	1995
+			2:00	EU	EE%sT
+# Ruthenia used CET 1990/1991.
+# "Uzhhorod" is the transliteration of the Ukrainian name, but
+# "Uzhgorod" is more common in English.
+Zone Europe/Uzhgorod	1:29:12 -	LMT	1890 Oct
+			1:00	-	CET	1940
+			1:00	C-Eur	CE%sT	1944 Oct
+			1:00	1:00	CEST	1944 Oct 26
+			1:00	-	CET	1945 Jun 29
+			3:00	Russia	MSK/MSD	1990
+			3:00	-	MSK	1990 Jul  1 2:00
+			1:00	-	CET	1991 Mar 31 3:00
+			2:00	-	EET	1992
+			2:00	E-Eur	EE%sT	1995
+			2:00	EU	EE%sT
+# Zaporozh'ye and eastern Lugansk oblasts observed DST 1990/1991.
+# "Zaporizhia" is the transliteration of the Ukrainian name, but
+# "Zaporozh'ye" is more common in English.  Use the common English
+# spelling, except omit the apostrophe as it is not allowed in
+# portable Posix file names.
+Zone Europe/Zaporozhye	2:20:40 -	LMT	1880
+			2:20	-	CUT	1924 May  2 # Central Ukraine T
+			2:00	-	EET	1930 Jun 21
+			3:00	-	MSK	1941 Aug 25
+			1:00	C-Eur	CE%sT	1943 Oct 25
+			3:00	Russia	MSK/MSD	1991 Mar 31 2:00
+			2:00	E-Eur	EE%sT	1995
+			2:00	EU	EE%sT
+# Central Crimea used Moscow time 1994/1997.
+Zone Europe/Simferopol	2:16:24 -	LMT	1880
+			2:16	-	SMT	1924 May  2 # Simferopol Mean T
+			2:00	-	EET	1930 Jun 21
+			3:00	-	MSK	1941 Nov
+			1:00	C-Eur	CE%sT	1944 Apr 13
+			3:00	Russia	MSK/MSD	1990
+			3:00	-	MSK	1990 Jul  1 2:00
+			2:00	-	EET	1992
+# From Paul Eggert (2006-03-22):
+# The _Economist_ (1994-05-28, p 45) reports that central Crimea switched
+# from Kiev to Moscow time sometime after the January 1994 elections.
+# Shanks (1999) says ``date of change uncertain'', but implies that it happened
+# sometime between the 1994 DST switches.  Shanks & Pottenger simply say
+# 1994-09-25 03:00, but that can't be right.  For now, guess it
+# changed in May.
+			2:00	E-Eur	EE%sT	1994 May
+# From IATA SSIM (1994/1997), which also says that Kerch is still like Kiev.
+			3:00	E-Eur	MSK/MSD	1996 Mar 31 3:00s
+			3:00	1:00	MSD	1996 Oct 27 3:00s
+# IATA SSIM (1997-09) says Crimea switched to EET/EEST.
+# Assume it happened in March by not changing the clocks.
+			3:00	Russia	MSK/MSD	1997
+			3:00	-	MSK	1997 Mar lastSun 1:00u
+			2:00	EU	EE%sT
+
+###############################################################################
+
+# One source shows that Bulgaria, Cyprus, Finland, and Greece observe DST from
+# the last Sunday in March to the last Sunday in September in 1986.
+# The source shows Romania changing a day later than everybody else.
+#
+# According to Bernard Sieloff's source, Poland is in the MET time zone but
+# uses the WE DST rules.  The Western USSR uses EET+1 and ME DST rules.
+# Bernard Sieloff's source claims Romania switches on the same day, but at
+# 00:00 standard time (i.e., 01:00 DST).  It also claims that Turkey
+# switches on the same day, but switches on at 01:00 standard time
+# and off at 00:00 standard time (i.e., 01:00 DST)
+
+# ...
+# Date: Wed, 28 Jan 87 16:56:27 -0100
+# From: Tom Hofmann
+# ...
+#
+# ...the European time rules are...standardized since 1981, when
+# most European coun[tr]ies started DST.  Before that year, only
+# a few countries (UK, France, Italy) had DST, each according
+# to own national rules.  In 1981, however, DST started on
+# 'Apr firstSun', and not on 'Mar lastSun' as in the following
+# years...
+# But also since 1981 there are some more national exceptions
+# than listed in 'europe': Switzerland, for example, joined DST
+# one year later, Denmark ended DST on 'Oct 1' instead of 'Sep
+# lastSun' in 1981---I don't know how they handle now.
+#
+# Finally, DST ist always from 'Apr 1' to 'Oct 1' in the
+# Soviet Union (as far as I know).
+#
+# Tom Hofmann, Scientific Computer Center, CIBA-GEIGY AG,
+# 4002 Basle, Switzerland
+# ...
+
+# ...
+# Date: Wed, 4 Feb 87 22:35:22 +0100
+# From: Dik T. Winter
+# ...
+#
+# The information from Tom Hofmann is (as far as I know) not entirely correct.
+# After a request from chongo at amdahl I tried to retrieve all information
+# about DST in Europe.  I was able to find all from about 1969.
+#
+# ...standardization on DST in Europe started in about 1977 with switches on
+# first Sunday in April and last Sunday in September...
+# In 1981 UK joined Europe insofar that
+# the starting day for both shifted to last Sunday in March.  And from 1982
+# the whole of Europe used DST, with switch dates April 1 and October 1 in
+# the Sov[i]et Union.  In 1985 the SU reverted to standard Europe[a]n switch
+# dates...
+#
+# It should also be remembered that time-zones are not constants; e.g.
+# Portugal switched in 1976 from MET (or CET) to WET with DST...
+# Note also that though there were rules for switch dates not
+# all countries abided to these dates, and many individual deviations
+# occurred, though not since 1982 I believe.  Another note: it is always
+# assumed that DST is 1 hour ahead of normal time, this need not be the
+# case; at least in the Netherlands there have been times when DST was 2 hours
+# in advance of normal time.
+#
+# ...
+# dik t. winter, cwi, amsterdam, nederland
+# ...
+
+# From Bob Devine (1988-01-28):
+# ...
+# Greece: Last Sunday in April to last Sunday in September (iffy on dates).
+# Since 1978.  Change at midnight.
+# ...
+# Monaco: has same DST as France.
+# ...
diff --git a/JodaTime/src/java/org/joda/time/tz/src/northamerica b/JodaTime/src/java/org/joda/time/tz/src/northamerica
index f152549d1..7dfd064f2 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/northamerica
+++ b/JodaTime/src/java/org/joda/time/tz/src/northamerica
@@ -1,2651 +1,2897 @@
-# @(#)northamerica	8.24
-# <pre>
-
-# also includes Central America and the Caribbean
-
-# This data is by no means authoritative; if you think you know better,
-# go ahead and edit the file (and please send any changes to
-# tz@elsie.nci.nih.gov for general use in the future).
-
-# From Paul Eggert (1999-03-22):
-# A reliable and entertaining source about time zones is
-# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).
-
-###############################################################################
-
-# United States
-
-# From Paul Eggert (1999-03-31):
-# Howse writes (pp 121-125) that time zones were invented by
-# Professor Charles Ferdinand Dowd (1825-1904),
-# Principal of Temple Grove Ladies' Seminary (Saratoga Springs, NY).
-# His pamphlet ``A System of National Time for Railroads'' (1870)
-# was the result of his proposals at the Convention of Railroad Trunk Lines
-# in New York City (1869-10).  His 1870 proposal was based on Washington, DC,
-# but in 1872-05 he moved the proposed origin to Greenwich.
-# His proposal was adopted by the railroads on 1883-11-18 at 12:00,
-# and the most of the country soon followed suit.
-
-# From Paul Eggert (2005-04-16):
-# That 1883 transition occurred at 12:00 new time, not at 12:00 old time.
-# See p 46 of David Prerau, Seize the daylight, Thunder's Mouth Press (2005).
-
-# From Paul Eggert (2006-03-22):
-# A good source for time zone historical data in the US is
-# Thomas G. Shanks, The American Atlas (5th edition),
-# San Diego: ACS Publications, Inc. (1991).
-# Make sure you have the errata sheet; the book is somewhat useless without it.
-# It is the source for most of the pre-1991 US entries below.
-
-# From Paul Eggert (2001-03-06):
-# Daylight Saving Time was first suggested as a joke by Benjamin Franklin
-# in his whimsical essay ``An Economical Project for Diminishing the Cost
-# of Light'' published in the Journal de Paris (1784-04-26).
-# Not everyone is happy with the results:
-#
-#	I don't really care how time is reckoned so long as there is some
-#	agreement about it, but I object to being told that I am saving
-#	daylight when my reason tells me that I am doing nothing of the kind.
-#	I even object to the implication that I am wasting something
-#	valuable if I stay in bed after the sun has risen.  As an admirer
-#	of moonlight I resent the bossy insistence of those who want to
-#	reduce my time for enjoying it.  At the back of the Daylight Saving
-#	scheme I detect the bony, blue-fingered hand of Puritanism, eager
-#	to push people into bed earlier, and get them up earlier, to make
-#	them healthy, wealthy and wise in spite of themselves.
-#
-#	-- Robertson Davies, The diary of Samuel Marchbanks,
-#	   Clarke, Irwin (1947), XIX, Sunday
-#
-# For more about the first ten years of DST in the United States, see
-# Robert Garland's <a href="http://www.clpgh.org/exhibit/dst.html">
-# Ten years of daylight saving from the Pittsburgh standpoint
-# (Carnegie Library of Pittsburgh, 1927)</a>.
-#
-# Shanks says that DST was called "War Time" in the US in 1918 and 1919.
-# However, DST was imposed by the Standard Time Act of 1918, which
-# was the first nationwide legal time standard, and apparently
-# time was just called "Standard Time" or "Daylight Saving Time".
-
-# From Arthur David Olson:
-# US Daylight Saving Time ended on the last Sunday of *October* in 1974.
-# See, for example, the front page of the Saturday, 1974-10-26
-# and Sunday, 1974-10-27 editions of the Washington Post.
-
-# From Arthur David Olson:
-# Before the Uniform Time Act of 1966 took effect in 1967, observance of
-# Daylight Saving Time in the US was by local option, except during wartime.
-
-# From Arthur David Olson (2000-09-25):
-# Last night I heard part of a rebroadcast of a 1945 Arch Oboler radio drama.
-# In the introduction, Oboler spoke of "Eastern Peace Time."
-# An AltaVista search turned up
-# <a href="http://rowayton.org/rhs/hstaug45.html">:
-# "When the time is announced over the radio now, it is 'Eastern Peace
-# Time' instead of the old familiar 'Eastern War Time.'  Peace is wonderful."
-# </a> (August 1945) by way of confirmation.
-
-# From Joseph Gallant citing
-# George H. Douglas, _The Early Days of Radio Broadcasting_ (1987):
-# At 7 P.M. (Eastern War Time) [on 1945-08-14], the networks were set
-# to switch to London for Attlee's address, but the American people
-# never got to hear his speech live. According to one press account,
-# CBS' Bob Trout was first to announce the word of Japan's surrender,
-# but a few seconds later, NBC, ABC and Mutual also flashed the word
-# of surrender, all of whom interrupting the bells of Big Ben in
-# London which were to precede Mr. Attlee's speech.
-
-# From Paul Eggert (2003-02-09): It was Robert St John, not Bob Trout.  From
-# Myrna Oliver's obituary of St John on page B16 of today's Los Angeles Times:
-#
-# ... a war-weary U.S. clung to radios, awaiting word of Japan's surrender.
-# Any announcement from Asia would reach St. John's New York newsroom on a
-# wire service teletype machine, which had prescribed signals for major news.
-# Associated Press, for example, would ring five bells before spewing out
-# typed copy of an important story, and 10 bells for news "of transcendental
-# importance."
-#
-# On Aug. 14, stalling while talking steadily into the NBC networks' open
-# microphone, St. John heard five bells and waited only to hear a sixth bell,
-# before announcing confidently: "Ladies and gentlemen, World War II is over.
-# The Japanese have agreed to our surrender terms."
-#
-# He had scored a 20-second scoop on other broadcasters.
-
-# From Arthur David Olson (2005-08-22):
-# Paul has been careful to use the "US" rules only in those locations
-# that are part of the United States; this reflects the real scope of
-# U.S. government action.  So even though the "US" rules have changed
-# in the latest release, other countries won't be affected.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	US	1918	1919	-	Mar	lastSun	2:00	1:00	D
-Rule	US	1918	1919	-	Oct	lastSun	2:00	0	S
-Rule	US	1942	only	-	Feb	9	2:00	1:00	W # War
-Rule	US	1945	only	-	Aug	14	23:00u	1:00	P # Peace
-Rule	US	1945	only	-	Sep	30	2:00	0	S
-Rule	US	1967	2006	-	Oct	lastSun	2:00	0	S
-Rule	US	1967	1973	-	Apr	lastSun	2:00	1:00	D
-Rule	US	1974	only	-	Jan	6	2:00	1:00	D
-Rule	US	1975	only	-	Feb	23	2:00	1:00	D
-Rule	US	1976	1986	-	Apr	lastSun	2:00	1:00	D
-Rule	US	1987	2006	-	Apr	Sun>=1	2:00	1:00	D
-Rule	US	2007	max	-	Mar	Sun>=8	2:00	1:00	D
-Rule	US	2007	max	-	Nov	Sun>=1	2:00	0	S
-
-# From Arthur David Olson, 2005-12-19
-# We generate the files specified below to guard against old files with
-# obsolete information being left in the time zone binary directory.
-# We limit the list to names that have appeared in previous versions of
-# this time zone package.
-# We do these as separate Zones rather than as Links to avoid problems if
-# a particular place changes whether it observes DST.
-# We put these specifications here in the northamerica file both to
-# increase the chances that they'll actually get compiled and to
-# avoid the need to duplicate the US rules in another file.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	EST		 -5:00	-	EST
-Zone	MST		 -7:00	-	MST
-Zone	HST		-10:00	-	HST
-Zone	EST5EDT		 -5:00	US	E%sT
-Zone	CST6CDT		 -6:00	US	C%sT
-Zone	MST7MDT		 -7:00	US	M%sT
-Zone	PST8PDT		 -8:00	US	P%sT
-
-# From Bob Devine (1988-01-28):
-# ...Alaska (and Hawaii) had the timezone names changed in 1967.
-#    old			 new
-#    Pacific Standard Time(PST)  -same-
-#    Yukon Standard Time(YST)    -same-
-#    Central Alaska S.T. (CAT)   Alaska-Hawaii St[an]dard Time (AHST)
-#    Nome Standard Time (NT)     Bering Standard Time (BST)
-#
-# ...Alaska's timezone lines were redrawn in 1983 to give only 2 tz.
-#    The YST zone now covers nearly all of the state, AHST just part
-#    of the Aleutian islands.   No DST.
-
-# From Paul Eggert (1995-12-19):
-# The tables below use `NST', not `NT', for Nome Standard Time.
-# I invented `CAWT' for Central Alaska War Time.
-
-# From U. S. Naval Observatory (1989-01-19):
-# USA  EASTERN       5 H  BEHIND UTC    NEW YORK, WASHINGTON
-# USA  EASTERN       4 H  BEHIND UTC    APR 3 - OCT 30
-# USA  CENTRAL       6 H  BEHIND UTC    CHICAGO, HOUSTON
-# USA  CENTRAL       5 H  BEHIND UTC    APR 3 - OCT 30
-# USA  MOUNTAIN      7 H  BEHIND UTC    DENVER
-# USA  MOUNTAIN      6 H  BEHIND UTC    APR 3 - OCT 30
-# USA  PACIFIC       8 H  BEHIND UTC    L.A., SAN FRANCISCO
-# USA  PACIFIC       7 H  BEHIND UTC    APR 3 - OCT 30
-# USA  ALASKA STD    9 H  BEHIND UTC    MOST OF ALASKA     (AKST)
-# USA  ALASKA STD    8 H  BEHIND UTC    APR 3 - OCT 30 (AKDT)
-# USA  ALEUTIAN     10 H  BEHIND UTC    ISLANDS WEST OF 170W
-# USA  - " -         9 H  BEHIND UTC    APR 3 - OCT 30
-# USA  HAWAII       10 H  BEHIND UTC
-# USA  BERING       11 H  BEHIND UTC    SAMOA, MIDWAY
-
-# From Arthur David Olson (1989-01-21):
-# The above dates are for 1988.
-# Note the "AKST" and "AKDT" abbreviations, the claim that there's
-# no DST in Samoa, and the claim that there is DST in Alaska and the
-# Aleutians.
-
-# From Arthur David Olson (1988-02-13):
-# Legal standard time zone names, from United States Code (1982 Edition and
-# Supplement III), Title 15, Chapter 6, Section 260 and forward.  First, names
-# up to 1967-04-01 (when most provisions of the Uniform Time Act of 1966
-# took effect), as explained in sections 263 and 261:
-#	(none)
-#	United States standard eastern time
-#	United States standard mountain time
-#	United States standard central time
-#	United States standard Pacific time
-#	(none)
-#	United States standard Alaska time
-#	(none)
-# Next, names from 1967-04-01 until 1983-11-30 (the date for
-# public law 98-181):
-#	Atlantic standard time
-#	eastern standard time
-#	central standard time
-#	mountain standard time
-#	Pacific standard time
-#	Yukon standard time
-#	Alaska-Hawaii standard time
-#	Bering standard time
-# And after 1983-11-30:
-#	Atlantic standard time
-#	eastern standard time
-#	central standard time
-#	mountain standard time
-#	Pacific standard time
-#	Alaska standard time
-#	Hawaii-Aleutian standard time
-#	Samoa standard time
-# The law doesn't give abbreviations.
-#
-# From Paul Eggert (2000-01-08), following a heads-up from Rives McDow:
-# Public law 106-564 (2000-12-23) introduced the abbreviation
-# "Chamorro Standard Time" for time in Guam and the Northern Marianas.
-# See the file "australasia".
-
-# From Arthur David Olson, 2005-08-09
-# The following was signed into law on 2005-08-08.
-#
-# H.R. 6, Energy Policy Act of 2005, SEC. 110. DAYLIGHT SAVINGS.
-#   (a) Amendment- Section 3(a) of the Uniform Time Act of 1966 (15
-#   U.S.C. 260a(a)) is amended--
-#     (1) by striking `first Sunday of April' and inserting `second
-#     Sunday of March'; and
-#     (2) by striking `last Sunday of October' and inserting `first
-#     Sunday of November'.
-#   (b) Effective Date- Subsection (a) shall take effect 1 year after the
-#   date of enactment of this Act or March 1, 2007, whichever is later.
-#   (c) Report to Congress- Not later than 9 months after the effective
-#   date stated in subsection (b), the Secretary shall report to Congress
-#   on the impact of this section on energy consumption in the United
-#   States.
-#   (d) Right to Revert- Congress retains the right to revert the
-#   Daylight Saving Time back to the 2005 time schedules once the
-#   Department study is complete.
-
-# US eastern time, represented by New York
-
-# Connecticut, Delaware, District of Columbia, most of Florida,
-# Georgia, southeast Indiana (Dearborn and Ohio counties), eastern Kentucky
-# (except America/Kentucky/Louisville below), Maine, Maryland, Massachusetts,
-# New Hampshire, New Jersey, New York, North Carolina, Ohio,
-# Pennsylvania, Rhode Island, South Carolina, eastern Tennessee,
-# Vermont, Virginia, West Virginia
-
-# From Dave Cantor (2004-11-02):
-# Early this summer I had the occasion to visit the Mount Washington
-# Observatory weather station atop (of course!) Mount Washington [, NH]....
-# One of the staff members said that the station was on Eastern Standard Time
-# and didn't change their clocks for Daylight Saving ... so that their
-# reports will always have times which are 5 hours behind UTC.
-
-# From Paul Eggert (2005-08-26):
-# According to today's Huntsville Times
-# <http://www.al.com/news/huntsvilletimes/index.ssf?/base/news/1125047783228320.xml&coll=1>
-# a few towns on Alabama's "eastern border with Georgia, such as Phenix City
-# in Russell County, Lanett in Chambers County and some towns in Lee County,
-# set their watches and clocks on Eastern time."  It quotes H.H. "Bubba"
-# Roberts, city administrator in Phenix City. as saying "We are in the Central
-# time zone, but we do go by the Eastern time zone because so many people work
-# in Columbus."
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule	NYC	1920	only	-	Mar	lastSun	2:00	1:00	D
-Rule	NYC	1920	only	-	Oct	lastSun	2:00	0	S
-Rule	NYC	1921	1966	-	Apr	lastSun	2:00	1:00	D
-Rule	NYC	1921	1954	-	Sep	lastSun	2:00	0	S
-Rule	NYC	1955	1966	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/New_York	-4:56:02 -	LMT	1883 Nov 18 12:03:58
-			-5:00	US	E%sT	1920
-			-5:00	NYC	E%sT	1942
-			-5:00	US	E%sT	1946
-			-5:00	NYC	E%sT	1967
-			-5:00	US	E%sT
-
-# US central time, represented by Chicago
-
-# Alabama, Arkansas, Florida panhandle (Bay, Calhoun, Escambia,
-# Gulf, Holmes, Jackson, Okaloosa, Santa Rosa, Walton, and
-# Washington counties), Illinois, western Indiana
-# (Gibson, Jasper, Lake, LaPorte, Newton, Porter, Posey, Spencer,
-# Vanderburgh, and Warrick counties), Iowa, most of Kansas, western
-# Kentucky, Louisiana, Minnesota, Mississippi, Missouri, eastern
-# Nebraska, eastern North Dakota, Oklahoma, eastern South Dakota,
-# western Tennessee, most of Texas, Wisconsin
-
-# From Larry M. Smith (2006-04-26) re Wisconsin:
-# http://www.legis.state.wi.us/statutes/Stat0175.pdf ...
-# is currently enforced at the 01:00 time of change.  Because the local
-# "bar time" in the state corresponds to 02:00, a number of citations
-# are issued for the "sale of class 'B' alcohol after prohibited
-# hours" within the deviated hour of this change every year....
-#
-# From Douglas R. Bomberg (2007-03-12):
-# Wisconsin has enacted (nearly eleventh-hour) legislation to get WI
-# Statue 175 closer in synch with the US Congress' intent....
-# http://www.legis.state.wi.us/2007/data/acts/07Act3.pdf
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule	Chicago	1920	only	-	Jun	13	2:00	1:00	D
-Rule	Chicago	1920	1921	-	Oct	lastSun	2:00	0	S
-Rule	Chicago	1921	only	-	Mar	lastSun	2:00	1:00	D
-Rule	Chicago	1922	1966	-	Apr	lastSun	2:00	1:00	D
-Rule	Chicago	1922	1954	-	Sep	lastSun	2:00	0	S
-Rule	Chicago	1955	1966	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Chicago	-5:50:36 -	LMT	1883 Nov 18 12:09:24
-			-6:00	US	C%sT	1920
-			-6:00	Chicago	C%sT	1936 Mar  1 2:00
-			-5:00	-	EST	1936 Nov 15 2:00
-			-6:00	Chicago	C%sT	1942
-			-6:00	US	C%sT	1946
-			-6:00	Chicago	C%sT	1967
-			-6:00	US	C%sT
-# Oliver County, ND switched from mountain to central time on 1992-10-25.
-Zone America/North_Dakota/Center -6:45:12 - LMT	1883 Nov 18 12:14:48
-			-7:00	US	M%sT	1992 Oct 25 02:00
-			-6:00	US	C%sT
-# Morton County, ND, switched from mountain to central time on
-# 2003-10-26, except for the area around Mandan which was already central time.
-# See <http://dmses.dot.gov/docimages/p63/135818.pdf>.
-# Officially this switch also included part of Sioux County, and
-# Jones, Mellette, and Todd Counties in South Dakota;
-# but in practice these other counties were already observing central time.
-# See <http://www.epa.gov/fedrgstr/EPA-IMPACT/2003/October/Day-28/i27056.htm>.
-Zone America/North_Dakota/New_Salem -6:45:39 - LMT 1883 Nov 18 12:14:21
-			-7:00	US	M%sT	2003 Oct 26 02:00
-			-6:00	US	C%sT
-
-# US mountain time, represented by Denver
-#
-# Colorado, far western Kansas, Montana, western
-# Nebraska, Nevada border (Jackpot, Owyhee, and Mountain City),
-# New Mexico, southwestern North Dakota,
-# western South Dakota, far western Texas (El Paso County, Hudspeth County,
-# and Pine Springs and Nickel Creek in Culberson County), Utah, Wyoming
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule	Denver	1920	1921	-	Mar	lastSun	2:00	1:00	D
-Rule	Denver	1920	only	-	Oct	lastSun	2:00	0	S
-Rule	Denver	1921	only	-	May	22	2:00	0	S
-Rule	Denver	1965	1966	-	Apr	lastSun	2:00	1:00	D
-Rule	Denver	1965	1966	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Denver	-6:59:56 -	LMT	1883 Nov 18 12:00:04
-			-7:00	US	M%sT	1920
-			-7:00	Denver	M%sT	1942
-			-7:00	US	M%sT	1946
-			-7:00	Denver	M%sT	1967
-			-7:00	US	M%sT
-
-# US Pacific time, represented by Los Angeles
-#
-# California, northern Idaho (Benewah, Bonner, Boundary, Clearwater,
-# Idaho, Kootenai, Latah, Lewis, Nez Perce, and Shoshone counties,
-# and the northern three-quarters of Idaho county),
-# most of Nevada, most of Oregon, and Washington
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule	CA	1948	only	-	Mar	14	2:00	1:00	D
-Rule	CA	1949	only	-	Jan	 1	2:00	0	S
-Rule	CA	1950	1966	-	Apr	lastSun	2:00	1:00	D
-Rule	CA	1950	1961	-	Sep	lastSun	2:00	0	S
-Rule	CA	1962	1966	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Los_Angeles -7:52:58 -	LMT	1883 Nov 18 12:07:02
-			-8:00	US	P%sT	1946
-			-8:00	CA	P%sT	1967
-			-8:00	US	P%sT
-
-# Alaska
-# AK%sT is the modern abbreviation for -9:00 per USNO.
-#
-# From Paul Eggert (2001-05-30):
-# Howse writes that Alaska switched from the Julian to the Gregorian calendar,
-# and from east-of-GMT to west-of-GMT days, when the US bought it from Russia.
-# This was on 1867-10-18, a Friday; the previous day was 1867-10-06 Julian,
-# also a Friday.  Include only the time zone part of this transition,
-# ignoring the switch from Julian to Gregorian, since we can't represent
-# the Julian calendar.
-#
-# As far as we know, none of the exact locations mentioned below were
-# permanently inhabited in 1867 by anyone using either calendar.
-# (Yakutat was colonized by the Russians in 1799, but the settlement
-# was destroyed in 1805 by a Yakutat-kon war party.)  However, there
-# were nearby inhabitants in some cases and for our purposes perhaps
-# it's best to simply use the official transition.
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Juneau	 15:02:19 -	LMT	1867 Oct 18
-			 -8:57:41 -	LMT	1900 Aug 20 12:00
-			 -8:00	-	PST	1942
-			 -8:00	US	P%sT	1946
-			 -8:00	-	PST	1969
-			 -8:00	US	P%sT	1983 Oct 30 2:00
-			 -9:00	US	Y%sT	1983 Nov 30
-			 -9:00	US	AK%sT
-Zone America/Yakutat	 14:41:05 -	LMT	1867 Oct 18
-			 -9:18:55 -	LMT	1900 Aug 20 12:00
-			 -9:00	-	YST	1942
-			 -9:00	US	Y%sT	1946
-			 -9:00	-	YST	1969
-			 -9:00	US	Y%sT	1983 Nov 30
-			 -9:00	US	AK%sT
-Zone America/Anchorage	 14:00:24 -	LMT	1867 Oct 18
-			 -9:59:36 -	LMT	1900 Aug 20 12:00
-			-10:00	-	CAT	1942
-			-10:00	US	CAT/CAWT 1945 Aug 14 23:00u
-			-10:00	US	CAT/CAPT 1946 # Peace
-			-10:00	-	CAT	1967 Apr
-			-10:00	-	AHST	1969
-			-10:00	US	AH%sT	1983 Oct 30 2:00
-			 -9:00	US	Y%sT	1983 Nov 30
-			 -9:00	US	AK%sT
-Zone America/Nome	 12:58:21 -	LMT	1867 Oct 18
-			-11:01:38 -	LMT	1900 Aug 20 12:00
-			-11:00	-	NST	1942
-			-11:00	US	N%sT	1946
-			-11:00	-	NST	1967 Apr
-			-11:00	-	BST	1969
-			-11:00	US	B%sT	1983 Oct 30 2:00
-			 -9:00	US	Y%sT	1983 Nov 30
-			 -9:00	US	AK%sT
-Zone America/Adak	 12:13:21 -	LMT	1867 Oct 18
-			-11:46:38 -	LMT	1900 Aug 20 12:00
-			-11:00	-	NST	1942
-			-11:00	US	N%sT	1946
-			-11:00	-	NST	1967 Apr
-			-11:00	-	BST	1969
-			-11:00	US	B%sT	1983 Oct 30 2:00
-			-10:00	US	AH%sT	1983 Nov 30
-			-10:00	US	HA%sT
-# The following switches don't quite make our 1970 cutoff.
-#
-# Shanks writes that part of southwest Alaska (e.g. Aniak)
-# switched from -11:00 to -10:00 on 1968-09-22 at 02:00,
-# and another part (e.g. Akiak) made the same switch five weeks later.
-#
-# From David Flater (2004-11-09):
-# In e-mail, 2004-11-02, Ray Hudson, historian/liaison to the Unalaska
-# Historic Preservation Commission, provided this information, which
-# suggests that Unalaska deviated from statutory time from early 1967
-# possibly until 1983:
-#
-#  Minutes of the Unalaska City Council Meeting, January 10, 1967:
-#  "Except for St. Paul and Akutan, Unalaska is the only important
-#  location not on Alaska Standard Time.  The following resolution was
-#  made by William Robinson and seconded by Henry Swanson:  Be it
-#  resolved that the City of Unalaska hereby goes to Alaska Standard
-#  Time as of midnight Friday, January 13, 1967 (1 A.M. Saturday,
-#  January 14, Alaska Standard Time.)  This resolution was passed with
-#  three votes for and one against."
-
-# Hawaii
-#
-# From Arthur David Olson:
-# And then there's Hawaii.
-# DST was observed for one day in 1933;
-# standard time was changed by half an hour in 1947;
-# it's always standard as of 1986.
-#
-# From Paul Eggert:
-# Shanks says the 1933 experiment lasted for three weeks.  Go with Shanks.
-#
-Zone Pacific/Honolulu	-10:31:26 -	LMT	1900 Jan  1 12:00
-			-10:30	-	HST	1933 Apr 30 2:00
-			-10:30	1:00	HDT	1933 May 21 2:00
-			-10:30	US	H%sT	1947 Jun  8 2:00
-			-10:00	-	HST
-
-# Now we turn to US areas that have diverged from the consensus since 1970.
-
-# Arizona mostly uses MST.
-
-# From Paul Eggert (2002-10-20):
-#
-# The information in the rest of this paragraph is derived from the
-# <a href="http://www.dlapr.lib.az.us/links/daylight.htm">
-# Daylight Saving Time web page (2002-01-23)</a> maintained by the
-# Arizona State Library, Archives and Public Records.
-# Between 1944-01-01 and 1944-04-01 the State of Arizona used standard
-# time, but by federal law railroads, airlines, bus lines, military
-# personnel, and some engaged in interstate commerce continued to
-# observe war (i.e., daylight saving) time.  The 1944-03-17 Phoenix
-# Gazette says that was the date the law changed, and that 04-01 was
-# the date the state's clocks would change.  In 1945 the State of
-# Arizona used standard time all year, again with exceptions only as
-# mandated by federal law.  Arizona observed DST in 1967, but Arizona
-# Laws 1968, ch. 183 (effective 1968-03-21) repealed DST.
-#
-# Shanks says the 1944 experiment came to an end on 1944-03-17.
-# Go with the Arizona State Library instead.
-
-Zone America/Phoenix	-7:28:18 -	LMT	1883 Nov 18 11:31:42
-			-7:00	US	M%sT	1944 Jan  1 00:01
-			-7:00	-	MST	1944 Apr  1 00:01
-			-7:00	US	M%sT	1944 Oct  1 00:01
-			-7:00	-	MST	1967
-			-7:00	US	M%sT	1968 Mar 21
-			-7:00	-	MST
-# From Arthur David Olson (1988-02-13):
-# A writer from the Inter Tribal Council of Arizona, Inc.,
-# notes in private correspondence dated 1987-12-28 that "Presently, only the
-# Navajo Nation participates in the Daylight Saving Time policy, due to its
-# large size and location in three states."  (The "only" means that other
-# tribal nations don't use DST.)
-
-Link America/Denver America/Shiprock
-
-# Southern Idaho (Ada, Adams, Bannock, Bear Lake, Bingham, Blaine,
-# Boise, Bonneville, Butte, Camas, Canyon, Caribou, Cassia, Clark,
-# Custer, Elmore, Franklin, Fremont, Gem, Gooding, Jefferson, Jerome,
-# Lemhi, Lincoln, Madison, Minidoka, Oneida, Owyhee, Payette, Power,
-# Teton, Twin Falls, Valley, Washington counties, and the southern
-# quarter of Idaho county) and eastern Oregon (most of Malheur County)
-# switched four weeks late in 1974.
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Boise	-7:44:49 -	LMT	1883 Nov 18 12:15:11
-			-8:00	US	P%sT	1923 May 13 2:00
-			-7:00	US	M%sT	1974
-			-7:00	-	MST	1974 Feb  3 2:00
-			-7:00	US	M%sT
-
-# Indiana
-#
-# For a map of Indiana's time zone regions, see:
-# <a href="http://www.mccsc.edu/time.html">
-# What time is it in Indiana?
-# </a> (2006-03-01)
-#
-# From Paul Eggert (2007-08-17):
-# Since 1970, most of Indiana has been like America/Indiana/Indianapolis,
-# with the following exceptions:
-#
-# - Gibson, Jasper, Lake, LaPorte, Newton, Porter, Posey, Spencer,
-#   Vandenburgh, and Warrick counties have been like America/Chicago.
-#
-# - Dearborn and Ohio counties have been like America/New_York.
-#
-# - Clark, Floyd, and Harrison counties have been like
-#   America/Kentucky/Louisville.
-#
-# - Crawford, Daviess, Dubois, Knox, Martin, Perry, Pike, Pulaski, Starke,
-#   and Switzerland counties have their own time zone histories as noted below.
-#
-# Shanks partitioned Indiana into 345 regions, each with its own time history,
-# and wrote ``Even newspaper reports present contradictory information.''
-# Those Hoosiers!  Such a flighty and changeable people!
-# Fortunately, most of the complexity occurred before our cutoff date of 1970.
-#
-# Other than Indianapolis, the Indiana place names are so nondescript
-# that they would be ambiguous if we left them at the `America' level.
-# So we reluctantly put them all in a subdirectory `America/Indiana'.
-
-# From Paul Eggert (2005-08-16):
-# http://www.mccsc.edu/time.html says that Indiana will use DST starting 2006.
-
-# From Nathan Stratton Treadway (2006-03-30):
-# http://www.dot.gov/affairs/dot0406.htm [3705 B]
-# From Deborah Goldsmith (2006-01-18):
-# http://dmses.dot.gov/docimages/pdf95/382329_web.pdf [2.9 MB]
-# From Paul Eggert (2006-01-20):
-# It says "DOT is relocating the time zone boundary in Indiana to move Starke,
-# Pulaski, Knox, Daviess, Martin, Pike, Dubois, and Perry Counties from the
-# Eastern Time Zone to the Central Time Zone.... The effective date of
-# this rule is 2:OO a.m. EST Sunday, April 2, 2006, which is the
-# changeover date from standard time to Daylight Saving Time."
-# Strictly speaking, this means the affected counties will change their
-# clocks twice that night, but this obviously is in error.  The intent
-# is that 01:59:59 EST be followed by 02:00:00 CDT.
-
-# From Gwillim Law (2007-02-10):
-# The Associated Press has been reporting that Pulaski County, Indiana is
-# going to switch from Central to Eastern Time on March 11, 2007....
-# http://www.indystar.com/apps/pbcs.dll/article?AID=/20070207/LOCAL190108/702070524/0/LOCAL
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule Indianapolis 1941	only	-	Jun	22	2:00	1:00	D
-Rule Indianapolis 1941	1954	-	Sep	lastSun	2:00	0	S
-Rule Indianapolis 1946	1954	-	Apr	lastSun	2:00	1:00	D
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Indiana/Indianapolis -5:44:38 - LMT 1883 Nov 18 12:15:22
-			-6:00	US	C%sT	1920
-			-6:00 Indianapolis C%sT	1942
-			-6:00	US	C%sT	1946
-			-6:00 Indianapolis C%sT	1955 Apr 24 2:00
-			-5:00	-	EST	1957 Sep 29 2:00
-			-6:00	-	CST	1958 Apr 27 2:00
-			-5:00	-	EST	1969
-			-5:00	US	E%sT	1971
-			-5:00	-	EST	2006
-			-5:00	US	E%sT
-#
-# Eastern Crawford County, Indiana, left its clocks alone in 1974,
-# as well as from 1976 through 2005.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule	Marengo	1951	only	-	Apr	lastSun	2:00	1:00	D
-Rule	Marengo	1951	only	-	Sep	lastSun	2:00	0	S
-Rule	Marengo	1954	1960	-	Apr	lastSun	2:00	1:00	D
-Rule	Marengo	1954	1960	-	Sep	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Indiana/Marengo -5:45:23 -	LMT	1883 Nov 18 12:14:37
-			-6:00	US	C%sT	1951
-			-6:00	Marengo	C%sT	1961 Apr 30 2:00
-			-5:00	-	EST	1969
-			-5:00	US	E%sT	1974 Jan  6 2:00
-			-6:00	1:00	CDT	1974 Oct 27 2:00
-			-5:00	US	E%sT	1976
-			-5:00	-	EST	2006
-			-5:00	US	E%sT
-#
-# Daviess, Dubois, Knox, and Martin Counties, Indiana,
-# switched from eastern to central time in April 2006, then switched back
-# in November 2007.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule Vincennes	1946	only	-	Apr	lastSun	2:00	1:00	D
-Rule Vincennes	1946	only	-	Sep	lastSun	2:00	0	S
-Rule Vincennes	1953	1954	-	Apr	lastSun	2:00	1:00	D
-Rule Vincennes	1953	1959	-	Sep	lastSun	2:00	0	S
-Rule Vincennes	1955	only	-	May	 1	0:00	1:00	D
-Rule Vincennes	1956	1963	-	Apr	lastSun	2:00	1:00	D
-Rule Vincennes	1960	only	-	Oct	lastSun	2:00	0	S
-Rule Vincennes	1961	only	-	Sep	lastSun	2:00	0	S
-Rule Vincennes	1962	1963	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Indiana/Vincennes -5:50:07 - LMT	1883 Nov 18 12:09:53
-			-6:00	US	C%sT	1946
-			-6:00 Vincennes	C%sT	1964 Apr 26 2:00
-			-5:00	-	EST	1969
-			-5:00	US	E%sT	1971
-			-5:00	-	EST	2006 Apr  2 2:00
-			-6:00	US	C%sT	2007 Nov  4 2:00
-			-5:00	US	E%sT
-#
-# Perry County, Indiana, switched from eastern to central time in April 2006.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule Perry	1946	only	-	Apr	lastSun	2:00	1:00	D
-Rule Perry	1946	only	-	Sep	lastSun	2:00	0	S
-Rule Perry	1953	1954	-	Apr	lastSun	2:00	1:00	D
-Rule Perry	1953	1959	-	Sep	lastSun	2:00	0	S
-Rule Perry	1955	only	-	May	 1	0:00	1:00	D
-Rule Perry	1956	1963	-	Apr	lastSun	2:00	1:00	D
-Rule Perry	1960	only	-	Oct	lastSun	2:00	0	S
-Rule Perry	1961	only	-	Sep	lastSun	2:00	0	S
-Rule Perry	1962	1963	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Indiana/Tell_City -5:47:03 - LMT	1883 Nov 18 12:12:57
-			-6:00	US	C%sT	1946
-			-6:00 Perry	C%sT	1964 Apr 26 2:00
-			-5:00	-	EST	1969
-			-5:00	US	E%sT	1971
-			-5:00	-	EST	2006 Apr  2 2:00
-			-6:00	US	C%sT
-#
-# Pike County, Indiana moved from central to eastern time in 1977,
-# then switched back in 2006, then switched back again in 2007.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule	Pike	1955	only	-	May	 1	0:00	1:00	D
-Rule	Pike	1955	1960	-	Sep	lastSun	2:00	0	S
-Rule	Pike	1956	1964	-	Apr	lastSun	2:00	1:00	D
-Rule	Pike	1961	1964	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Indiana/Petersburg -5:49:07 - LMT	1883 Nov 18 12:10:53
-			-6:00	US	C%sT	1955
-			-6:00	Pike	C%sT	1965 Apr 25 2:00
-			-5:00	-	EST	1966 Oct 30 2:00
-			-6:00	US	C%sT	1977 Oct 30 2:00
-			-5:00	-	EST	2006 Apr  2 2:00
-			-6:00	US	C%sT	2007 Nov  4 2:00
-			-5:00	US	E%sT
-#
-# Starke County, Indiana moved from central to eastern time in 1991,
-# then switched back in 2006.
-# From Arthur David Olson (1991-10-28):
-# An article on page A3 of the Sunday, 1991-10-27 Washington Post
-# notes that Starke County switched from Central time to Eastern time as of
-# 1991-10-27.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule	Starke	1947	1961	-	Apr	lastSun	2:00	1:00	D
-Rule	Starke	1947	1954	-	Sep	lastSun	2:00	0	S
-Rule	Starke	1955	1956	-	Oct	lastSun	2:00	0	S
-Rule	Starke	1957	1958	-	Sep	lastSun	2:00	0	S
-Rule	Starke	1959	1961	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Indiana/Knox -5:46:30 -	LMT	1883 Nov 18 12:13:30
-			-6:00	US	C%sT	1947
-			-6:00	Starke	C%sT	1962 Apr 29 2:00
-			-5:00	-	EST	1963 Oct 27 2:00
-			-6:00	US	C%sT	1991 Oct 27 2:00
-			-5:00	-	EST	2006 Apr  2 2:00
-			-6:00	US	C%sT
-#
-# Pulaski County, Indiana, switched from eastern to central time in
-# April 2006 and then switched back in March 2007.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule	Pulaski	1946	1960	-	Apr	lastSun	2:00	1:00	D
-Rule	Pulaski	1946	1954	-	Sep	lastSun	2:00	0	S
-Rule	Pulaski	1955	1956	-	Oct	lastSun	2:00	0	S
-Rule	Pulaski	1957	1960	-	Sep	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Indiana/Winamac -5:46:25 - LMT	1883 Nov 18 12:13:35
-			-6:00	US	C%sT	1946
-			-6:00	Pulaski	C%sT	1961 Apr 30 2:00
-			-5:00	-	EST	1969
-			-5:00	US	E%sT	1971
-			-5:00	-	EST	2006 Apr  2 2:00
-			-6:00	US	C%sT	2007 Mar 11 2:00
-			-5:00	US	E%sT
-#
-# Switzerland County, Indiana, did not observe DST from 1973 through 2005.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Indiana/Vevay -5:40:16 -	LMT	1883 Nov 18 12:19:44
-			-6:00	US	C%sT	1954 Apr 25 2:00
-			-5:00	-	EST	1969
-			-5:00	US	E%sT	1973
-			-5:00	-	EST	2006
-			-5:00	US	E%sT
-
-# Part of Kentucky left its clocks alone in 1974.
-# This also includes Clark, Floyd, and Harrison counties in Indiana.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule Louisville	1921	only	-	May	1	2:00	1:00	D
-Rule Louisville	1921	only	-	Sep	1	2:00	0	S
-Rule Louisville	1941	1961	-	Apr	lastSun	2:00	1:00	D
-Rule Louisville	1941	only	-	Sep	lastSun	2:00	0	S
-Rule Louisville	1946	only	-	Jun	2	2:00	0	S
-Rule Louisville	1950	1955	-	Sep	lastSun	2:00	0	S
-Rule Louisville	1956	1960	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Kentucky/Louisville -5:43:02 -	LMT	1883 Nov 18 12:16:58
-			-6:00	US	C%sT	1921
-			-6:00 Louisville C%sT	1942
-			-6:00	US	C%sT	1946
-			-6:00 Louisville C%sT	1961 Jul 23 2:00
-			-5:00	-	EST	1968
-			-5:00	US	E%sT	1974 Jan  6 2:00
-			-6:00	1:00	CDT	1974 Oct 27 2:00
-			-5:00	US	E%sT
-#
-# Wayne County, Kentucky
-#
-# From
-# <a href="http://www.lake-cumberland.com/life/archive/news990129time.shtml">
-# Lake Cumberland LIFE
-# </a> (1999-01-29) via WKYM-101.7:
-# Clinton County has joined Wayne County in asking the DoT to change from
-# the Central to the Eastern time zone....  The Wayne County government made
-# the same request in December.  And while Russell County officials have not
-# taken action, the majority of respondents to a poll conducted there in
-# August indicated they would like to change to "fast time" also.
-# The three Lake Cumberland counties are the farthest east of any U.S.
-# location in the Central time zone.
-#
-# From Rich Wales (2000-08-29):
-# After prolonged debate, and despite continuing deep differences of opinion,
-# Wayne County (central Kentucky) is switching from Central (-0600) to Eastern
-# (-0500) time.  They won't "fall back" this year.  See Sara Shipley,
-# The difference an hour makes, Nando Times (2000-08-29 15:33 -0400).
-#
-# From Paul Eggert (2001-07-16):
-# The final rule was published in the
-# <a href="http://frwebgate.access.gpo.gov/cgi-bin/getdoc.cgi?dbname=2000_register&docid=fr17au00-22">
-# Federal Register 65, 160 (2000-08-17), page 50154-50158.
-# </a>
-#
-Zone America/Kentucky/Monticello -5:39:24 - LMT	1883 Nov 18 12:20:36
-			-6:00	US	C%sT	1946
-			-6:00	-	CST	1968
-			-6:00	US	C%sT	2000 Oct 29  2:00
-			-5:00	US	E%sT
-
-
-# From Rives McDow (2000-08-30):
-# Here ... are all the changes in the US since 1985.
-# Kearny County, KS (put all of county on central;
-#	previously split between MST and CST) ... 1990-10
-# Starke County, IN (from CST to EST) ... 1991-10
-# Oliver County, ND (from MST to CST) ... 1992-10
-# West Wendover, NV (from PST TO MST) ... 1999-10
-# Wayne County, KY (from CST to EST) ... 2000-10
-#
-# From Paul Eggert (2001-07-17):
-# We don't know where the line used to be within Kearny County, KS,
-# so omit that change for now.
-# See America/Indiana/Knox for the Starke County, IN change.
-# See America/North_Dakota/Center for the Oliver County, ND change.
-# West Wendover, NV officially switched from Pacific to mountain time on
-# 1999-10-31.  See the
-# <a href="http://frwebgate.access.gpo.gov/cgi-bin/getdoc.cgi?dbname=1999_register&docid=fr21oc99-15">
-# Federal Register 64, 203 (1999-10-21), page 56705-56707.
-# </a>
-# However, the Federal Register says that West Wendover already operated
-# on mountain time, and the rule merely made this official;
-# hence a separate tz entry is not needed.
-
-# Michigan
-#
-# From Bob Devine (1988-01-28):
-# Michigan didn't observe DST from 1968 to 1973.
-#
-# From Paul Eggert (1999-03-31):
-# Shanks writes that Michigan started using standard time on 1885-09-18,
-# but Howse writes (pp 124-125, referring to Popular Astronomy, 1901-01)
-# that Detroit kept
-#
-#	local time until 1900 when the City Council decreed that clocks should
-#	be put back twenty-eight minutes to Central Standard Time.  Half the
-#	city obeyed, half refused.  After considerable debate, the decision
-#	was rescinded and the city reverted to Sun time.  A derisive offer to
-#	erect a sundial in front of the city hall was referred to the
-#	Committee on Sewers.  Then, in 1905, Central time was adopted
-#	by city vote.
-#
-# This story is too entertaining to be false, so go with Howse over Shanks.
-#
-# From Paul Eggert (2001-03-06):
-# Garland (1927) writes ``Cleveland and Detroit advanced their clocks
-# one hour in 1914.''  This change is not in Shanks.  We have no more
-# info, so omit this for now.
-#
-# Most of Michigan observed DST from 1973 on, but was a bit late in 1975.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule	Detroit	1948	only	-	Apr	lastSun	2:00	1:00	D
-Rule	Detroit	1948	only	-	Sep	lastSun	2:00	0	S
-Rule	Detroit	1967	only	-	Jun	14	2:00	1:00	D
-Rule	Detroit	1967	only	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Detroit	-5:32:11 -	LMT	1905
-			-6:00	-	CST	1915 May 15 2:00
-			-5:00	-	EST	1942
-			-5:00	US	E%sT	1946
-			-5:00	Detroit	E%sT	1973
-			-5:00	US	E%sT	1975
-			-5:00	-	EST	1975 Apr 27 2:00
-			-5:00	US	E%sT
-#
-# Dickinson, Gogebic, Iron, and Menominee Counties, Michigan,
-# switched from EST to CST/CDT in 1973.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
-Rule Menominee	1946	only	-	Apr	lastSun	2:00	1:00	D
-Rule Menominee	1946	only	-	Sep	lastSun	2:00	0	S
-Rule Menominee	1966	only	-	Apr	lastSun	2:00	1:00	D
-Rule Menominee	1966	only	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Menominee	-5:50:27 -	LMT	1885 Sep 18 12:00
-			-6:00	US	C%sT	1946
-			-6:00 Menominee	C%sT	1969 Apr 27 2:00
-			-5:00	-	EST	1973 Apr 29 2:00
-			-6:00	US	C%sT
-
-# Navassa
-# administered by the US Fish and Wildlife Service
-# claimed by US under the provisions of the 1856 Guano Islands Act
-# also claimed by Haiti
-# occupied 1857/1900 by the Navassa Phosphate Co
-# US lighthouse 1917/1996-09
-# currently uninhabited
-# see Mark Fineman, ``An Isle Rich in Guano and Discord'',
-# _Los Angeles Times_ (1998-11-10), A1, A10; it cites
-# Jimmy Skaggs, _The Great Guano Rush_ (1994).
-
-################################################################################
-
-
-# From Paul Eggert (2006-03-22):
-# A good source for time zone historical data outside the U.S. is
-# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),
-# San Diego: ACS Publications, Inc. (2003).
-#
-# Gwillim Law writes that a good source
-# for recent time zone data is the International Air Transport
-# Association's Standard Schedules Information Manual (IATA SSIM),
-# published semiannually.  Law sent in several helpful summaries
-# of the IATA's data after 1990.
-#
-# Except where otherwise noted, Shanks & Pottenger is the source for
-# entries through 1990, and IATA SSIM is the source for entries afterwards.
-#
-# Other sources occasionally used include:
-#
-#	Edward W. Whitman, World Time Differences,
-#	Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated),
-#	which I found in the UCLA library.
-#
-#	<a href="http://www.pettswoodvillage.co.uk/Daylight_Savings_William_Willett.pdf">
-#	William Willett, The Waste of Daylight, 19th edition
-#	</a> (1914-03)
-#
-# See the `europe' file for Greenland.
-
-# Canada
-
-# From Alain LaBont<e'> (1994-11-14):
-# I post here the time zone abbreviations standardized in Canada
-# for both English and French in the CAN/CSA-Z234.4-89 standard....
-#
-#	UTC	Standard time	Daylight savings time
-#	offset	French	English	French	English
-#	-2:30	-	-	HAT	NDT
-#	-3	-	-	HAA	ADT
-#	-3:30	HNT	NST	-	-
-#	-4	HNA	AST	HAE	EDT
-#	-5	HNE	EST	HAC	CDT
-#	-6	HNC	CST	HAR	MDT
-#	-7	HNR	MST	HAP	PDT
-#	-8	HNP	PST	HAY	YDT
-#	-9	HNY	YST	-	-
-#
-#	HN: Heure Normale	ST: Standard Time
-#	HA: Heure Avanc<e'>e	DT: Daylight saving Time
-#
-#	A: de l'Atlantique	Atlantic
-#	C: du Centre		Central
-#	E: de l'Est		Eastern
-#	M:			Mountain
-#	N:			Newfoundland
-#	P: du Pacifique		Pacific
-#	R: des Rocheuses
-#	T: de Terre-Neuve
-#	Y: du Yukon		Yukon
-#
-# From Paul Eggert (1994-11-22):
-# Alas, this sort of thing must be handled by localization software.
-
-# Unless otherwise specified, the data for Canada are all from Shanks
-# & Pottenger.
-
-# From Chris Walton (2006-04-01, 2006-04-25, 2006-06-26, 2007-01-31,
-# 2007-03-01):
-# The British Columbia government announced yesterday that it will
-# adjust daylight savings next year to align with changes in the
-# U.S. and the rest of Canada....
-# http://www2.news.gov.bc.ca/news_releases_2005-2009/2006AG0014-000330.htm
-# ...
-# Nova Scotia
-# Daylight saving time will be extended by four weeks starting in 2007....
-# http://www.gov.ns.ca/just/regulations/rg2/2006/ma1206.pdf
-#
-# [For New Brunswick] the new legislation dictates that the time change is to
-# be done at 02:00 instead of 00:01.
-# http://www.gnb.ca/0062/acts/BBA-2006/Chap-19.pdf
-# ...
-# Manitoba has traditionally changed the clock every fall at 03:00.
-# As of 2006, the transition is to take place one hour earlier at 02:00.
-# http://web2.gov.mb.ca/laws/statutes/ccsm/o030e.php
-# ...
-# [Alberta, Ontario, Quebec] will follow US rules.
-# http://www.qp.gov.ab.ca/documents/spring/CH03_06.CFM
-# http://www.e-laws.gov.on.ca/DBLaws/Source/Regs/English/2006/R06111_e.htm
-# http://www2.publicationsduquebec.gouv.qc.ca/dynamicSearch/telecharge.php?type=5&file=2006C39A.PDF
-# ...
-# P.E.I. will follow US rules....
-# http://www.assembly.pe.ca/bills/pdf_chapter/62/3/chapter-41.pdf
-# ...
-# Province of Newfoundland and Labrador....
-# http://www.hoa.gov.nl.ca/hoa/bills/Bill0634.htm
-# ...
-# Yukon
-# http://www.gov.yk.ca/legislation/regs/oic2006_127.pdf
-# ...
-# N.W.T. will follow US rules.  Whoever maintains the government web site
-# does not seem to believe in bookmarks.  To see the news release, click the
-# following link and search for "Daylight Savings Time Change".  Press the
-# "Daylight Savings Time Change" link; it will fire off a popup using
-# JavaScript.
-# http://www.exec.gov.nt.ca/currentnews/currentPR.asp?mode=archive
-# ...
-# Nunavut
-# An amendment to the Interpretation Act was registered on February 19/2007....
-# http://action.attavik.ca/home/justice-gn/attach/2007/gaz02part2.pdf
-
-# From Paul Eggert (2006-04-25):
-# H. David Matthews and Mary Vincent's map
-# <a href="http://www.canadiangeographic.ca/Magazine/SO98/geomap.asp">
-# "It's about TIME", _Canadian Geographic_ (September-October 1998)
-# </a> contains detailed boundaries for regions observing nonstandard
-# time and daylight saving time arrangements in Canada circa 1998.
-#
-# INMS, the Institute for National Measurement Standards in Ottawa, has <a
-# href="http://inms-ienm.nrc-cnrc.gc.ca/en/time_services/daylight_saving_e.php">
-# information about standard and daylight saving time zones in Canada.
-# </a> (updated periodically).
-# Its unofficial information is often taken from Matthews and Vincent.
-
-# From Paul Eggert (2006-06-27):
-# For now, assume all of DST-observing Canada will fall into line with the
-# new US DST rules,
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Canada	1918	only	-	Apr	14	2:00	1:00	D
-Rule	Canada	1918	only	-	Oct	31	2:00	0	S
-Rule	Canada	1942	only	-	Feb	 9	2:00	1:00	W # War
-Rule	Canada	1945	only	-	Aug	14	23:00u	1:00	P # Peace
-Rule	Canada	1945	only	-	Sep	30	2:00	0	S
-Rule	Canada	1974	1986	-	Apr	lastSun	2:00	1:00	D
-Rule	Canada	1974	2006	-	Oct	lastSun	2:00	0	S
-Rule	Canada	1987	2006	-	Apr	Sun>=1	2:00	1:00	D
-Rule	Canada	2007	max	-	Mar	Sun>=8	2:00	1:00	D
-Rule	Canada	2007	max	-	Nov	Sun>=1	2:00	0	S
-
-
-# Newfoundland and Labrador
-
-# From Paul Eggert (2000-10-02):
-# Matthews and Vincent (1998) write that Labrador should use NST/NDT,
-# but the only part of Labrador that follows the rules is the
-# southeast corner, including Port Hope Simpson and Mary's Harbour,
-# but excluding, say, Black Tickle.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	StJohns	1917	only	-	Apr	 8	2:00	1:00	D
-Rule	StJohns	1917	only	-	Sep	17	2:00	0	S
-# Whitman gives 1919 Apr 5 and 1920 Apr 5; go with Shanks & Pottenger.
-Rule	StJohns	1919	only	-	May	 5	23:00	1:00	D
-Rule	StJohns	1919	only	-	Aug	12	23:00	0	S
-# For 1931-1935 Whitman gives Apr same date; go with Shanks & Pottenger.
-Rule	StJohns	1920	1935	-	May	Sun>=1	23:00	1:00	D
-Rule	StJohns	1920	1935	-	Oct	lastSun	23:00	0	S
-# For 1936-1941 Whitman gives May Sun>=8 and Oct Sun>=1; go with Shanks &
-# Pottenger.
-Rule	StJohns	1936	1941	-	May	Mon>=9	0:00	1:00	D
-Rule	StJohns	1936	1941	-	Oct	Mon>=2	0:00	0	S
-# Whitman gives the following transitions:
-# 1942 03-01/12-31, 1943 05-30/09-05, 1944 07-10/09-02, 1945 01-01/10-07
-# but go with Shanks & Pottenger and assume they used Canadian rules.
-# For 1946-9 Whitman gives May 5,4,9,1 - Oct 1,5,3,2, and for 1950 he gives
-# Apr 30 - Sep 24; go with Shanks & Pottenger.
-Rule	StJohns	1946	1950	-	May	Sun>=8	2:00	1:00	D
-Rule	StJohns	1946	1950	-	Oct	Sun>=2	2:00	0	S
-Rule	StJohns	1951	1986	-	Apr	lastSun	2:00	1:00	D
-Rule	StJohns	1951	1959	-	Sep	lastSun	2:00	0	S
-Rule	StJohns	1960	1986	-	Oct	lastSun	2:00	0	S
-# From Paul Eggert (2000-10-02):
-# INMS (2000-09-12) says that, since 1988 at least, Newfoundland switches
-# at 00:01 local time.  For now, assume it started in 1987.
-Rule	StJohns	1987	only	-	Apr	Sun>=1	0:01	1:00	D
-Rule	StJohns	1987	2006	-	Oct	lastSun	0:01	0	S
-Rule	StJohns	1988	only	-	Apr	Sun>=1	0:01	2:00	DD
-Rule	StJohns	1989	2006	-	Apr	Sun>=1	0:01	1:00	D
-Rule	StJohns	2007	max	-	Mar	Sun>=8	0:01	1:00	D
-Rule	StJohns	2007	max	-	Nov	Sun>=1	0:01	0	S
-#
-# St John's has an apostrophe, but Posix file names can't have apostrophes.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/St_Johns	-3:30:52 -	LMT	1884
-			-3:30:52 StJohns N%sT	1918
-			-3:30:52 Canada	N%sT	1919
-			-3:30:52 StJohns N%sT	1935 Mar 30
-			-3:30	StJohns	N%sT	1942 May 11
-			-3:30	Canada	N%sT	1946
-			-3:30	StJohns	N%sT
-
-# most of east Labrador
-
-# The name `Happy Valley-Goose Bay' is too long; use `Goose Bay'.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Goose_Bay	-4:01:40 -	LMT	1884 # Happy Valley-Goose Bay
-			-3:30:52 -	NST	1918
-			-3:30:52 Canada N%sT	1919
-			-3:30:52 -	NST	1935 Mar 30
-			-3:30	-	NST	1936
-			-3:30	StJohns	N%sT	1942 May 11
-			-3:30	Canada	N%sT	1946
-			-3:30	StJohns	N%sT	1966 Mar 15 2:00
-			-4:00	StJohns	A%sT
-
-
-# west Labrador, Nova Scotia, Prince Edward I
-
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger write that since 1970 most of this region has been like
-# Halifax.  Many locales did not observe peacetime DST until 1972;
-# Glace Bay, NS is the largest that we know of.
-# Shanks & Pottenger also write that Liverpool, NS was the only town
-# in Canada to observe DST in 1971 but not 1970; for now we'll assume
-# this is a typo.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Halifax	1916	only	-	Apr	 1	0:00	1:00	D
-Rule	Halifax	1916	only	-	Oct	 1	0:00	0	S
-Rule	Halifax	1920	only	-	May	 9	0:00	1:00	D
-Rule	Halifax	1920	only	-	Aug	29	0:00	0	S
-Rule	Halifax	1921	only	-	May	 6	0:00	1:00	D
-Rule	Halifax	1921	1922	-	Sep	 5	0:00	0	S
-Rule	Halifax	1922	only	-	Apr	30	0:00	1:00	D
-Rule	Halifax	1923	1925	-	May	Sun>=1	0:00	1:00	D
-Rule	Halifax	1923	only	-	Sep	 4	0:00	0	S
-Rule	Halifax	1924	only	-	Sep	15	0:00	0	S
-Rule	Halifax	1925	only	-	Sep	28	0:00	0	S
-Rule	Halifax	1926	only	-	May	16	0:00	1:00	D
-Rule	Halifax	1926	only	-	Sep	13	0:00	0	S
-Rule	Halifax	1927	only	-	May	 1	0:00	1:00	D
-Rule	Halifax	1927	only	-	Sep	26	0:00	0	S
-Rule	Halifax	1928	1931	-	May	Sun>=8	0:00	1:00	D
-Rule	Halifax	1928	only	-	Sep	 9	0:00	0	S
-Rule	Halifax	1929	only	-	Sep	 3	0:00	0	S
-Rule	Halifax	1930	only	-	Sep	15	0:00	0	S
-Rule	Halifax	1931	1932	-	Sep	Mon>=24	0:00	0	S
-Rule	Halifax	1932	only	-	May	 1	0:00	1:00	D
-Rule	Halifax	1933	only	-	Apr	30	0:00	1:00	D
-Rule	Halifax	1933	only	-	Oct	 2	0:00	0	S
-Rule	Halifax	1934	only	-	May	20	0:00	1:00	D
-Rule	Halifax	1934	only	-	Sep	16	0:00	0	S
-Rule	Halifax	1935	only	-	Jun	 2	0:00	1:00	D
-Rule	Halifax	1935	only	-	Sep	30	0:00	0	S
-Rule	Halifax	1936	only	-	Jun	 1	0:00	1:00	D
-Rule	Halifax	1936	only	-	Sep	14	0:00	0	S
-Rule	Halifax	1937	1938	-	May	Sun>=1	0:00	1:00	D
-Rule	Halifax	1937	1941	-	Sep	Mon>=24	0:00	0	S
-Rule	Halifax	1939	only	-	May	28	0:00	1:00	D
-Rule	Halifax	1940	1941	-	May	Sun>=1	0:00	1:00	D
-Rule	Halifax	1946	1949	-	Apr	lastSun	2:00	1:00	D
-Rule	Halifax	1946	1949	-	Sep	lastSun	2:00	0	S
-Rule	Halifax	1951	1954	-	Apr	lastSun	2:00	1:00	D
-Rule	Halifax	1951	1954	-	Sep	lastSun	2:00	0	S
-Rule	Halifax	1956	1959	-	Apr	lastSun	2:00	1:00	D
-Rule	Halifax	1956	1959	-	Sep	lastSun	2:00	0	S
-Rule	Halifax	1962	1973	-	Apr	lastSun	2:00	1:00	D
-Rule	Halifax	1962	1973	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Halifax	-4:14:24 -	LMT	1902 Jun 15
-			-4:00	Halifax	A%sT	1918
-			-4:00	Canada	A%sT	1919
-			-4:00	Halifax	A%sT	1942 Feb  9 2:00s
-			-4:00	Canada	A%sT	1946
-			-4:00	Halifax	A%sT	1974
-			-4:00	Canada	A%sT
-Zone America/Glace_Bay	-3:59:48 -	LMT	1902 Jun 15
-			-4:00	Canada	A%sT	1953
-			-4:00	Halifax	A%sT	1954
-			-4:00	-	AST	1972
-			-4:00	Halifax	A%sT	1974
-			-4:00	Canada	A%sT
-
-# New Brunswick
-
-# From Paul Eggert (2007-01-31):
-# The Time Definition Act <http://www.gnb.ca/0062/PDF-acts/t-06.pdf>
-# says they changed at 00:01 through 2006, and
-# <http://www.canlii.org/nb/laws/sta/t-6/20030127/whole.html> makes it
-# clear that this was the case since at least 1993.
-# For now, assume it started in 1993.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Moncton	1933	1935	-	Jun	Sun>=8	1:00	1:00	D
-Rule	Moncton	1933	1935	-	Sep	Sun>=8	1:00	0	S
-Rule	Moncton	1936	1938	-	Jun	Sun>=1	1:00	1:00	D
-Rule	Moncton	1936	1938	-	Sep	Sun>=1	1:00	0	S
-Rule	Moncton	1939	only	-	May	27	1:00	1:00	D
-Rule	Moncton	1939	1941	-	Sep	Sat>=21	1:00	0	S
-Rule	Moncton	1940	only	-	May	19	1:00	1:00	D
-Rule	Moncton	1941	only	-	May	 4	1:00	1:00	D
-Rule	Moncton	1946	1972	-	Apr	lastSun	2:00	1:00	D
-Rule	Moncton	1946	1956	-	Sep	lastSun	2:00	0	S
-Rule	Moncton	1957	1972	-	Oct	lastSun	2:00	0	S
-Rule	Moncton	1993	2006	-	Apr	Sun>=1	0:01	1:00	D
-Rule	Moncton	1993	2006	-	Oct	lastSun	0:01	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Moncton	-4:19:08 -	LMT	1883 Dec  9
-			-5:00	-	EST	1902 Jun 15
-			-4:00	Canada	A%sT	1933
-			-4:00	Moncton	A%sT	1942
-			-4:00	Canada	A%sT	1946
-			-4:00	Moncton	A%sT	1973
-			-4:00	Canada	A%sT	1993
-			-4:00	Moncton	A%sT	2007
-			-4:00	Canada	A%sT
-
-# Quebec
-
-# From Paul Eggert (2006-07-09):
-# Shanks & Pottenger write that since 1970 most of Quebec has been
-# like Montreal.
-
-# From Paul Eggert (2006-06-27):
-# Matthews and Vincent (1998) also write that Quebec east of the -63
-# meridian is supposed to observe AST, but residents as far east as
-# Natashquan use EST/EDT, and residents east of Natashquan use AST.
-# In "Official time in Quebec" the Quebec department of justice writes in
-# http://www.justice.gouv.qc.ca/english/publications/generale/temps-regl-1-a.htm
-# that "The residents of the Municipality of the
-# Cote-Nord-du-Golfe-Saint-Laurent and the municipalities of Saint-Augustin,
-# Bonne-Esperance and Blanc-Sablon apply the Official Time Act as it is
-# written and use Atlantic standard time all year round. The same applies to
-# the residents of the Native facilities along the lower North Shore."
-# <http://www.assnat.qc.ca/eng/37legislature2/Projets-loi/Publics/06-a002.htm>
-# says this common practice was codified into law as of 2007.
-# For lack of better info, guess this practice began around 1970, contra to
-# Shanks & Pottenger who have this region observing AST/ADT.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Mont	1917	only	-	Mar	25	2:00	1:00	D
-Rule	Mont	1917	only	-	Apr	24	0:00	0	S
-Rule	Mont	1919	only	-	Mar	31	2:30	1:00	D
-Rule	Mont	1919	only	-	Oct	25	2:30	0	S
-Rule	Mont	1920	only	-	May	 2	2:30	1:00	D
-Rule	Mont	1920	1922	-	Oct	Sun>=1	2:30	0	S
-Rule	Mont	1921	only	-	May	 1	2:00	1:00	D
-Rule	Mont	1922	only	-	Apr	30	2:00	1:00	D
-Rule	Mont	1924	only	-	May	17	2:00	1:00	D
-Rule	Mont	1924	1926	-	Sep	lastSun	2:30	0	S
-Rule	Mont	1925	1926	-	May	Sun>=1	2:00	1:00	D
-# The 1927-to-1937 rules can be expressed more simply as
-# Rule	Mont	1927	1937	-	Apr	lastSat	24:00	1:00	D
-# Rule	Mont	1927	1937	-	Sep	lastSat	24:00	0	S
-# The rules below avoid use of 24:00
-# (which pre-1998 versions of zic cannot handle).
-Rule	Mont	1927	only	-	May	1	0:00	1:00	D
-Rule	Mont	1927	1932	-	Sep	lastSun	0:00	0	S
-Rule	Mont	1928	1931	-	Apr	lastSun	0:00	1:00	D
-Rule	Mont	1932	only	-	May	1	0:00	1:00	D
-Rule	Mont	1933	1940	-	Apr	lastSun	0:00	1:00	D
-Rule	Mont	1933	only	-	Oct	1	0:00	0	S
-Rule	Mont	1934	1939	-	Sep	lastSun	0:00	0	S
-Rule	Mont	1946	1973	-	Apr	lastSun	2:00	1:00	D
-Rule	Mont	1945	1948	-	Sep	lastSun	2:00	0	S
-Rule	Mont	1949	1950	-	Oct	lastSun	2:00	0	S
-Rule	Mont	1951	1956	-	Sep	lastSun	2:00	0	S
-Rule	Mont	1957	1973	-	Oct	lastSun	2:00	0	S
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Blanc-Sablon -3:48:28 -	LMT	1884
-			-4:00	Canada	A%sT	1970
-			-4:00	-	AST
-Zone America/Montreal	-4:54:16 -	LMT	1884
-			-5:00	Mont	E%sT	1918
-			-5:00	Canada	E%sT	1919
-			-5:00	Mont	E%sT	1942 Feb  9 2:00s
-			-5:00	Canada	E%sT	1946
-			-5:00	Mont	E%sT	1974
-			-5:00	Canada	E%sT
-
-
-# Ontario
-
-# From Paul Eggert (2006-07-09):
-# Shanks & Pottenger write that since 1970 most of Ontario has been like
-# Toronto.
-# Thunder Bay skipped DST in 1973.
-# Many smaller locales did not observe peacetime DST until 1974;
-# Nipigon (EST) and Rainy River (CST) are the largest that we know of.
-# Far west Ontario is like Winnipeg; far east Quebec is like Halifax.
-
-# From Mark Brader (2003-07-26):
-# [According to the Toronto Star] Orillia, Ontario, adopted DST
-# effective Saturday, 1912-06-22, 22:00; the article mentions that
-# Port Arthur (now part of Thunder Bay, Ontario) as well as Moose Jaw
-# have already done so.  In Orillia DST was to run until Saturday,
-# 1912-08-31 (no time mentioned), but it was met with considerable
-# hostility from certain segments of the public, and was revoked after
-# only two weeks -- I copied it as Saturday, 1912-07-07, 22:00, but
-# presumably that should be -07-06.  (1912-06-19, -07-12; also letters
-# earlier in June).
-#
-# Kenora, Ontario, was to abandon DST on 1914-06-01 (-05-21).
-
-# From Paul Eggert (1997-10-17):
-# Mark Brader writes that an article in the 1997-10-14 Toronto Star
-# says that Atikokan, Ontario currently does not observe DST,
-# but will vote on 11-10 whether to use EST/EDT.
-# He also writes that the
-# <a href="http://www.gov.on.ca/MBS/english/publications/statregs/conttext.html">
-# Ontario Time Act (1990, Chapter T.9)
-# </a>
-# says that Ontario east of 90W uses EST/EDT, and west of 90W uses CST/CDT.
-# Officially Atikokan is therefore on CST/CDT, and most likely this report
-# concerns a non-official time observed as a matter of local practice.
-#
-# From Paul Eggert (2000-10-02):
-# Matthews and Vincent (1998) write that Atikokan, Pickle Lake, and
-# New Osnaburgh observe CST all year, that Big Trout Lake observes
-# CST/CDT, and that Upsala and Shebandowan observe EST/EDT, all in
-# violation of the official Ontario rules.
-#
-# From Paul Eggert (2006-07-09):
-# Chris Walton (2006-07-06) mentioned an article by Stephanie MacLellan in the
-# 2005-07-21 Chronicle-Journal, which said:
-#
-#	The clocks in Atikokan stay set on standard time year-round.
-#	This means they spend about half the time on central time and
-#	the other half on eastern time.
-#
-#	For the most part, the system works, Mayor Dennis Brown said.
-#
-#	"The majority of businesses in Atikokan deal more with Eastern
-#	Canada, but there are some that deal with Western Canada," he
-#	said.  "I don't see any changes happening here."
-#
-# Walton also writes "Supposedly Pickle Lake and Mishkeegogamang
-# [New Osnaburgh] follow the same practice."
-
-# From Garry McKinnon (2006-07-14) via Chris Walton:
-# I chatted with a member of my board who has an outstanding memory
-# and a long history in Atikokan (and in the telecom industry) and he
-# can say for certain that Atikokan has been practicing the current
-# time keeping since 1952, at least.
-
-# From Paul Eggert (2006-07-17):
-# Shanks & Pottenger say that Atikokan has agreed with Rainy River
-# ever since standard time was introduced, but the information from
-# McKinnon sounds more authoritative.  For now, assume that Atikokan
-# switched to EST immediately after WWII era daylight saving time
-# ended.  This matches the old (less-populous) America/Coral_Harbour
-# entry since our cutoff date of 1970, so we can move
-# America/Coral_Harbour to the 'backward' file.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Toronto	1919	only	-	Mar	30	23:30	1:00	D
-Rule	Toronto	1919	only	-	Oct	26	0:00	0	S
-Rule	Toronto	1920	only	-	May	 2	2:00	1:00	D
-Rule	Toronto	1920	only	-	Sep	26	0:00	0	S
-Rule	Toronto	1921	only	-	May	15	2:00	1:00	D
-Rule	Toronto	1921	only	-	Sep	15	2:00	0	S
-Rule	Toronto	1922	1923	-	May	Sun>=8	2:00	1:00	D
-# Shanks & Pottenger say 1923-09-19; assume it's a typo and that "-16"
-# was meant.
-Rule	Toronto	1922	1926	-	Sep	Sun>=15	2:00	0	S
-Rule	Toronto	1924	1927	-	May	Sun>=1	2:00	1:00	D
-# The 1927-to-1939 rules can be expressed more simply as
-# Rule	Toronto	1927	1937	-	Sep	Sun>=25	2:00	0	S
-# Rule	Toronto	1928	1937	-	Apr	Sun>=25	2:00	1:00	D
-# Rule	Toronto	1938	1940	-	Apr	lastSun	2:00	1:00	D
-# Rule	Toronto	1938	1939	-	Sep	lastSun	2:00	0	S
-# The rules below avoid use of Sun>=25
-# (which pre-2004 versions of zic cannot handle).
-Rule	Toronto	1927	1932	-	Sep	lastSun	2:00	0	S
-Rule	Toronto	1928	1931	-	Apr	lastSun	2:00	1:00	D
-Rule	Toronto	1932	only	-	May	1	2:00	1:00	D
-Rule	Toronto	1933	1940	-	Apr	lastSun	2:00	1:00	D
-Rule	Toronto	1933	only	-	Oct	1	2:00	0	S
-Rule	Toronto	1934	1939	-	Sep	lastSun	2:00	0	S
-Rule	Toronto	1945	1946	-	Sep	lastSun	2:00	0	S
-Rule	Toronto	1946	only	-	Apr	lastSun	2:00	1:00	D
-Rule	Toronto	1947	1949	-	Apr	lastSun	0:00	1:00	D
-Rule	Toronto	1947	1948	-	Sep	lastSun	0:00	0	S
-Rule	Toronto	1949	only	-	Nov	lastSun	0:00	0	S
-Rule	Toronto	1950	1973	-	Apr	lastSun	2:00	1:00	D
-Rule	Toronto	1950	only	-	Nov	lastSun	2:00	0	S
-Rule	Toronto	1951	1956	-	Sep	lastSun	2:00	0	S
-# Shanks & Pottenger say Toronto ended DST a week early in 1971,
-# namely on 1971-10-24, but Mark Brader wrote (2003-05-31) that this
-# is wrong, and that he had confirmed it by checking the 1971-10-30
-# Toronto Star, which said that DST was ending 1971-10-31 as usual.
-Rule	Toronto	1957	1973	-	Oct	lastSun	2:00	0	S
-
-# From Paul Eggert (2003-07-27):
-# Willett (1914-03) writes (p. 17) "In the Cities of Fort William, and
-# Port Arthur, Ontario, the principle of the Bill has been in
-# operation for the past three years, and in the City of Moose Jaw,
-# Saskatchewan, for one year."
-
-# From David Bryan via Tory Tronrud, Director/Curator,
-# Thunder Bay Museum (2003-11-12):
-# There is some suggestion, however, that, by-law or not, daylight
-# savings time was being practiced in Fort William and Port Arthur
-# before 1909.... [I]n 1910, the line between the Eastern and Central
-# Time Zones was permanently moved about two hundred miles west to
-# include the Thunder Bay area....  When Canada adopted daylight
-# savings time in 1916, Fort William and Port Arthur, having done so
-# already, did not change their clocks....  During the Second World
-# War,... [t]he cities agreed to implement DST during the summer
-# months for the remainder of the war years.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Toronto	-5:17:32 -	LMT	1895
-			-5:00	Canada	E%sT	1919
-			-5:00	Toronto	E%sT	1942 Feb  9 2:00s
-			-5:00	Canada	E%sT	1946
-			-5:00	Toronto	E%sT	1974
-			-5:00	Canada	E%sT
-Zone America/Thunder_Bay -5:57:00 -	LMT	1895
-			-6:00	-	CST	1910
-			-5:00	-	EST	1942
-			-5:00	Canada	E%sT	1970
-			-5:00	Mont	E%sT	1973
-			-5:00	-	EST	1974
-			-5:00	Canada	E%sT
-Zone America/Nipigon	-5:53:04 -	LMT	1895
-			-5:00	Canada	E%sT	1940 Sep 29
-			-5:00	1:00	EDT	1942 Feb  9 2:00s
-			-5:00	Canada	E%sT
-Zone America/Rainy_River -6:18:16 -	LMT	1895
-			-6:00	Canada	C%sT	1940 Sep 29
-			-6:00	1:00	CDT	1942 Feb  9 2:00s
-			-6:00	Canada	C%sT
-Zone America/Atikokan	-6:06:28 -	LMT	1895
-			-6:00	Canada	C%sT	1940 Sep 29
-			-6:00	1:00	CDT	1942 Feb  9 2:00s
-			-6:00	Canada	C%sT	1945 Sep 30 2:00
-			-5:00	-	EST
-
-
-# Manitoba
-
-# From Rob Douglas (2006-04-06):
-# the old Manitoba Time Act - as amended by Bill 2, assented to
-# March 27, 1987 ... said ...
-# "between two o'clock Central Standard Time in the morning of
-# the first Sunday of April of each year and two o'clock Central
-# Standard Time in the morning of the last Sunday of October next
-# following, one hour in advance of Central Standard Time."...
-# I believe that the English legislation [of the old time act] had =
-# been assented to (March 22, 1967)....
-# Also, as far as I can tell, there was no order-in-council varying
-# the time of Daylight Saving Time for 2005 and so the provisions of
-# the 1987 version would apply - the changeover was at 2:00 Central
-# Standard Time (i.e. not until 3:00 Central Daylight Time).
-
-# From Paul Eggert (2006-04-10):
-# Shanks & Pottenger say Manitoba switched at 02:00 (not 02:00s)
-# starting 1966.  Since 02:00s is clearly correct for 1967 on, assume
-# it was also 02:00s in 1966.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Winn	1916	only	-	Apr	23	0:00	1:00	D
-Rule	Winn	1916	only	-	Sep	17	0:00	0	S
-Rule	Winn	1918	only	-	Apr	14	2:00	1:00	D
-Rule	Winn	1918	only	-	Oct	31	2:00	0	S
-Rule	Winn	1937	only	-	May	16	2:00	1:00	D
-Rule	Winn	1937	only	-	Sep	26	2:00	0	S
-Rule	Winn	1942	only	-	Feb	 9	2:00	1:00	W # War
-Rule	Winn	1945	only	-	Aug	14	23:00u	1:00	P # Peace
-Rule	Winn	1945	only	-	Sep	lastSun	2:00	0	S
-Rule	Winn	1946	only	-	May	12	2:00	1:00	D
-Rule	Winn	1946	only	-	Oct	13	2:00	0	S
-Rule	Winn	1947	1949	-	Apr	lastSun	2:00	1:00	D
-Rule	Winn	1947	1949	-	Sep	lastSun	2:00	0	S
-Rule	Winn	1950	only	-	May	 1	2:00	1:00	D
-Rule	Winn	1950	only	-	Sep	30	2:00	0	S
-Rule	Winn	1951	1960	-	Apr	lastSun	2:00	1:00	D
-Rule	Winn	1951	1958	-	Sep	lastSun	2:00	0	S
-Rule	Winn	1959	only	-	Oct	lastSun	2:00	0	S
-Rule	Winn	1960	only	-	Sep	lastSun	2:00	0	S
-Rule	Winn	1963	only	-	Apr	lastSun	2:00	1:00	D
-Rule	Winn	1963	only	-	Sep	22	2:00	0	S
-Rule	Winn	1966	1986	-	Apr	lastSun	2:00s	1:00	D
-Rule	Winn	1966	2005	-	Oct	lastSun	2:00s	0	S
-Rule	Winn	1987	2005	-	Apr	Sun>=1	2:00s	1:00	D
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Winnipeg	-6:28:36 -	LMT	1887 Jul 16
-			-6:00	Winn	C%sT	2006
-			-6:00	Canada	C%sT
-
-
-# Saskatchewan
-
-# From Mark Brader (2003-07-26):
-# The first actual adoption of DST in Canada was at the municipal
-# level.  As the [Toronto] Star put it (1912-06-07), "While people
-# elsewhere have long been talking of legislation to save daylight,
-# the city of Moose Jaw [Saskatchewan] has acted on its own hook."
-# DST in Moose Jaw began on Saturday, 1912-06-01 (no time mentioned:
-# presumably late evening, as below), and would run until "the end of
-# the summer".  The discrepancy between municipal time and railroad
-# time was noted.
-
-# From Paul Eggert (2003-07-27):
-# Willett (1914-03) notes that DST "has been in operation ... in the
-# City of Moose Jaw, Saskatchewan, for one year."
-
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger say that since 1970 this region has mostly been as Regina.
-# Some western towns (e.g. Swift Current) switched from MST/MDT to CST in 1972.
-# Other western towns (e.g. Lloydminster) are like Edmonton.
-# Matthews and Vincent (1998) write that Denare Beach and Creighton
-# are like Winnipeg, in violation of Saskatchewan law.
-
-# From W. Jones (1992-11-06):
-# The. . .below is based on information I got from our law library, the
-# provincial archives, and the provincial Community Services department.
-# A precise history would require digging through newspaper archives, and
-# since you didn't say what you wanted, I didn't bother.
-#
-# Saskatchewan is split by a time zone meridian (105W) and over the years
-# the boundary became pretty ragged as communities near it reevaluated
-# their affiliations in one direction or the other.  In 1965 a provincial
-# referendum favoured legislating common time practices.
-#
-# On 15 April 1966 the Time Act (c. T-14, Revised Statutes of
-# Saskatchewan 1978) was proclaimed, and established that the eastern
-# part of Saskatchewan would use CST year round, that districts in
-# northwest Saskatchewan would by default follow CST but could opt to
-# follow Mountain Time rules (thus 1 hour difference in the winter and
-# zero in the summer), and that districts in southwest Saskatchewan would
-# by default follow MT but could opt to follow CST.
-#
-# It took a few years for the dust to settle (I know one story of a town
-# on one time zone having its school in another, such that a mom had to
-# serve her family lunch in two shifts), but presently it seems that only
-# a few towns on the border with Alberta (e.g. Lloydminster) follow MT
-# rules any more; all other districts appear to have used CST year round
-# since sometime in the 1960s.
-
-# From Chris Walton (2006-06-26):
-# The Saskatchewan time act which was last updated in 1996 is about 30 pages
-# long and rather painful to read.
-# http://www.qp.gov.sk.ca/documents/English/Statutes/Statutes/T14.pdf
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Regina	1918	only	-	Apr	14	2:00	1:00	D
-Rule	Regina	1918	only	-	Oct	31	2:00	0	S
-Rule	Regina	1930	1934	-	May	Sun>=1	0:00	1:00	D
-Rule	Regina	1930	1934	-	Oct	Sun>=1	0:00	0	S
-Rule	Regina	1937	1941	-	Apr	Sun>=8	0:00	1:00	D
-Rule	Regina	1937	only	-	Oct	Sun>=8	0:00	0	S
-Rule	Regina	1938	only	-	Oct	Sun>=1	0:00	0	S
-Rule	Regina	1939	1941	-	Oct	Sun>=8	0:00	0	S
-Rule	Regina	1942	only	-	Feb	 9	2:00	1:00	W # War
-Rule	Regina	1945	only	-	Aug	14	23:00u	1:00	P # Peace
-Rule	Regina	1945	only	-	Sep	lastSun	2:00	0	S
-Rule	Regina	1946	only	-	Apr	Sun>=8	2:00	1:00	D
-Rule	Regina	1946	only	-	Oct	Sun>=8	2:00	0	S
-Rule	Regina	1947	1957	-	Apr	lastSun	2:00	1:00	D
-Rule	Regina	1947	1957	-	Sep	lastSun	2:00	0	S
-Rule	Regina	1959	only	-	Apr	lastSun	2:00	1:00	D
-Rule	Regina	1959	only	-	Oct	lastSun	2:00	0	S
-#
-Rule	Swift	1957	only	-	Apr	lastSun	2:00	1:00	D
-Rule	Swift	1957	only	-	Oct	lastSun	2:00	0	S
-Rule	Swift	1959	1961	-	Apr	lastSun	2:00	1:00	D
-Rule	Swift	1959	only	-	Oct	lastSun	2:00	0	S
-Rule	Swift	1960	1961	-	Sep	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Regina	-6:58:36 -	LMT	1905 Sep
-			-7:00	Regina	M%sT	1960 Apr lastSun 2:00
-			-6:00	-	CST
-Zone America/Swift_Current -7:11:20 -	LMT	1905 Sep
-			-7:00	Canada	M%sT	1946 Apr lastSun 2:00
-			-7:00	Regina	M%sT	1950
-			-7:00	Swift	M%sT	1972 Apr lastSun 2:00
-			-6:00	-	CST
-
-
-# Alberta
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Edm	1918	1919	-	Apr	Sun>=8	2:00	1:00	D
-Rule	Edm	1918	only	-	Oct	31	2:00	0	S
-Rule	Edm	1919	only	-	May	27	2:00	0	S
-Rule	Edm	1920	1923	-	Apr	lastSun	2:00	1:00	D
-Rule	Edm	1920	only	-	Oct	lastSun	2:00	0	S
-Rule	Edm	1921	1923	-	Sep	lastSun	2:00	0	S
-Rule	Edm	1942	only	-	Feb	 9	2:00	1:00	W # War
-Rule	Edm	1945	only	-	Aug	14	23:00u	1:00	P # Peace
-Rule	Edm	1945	only	-	Sep	lastSun	2:00	0	S
-Rule	Edm	1947	only	-	Apr	lastSun	2:00	1:00	D
-Rule	Edm	1947	only	-	Sep	lastSun	2:00	0	S
-Rule	Edm	1967	only	-	Apr	lastSun	2:00	1:00	D
-Rule	Edm	1967	only	-	Oct	lastSun	2:00	0	S
-Rule	Edm	1969	only	-	Apr	lastSun	2:00	1:00	D
-Rule	Edm	1969	only	-	Oct	lastSun	2:00	0	S
-Rule	Edm	1972	1986	-	Apr	lastSun	2:00	1:00	D
-Rule	Edm	1972	2006	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Edmonton	-7:33:52 -	LMT	1906 Sep
-			-7:00	Edm	M%sT	1987
-			-7:00	Canada	M%sT
-
-
-# British Columbia
-
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger write that since 1970 most of this region has
-# been like Vancouver.
-# Dawson Creek uses MST.  Much of east BC is like Edmonton.
-# Matthews and Vincent (1998) write that Creston is like Dawson Creek.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Vanc	1918	only	-	Apr	14	2:00	1:00	D
-Rule	Vanc	1918	only	-	Oct	31	2:00	0	S
-Rule	Vanc	1942	only	-	Feb	 9	2:00	1:00	W # War
-Rule	Vanc	1945	only	-	Aug	14	23:00u	1:00	P # Peace
-Rule	Vanc	1945	only	-	Sep	30	2:00	0	S
-Rule	Vanc	1946	1986	-	Apr	lastSun	2:00	1:00	D
-Rule	Vanc	1946	only	-	Oct	13	2:00	0	S
-Rule	Vanc	1947	1961	-	Sep	lastSun	2:00	0	S
-Rule	Vanc	1962	2006	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Vancouver	-8:12:28 -	LMT	1884
-			-8:00	Vanc	P%sT	1987
-			-8:00	Canada	P%sT
-Zone America/Dawson_Creek -8:00:56 -	LMT	1884
-			-8:00	Canada	P%sT	1947
-			-8:00	Vanc	P%sT	1972 Aug 30 2:00
-			-7:00	-	MST
-
-
-# Northwest Territories, Nunavut, Yukon
-
-# From Paul Eggert (2006-03-22):
-# Dawson switched to PST in 1973.  Inuvik switched to MST in 1979.
-# Mathew Englander (1996-10-07) gives the following refs:
-#	* 1967. Paragraph 28(34)(g) of the Interpretation Act, S.C. 1967-68,
-#	c. 7 defines Yukon standard time as UTC-9.  This is still valid;
-#	see Interpretation Act, R.S.C. 1985, c. I-21, s. 35(1).
-#	* C.O. 1973/214 switched Yukon to PST on 1973-10-28 00:00.
-#	* O.I.C. 1980/02 established DST.
-#	* O.I.C. 1987/056 changed DST to Apr firstSun 2:00 to Oct lastSun 2:00.
-# Shanks & Pottenger say Yukon's 1973-10-28 switch was at 2:00; go
-# with Englander.
-# From Chris Walton (2006-06-26):
-# Here is a link to the old daylight saving portion of the interpretation
-# act which was last updated in 1987:
-# http://www.gov.yk.ca/legislation/regs/oic1987_056.pdf
-
-# From Rives McDow (1999-09-04):
-# Nunavut ... moved ... to incorporate the whole territory into one time zone.
-# <a href="http://www.nunatsiaq.com/nunavut/nvt90903_13.html">
-# Nunavut moves to single time zone Oct. 31
-# </a>
-#
-# From Antoine Leca (1999-09-06):
-# We then need to create a new timezone for the Kitikmeot region of Nunavut
-# to differentiate it from the Yellowknife region.
-
-# From Paul Eggert (1999-09-20):
-# <a href="http://www.nunavut.com/basicfacts/english/basicfacts_1territory.html">
-# Basic Facts: The New Territory
-# </a> (1999) reports that Pangnirtung operates on eastern time,
-# and that Coral Harbour does not observe DST.  We don't know when
-# Pangnirtung switched to eastern time; we'll guess 1995.
-
-# From Rives McDow (1999-11-08):
-# On October 31, when the rest of Nunavut went to Central time,
-# Pangnirtung wobbled.  Here is the result of their wobble:
-#
-# The following businesses and organizations in Pangnirtung use Central Time:
-#
-#	First Air, Power Corp, Nunavut Construction, Health Center, RCMP,
-#	Eastern Arctic National Parks, A & D Specialist
-#
-# The following businesses and organizations in Pangnirtung use Eastern Time:
-#
-#	Hamlet office, All other businesses, Both schools, Airport operator
-#
-# This has made for an interesting situation there, which warranted the news.
-# No one there that I spoke with seems concerned, or has plans to
-# change the local methods of keeping time, as it evidently does not
-# really interfere with any activities or make things difficult locally.
-# They plan to celebrate New Year's turn-over twice, one hour apart,
-# so it appears that the situation will last at least that long.
-# The Nunavut Intergovernmental Affairs hopes that they will "come to
-# their senses", but the locals evidently don't see any problem with
-# the current state of affairs.
-
-# From Michaela Rodrigue, writing in the
-# <a href="http://www.nunatsiaq.com/archives/nunavut991130/nvt91119_17.html">
-# Nunatsiaq News (1999-11-19)</a>:
-# Clyde River, Pangnirtung and Sanikiluaq now operate with two time zones,
-# central - or Nunavut time - for government offices, and eastern time
-# for municipal offices and schools....  Igloolik [was similar but then]
-# made the switch to central time on Saturday, Nov. 6.
-
-# From Paul Eggert (2000-10-02):
-# Matthews and Vincent (1998) say the following, but we lack histories
-# for these potential new Zones.
-#
-# The Canadian Forces station at Alert uses Eastern Time while the
-# handful of residents at the Eureka weather station [in the Central
-# zone] skip daylight savings.  Baffin Island, which is crossed by the
-# Central, Eastern and Atlantic Time zones only uses Eastern Time.
-# Gjoa Haven, Taloyoak and Pelly Bay all use Mountain instead of
-# Central Time and Southampton Island [in the Central zone] is not
-# required to use daylight savings.
-
-# From
-# <a href="http://www.nunatsiaq.com/archives/nunavut001130/nvt21110_02.html">
-# Nunavut now has two time zones
-# </a> (2000-11-10):
-# The Nunavut government would allow its employees in Kugluktuk and
-# Cambridge Bay to operate on central time year-round, putting them
-# one hour behind the rest of Nunavut for six months during the winter.
-# At the end of October the two communities had rebelled against
-# Nunavut's unified time zone, refusing to shift to eastern time with
-# the rest of the territory for the winter.  Cambridge Bay remained on
-# central time, while Kugluktuk, even farther west, reverted to
-# mountain time, which they had used before the advent of Nunavut's
-# unified time zone in 1999.
-#
-# From Rives McDow (2001-01-20), quoting the Nunavut government:
-# The preceding decision came into effect at midnight, Saturday Nov 4, 2000.
-
-# From Paul Eggert (2000-12-04):
-# Let's just keep track of the official times for now.
-
-# From Rives McDow (2001-03-07):
-# The premier of Nunavut has issued a ministerial statement advising
-# that effective 2001-04-01, the territory of Nunavut will revert
-# back to three time zones (mountain, central, and eastern).  Of the
-# cities in Nunavut, Coral Harbor is the only one that I know of that
-# has said it will not observe dst, staying on EST year round.  I'm
-# checking for more info, and will get back to you if I come up with
-# more.
-# [Also see <http://www.nunatsiaq.com/nunavut/nvt10309_06.html> (2001-03-09).]
-
-# From Gwillim Law (2005-05-21):
-# According to maps at
-# http://inms-ienm.nrc-cnrc.gc.ca/images/time_services/TZ01SWE.jpg
-# http://inms-ienm.nrc-cnrc.gc.ca/images/time_services/TZ01SSE.jpg
-# (both dated 2003), and
-# http://www.canadiangeographic.ca/Magazine/SO98/geomap.asp
-# (from a 1998 Canadian Geographic article), the de facto and de jure time
-# for Southampton Island (at the north end of Hudson Bay) is UTC-5 all year
-# round.  Using Google, it's easy to find other websites that confirm this.
-# I wasn't able to find how far back this time regimen goes, but since it
-# predates the creation of Nunavut, it probably goes back many years....
-# The Inuktitut name of Coral Harbour is Sallit, but it's rarely used.
-#
-# From Paul Eggert (2005-07-26):
-# For lack of better information, assume that Southampton Island observed
-# daylight saving only during wartime.
-
-# From Chris Walton (2007-03-01):
-# ... the community of Resolute (located on Cornwallis Island in
-# Nunavut) moved from Central Time to Eastern Time last November.
-# Basically the community did not change its clocks at the end of
-# daylight saving....
-# http://www.nnsl.com/frames/newspapers/2006-11/nov13_06none.html
-
-# From Chris Walton (2007-03-14):
-# Today I phoned the "hamlet office" to find out what Resolute was doing with
-# its clocks.
-#
-# The individual that answered the phone confirmed that the clocks did not
-# move at the end of daylight saving on October 29/2006.  He also told me that
-# the clocks did not move this past weekend (March 11/2007)....
-#
-# America/Resolute should use the "Canada" Rule up to October 29/2006.
-# After that it should be fixed on Eastern Standard Time until further notice.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	NT_YK	1918	only	-	Apr	14	2:00	1:00	D
-Rule	NT_YK	1918	only	-	Oct	27	2:00	0	S
-Rule	NT_YK	1919	only	-	May	25	2:00	1:00	D
-Rule	NT_YK	1919	only	-	Nov	 1	0:00	0	S
-Rule	NT_YK	1942	only	-	Feb	 9	2:00	1:00	W # War
-Rule	NT_YK	1945	only	-	Aug	14	23:00u	1:00	P # Peace
-Rule	NT_YK	1945	only	-	Sep	30	2:00	0	S
-Rule	NT_YK	1965	only	-	Apr	lastSun	0:00	2:00	DD
-Rule	NT_YK	1965	only	-	Oct	lastSun	2:00	0	S
-Rule	NT_YK	1980	1986	-	Apr	lastSun	2:00	1:00	D
-Rule	NT_YK	1980	2006	-	Oct	lastSun	2:00	0	S
-Rule	NT_YK	1987	2006	-	Apr	Sun>=1	2:00	1:00	D
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-# aka Panniqtuuq
-Zone America/Pangnirtung 0	-	zzz	1921 # trading post est.
-			-4:00	NT_YK	A%sT	1995 Apr Sun>=1 2:00
-			-5:00	Canada	E%sT	1999 Oct 31 2:00
-			-6:00	Canada	C%sT	2000 Oct 29 2:00
-			-5:00	Canada	E%sT
-# formerly Frobisher Bay
-Zone America/Iqaluit	0	-	zzz	1942 Aug # Frobisher Bay est.
-			-5:00	NT_YK	E%sT	1999 Oct 31 2:00
-			-6:00	Canada	C%sT	2000 Oct 29 2:00
-			-5:00	Canada	E%sT
-# aka Qausuittuq
-Zone America/Resolute	0	-	zzz	1947 Aug 31 # Resolute founded
-			-6:00	NT_YK	C%sT	2000 Oct 29 2:00
-			-5:00	-	EST	2001 Apr  1 3:00
-			-6:00	Canada	C%sT	2006 Oct 29 2:00
-			-5:00	-	EST
-# aka Kangiqiniq
-Zone America/Rankin_Inlet 0	-	zzz	1957 # Rankin Inlet founded
-			-6:00	NT_YK	C%sT	2000 Oct 29 2:00
-			-5:00	-	EST	2001 Apr  1 3:00
-			-6:00	Canada	C%sT
-# aka Iqaluktuuttiaq
-Zone America/Cambridge_Bay 0	-	zzz	1920 # trading post est.?
-			-7:00	NT_YK	M%sT	1999 Oct 31 2:00
-			-6:00	Canada	C%sT	2000 Oct 29 2:00
-			-5:00	-	EST	2000 Nov  5 0:00
-			-6:00	-	CST	2001 Apr  1 3:00
-			-7:00	Canada	M%sT
-Zone America/Yellowknife 0	-	zzz	1935 # Yellowknife founded?
-			-7:00	NT_YK	M%sT	1980
-			-7:00	Canada	M%sT
-Zone America/Inuvik	0	-	zzz	1953 # Inuvik founded
-			-8:00	NT_YK	P%sT	1979 Apr lastSun 2:00
-			-7:00	NT_YK	M%sT	1980
-			-7:00	Canada	M%sT
-Zone America/Whitehorse	-9:00:12 -	LMT	1900 Aug 20
-			-9:00	NT_YK	Y%sT	1966 Jul 1 2:00
-			-8:00	NT_YK	P%sT	1980
-			-8:00	Canada	P%sT
-Zone America/Dawson	-9:17:40 -	LMT	1900 Aug 20
-			-9:00	NT_YK	Y%sT	1973 Oct 28 0:00
-			-8:00	NT_YK	P%sT	1980
-			-8:00	Canada	P%sT
-
-
-###############################################################################
-
-# Mexico
-
-# From Paul Eggert (2001-03-05):
-# The Investigation and Analysis Service of the
-# Mexican Library of Congress (MLoC) has published a
-# <a href="http://www.cddhcu.gob.mx/bibliot/publica/inveyana/polisoc/horver/">
-# history of Mexican local time (in Spanish)
-# </a>.
-#
-# Here are the discrepancies between Shanks & Pottenger (S&P) and the MLoC.
-# (In all cases we go with the MLoC.)
-# S&P report that Baja was at -8:00 in 1922/1923.
-# S&P say the 1930 transition in Baja was 1930-11-16.
-# S&P report no DST during summer 1931.
-# S&P report a transition at 1932-03-30 23:00, not 1932-04-01.
-
-# From Gwillim Law (2001-02-20):
-# There are some other discrepancies between the Decrees page and the
-# tz database.  I think they can best be explained by supposing that
-# the researchers who prepared the Decrees page failed to find some of
-# the relevant documents.
-
-# From Alan Perry (1996-02-15):
-# A guy from our Mexico subsidiary finally found the Presidential Decree
-# outlining the timezone changes in Mexico.
-#
-# ------------- Begin Forwarded Message -------------
-#
-# I finally got my hands on the Official Presidential Decree that sets up the
-# rules for the DST changes. The rules are:
-#
-# 1. The country is divided in 3 timezones:
-#    - Baja California Norte (the Mexico/BajaNorte TZ)
-#    - Baja California Sur, Nayarit, Sinaloa and Sonora (the Mexico/BajaSur TZ)
-#    - The rest of the country (the Mexico/General TZ)
-#
-# 2. From the first Sunday in April at 2:00 AM to the last Sunday in October
-#    at 2:00 AM, the times in each zone are as follows:
-#    BajaNorte: GMT+7
-#    BajaSur:   GMT+6
-#    General:   GMT+5
-#
-# 3. The rest of the year, the times are as follows:
-#    BajaNorte: GMT+8
-#    BajaSur:   GMT+7
-#    General:   GMT+6
-#
-# The Decree was published in Mexico's Official Newspaper on January 4th.
-#
-# -------------- End Forwarded Message --------------
-# From Paul Eggert (1996-06-12):
-# For an English translation of the decree, see
-# <a href="http://mexico-travel.com/extra/timezone_eng.html">
-# ``Diario Oficial: Time Zone Changeover'' (1996-01-04).
-# </a>
-
-# From Rives McDow (1998-10-08):
-# The State of Quintana Roo has reverted back to central STD and DST times
-# (i.e. UTC -0600 and -0500 as of 1998-08-02).
-
-# From Rives McDow (2000-01-10):
-# Effective April 4, 1999 at 2:00 AM local time, Sonora changed to the time
-# zone 5 hours from the International Date Line, and will not observe daylight
-# savings time so as to stay on the same time zone as the southern part of
-# Arizona year round.
-
-# From Jesper Norgaard, translating
-# <http://www.reforma.com/nacional/articulo/064327/> (2001-01-17):
-# In Oaxaca, the 55.000 teachers from the Section 22 of the National
-# Syndicate of Education Workers, refuse to apply daylight saving each
-# year, so that the more than 10,000 schools work at normal hour the
-# whole year.
-
-# From Gwillim Law (2001-01-19):
-# <http://www.reforma.com/negocios_y_dinero/articulo/064481/> ... says
-# (translated):...
-# January 17, 2000 - The Energy Secretary, Ernesto Martens, announced
-# that Summer Time will be reduced from seven to five months, starting
-# this year....
-# <http://www.publico.com.mx/scripts/texto3.asp?action=pagina&pag=21&pos=p&secc=naci&date=01/17/2001>
-# [translated], says "summer time will ... take effect on the first Sunday
-# in May, and end on the last Sunday of September.
-
-# From Arthur David Olson (2001-01-25):
-# The 2001-01-24 traditional Washington Post contained the page one
-# story "Timely Issue Divides Mexicans."...
-# http://www.washingtonpost.com/wp-dyn/articles/A37383-2001Jan23.html
-# ... Mexico City Mayor Lopez Obrador "...is threatening to keep
-# Mexico City and its 20 million residents on a different time than
-# the rest of the country..." In particular, Lopez Obrador would abolish
-# observation of Daylight Saving Time.
-
-# <a href="http://www.conae.gob.mx/ahorro/decretohorver2001.html#decre">
-# Official statute published by the Energy Department
-# </a> (2001-02-01) shows Baja and Chihauhua as still using US DST rules,
-# and Sonora with no DST.  This was reported by Jesper Norgaard (2001-02-03).
-
-# From Paul Eggert (2001-03-03):
-#
-# <a href="http://www.latimes.com/news/nation/20010303/t000018766.html">
-# James F. Smith writes in today's LA Times
-# </a>
-# * Sonora will continue to observe standard time.
-# * Last week Mexico City's mayor Andres Manuel Lopez Obrador decreed that
-#   the Federal District will not adopt DST.
-# * 4 of 16 district leaders announced they'll ignore the decree.
-# * The decree does not affect federal-controlled facilities including
-#   the airport, banks, hospitals, and schools.
-#
-# For now we'll assume that the Federal District will bow to federal rules.
-
-# From Jesper Norgaard (2001-04-01):
-# I found some references to the Mexican application of daylight
-# saving, which modifies what I had already sent you, stating earlier
-# that a number of northern Mexican states would go on daylight
-# saving. The modification reverts this to only cover Baja California
-# (Norte), while all other states (except Sonora, who has no daylight
-# saving all year) will follow the original decree of president
-# Vicente Fox, starting daylight saving May 6, 2001 and ending
-# September 30, 2001.
-# References: "Diario de Monterrey" <www.diariodemonterrey.com/index.asp>
-# Palabra <http://palabra.infosel.com/010331/primera/ppri3101.pdf> (2001-03-31)
-
-# From Reuters (2001-09-04):
-# Mexico's Supreme Court on Tuesday declared that daylight savings was
-# unconstitutional in Mexico City, creating the possibility the
-# capital will be in a different time zone from the rest of the nation
-# next year....  The Supreme Court's ruling takes effect at 2:00
-# a.m. (0800 GMT) on Sept. 30, when Mexico is scheduled to revert to
-# standard time. "This is so residents of the Federal District are not
-# subject to unexpected time changes," a statement from the court said.
-
-# From Jesper Norgaard Welen (2002-03-12):
-# ... consulting my local grocery store(!) and my coworkers, they all insisted
-# that a new decision had been made to reinstate US style DST in Mexico....
-# http://www.conae.gob.mx/ahorro/horaver2001_m1_2002.html (2002-02-20)
-# confirms this.  Sonora as usual is the only state where DST is not applied.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Mexico	1939	only	-	Feb	5	0:00	1:00	D
-Rule	Mexico	1939	only	-	Jun	25	0:00	0	S
-Rule	Mexico	1940	only	-	Dec	9	0:00	1:00	D
-Rule	Mexico	1941	only	-	Apr	1	0:00	0	S
-Rule	Mexico	1943	only	-	Dec	16	0:00	1:00	W # War
-Rule	Mexico	1944	only	-	May	1	0:00	0	S
-Rule	Mexico	1950	only	-	Feb	12	0:00	1:00	D
-Rule	Mexico	1950	only	-	Jul	30	0:00	0	S
-Rule	Mexico	1996	2000	-	Apr	Sun>=1	2:00	1:00	D
-Rule	Mexico	1996	2000	-	Oct	lastSun	2:00	0	S
-Rule	Mexico	2001	only	-	May	Sun>=1	2:00	1:00	D
-Rule	Mexico	2001	only	-	Sep	lastSun	2:00	0	S
-Rule	Mexico	2002	max	-	Apr	Sun>=1	2:00	1:00	D
-Rule	Mexico	2002	max	-	Oct	lastSun	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-# Quintana Roo
-Zone America/Cancun	-5:47:04 -	LMT	1922 Jan  1  0:12:56
-			-6:00	-	CST	1981 Dec 23
-			-5:00	Mexico	E%sT	1998 Aug  2  2:00
-			-6:00	Mexico	C%sT
-# Campeche, Yucatan
-Zone America/Merida	-5:58:28 -	LMT	1922 Jan  1  0:01:32
-			-6:00	-	CST	1981 Dec 23
-			-5:00	-	EST	1982 Dec  2
-			-6:00	Mexico	C%sT
-# Coahuila, Durango, Nuevo Leon, Tamaulipas
-Zone America/Monterrey	-6:41:16 -	LMT	1921 Dec 31 23:18:44
-			-6:00	-	CST	1988
-			-6:00	US	C%sT	1989
-			-6:00	Mexico	C%sT
-# Central Mexico
-Zone America/Mexico_City -6:36:36 -	LMT	1922 Jan  1  0:23:24
-			-7:00	-	MST	1927 Jun 10 23:00
-			-6:00	-	CST	1930 Nov 15
-			-7:00	-	MST	1931 May  1 23:00
-			-6:00	-	CST	1931 Oct
-			-7:00	-	MST	1932 Apr  1
-			-6:00	Mexico	C%sT	2001 Sep 30 02:00
-			-6:00	-	CST	2002 Feb 20
-			-6:00	Mexico	C%sT
-# Chihuahua
-Zone America/Chihuahua	-7:04:20 -	LMT	1921 Dec 31 23:55:40
-			-7:00	-	MST	1927 Jun 10 23:00
-			-6:00	-	CST	1930 Nov 15
-			-7:00	-	MST	1931 May  1 23:00
-			-6:00	-	CST	1931 Oct
-			-7:00	-	MST	1932 Apr  1
-			-6:00	-	CST	1996
-			-6:00	Mexico	C%sT	1998
-			-6:00	-	CST	1998 Apr Sun>=1 3:00
-			-7:00	Mexico	M%sT
-# Sonora
-Zone America/Hermosillo	-7:23:52 -	LMT	1921 Dec 31 23:36:08
-			-7:00	-	MST	1927 Jun 10 23:00
-			-6:00	-	CST	1930 Nov 15
-			-7:00	-	MST	1931 May  1 23:00
-			-6:00	-	CST	1931 Oct
-			-7:00	-	MST	1932 Apr  1
-			-6:00	-	CST	1942 Apr 24
-			-7:00	-	MST	1949 Jan 14
-			-8:00	-	PST	1970
-			-7:00	Mexico	M%sT	1999
-			-7:00	-	MST
-# Baja California Sur, Nayarit, Sinaloa
-Zone America/Mazatlan	-7:05:40 -	LMT	1921 Dec 31 23:54:20
-			-7:00	-	MST	1927 Jun 10 23:00
-			-6:00	-	CST	1930 Nov 15
-			-7:00	-	MST	1931 May  1 23:00
-			-6:00	-	CST	1931 Oct
-			-7:00	-	MST	1932 Apr  1
-			-6:00	-	CST	1942 Apr 24
-			-7:00	-	MST	1949 Jan 14
-			-8:00	-	PST	1970
-			-7:00	Mexico	M%sT
-# Baja California
-Zone America/Tijuana	-7:48:04 -	LMT	1922 Jan  1  0:11:56
-			-7:00	-	MST	1924
-			-8:00	-	PST	1927 Jun 10 23:00
-			-7:00	-	MST	1930 Nov 15
-			-8:00	-	PST	1931 Apr  1
-			-8:00	1:00	PDT	1931 Sep 30
-			-8:00	-	PST	1942 Apr 24
-			-8:00	1:00	PWT	1945 Aug 14 23:00u
-			-8:00	1:00	PPT	1945 Nov 12 # Peace
-			-8:00	-	PST	1948 Apr  5
-			-8:00	1:00	PDT	1949 Jan 14
-			-8:00	-	PST	1954
-			-8:00	CA	P%sT	1961
-			-8:00	-	PST	1976
-			-8:00	US	P%sT	1996
-			-8:00	Mexico	P%sT	2001
-			-8:00	US	P%sT	2002 Feb 20
-			-8:00	Mexico	P%sT
-# From Paul Eggert (2006-03-22):
-# Formerly there was an America/Ensenada zone, which differed from
-# America/Tijuana only in that it did not observe DST from 1976
-# through 1995.  This was as per Shanks (1999).  But Shanks & Pottenger say
-# Ensenada did not observe DST from 1948 through 1975.  Guy Harris reports
-# that the 1987 OAG says "Only Ensenada, Mexicale, San Felipe and
-# Tijuana observe DST," which agrees with Shanks & Pottenger but implies that
-# DST-observance was a town-by-town matter back then.  This concerns
-# data after 1970 so most likely there should be at least one Zone
-# other than America/Tijuana for Baja, but it's not clear yet what its
-# name or contents should be.
-#
-# Revillagigedo Is
-# no information
-
-###############################################################################
-
-# Anguilla
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Anguilla	-4:12:16 -	LMT	1912 Mar 2
-			-4:00	-	AST
-
-# Antigua and Barbuda
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Antigua	-4:07:12 -	LMT	1912 Mar 2
-			-5:00	-	EST	1951
-			-4:00	-	AST
-
-# Bahamas
-#
-# From Sue Williams (2006-12-07):
-# The Bahamas announced about a month ago that they plan to change their DST
-# rules to sync with the U.S. starting in 2007....
-# http://www.jonesbahamas.com/?c=45&a=10412
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Bahamas	1964	1975	-	Oct	lastSun	2:00	0	S
-Rule	Bahamas	1964	1975	-	Apr	lastSun	2:00	1:00	D
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Nassau	-5:09:24 -	LMT	1912 Mar 2
-			-5:00	Bahamas	E%sT	1976
-			-5:00	US	E%sT
-
-# Barbados
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Barb	1977	only	-	Jun	12	2:00	1:00	D
-Rule	Barb	1977	1978	-	Oct	Sun>=1	2:00	0	S
-Rule	Barb	1978	1980	-	Apr	Sun>=15	2:00	1:00	D
-Rule	Barb	1979	only	-	Sep	30	2:00	0	S
-Rule	Barb	1980	only	-	Sep	25	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Barbados	-3:58:28 -	LMT	1924		# Bridgetown
-			-3:58:28 -	BMT	1932	  # Bridgetown Mean Time
-			-4:00	Barb	A%sT
-
-# Belize
-# Whitman entirely disagrees with Shanks; go with Shanks & Pottenger.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Belize	1918	1942	-	Oct	Sun>=2	0:00	0:30	HD
-Rule	Belize	1919	1943	-	Feb	Sun>=9	0:00	0	S
-Rule	Belize	1973	only	-	Dec	 5	0:00	1:00	D
-Rule	Belize	1974	only	-	Feb	 9	0:00	0	S
-Rule	Belize	1982	only	-	Dec	18	0:00	1:00	D
-Rule	Belize	1983	only	-	Feb	12	0:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Belize	-5:52:48 -	LMT	1912 Apr
-			-6:00	Belize	C%sT
-
-# Bermuda
-
-# From Dan Jones, reporting in The Royal Gazette (2006-06-26):
-
-# Next year, however, clocks in the US will go forward on the second Sunday
-# in March, until the first Sunday in November.  And, after the Time Zone
-# (Seasonal Variation) Bill 2006 was passed in the House of Assembly on
-# Friday, the same thing will happen in Bermuda.
-# http://www.theroyalgazette.com/apps/pbcs.dll/article?AID=/20060529/NEWS/105290135
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Atlantic/Bermuda	-4:19:04 -	LMT	1930 Jan  1 2:00    # Hamilton
-			-4:00	-	AST	1974 Apr 28 2:00
-			-4:00	Bahamas	A%sT	1976
-			-4:00	US	A%sT
-
-# Cayman Is
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Cayman	-5:25:32 -	LMT	1890		# Georgetown
-			-5:07:12 -	KMT	1912 Feb    # Kingston Mean Time
-			-5:00	-	EST
-
-# Costa Rica
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	CR	1979	1980	-	Feb	lastSun	0:00	1:00	D
-Rule	CR	1979	1980	-	Jun	Sun>=1	0:00	0	S
-Rule	CR	1991	1992	-	Jan	Sat>=15	0:00	1:00	D
-# IATA SSIM (1991-09) says the following was at 1:00;
-# go with Shanks & Pottenger.
-Rule	CR	1991	only	-	Jul	 1	0:00	0	S
-Rule	CR	1992	only	-	Mar	15	0:00	0	S
-# There are too many San Joses elsewhere, so we'll use `Costa Rica'.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Costa_Rica	-5:36:20 -	LMT	1890		# San Jose
-			-5:36:20 -	SJMT	1921 Jan 15 # San Jose Mean Time
-			-6:00	CR	C%sT
-# Coco
-# no information; probably like America/Costa_Rica
-
-# Cuba
-
-# From Arthur David Olson (1999-03-29):
-# The 1999-03-28 exhibition baseball game held in Havana, Cuba, between
-# the Cuban National Team and the Baltimore Orioles was carried live on
-# the Orioles Radio Network, including affiliate WTOP in Washington, DC.
-# During the game, play-by-play announcer Jim Hunter noted that
-# "We'll be losing two hours of sleep...Cuba switched to Daylight Saving
-# Time today."  (The "two hour" remark referred to losing one hour of
-# sleep on 1999-03-28--when the announcers were in Cuba as it switched
-# to DST--and one more hour on 1999-04-04--when the announcers will have
-# returned to Baltimore, which switches on that date.)
-
-# From Evert van der Veer via Steffen Thorsen (2004-10-28):
-# Cuba is not going back to standard time this year.
-# From Paul Eggert (2006-03-22):
-# http://www.granma.cu/ingles/2004/septiembre/juev30/41medid-i.html
-# says that it's due to a problem at the Antonio Guiteras
-# thermoelectric plant, and says "This October there will be no return
-# to normal hours (after daylight saving time)".
-# For now, let's assume that it's a temporary measure.
-
-# From Carlos A. Carnero Delgado (2005-11-12):
-# This year (just like in 2004-2005) there's no change in time zone
-# adjustment in Cuba.  We will stay in daylight saving time:
-# http://www.granma.cu/espanol/2005/noviembre/mier9/horario.html
-
-# From Jesper Norgaard Welen (2006-10-21):
-# An article in GRANMA INTERNACIONAL claims that Cuba will end
-# the 3 years of permanent DST next weekend, see
-# http://www.granma.cu/ingles/2006/octubre/lun16/43horario.html
-# "On Saturday night, October 28 going into Sunday, October 29, at 01:00,
-# watches should be set back one hour -- going back to 00:00 hours -- returning
-# to the normal schedule....
-
-# From Paul Eggert (2007-03-02):
-# http://www.granma.cubaweb.cu/english/news/art89.html, dated yesterday,
-# says Cuban clocks will advance at midnight on March 10.
-# For lack of better information, assume Cuba will use US rules,
-# except that it switches at midnight standard time as usual.
-#
-# From Steffen Thorsen (2007-10-25):
-# Carlos Alberto Fonseca Arauz informed me that Cuba will end DST one week 
-# earlier - on the last Sunday of October, just like in 2006.
-# 
-# He supplied these references:
-# 
-# http://www.prensalatina.com.mx/article.asp?ID=%7B4CC32C1B-A9F7-42FB-8A07-8631AFC923AF%7D&language=ES
-# http://actualidad.terra.es/sociedad/articulo/cuba_llama_ahorrar_energia_cambio_1957044.htm
-# 
-# From Alex Kryvenishev (2007-10-25):
-# Here is also article from Granma (Cuba):
-# 
-# [Regira] el Horario Normal desde el [proximo] domingo 28 de octubre
-# http://www.granma.cubaweb.cu/2007/10/24/nacional/artic07.html
-# 
-# http://www.worldtimezone.com/dst_news/dst_news_cuba03.html
-
-# From Arthur David Olson (2008-03-09):
-# I'm in Maryland which is now observing United States Eastern Daylight
-# Time. At 9:44 local time I used RealPlayer to listen to
-# <a href="http://media.enet.cu/radioreloj">
-# http://media.enet.cu/radioreloj
-# </a>, a Cuban information station, and heard
-# the time announced as "ocho cuarenta y cuatro" ("eight forty-four"),
-# indicating that Cuba is still on standard time.
-
-# From Steffen Thorsen (2008-03-12):
-# It seems that Cuba will start DST on Sunday, 2007-03-16...
-# It was announced yesterday, according to this source (in Spanish):
-# <a href="http://www.nnc.cubaweb.cu/marzo-2008/cien-1-11-3-08.htm">
-# http://www.nnc.cubaweb.cu/marzo-2008/cien-1-11-3-08.htm
-# </a>
-#
-# Some more background information is posted here:
-# <a href="http://www.timeanddate.com/news/time/cuba-starts-dst-march-16.html">
-# http://www.timeanddate.com/news/time/cuba-starts-dst-march-16.html
-# </a>
-#
-# The article also says that Cuba has been observing DST since 1963,
-# while Shanks (and tzdata) has 1965 as the first date (except in the
-# 1940's). Many other web pages in Cuba also claim that it has been
-# observed since 1963, but with the exception of 1970 - an exception
-# which is not present in tzdata/Shanks. So there is a chance we need to
-# change some historic records as well.
-#
-# One example:
-# <a href="http://www.radiohc.cu/espanol/noticias/mar07/11mar/hor.htm">
-# http://www.radiohc.cu/espanol/noticias/mar07/11mar/hor.htm
-# </a>
-
-# From Jesper Norgaard Welen (2008-03-13):
-# The Cuban time change has just been confirmed on the most authoritative
-# web site, the Granma.  Please check out
-# <a href="http://www.granma.cubaweb.cu/2008/03/13/nacional/artic10.html">
-# http://www.granma.cubaweb.cu/2008/03/13/nacional/artic10.html
-# </a>
-#
-# Basically as expected after Steffen Thorsens information, the change
-# will take place midnight between Saturday and Sunday.
-
-# From Arthur David Olson (2008-03-12):
-# Assume Sun>=15 (third Sunday) going forward.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Cuba	1928	only	-	Jun	10	0:00	1:00	D
-Rule	Cuba	1928	only	-	Oct	10	0:00	0	S
-Rule	Cuba	1940	1942	-	Jun	Sun>=1	0:00	1:00	D
-Rule	Cuba	1940	1942	-	Sep	Sun>=1	0:00	0	S
-Rule	Cuba	1945	1946	-	Jun	Sun>=1	0:00	1:00	D
-Rule	Cuba	1945	1946	-	Sep	Sun>=1	0:00	0	S
-Rule	Cuba	1965	only	-	Jun	1	0:00	1:00	D
-Rule	Cuba	1965	only	-	Sep	30	0:00	0	S
-Rule	Cuba	1966	only	-	May	29	0:00	1:00	D
-Rule	Cuba	1966	only	-	Oct	2	0:00	0	S
-Rule	Cuba	1967	only	-	Apr	8	0:00	1:00	D
-Rule	Cuba	1967	1968	-	Sep	Sun>=8	0:00	0	S
-Rule	Cuba	1968	only	-	Apr	14	0:00	1:00	D
-Rule	Cuba	1969	1977	-	Apr	lastSun	0:00	1:00	D
-Rule	Cuba	1969	1971	-	Oct	lastSun	0:00	0	S
-Rule	Cuba	1972	1974	-	Oct	8	0:00	0	S
-Rule	Cuba	1975	1977	-	Oct	lastSun	0:00	0	S
-Rule	Cuba	1978	only	-	May	7	0:00	1:00	D
-Rule	Cuba	1978	1990	-	Oct	Sun>=8	0:00	0	S
-Rule	Cuba	1979	1980	-	Mar	Sun>=15	0:00	1:00	D
-Rule	Cuba	1981	1985	-	May	Sun>=5	0:00	1:00	D
-Rule	Cuba	1986	1989	-	Mar	Sun>=14	0:00	1:00	D
-Rule	Cuba	1990	1997	-	Apr	Sun>=1	0:00	1:00	D
-Rule	Cuba	1991	1995	-	Oct	Sun>=8	0:00s	0	S
-Rule	Cuba	1996	only	-	Oct	 6	0:00s	0	S
-Rule	Cuba	1997	only	-	Oct	12	0:00s	0	S
-Rule	Cuba	1998	1999	-	Mar	lastSun	0:00s	1:00	D
-Rule	Cuba	1998	2003	-	Oct	lastSun	0:00s	0	S
-Rule	Cuba	2000	2006	-	Apr	Sun>=1	0:00s	1:00	D
-Rule	Cuba	2006	max	-	Oct	lastSun	0:00s	0	S
-Rule	Cuba	2007	only	-	Mar	Sun>=8	0:00s	1:00	D
-Rule	Cuba	2008	max	-	Mar	Sun>=15	0:00s	1:00	D
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Havana	-5:29:28 -	LMT	1890
-			-5:29:36 -	HMT	1925 Jul 19 12:00 # Havana MT
-			-5:00	Cuba	C%sT
-
-# Dominica
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Dominica	-4:05:36 -	LMT	1911 Jul 1 0:01		# Roseau
-			-4:00	-	AST
-
-# Dominican Republic
-
-# From Steffen Thorsen (2000-10-30):
-# Enrique Morales reported to me that the Dominican Republic has changed the
-# time zone to Eastern Standard Time as of Sunday 29 at 2 am....
-# http://www.listin.com.do/antes/261000/republica/princi.html
-
-# From Paul Eggert (2000-12-04):
-# That URL (2000-10-26, in Spanish) says they planned to use US-style DST.
-
-# From Rives McDow (2000-12-01):
-# Dominican Republic changed its mind and presidential decree on Tuesday,
-# November 28, 2000, with a new decree.  On Sunday, December 3 at 1:00 AM the
-# Dominican Republic will be reverting to 8 hours from the International Date
-# Line, and will not be using DST in the foreseeable future.  The reason they
-# decided to use DST was to be in synch with Puerto Rico, who was also going
-# to implement DST.  When Puerto Rico didn't implement DST, the president
-# decided to revert.
-
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	DR	1966	only	-	Oct	30	0:00	1:00	D
-Rule	DR	1967	only	-	Feb	28	0:00	0	S
-Rule	DR	1969	1973	-	Oct	lastSun	0:00	0:30	HD
-Rule	DR	1970	only	-	Feb	21	0:00	0	S
-Rule	DR	1971	only	-	Jan	20	0:00	0	S
-Rule	DR	1972	1974	-	Jan	21	0:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Santo_Domingo -4:39:36 -	LMT	1890
-			-4:40	-	SDMT	1933 Apr  1 12:00 # S. Dom. MT
-			-5:00	DR	E%sT	1974 Oct 27
-			-4:00	-	AST	2000 Oct 29 02:00
-			-5:00	US	E%sT	2000 Dec  3 01:00
-			-4:00	-	AST
-
-# El Salvador
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Salv	1987	1988	-	May	Sun>=1	0:00	1:00	D
-Rule	Salv	1987	1988	-	Sep	lastSun	0:00	0	S
-# There are too many San Salvadors elsewhere, so use America/El_Salvador
-# instead of America/San_Salvador.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/El_Salvador -5:56:48 -	LMT	1921		# San Salvador
-			-6:00	Salv	C%sT
-
-# Grenada
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Grenada	-4:07:00 -	LMT	1911 Jul	# St George's
-			-4:00	-	AST
-
-# Guadeloupe
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Guadeloupe	-4:06:08 -	LMT	1911 Jun 8	# Pointe a Pitre
-			-4:00	-	AST
-# St Barthelemy
-Link America/Guadeloupe	America/St_Barthelemy
-# St Martin (French part)
-Link America/Guadeloupe	America/Marigot
-
-# Guatemala
-#
-# From Gwillim Law (2006-04-22), after a heads-up from Oscar van Vlijmen:
-# Diario Co Latino, at
-# http://www.diariocolatino.com/internacionales/detalles.asp?NewsID=8079,
-# says in an article dated 2006-04-19 that the Guatemalan government had
-# decided on that date to advance official time by 60 minutes, to lessen the
-# impact of the elevated cost of oil....  Daylight saving time will last from
-# 2006-04-29 24:00 (Guatemalan standard time) to 2006-09-30 (time unspecified).
-# From Paul Eggert (2006-06-22):
-# The Ministry of Energy and Mines, press release CP-15/2006
-# (2006-04-19), says DST ends at 24:00.  See
-# <http://www.sieca.org.gt/Sitio_publico/Energeticos/Doc/Medidas/Cambio_Horario_Nac_190406.pdf>.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Guat	1973	only	-	Nov	25	0:00	1:00	D
-Rule	Guat	1974	only	-	Feb	24	0:00	0	S
-Rule	Guat	1983	only	-	May	21	0:00	1:00	D
-Rule	Guat	1983	only	-	Sep	22	0:00	0	S
-Rule	Guat	1991	only	-	Mar	23	0:00	1:00	D
-Rule	Guat	1991	only	-	Sep	 7	0:00	0	S
-Rule	Guat	2006	only	-	Apr	30	0:00	1:00	D
-Rule	Guat	2006	only	-	Oct	 1	0:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Guatemala	-6:02:04 -	LMT	1918 Oct 5
-			-6:00	Guat	C%sT
-
-# Haiti
-# From Gwillim Law (2005-04-15):
-# Risto O. Nykanen wrote me that Haiti is now on DST.
-# I searched for confirmation, and I found a
-# <a href="http://www.haitianconsulate.org/time.doc"> press release
-# on the Web page of the Haitian Consulate in Chicago (2005-03-31),
-# </a>.  Translated from French, it says:
-#
-#  "The Prime Minister's Communication Office notifies the public in general
-#   and the press in particular that, following a decision of the Interior
-#   Ministry and the Territorial Collectivities [I suppose that means the
-#   provinces], Haiti will move to Eastern Daylight Time in the night from next
-#   Saturday the 2nd to Sunday the 3rd.
-#
-#  "Consequently, the Prime Minister's Communication Office wishes to inform
-#   the population that the country's clocks will be set forward one hour
-#   starting at midnight.  This provision will hold until the last Saturday in
-#   October 2005.
-#
-#  "Port-au-Prince, March 31, 2005"
-#
-# From Steffen Thorsen (2006-04-04):
-# I have been informed by users that Haiti observes DST this year like
-# last year, so the current "only" rule for 2005 might be changed to a
-# "max" rule or to last until 2006. (Who knows if they will observe DST
-# next year or if they will extend their DST like US/Canada next year).
-#
-# I have found this article about it (in French):
-# http://www.haitipressnetwork.com/news.cfm?articleID=7612
-#
-# The reason seems to be an energy crisis.
-
-# From Stephen Colebourne (2007-02-22):
-# Some IATA info: Haiti won't be having DST in 2007.
-
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Haiti	1983	only	-	May	8	0:00	1:00	D
-Rule	Haiti	1984	1987	-	Apr	lastSun	0:00	1:00	D
-Rule	Haiti	1983	1987	-	Oct	lastSun	0:00	0	S
-# Shanks & Pottenger say AT is 2:00, but IATA SSIM (1991/1997) says 1:00s.
-# Go with IATA.
-Rule	Haiti	1988	1997	-	Apr	Sun>=1	1:00s	1:00	D
-Rule	Haiti	1988	1997	-	Oct	lastSun	1:00s	0	S
-Rule	Haiti	2005	2006	-	Apr	Sun>=1	0:00	1:00	D
-Rule	Haiti	2005	2006	-	Oct	lastSun	0:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Port-au-Prince -4:49:20 -	LMT	1890
-			-4:49	-	PPMT	1917 Jan 24 12:00 # P-a-P MT
-			-5:00	Haiti	E%sT
-
-# Honduras
-# Shanks & Pottenger say 1921 Jan 1; go with Whitman's more precise Apr 1.
-
-# From Paul Eggert (2006-05-05):
-# worldtimezone.com reports a 2006-05-02 Spanish-language AP article
-# saying Honduras will start using DST midnight Saturday, effective 4
-# months until September.  La Tribuna reported today
-# <http://www.latribuna.hn/99299.html> that Manuel Zelaya, the president
-# of Honduras, refused to back down on this.
-
-# From Jesper Norgaard Welen (2006-08-08):
-# It seems that Honduras has returned from DST to standard time this Monday at
-# 00:00 hours (prolonging Sunday to 25 hours duration).
-# http://www.worldtimezone.com/dst_news/dst_news_honduras04.html
-
-# From Paul Eggert (2006-08-08):
-# Also see Diario El Heraldo, The country returns to standard time (2006-08-08)
-# <http://www.elheraldo.hn/nota.php?nid=54941&sec=12>.
-# It mentions executive decree 18-2006.
-
-# From Steffen Thorsen (2006-08-17):
-# Honduras will observe DST from 2007 to 2009, exact dates are not
-# published, I have located this authoritative source:
-# http://www.presidencia.gob.hn/noticia.aspx?nId=47
-
-# From Steffen Thorsen (2007-03-30):
-# http://www.laprensahn.com/pais_nota.php?id04962=7386
-# So it seems that Honduras will not enter DST this year....
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Hond	1987	1988	-	May	Sun>=1	0:00	1:00	D
-Rule	Hond	1987	1988	-	Sep	lastSun	0:00	0	S
-Rule	Hond	2006	only	-	May	Sun>=1	0:00	1:00	D
-Rule	Hond	2006	only	-	Aug	Mon>=1	0:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Tegucigalpa -5:48:52 -	LMT	1921 Apr
-			-6:00	Hond	C%sT
-#
-# Great Swan I ceded by US to Honduras in 1972
-
-# Jamaica
-
-# From Bob Devine (1988-01-28):
-# Follows US rules.
-
-# From U. S. Naval Observatory (1989-01-19):
-# JAMAICA             5 H  BEHIND UTC
-
-# From Shanks & Pottenger:
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Jamaica	-5:07:12 -	LMT	1890		# Kingston
-			-5:07:12 -	KMT	1912 Feb    # Kingston Mean Time
-			-5:00	-	EST	1974 Apr 28 2:00
-			-5:00	US	E%sT	1984
-			-5:00	-	EST
-
-# Martinique
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Martinique	-4:04:20 -      LMT	1890		# Fort-de-France
-			-4:04:20 -	FFMT	1911 May     # Fort-de-France MT
-			-4:00	-	AST	1980 Apr  6
-			-4:00	1:00	ADT	1980 Sep 28
-			-4:00	-	AST
-
-# Montserrat
-# From Paul Eggert (2006-03-22):
-# In 1995 volcanic eruptions forced evacuation of Plymouth, the capital.
-# world.gazetteer.com says Cork Hill is the most populous location now.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Montserrat	-4:08:52 -	LMT	1911 Jul 1 0:01   # Cork Hill
-			-4:00	-	AST
-
-# Nicaragua
-#
-# This uses Shanks & Pottenger for times before 2005.
-#
-# From Steffen Thorsen (2005-04-12):
-# I've got reports from 8 different people that Nicaragua just started
-# DST on Sunday 2005-04-10, in order to save energy because of
-# expensive petroleum.  The exact end date for DST is not yet
-# announced, only "September" but some sites also say "mid-September".
-# Some background information is available on the President's official site:
-# http://www.presidencia.gob.ni/Presidencia/Files_index/Secretaria/Notas%20de%20Prensa/Presidente/2005/ABRIL/Gobierno-de-nicaragua-adelanta-hora-oficial-06abril.htm
-# The Decree, no 23-2005 is available here:
-# http://www.presidencia.gob.ni/buscador_gaceta/BD/DECRETOS/2005/Decreto%2023-2005%20Se%20adelanta%20en%20una%20hora%20en%20todo%20el%20territorio%20nacional%20apartir%20de%20las%2024horas%20del%2009%20de%20Abril.pdf
-#
-# From Paul Eggert (2005-05-01):
-# The decree doesn't say anything about daylight saving, but for now let's
-# assume that it is daylight saving....
-#
-# From Gwillim Law (2005-04-21):
-# The Associated Press story on the time change, which can be found at
-# http://www.lapalmainteractivo.com/guias/content/gen/ap/America_Latina/AMC_GEN_NICARAGUA_HORA.html
-# and elsewhere, says (fifth paragraph, translated from Spanish):  "The last
-# time that a change of clocks was applied to save energy was in the year 2000
-# during the Arnoldo Aleman administration."...
-# The northamerica file says that Nicaragua has been on UTC-6 continuously
-# since December 1998.  I wasn't able to find any details of Nicaraguan time
-# changes in 2000.  Perhaps a note could be added to the northamerica file, to
-# the effect that we have indirect evidence that DST was observed in 2000.
-#
-# From Jesper Norgaard Welen (2005-11-02):
-# Nicaragua left DST the 2005-10-02 at 00:00 (local time).
-# http://www.presidencia.gob.ni/presidencia/files_index/secretaria/comunicados/2005/septiembre/26septiembre-cambio-hora.htm
-# (2005-09-26)
-#
-# From Jesper Norgaard Welen (2006-05-05):
-# http://www.elnuevodiario.com.ni/2006/05/01/nacionales/18410
-# (my informal translation)
-# By order of the president of the republic, Enrique Bolanos, Nicaragua
-# advanced by sixty minutes their official time, yesterday at 2 in the
-# morning, and will stay that way until 30.th. of september.
-#
-# From Jesper Norgaard Welen (2006-09-30):
-# http://www.presidencia.gob.ni/buscador_gaceta/BD/DECRETOS/2006/D-063-2006P-PRN-Cambio-Hora.pdf
-# My informal translation runs:
-# The natural sun time is restored in all the national territory, in that the
-# time is returned one hour at 01:00 am of October 1 of 2006.
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Nic	1979	1980	-	Mar	Sun>=16	0:00	1:00	D
-Rule	Nic	1979	1980	-	Jun	Mon>=23	0:00	0	S
-Rule	Nic	2005	only	-	Apr	10	0:00	1:00	D
-Rule	Nic	2005	only	-	Oct	Sun>=1	0:00	0	S
-Rule	Nic	2006	only	-	Apr	30	2:00	1:00	D
-Rule	Nic	2006	only	-	Oct	Sun>=1	1:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Managua	-5:45:08 -	LMT	1890
-			-5:45:12 -	MMT	1934 Jun 23 # Managua Mean Time?
-			-6:00	-	CST	1973 May
-			-5:00	-	EST	1975 Feb 16
-			-6:00	Nic	C%sT	1992 Jan  1 4:00
-			-5:00	-	EST	1992 Sep 24
-			-6:00	-	CST	1993
-			-5:00	-	EST	1997
-			-6:00	Nic	C%sT
-
-# Panama
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Panama	-5:18:08 -	LMT	1890
-			-5:19:36 -	CMT	1908 Apr 22   # Colon Mean Time
-			-5:00	-	EST
-
-# Puerto Rico
-# There are too many San Juans elsewhere, so we'll use `Puerto_Rico'.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Puerto_Rico -4:24:25 -	LMT	1899 Mar 28 12:00    # San Juan
-			-4:00	-	AST	1942 May  3
-			-4:00	US	A%sT	1946
-			-4:00	-	AST
-
-# St Kitts-Nevis
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/St_Kitts	-4:10:52 -	LMT	1912 Mar 2	# Basseterre
-			-4:00	-	AST
-
-# St Lucia
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/St_Lucia	-4:04:00 -	LMT	1890		# Castries
-			-4:04:00 -	CMT	1912	    # Castries Mean Time
-			-4:00	-	AST
-
-# St Pierre and Miquelon
-# There are too many St Pierres elsewhere, so we'll use `Miquelon'.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Miquelon	-3:44:40 -	LMT	1911 May 15	# St Pierre
-			-4:00	-	AST	1980 May
-			-3:00	-	PMST	1987 # Pierre & Miquelon Time
-			-3:00	Canada	PM%sT
-
-# St Vincent and the Grenadines
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/St_Vincent	-4:04:56 -	LMT	1890		# Kingstown
-			-4:04:56 -	KMT	1912	   # Kingstown Mean Time
-			-4:00	-	AST
-
-# Turks and Caicos
-#
-# From Chris Dunn in
-# <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=415007>
-# (2007-03-15): In the Turks & Caicos Islands (America/Grand_Turk) the
-# daylight saving dates for time changes have been adjusted to match
-# the recent U.S. change of dates.
-#
-# From Brian Inglis (2007-04-28):
-# http://www.turksandcaicos.tc/calendar/index.htm [2007-04-26]
-# there is an entry for Nov 4 "Daylight Savings Time Ends 2007" and three
-# rows before that there is an out of date entry for Oct:
-# "Eastern Standard Times Begins 2007
-# Clocks are set back one hour at 2:00 a.m. local Daylight Saving Time"
-# indicating that the normal ET rules are followed.
-#
-# From Paul Eggert (2006-05-01):
-# Shanks & Pottenger say they use US DST rules, but IATA SSIM (1991/1998)
-# says they switch at midnight.  Go with Shanks & Pottenger.
-#
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	TC	1979	1986	-	Apr	lastSun	2:00	1:00	D
-Rule	TC	1979	2006	-	Oct	lastSun	2:00	0	S
-Rule	TC	1987	2006	-	Apr	Sun>=1	2:00	1:00	D
-Rule	TC	2007	max	-	Mar	Sun>=8	2:00	1:00	D
-Rule	TC	2007	max	-	Nov	Sun>=1	2:00	0	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Grand_Turk	-4:44:32 -	LMT	1890
-			-5:07:12 -	KMT	1912 Feb    # Kingston Mean Time
-			-5:00	TC	E%sT
-
-# British Virgin Is
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Tortola	-4:18:28 -	LMT	1911 Jul    # Road Town
-			-4:00	-	AST
-
-# Virgin Is
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/St_Thomas	-4:19:44 -	LMT	1911 Jul    # Charlotte Amalie
-			-4:00	-	AST
+# <pre>
+# @(#)northamerica	8.34
+# This file is in the public domain, so clarified as of
+# 2009-05-17 by Arthur David Olson.
+
+# also includes Central America and the Caribbean
+
+# This data is by no means authoritative; if you think you know better,
+# go ahead and edit the file (and please send any changes to
+# tz@elsie.nci.nih.gov for general use in the future).
+
+# From Paul Eggert (1999-03-22):
+# A reliable and entertaining source about time zones is
+# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).
+
+###############################################################################
+
+# United States
+
+# From Paul Eggert (1999-03-31):
+# Howse writes (pp 121-125) that time zones were invented by
+# Professor Charles Ferdinand Dowd (1825-1904),
+# Principal of Temple Grove Ladies' Seminary (Saratoga Springs, NY).
+# His pamphlet ``A System of National Time for Railroads'' (1870)
+# was the result of his proposals at the Convention of Railroad Trunk Lines
+# in New York City (1869-10).  His 1870 proposal was based on Washington, DC,
+# but in 1872-05 he moved the proposed origin to Greenwich.
+# His proposal was adopted by the railroads on 1883-11-18 at 12:00,
+# and the most of the country soon followed suit.
+
+# From Paul Eggert (2005-04-16):
+# That 1883 transition occurred at 12:00 new time, not at 12:00 old time.
+# See p 46 of David Prerau, Seize the daylight, Thunder's Mouth Press (2005).
+
+# From Paul Eggert (2006-03-22):
+# A good source for time zone historical data in the US is
+# Thomas G. Shanks, The American Atlas (5th edition),
+# San Diego: ACS Publications, Inc. (1991).
+# Make sure you have the errata sheet; the book is somewhat useless without it.
+# It is the source for most of the pre-1991 US entries below.
+
+# From Paul Eggert (2001-03-06):
+# Daylight Saving Time was first suggested as a joke by Benjamin Franklin
+# in his whimsical essay ``An Economical Project for Diminishing the Cost
+# of Light'' published in the Journal de Paris (1784-04-26).
+# Not everyone is happy with the results:
+#
+#	I don't really care how time is reckoned so long as there is some
+#	agreement about it, but I object to being told that I am saving
+#	daylight when my reason tells me that I am doing nothing of the kind.
+#	I even object to the implication that I am wasting something
+#	valuable if I stay in bed after the sun has risen.  As an admirer
+#	of moonlight I resent the bossy insistence of those who want to
+#	reduce my time for enjoying it.  At the back of the Daylight Saving
+#	scheme I detect the bony, blue-fingered hand of Puritanism, eager
+#	to push people into bed earlier, and get them up earlier, to make
+#	them healthy, wealthy and wise in spite of themselves.
+#
+#	-- Robertson Davies, The diary of Samuel Marchbanks,
+#	   Clarke, Irwin (1947), XIX, Sunday
+#
+# For more about the first ten years of DST in the United States, see
+# Robert Garland's <a href="http://www.clpgh.org/exhibit/dst.html">
+# Ten years of daylight saving from the Pittsburgh standpoint
+# (Carnegie Library of Pittsburgh, 1927)</a>.
+#
+# Shanks says that DST was called "War Time" in the US in 1918 and 1919.
+# However, DST was imposed by the Standard Time Act of 1918, which
+# was the first nationwide legal time standard, and apparently
+# time was just called "Standard Time" or "Daylight Saving Time".
+
+# From Arthur David Olson:
+# US Daylight Saving Time ended on the last Sunday of *October* in 1974.
+# See, for example, the front page of the Saturday, 1974-10-26
+# and Sunday, 1974-10-27 editions of the Washington Post.
+
+# From Arthur David Olson:
+# Before the Uniform Time Act of 1966 took effect in 1967, observance of
+# Daylight Saving Time in the US was by local option, except during wartime.
+
+# From Arthur David Olson (2000-09-25):
+# Last night I heard part of a rebroadcast of a 1945 Arch Oboler radio drama.
+# In the introduction, Oboler spoke of "Eastern Peace Time."
+# An AltaVista search turned up
+# <a href="http://rowayton.org/rhs/hstaug45.html">:
+# "When the time is announced over the radio now, it is 'Eastern Peace
+# Time' instead of the old familiar 'Eastern War Time.'  Peace is wonderful."
+# </a> (August 1945) by way of confirmation.
+
+# From Joseph Gallant citing
+# George H. Douglas, _The Early Days of Radio Broadcasting_ (1987):
+# At 7 P.M. (Eastern War Time) [on 1945-08-14], the networks were set
+# to switch to London for Attlee's address, but the American people
+# never got to hear his speech live. According to one press account,
+# CBS' Bob Trout was first to announce the word of Japan's surrender,
+# but a few seconds later, NBC, ABC and Mutual also flashed the word
+# of surrender, all of whom interrupting the bells of Big Ben in
+# London which were to precede Mr. Attlee's speech.
+
+# From Paul Eggert (2003-02-09): It was Robert St John, not Bob Trout.  From
+# Myrna Oliver's obituary of St John on page B16 of today's Los Angeles Times:
+#
+# ... a war-weary U.S. clung to radios, awaiting word of Japan's surrender.
+# Any announcement from Asia would reach St. John's New York newsroom on a
+# wire service teletype machine, which had prescribed signals for major news.
+# Associated Press, for example, would ring five bells before spewing out
+# typed copy of an important story, and 10 bells for news "of transcendental
+# importance."
+#
+# On Aug. 14, stalling while talking steadily into the NBC networks' open
+# microphone, St. John heard five bells and waited only to hear a sixth bell,
+# before announcing confidently: "Ladies and gentlemen, World War II is over.
+# The Japanese have agreed to our surrender terms."
+#
+# He had scored a 20-second scoop on other broadcasters.
+
+# From Arthur David Olson (2005-08-22):
+# Paul has been careful to use the "US" rules only in those locations
+# that are part of the United States; this reflects the real scope of
+# U.S. government action.  So even though the "US" rules have changed
+# in the latest release, other countries won't be affected.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	US	1918	1919	-	Mar	lastSun	2:00	1:00	D
+Rule	US	1918	1919	-	Oct	lastSun	2:00	0	S
+Rule	US	1942	only	-	Feb	9	2:00	1:00	W # War
+Rule	US	1945	only	-	Aug	14	23:00u	1:00	P # Peace
+Rule	US	1945	only	-	Sep	30	2:00	0	S
+Rule	US	1967	2006	-	Oct	lastSun	2:00	0	S
+Rule	US	1967	1973	-	Apr	lastSun	2:00	1:00	D
+Rule	US	1974	only	-	Jan	6	2:00	1:00	D
+Rule	US	1975	only	-	Feb	23	2:00	1:00	D
+Rule	US	1976	1986	-	Apr	lastSun	2:00	1:00	D
+Rule	US	1987	2006	-	Apr	Sun>=1	2:00	1:00	D
+Rule	US	2007	max	-	Mar	Sun>=8	2:00	1:00	D
+Rule	US	2007	max	-	Nov	Sun>=1	2:00	0	S
+
+# From Arthur David Olson, 2005-12-19
+# We generate the files specified below to guard against old files with
+# obsolete information being left in the time zone binary directory.
+# We limit the list to names that have appeared in previous versions of
+# this time zone package.
+# We do these as separate Zones rather than as Links to avoid problems if
+# a particular place changes whether it observes DST.
+# We put these specifications here in the northamerica file both to
+# increase the chances that they'll actually get compiled and to
+# avoid the need to duplicate the US rules in another file.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	EST		 -5:00	-	EST
+Zone	MST		 -7:00	-	MST
+Zone	HST		-10:00	-	HST
+Zone	EST5EDT		 -5:00	US	E%sT
+Zone	CST6CDT		 -6:00	US	C%sT
+Zone	MST7MDT		 -7:00	US	M%sT
+Zone	PST8PDT		 -8:00	US	P%sT
+
+# From Bob Devine (1988-01-28):
+# ...Alaska (and Hawaii) had the timezone names changed in 1967.
+#    old			 new
+#    Pacific Standard Time(PST)  -same-
+#    Yukon Standard Time(YST)    -same-
+#    Central Alaska S.T. (CAT)   Alaska-Hawaii St[an]dard Time (AHST)
+#    Nome Standard Time (NT)     Bering Standard Time (BST)
+#
+# ...Alaska's timezone lines were redrawn in 1983 to give only 2 tz.
+#    The YST zone now covers nearly all of the state, AHST just part
+#    of the Aleutian islands.   No DST.
+
+# From Paul Eggert (1995-12-19):
+# The tables below use `NST', not `NT', for Nome Standard Time.
+# I invented `CAWT' for Central Alaska War Time.
+
+# From U. S. Naval Observatory (1989-01-19):
+# USA  EASTERN       5 H  BEHIND UTC    NEW YORK, WASHINGTON
+# USA  EASTERN       4 H  BEHIND UTC    APR 3 - OCT 30
+# USA  CENTRAL       6 H  BEHIND UTC    CHICAGO, HOUSTON
+# USA  CENTRAL       5 H  BEHIND UTC    APR 3 - OCT 30
+# USA  MOUNTAIN      7 H  BEHIND UTC    DENVER
+# USA  MOUNTAIN      6 H  BEHIND UTC    APR 3 - OCT 30
+# USA  PACIFIC       8 H  BEHIND UTC    L.A., SAN FRANCISCO
+# USA  PACIFIC       7 H  BEHIND UTC    APR 3 - OCT 30
+# USA  ALASKA STD    9 H  BEHIND UTC    MOST OF ALASKA     (AKST)
+# USA  ALASKA STD    8 H  BEHIND UTC    APR 3 - OCT 30 (AKDT)
+# USA  ALEUTIAN     10 H  BEHIND UTC    ISLANDS WEST OF 170W
+# USA  - " -         9 H  BEHIND UTC    APR 3 - OCT 30
+# USA  HAWAII       10 H  BEHIND UTC
+# USA  BERING       11 H  BEHIND UTC    SAMOA, MIDWAY
+
+# From Arthur David Olson (1989-01-21):
+# The above dates are for 1988.
+# Note the "AKST" and "AKDT" abbreviations, the claim that there's
+# no DST in Samoa, and the claim that there is DST in Alaska and the
+# Aleutians.
+
+# From Arthur David Olson (1988-02-13):
+# Legal standard time zone names, from United States Code (1982 Edition and
+# Supplement III), Title 15, Chapter 6, Section 260 and forward.  First, names
+# up to 1967-04-01 (when most provisions of the Uniform Time Act of 1966
+# took effect), as explained in sections 263 and 261:
+#	(none)
+#	United States standard eastern time
+#	United States standard mountain time
+#	United States standard central time
+#	United States standard Pacific time
+#	(none)
+#	United States standard Alaska time
+#	(none)
+# Next, names from 1967-04-01 until 1983-11-30 (the date for
+# public law 98-181):
+#	Atlantic standard time
+#	eastern standard time
+#	central standard time
+#	mountain standard time
+#	Pacific standard time
+#	Yukon standard time
+#	Alaska-Hawaii standard time
+#	Bering standard time
+# And after 1983-11-30:
+#	Atlantic standard time
+#	eastern standard time
+#	central standard time
+#	mountain standard time
+#	Pacific standard time
+#	Alaska standard time
+#	Hawaii-Aleutian standard time
+#	Samoa standard time
+# The law doesn't give abbreviations.
+#
+# From Paul Eggert (2000-01-08), following a heads-up from Rives McDow:
+# Public law 106-564 (2000-12-23) introduced the abbreviation
+# "Chamorro Standard Time" for time in Guam and the Northern Marianas.
+# See the file "australasia".
+
+# From Arthur David Olson, 2005-08-09
+# The following was signed into law on 2005-08-08.
+#
+# H.R. 6, Energy Policy Act of 2005, SEC. 110. DAYLIGHT SAVINGS.
+#   (a) Amendment- Section 3(a) of the Uniform Time Act of 1966 (15
+#   U.S.C. 260a(a)) is amended--
+#     (1) by striking `first Sunday of April' and inserting `second
+#     Sunday of March'; and
+#     (2) by striking `last Sunday of October' and inserting `first
+#     Sunday of November'.
+#   (b) Effective Date- Subsection (a) shall take effect 1 year after the
+#   date of enactment of this Act or March 1, 2007, whichever is later.
+#   (c) Report to Congress- Not later than 9 months after the effective
+#   date stated in subsection (b), the Secretary shall report to Congress
+#   on the impact of this section on energy consumption in the United
+#   States.
+#   (d) Right to Revert- Congress retains the right to revert the
+#   Daylight Saving Time back to the 2005 time schedules once the
+#   Department study is complete.
+
+# US eastern time, represented by New York
+
+# Connecticut, Delaware, District of Columbia, most of Florida,
+# Georgia, southeast Indiana (Dearborn and Ohio counties), eastern Kentucky
+# (except America/Kentucky/Louisville below), Maine, Maryland, Massachusetts,
+# New Hampshire, New Jersey, New York, North Carolina, Ohio,
+# Pennsylvania, Rhode Island, South Carolina, eastern Tennessee,
+# Vermont, Virginia, West Virginia
+
+# From Dave Cantor (2004-11-02):
+# Early this summer I had the occasion to visit the Mount Washington
+# Observatory weather station atop (of course!) Mount Washington [, NH]....
+# One of the staff members said that the station was on Eastern Standard Time
+# and didn't change their clocks for Daylight Saving ... so that their
+# reports will always have times which are 5 hours behind UTC.
+
+# From Paul Eggert (2005-08-26):
+# According to today's Huntsville Times
+# <http://www.al.com/news/huntsvilletimes/index.ssf?/base/news/1125047783228320.xml&coll=1>
+# a few towns on Alabama's "eastern border with Georgia, such as Phenix City
+# in Russell County, Lanett in Chambers County and some towns in Lee County,
+# set their watches and clocks on Eastern time."  It quotes H.H. "Bubba"
+# Roberts, city administrator in Phenix City. as saying "We are in the Central
+# time zone, but we do go by the Eastern time zone because so many people work
+# in Columbus."
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule	NYC	1920	only	-	Mar	lastSun	2:00	1:00	D
+Rule	NYC	1920	only	-	Oct	lastSun	2:00	0	S
+Rule	NYC	1921	1966	-	Apr	lastSun	2:00	1:00	D
+Rule	NYC	1921	1954	-	Sep	lastSun	2:00	0	S
+Rule	NYC	1955	1966	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/New_York	-4:56:02 -	LMT	1883 Nov 18 12:03:58
+			-5:00	US	E%sT	1920
+			-5:00	NYC	E%sT	1942
+			-5:00	US	E%sT	1946
+			-5:00	NYC	E%sT	1967
+			-5:00	US	E%sT
+
+# US central time, represented by Chicago
+
+# Alabama, Arkansas, Florida panhandle (Bay, Calhoun, Escambia,
+# Gulf, Holmes, Jackson, Okaloosa, Santa Rosa, Walton, and
+# Washington counties), Illinois, western Indiana
+# (Gibson, Jasper, Lake, LaPorte, Newton, Porter, Posey, Spencer,
+# Vanderburgh, and Warrick counties), Iowa, most of Kansas, western
+# Kentucky, Louisiana, Minnesota, Mississippi, Missouri, eastern
+# Nebraska, eastern North Dakota, Oklahoma, eastern South Dakota,
+# western Tennessee, most of Texas, Wisconsin
+
+# From Larry M. Smith (2006-04-26) re Wisconsin:
+# http://www.legis.state.wi.us/statutes/Stat0175.pdf ...
+# is currently enforced at the 01:00 time of change.  Because the local
+# "bar time" in the state corresponds to 02:00, a number of citations
+# are issued for the "sale of class 'B' alcohol after prohibited
+# hours" within the deviated hour of this change every year....
+#
+# From Douglas R. Bomberg (2007-03-12):
+# Wisconsin has enacted (nearly eleventh-hour) legislation to get WI
+# Statue 175 closer in synch with the US Congress' intent....
+# http://www.legis.state.wi.us/2007/data/acts/07Act3.pdf
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule	Chicago	1920	only	-	Jun	13	2:00	1:00	D
+Rule	Chicago	1920	1921	-	Oct	lastSun	2:00	0	S
+Rule	Chicago	1921	only	-	Mar	lastSun	2:00	1:00	D
+Rule	Chicago	1922	1966	-	Apr	lastSun	2:00	1:00	D
+Rule	Chicago	1922	1954	-	Sep	lastSun	2:00	0	S
+Rule	Chicago	1955	1966	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Chicago	-5:50:36 -	LMT	1883 Nov 18 12:09:24
+			-6:00	US	C%sT	1920
+			-6:00	Chicago	C%sT	1936 Mar  1 2:00
+			-5:00	-	EST	1936 Nov 15 2:00
+			-6:00	Chicago	C%sT	1942
+			-6:00	US	C%sT	1946
+			-6:00	Chicago	C%sT	1967
+			-6:00	US	C%sT
+# Oliver County, ND switched from mountain to central time on 1992-10-25.
+Zone America/North_Dakota/Center -6:45:12 - LMT	1883 Nov 18 12:14:48
+			-7:00	US	M%sT	1992 Oct 25 02:00
+			-6:00	US	C%sT
+# Morton County, ND, switched from mountain to central time on
+# 2003-10-26, except for the area around Mandan which was already central time.
+# See <http://dmses.dot.gov/docimages/p63/135818.pdf>.
+# Officially this switch also included part of Sioux County, and
+# Jones, Mellette, and Todd Counties in South Dakota;
+# but in practice these other counties were already observing central time.
+# See <http://www.epa.gov/fedrgstr/EPA-IMPACT/2003/October/Day-28/i27056.htm>.
+Zone America/North_Dakota/New_Salem -6:45:39 - LMT 1883 Nov 18 12:14:21
+			-7:00	US	M%sT	2003 Oct 26 02:00
+			-6:00	US	C%sT
+
+# US mountain time, represented by Denver
+#
+# Colorado, far western Kansas, Montana, western
+# Nebraska, Nevada border (Jackpot, Owyhee, and Mountain City),
+# New Mexico, southwestern North Dakota,
+# western South Dakota, far western Texas (El Paso County, Hudspeth County,
+# and Pine Springs and Nickel Creek in Culberson County), Utah, Wyoming
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule	Denver	1920	1921	-	Mar	lastSun	2:00	1:00	D
+Rule	Denver	1920	only	-	Oct	lastSun	2:00	0	S
+Rule	Denver	1921	only	-	May	22	2:00	0	S
+Rule	Denver	1965	1966	-	Apr	lastSun	2:00	1:00	D
+Rule	Denver	1965	1966	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Denver	-6:59:56 -	LMT	1883 Nov 18 12:00:04
+			-7:00	US	M%sT	1920
+			-7:00	Denver	M%sT	1942
+			-7:00	US	M%sT	1946
+			-7:00	Denver	M%sT	1967
+			-7:00	US	M%sT
+
+# US Pacific time, represented by Los Angeles
+#
+# California, northern Idaho (Benewah, Bonner, Boundary, Clearwater,
+# Idaho, Kootenai, Latah, Lewis, Nez Perce, and Shoshone counties,
+# and the northern three-quarters of Idaho county),
+# most of Nevada, most of Oregon, and Washington
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule	CA	1948	only	-	Mar	14	2:00	1:00	D
+Rule	CA	1949	only	-	Jan	 1	2:00	0	S
+Rule	CA	1950	1966	-	Apr	lastSun	2:00	1:00	D
+Rule	CA	1950	1961	-	Sep	lastSun	2:00	0	S
+Rule	CA	1962	1966	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Los_Angeles -7:52:58 -	LMT	1883 Nov 18 12:07:02
+			-8:00	US	P%sT	1946
+			-8:00	CA	P%sT	1967
+			-8:00	US	P%sT
+
+# Alaska
+# AK%sT is the modern abbreviation for -9:00 per USNO.
+#
+# From Paul Eggert (2001-05-30):
+# Howse writes that Alaska switched from the Julian to the Gregorian calendar,
+# and from east-of-GMT to west-of-GMT days, when the US bought it from Russia.
+# This was on 1867-10-18, a Friday; the previous day was 1867-10-06 Julian,
+# also a Friday.  Include only the time zone part of this transition,
+# ignoring the switch from Julian to Gregorian, since we can't represent
+# the Julian calendar.
+#
+# As far as we know, none of the exact locations mentioned below were
+# permanently inhabited in 1867 by anyone using either calendar.
+# (Yakutat was colonized by the Russians in 1799, but the settlement
+# was destroyed in 1805 by a Yakutat-kon war party.)  However, there
+# were nearby inhabitants in some cases and for our purposes perhaps
+# it's best to simply use the official transition.
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Juneau	 15:02:19 -	LMT	1867 Oct 18
+			 -8:57:41 -	LMT	1900 Aug 20 12:00
+			 -8:00	-	PST	1942
+			 -8:00	US	P%sT	1946
+			 -8:00	-	PST	1969
+			 -8:00	US	P%sT	1983 Oct 30 2:00
+			 -9:00	US	Y%sT	1983 Nov 30
+			 -9:00	US	AK%sT
+Zone America/Yakutat	 14:41:05 -	LMT	1867 Oct 18
+			 -9:18:55 -	LMT	1900 Aug 20 12:00
+			 -9:00	-	YST	1942
+			 -9:00	US	Y%sT	1946
+			 -9:00	-	YST	1969
+			 -9:00	US	Y%sT	1983 Nov 30
+			 -9:00	US	AK%sT
+Zone America/Anchorage	 14:00:24 -	LMT	1867 Oct 18
+			 -9:59:36 -	LMT	1900 Aug 20 12:00
+			-10:00	-	CAT	1942
+			-10:00	US	CAT/CAWT 1945 Aug 14 23:00u
+			-10:00	US	CAT/CAPT 1946 # Peace
+			-10:00	-	CAT	1967 Apr
+			-10:00	-	AHST	1969
+			-10:00	US	AH%sT	1983 Oct 30 2:00
+			 -9:00	US	Y%sT	1983 Nov 30
+			 -9:00	US	AK%sT
+Zone America/Nome	 12:58:21 -	LMT	1867 Oct 18
+			-11:01:38 -	LMT	1900 Aug 20 12:00
+			-11:00	-	NST	1942
+			-11:00	US	N%sT	1946
+			-11:00	-	NST	1967 Apr
+			-11:00	-	BST	1969
+			-11:00	US	B%sT	1983 Oct 30 2:00
+			 -9:00	US	Y%sT	1983 Nov 30
+			 -9:00	US	AK%sT
+Zone America/Adak	 12:13:21 -	LMT	1867 Oct 18
+			-11:46:38 -	LMT	1900 Aug 20 12:00
+			-11:00	-	NST	1942
+			-11:00	US	N%sT	1946
+			-11:00	-	NST	1967 Apr
+			-11:00	-	BST	1969
+			-11:00	US	B%sT	1983 Oct 30 2:00
+			-10:00	US	AH%sT	1983 Nov 30
+			-10:00	US	HA%sT
+# The following switches don't quite make our 1970 cutoff.
+#
+# Shanks writes that part of southwest Alaska (e.g. Aniak)
+# switched from -11:00 to -10:00 on 1968-09-22 at 02:00,
+# and another part (e.g. Akiak) made the same switch five weeks later.
+#
+# From David Flater (2004-11-09):
+# In e-mail, 2004-11-02, Ray Hudson, historian/liaison to the Unalaska
+# Historic Preservation Commission, provided this information, which
+# suggests that Unalaska deviated from statutory time from early 1967
+# possibly until 1983:
+#
+#  Minutes of the Unalaska City Council Meeting, January 10, 1967:
+#  "Except for St. Paul and Akutan, Unalaska is the only important
+#  location not on Alaska Standard Time.  The following resolution was
+#  made by William Robinson and seconded by Henry Swanson:  Be it
+#  resolved that the City of Unalaska hereby goes to Alaska Standard
+#  Time as of midnight Friday, January 13, 1967 (1 A.M. Saturday,
+#  January 14, Alaska Standard Time.)  This resolution was passed with
+#  three votes for and one against."
+
+# Hawaii
+#
+# From Arthur David Olson:
+# And then there's Hawaii.
+# DST was observed for one day in 1933;
+# standard time was changed by half an hour in 1947;
+# it's always standard as of 1986.
+#
+# From Paul Eggert:
+# Shanks says the 1933 experiment lasted for three weeks.  Go with Shanks.
+#
+Zone Pacific/Honolulu	-10:31:26 -	LMT	1900 Jan  1 12:00
+			-10:30	-	HST	1933 Apr 30 2:00
+			-10:30	1:00	HDT	1933 May 21 2:00
+			-10:30	US	H%sT	1947 Jun  8 2:00
+			-10:00	-	HST
+
+# Now we turn to US areas that have diverged from the consensus since 1970.
+
+# Arizona mostly uses MST.
+
+# From Paul Eggert (2002-10-20):
+#
+# The information in the rest of this paragraph is derived from the
+# <a href="http://www.dlapr.lib.az.us/links/daylight.htm">
+# Daylight Saving Time web page (2002-01-23)</a> maintained by the
+# Arizona State Library, Archives and Public Records.
+# Between 1944-01-01 and 1944-04-01 the State of Arizona used standard
+# time, but by federal law railroads, airlines, bus lines, military
+# personnel, and some engaged in interstate commerce continued to
+# observe war (i.e., daylight saving) time.  The 1944-03-17 Phoenix
+# Gazette says that was the date the law changed, and that 04-01 was
+# the date the state's clocks would change.  In 1945 the State of
+# Arizona used standard time all year, again with exceptions only as
+# mandated by federal law.  Arizona observed DST in 1967, but Arizona
+# Laws 1968, ch. 183 (effective 1968-03-21) repealed DST.
+#
+# Shanks says the 1944 experiment came to an end on 1944-03-17.
+# Go with the Arizona State Library instead.
+
+Zone America/Phoenix	-7:28:18 -	LMT	1883 Nov 18 11:31:42
+			-7:00	US	M%sT	1944 Jan  1 00:01
+			-7:00	-	MST	1944 Apr  1 00:01
+			-7:00	US	M%sT	1944 Oct  1 00:01
+			-7:00	-	MST	1967
+			-7:00	US	M%sT	1968 Mar 21
+			-7:00	-	MST
+# From Arthur David Olson (1988-02-13):
+# A writer from the Inter Tribal Council of Arizona, Inc.,
+# notes in private correspondence dated 1987-12-28 that "Presently, only the
+# Navajo Nation participates in the Daylight Saving Time policy, due to its
+# large size and location in three states."  (The "only" means that other
+# tribal nations don't use DST.)
+
+Link America/Denver America/Shiprock
+
+# Southern Idaho (Ada, Adams, Bannock, Bear Lake, Bingham, Blaine,
+# Boise, Bonneville, Butte, Camas, Canyon, Caribou, Cassia, Clark,
+# Custer, Elmore, Franklin, Fremont, Gem, Gooding, Jefferson, Jerome,
+# Lemhi, Lincoln, Madison, Minidoka, Oneida, Owyhee, Payette, Power,
+# Teton, Twin Falls, Valley, Washington counties, and the southern
+# quarter of Idaho county) and eastern Oregon (most of Malheur County)
+# switched four weeks late in 1974.
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Boise	-7:44:49 -	LMT	1883 Nov 18 12:15:11
+			-8:00	US	P%sT	1923 May 13 2:00
+			-7:00	US	M%sT	1974
+			-7:00	-	MST	1974 Feb  3 2:00
+			-7:00	US	M%sT
+
+# Indiana
+#
+# For a map of Indiana's time zone regions, see:
+# <a href="http://www.mccsc.edu/time.html">
+# What time is it in Indiana?
+# </a> (2006-03-01)
+#
+# From Paul Eggert (2007-08-17):
+# Since 1970, most of Indiana has been like America/Indiana/Indianapolis,
+# with the following exceptions:
+#
+# - Gibson, Jasper, Lake, LaPorte, Newton, Porter, Posey, Spencer,
+#   Vandenburgh, and Warrick counties have been like America/Chicago.
+#
+# - Dearborn and Ohio counties have been like America/New_York.
+#
+# - Clark, Floyd, and Harrison counties have been like
+#   America/Kentucky/Louisville.
+#
+# - Crawford, Daviess, Dubois, Knox, Martin, Perry, Pike, Pulaski, Starke,
+#   and Switzerland counties have their own time zone histories as noted below.
+#
+# Shanks partitioned Indiana into 345 regions, each with its own time history,
+# and wrote ``Even newspaper reports present contradictory information.''
+# Those Hoosiers!  Such a flighty and changeable people!
+# Fortunately, most of the complexity occurred before our cutoff date of 1970.
+#
+# Other than Indianapolis, the Indiana place names are so nondescript
+# that they would be ambiguous if we left them at the `America' level.
+# So we reluctantly put them all in a subdirectory `America/Indiana'.
+
+# From Paul Eggert (2005-08-16):
+# http://www.mccsc.edu/time.html says that Indiana will use DST starting 2006.
+
+# From Nathan Stratton Treadway (2006-03-30):
+# http://www.dot.gov/affairs/dot0406.htm [3705 B]
+# From Deborah Goldsmith (2006-01-18):
+# http://dmses.dot.gov/docimages/pdf95/382329_web.pdf [2.9 MB]
+# From Paul Eggert (2006-01-20):
+# It says "DOT is relocating the time zone boundary in Indiana to move Starke,
+# Pulaski, Knox, Daviess, Martin, Pike, Dubois, and Perry Counties from the
+# Eastern Time Zone to the Central Time Zone.... The effective date of
+# this rule is 2:OO a.m. EST Sunday, April 2, 2006, which is the
+# changeover date from standard time to Daylight Saving Time."
+# Strictly speaking, this means the affected counties will change their
+# clocks twice that night, but this obviously is in error.  The intent
+# is that 01:59:59 EST be followed by 02:00:00 CDT.
+
+# From Gwillim Law (2007-02-10):
+# The Associated Press has been reporting that Pulaski County, Indiana is
+# going to switch from Central to Eastern Time on March 11, 2007....
+# http://www.indystar.com/apps/pbcs.dll/article?AID=/20070207/LOCAL190108/702070524/0/LOCAL
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule Indianapolis 1941	only	-	Jun	22	2:00	1:00	D
+Rule Indianapolis 1941	1954	-	Sep	lastSun	2:00	0	S
+Rule Indianapolis 1946	1954	-	Apr	lastSun	2:00	1:00	D
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Indiana/Indianapolis -5:44:38 - LMT 1883 Nov 18 12:15:22
+			-6:00	US	C%sT	1920
+			-6:00 Indianapolis C%sT	1942
+			-6:00	US	C%sT	1946
+			-6:00 Indianapolis C%sT	1955 Apr 24 2:00
+			-5:00	-	EST	1957 Sep 29 2:00
+			-6:00	-	CST	1958 Apr 27 2:00
+			-5:00	-	EST	1969
+			-5:00	US	E%sT	1971
+			-5:00	-	EST	2006
+			-5:00	US	E%sT
+#
+# Eastern Crawford County, Indiana, left its clocks alone in 1974,
+# as well as from 1976 through 2005.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule	Marengo	1951	only	-	Apr	lastSun	2:00	1:00	D
+Rule	Marengo	1951	only	-	Sep	lastSun	2:00	0	S
+Rule	Marengo	1954	1960	-	Apr	lastSun	2:00	1:00	D
+Rule	Marengo	1954	1960	-	Sep	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Indiana/Marengo -5:45:23 -	LMT	1883 Nov 18 12:14:37
+			-6:00	US	C%sT	1951
+			-6:00	Marengo	C%sT	1961 Apr 30 2:00
+			-5:00	-	EST	1969
+			-5:00	US	E%sT	1974 Jan  6 2:00
+			-6:00	1:00	CDT	1974 Oct 27 2:00
+			-5:00	US	E%sT	1976
+			-5:00	-	EST	2006
+			-5:00	US	E%sT
+#
+# Daviess, Dubois, Knox, and Martin Counties, Indiana,
+# switched from eastern to central time in April 2006, then switched back
+# in November 2007.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule Vincennes	1946	only	-	Apr	lastSun	2:00	1:00	D
+Rule Vincennes	1946	only	-	Sep	lastSun	2:00	0	S
+Rule Vincennes	1953	1954	-	Apr	lastSun	2:00	1:00	D
+Rule Vincennes	1953	1959	-	Sep	lastSun	2:00	0	S
+Rule Vincennes	1955	only	-	May	 1	0:00	1:00	D
+Rule Vincennes	1956	1963	-	Apr	lastSun	2:00	1:00	D
+Rule Vincennes	1960	only	-	Oct	lastSun	2:00	0	S
+Rule Vincennes	1961	only	-	Sep	lastSun	2:00	0	S
+Rule Vincennes	1962	1963	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Indiana/Vincennes -5:50:07 - LMT	1883 Nov 18 12:09:53
+			-6:00	US	C%sT	1946
+			-6:00 Vincennes	C%sT	1964 Apr 26 2:00
+			-5:00	-	EST	1969
+			-5:00	US	E%sT	1971
+			-5:00	-	EST	2006 Apr  2 2:00
+			-6:00	US	C%sT	2007 Nov  4 2:00
+			-5:00	US	E%sT
+#
+# Perry County, Indiana, switched from eastern to central time in April 2006.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule Perry	1946	only	-	Apr	lastSun	2:00	1:00	D
+Rule Perry	1946	only	-	Sep	lastSun	2:00	0	S
+Rule Perry	1953	1954	-	Apr	lastSun	2:00	1:00	D
+Rule Perry	1953	1959	-	Sep	lastSun	2:00	0	S
+Rule Perry	1955	only	-	May	 1	0:00	1:00	D
+Rule Perry	1956	1963	-	Apr	lastSun	2:00	1:00	D
+Rule Perry	1960	only	-	Oct	lastSun	2:00	0	S
+Rule Perry	1961	only	-	Sep	lastSun	2:00	0	S
+Rule Perry	1962	1963	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Indiana/Tell_City -5:47:03 - LMT	1883 Nov 18 12:12:57
+			-6:00	US	C%sT	1946
+			-6:00 Perry	C%sT	1964 Apr 26 2:00
+			-5:00	-	EST	1969
+			-5:00	US	E%sT	1971
+			-5:00	-	EST	2006 Apr  2 2:00
+			-6:00	US	C%sT
+#
+# Pike County, Indiana moved from central to eastern time in 1977,
+# then switched back in 2006, then switched back again in 2007.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule	Pike	1955	only	-	May	 1	0:00	1:00	D
+Rule	Pike	1955	1960	-	Sep	lastSun	2:00	0	S
+Rule	Pike	1956	1964	-	Apr	lastSun	2:00	1:00	D
+Rule	Pike	1961	1964	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Indiana/Petersburg -5:49:07 - LMT	1883 Nov 18 12:10:53
+			-6:00	US	C%sT	1955
+			-6:00	Pike	C%sT	1965 Apr 25 2:00
+			-5:00	-	EST	1966 Oct 30 2:00
+			-6:00	US	C%sT	1977 Oct 30 2:00
+			-5:00	-	EST	2006 Apr  2 2:00
+			-6:00	US	C%sT	2007 Nov  4 2:00
+			-5:00	US	E%sT
+#
+# Starke County, Indiana moved from central to eastern time in 1991,
+# then switched back in 2006.
+# From Arthur David Olson (1991-10-28):
+# An article on page A3 of the Sunday, 1991-10-27 Washington Post
+# notes that Starke County switched from Central time to Eastern time as of
+# 1991-10-27.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule	Starke	1947	1961	-	Apr	lastSun	2:00	1:00	D
+Rule	Starke	1947	1954	-	Sep	lastSun	2:00	0	S
+Rule	Starke	1955	1956	-	Oct	lastSun	2:00	0	S
+Rule	Starke	1957	1958	-	Sep	lastSun	2:00	0	S
+Rule	Starke	1959	1961	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Indiana/Knox -5:46:30 -	LMT	1883 Nov 18 12:13:30
+			-6:00	US	C%sT	1947
+			-6:00	Starke	C%sT	1962 Apr 29 2:00
+			-5:00	-	EST	1963 Oct 27 2:00
+			-6:00	US	C%sT	1991 Oct 27 2:00
+			-5:00	-	EST	2006 Apr  2 2:00
+			-6:00	US	C%sT
+#
+# Pulaski County, Indiana, switched from eastern to central time in
+# April 2006 and then switched back in March 2007.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule	Pulaski	1946	1960	-	Apr	lastSun	2:00	1:00	D
+Rule	Pulaski	1946	1954	-	Sep	lastSun	2:00	0	S
+Rule	Pulaski	1955	1956	-	Oct	lastSun	2:00	0	S
+Rule	Pulaski	1957	1960	-	Sep	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Indiana/Winamac -5:46:25 - LMT	1883 Nov 18 12:13:35
+			-6:00	US	C%sT	1946
+			-6:00	Pulaski	C%sT	1961 Apr 30 2:00
+			-5:00	-	EST	1969
+			-5:00	US	E%sT	1971
+			-5:00	-	EST	2006 Apr  2 2:00
+			-6:00	US	C%sT	2007 Mar 11 2:00
+			-5:00	US	E%sT
+#
+# Switzerland County, Indiana, did not observe DST from 1973 through 2005.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Indiana/Vevay -5:40:16 -	LMT	1883 Nov 18 12:19:44
+			-6:00	US	C%sT	1954 Apr 25 2:00
+			-5:00	-	EST	1969
+			-5:00	US	E%sT	1973
+			-5:00	-	EST	2006
+			-5:00	US	E%sT
+
+# Part of Kentucky left its clocks alone in 1974.
+# This also includes Clark, Floyd, and Harrison counties in Indiana.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule Louisville	1921	only	-	May	1	2:00	1:00	D
+Rule Louisville	1921	only	-	Sep	1	2:00	0	S
+Rule Louisville	1941	1961	-	Apr	lastSun	2:00	1:00	D
+Rule Louisville	1941	only	-	Sep	lastSun	2:00	0	S
+Rule Louisville	1946	only	-	Jun	2	2:00	0	S
+Rule Louisville	1950	1955	-	Sep	lastSun	2:00	0	S
+Rule Louisville	1956	1960	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Kentucky/Louisville -5:43:02 -	LMT	1883 Nov 18 12:16:58
+			-6:00	US	C%sT	1921
+			-6:00 Louisville C%sT	1942
+			-6:00	US	C%sT	1946
+			-6:00 Louisville C%sT	1961 Jul 23 2:00
+			-5:00	-	EST	1968
+			-5:00	US	E%sT	1974 Jan  6 2:00
+			-6:00	1:00	CDT	1974 Oct 27 2:00
+			-5:00	US	E%sT
+#
+# Wayne County, Kentucky
+#
+# From
+# <a href="http://www.lake-cumberland.com/life/archive/news990129time.shtml">
+# Lake Cumberland LIFE
+# </a> (1999-01-29) via WKYM-101.7:
+# Clinton County has joined Wayne County in asking the DoT to change from
+# the Central to the Eastern time zone....  The Wayne County government made
+# the same request in December.  And while Russell County officials have not
+# taken action, the majority of respondents to a poll conducted there in
+# August indicated they would like to change to "fast time" also.
+# The three Lake Cumberland counties are the farthest east of any U.S.
+# location in the Central time zone.
+#
+# From Rich Wales (2000-08-29):
+# After prolonged debate, and despite continuing deep differences of opinion,
+# Wayne County (central Kentucky) is switching from Central (-0600) to Eastern
+# (-0500) time.  They won't "fall back" this year.  See Sara Shipley,
+# The difference an hour makes, Nando Times (2000-08-29 15:33 -0400).
+#
+# From Paul Eggert (2001-07-16):
+# The final rule was published in the
+# <a href="http://frwebgate.access.gpo.gov/cgi-bin/getdoc.cgi?dbname=2000_register&docid=fr17au00-22">
+# Federal Register 65, 160 (2000-08-17), page 50154-50158.
+# </a>
+#
+Zone America/Kentucky/Monticello -5:39:24 - LMT	1883 Nov 18 12:20:36
+			-6:00	US	C%sT	1946
+			-6:00	-	CST	1968
+			-6:00	US	C%sT	2000 Oct 29  2:00
+			-5:00	US	E%sT
+
+
+# From Rives McDow (2000-08-30):
+# Here ... are all the changes in the US since 1985.
+# Kearny County, KS (put all of county on central;
+#	previously split between MST and CST) ... 1990-10
+# Starke County, IN (from CST to EST) ... 1991-10
+# Oliver County, ND (from MST to CST) ... 1992-10
+# West Wendover, NV (from PST TO MST) ... 1999-10
+# Wayne County, KY (from CST to EST) ... 2000-10
+#
+# From Paul Eggert (2001-07-17):
+# We don't know where the line used to be within Kearny County, KS,
+# so omit that change for now.
+# See America/Indiana/Knox for the Starke County, IN change.
+# See America/North_Dakota/Center for the Oliver County, ND change.
+# West Wendover, NV officially switched from Pacific to mountain time on
+# 1999-10-31.  See the
+# <a href="http://frwebgate.access.gpo.gov/cgi-bin/getdoc.cgi?dbname=1999_register&docid=fr21oc99-15">
+# Federal Register 64, 203 (1999-10-21), page 56705-56707.
+# </a>
+# However, the Federal Register says that West Wendover already operated
+# on mountain time, and the rule merely made this official;
+# hence a separate tz entry is not needed.
+
+# Michigan
+#
+# From Bob Devine (1988-01-28):
+# Michigan didn't observe DST from 1968 to 1973.
+#
+# From Paul Eggert (1999-03-31):
+# Shanks writes that Michigan started using standard time on 1885-09-18,
+# but Howse writes (pp 124-125, referring to Popular Astronomy, 1901-01)
+# that Detroit kept
+#
+#	local time until 1900 when the City Council decreed that clocks should
+#	be put back twenty-eight minutes to Central Standard Time.  Half the
+#	city obeyed, half refused.  After considerable debate, the decision
+#	was rescinded and the city reverted to Sun time.  A derisive offer to
+#	erect a sundial in front of the city hall was referred to the
+#	Committee on Sewers.  Then, in 1905, Central time was adopted
+#	by city vote.
+#
+# This story is too entertaining to be false, so go with Howse over Shanks.
+#
+# From Paul Eggert (2001-03-06):
+# Garland (1927) writes ``Cleveland and Detroit advanced their clocks
+# one hour in 1914.''  This change is not in Shanks.  We have no more
+# info, so omit this for now.
+#
+# Most of Michigan observed DST from 1973 on, but was a bit late in 1975.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule	Detroit	1948	only	-	Apr	lastSun	2:00	1:00	D
+Rule	Detroit	1948	only	-	Sep	lastSun	2:00	0	S
+Rule	Detroit	1967	only	-	Jun	14	2:00	1:00	D
+Rule	Detroit	1967	only	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Detroit	-5:32:11 -	LMT	1905
+			-6:00	-	CST	1915 May 15 2:00
+			-5:00	-	EST	1942
+			-5:00	US	E%sT	1946
+			-5:00	Detroit	E%sT	1973
+			-5:00	US	E%sT	1975
+			-5:00	-	EST	1975 Apr 27 2:00
+			-5:00	US	E%sT
+#
+# Dickinson, Gogebic, Iron, and Menominee Counties, Michigan,
+# switched from EST to CST/CDT in 1973.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER
+Rule Menominee	1946	only	-	Apr	lastSun	2:00	1:00	D
+Rule Menominee	1946	only	-	Sep	lastSun	2:00	0	S
+Rule Menominee	1966	only	-	Apr	lastSun	2:00	1:00	D
+Rule Menominee	1966	only	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Menominee	-5:50:27 -	LMT	1885 Sep 18 12:00
+			-6:00	US	C%sT	1946
+			-6:00 Menominee	C%sT	1969 Apr 27 2:00
+			-5:00	-	EST	1973 Apr 29 2:00
+			-6:00	US	C%sT
+
+# Navassa
+# administered by the US Fish and Wildlife Service
+# claimed by US under the provisions of the 1856 Guano Islands Act
+# also claimed by Haiti
+# occupied 1857/1900 by the Navassa Phosphate Co
+# US lighthouse 1917/1996-09
+# currently uninhabited
+# see Mark Fineman, ``An Isle Rich in Guano and Discord'',
+# _Los Angeles Times_ (1998-11-10), A1, A10; it cites
+# Jimmy Skaggs, _The Great Guano Rush_ (1994).
+
+################################################################################
+
+
+# From Paul Eggert (2006-03-22):
+# A good source for time zone historical data outside the U.S. is
+# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),
+# San Diego: ACS Publications, Inc. (2003).
+#
+# Gwillim Law writes that a good source
+# for recent time zone data is the International Air Transport
+# Association's Standard Schedules Information Manual (IATA SSIM),
+# published semiannually.  Law sent in several helpful summaries
+# of the IATA's data after 1990.
+#
+# Except where otherwise noted, Shanks & Pottenger is the source for
+# entries through 1990, and IATA SSIM is the source for entries afterwards.
+#
+# Other sources occasionally used include:
+#
+#	Edward W. Whitman, World Time Differences,
+#	Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated),
+#	which I found in the UCLA library.
+#
+#	<a href="http://www.pettswoodvillage.co.uk/Daylight_Savings_William_Willett.pdf">
+#	William Willett, The Waste of Daylight, 19th edition
+#	</a> (1914-03)
+#
+# See the `europe' file for Greenland.
+
+# Canada
+
+# From Alain LaBont<e'> (1994-11-14):
+# I post here the time zone abbreviations standardized in Canada
+# for both English and French in the CAN/CSA-Z234.4-89 standard....
+#
+#	UTC	Standard time	Daylight savings time
+#	offset	French	English	French	English
+#	-2:30	-	-	HAT	NDT
+#	-3	-	-	HAA	ADT
+#	-3:30	HNT	NST	-	-
+#	-4	HNA	AST	HAE	EDT
+#	-5	HNE	EST	HAC	CDT
+#	-6	HNC	CST	HAR	MDT
+#	-7	HNR	MST	HAP	PDT
+#	-8	HNP	PST	HAY	YDT
+#	-9	HNY	YST	-	-
+#
+#	HN: Heure Normale	ST: Standard Time
+#	HA: Heure Avanc<e'>e	DT: Daylight saving Time
+#
+#	A: de l'Atlantique	Atlantic
+#	C: du Centre		Central
+#	E: de l'Est		Eastern
+#	M:			Mountain
+#	N:			Newfoundland
+#	P: du Pacifique		Pacific
+#	R: des Rocheuses
+#	T: de Terre-Neuve
+#	Y: du Yukon		Yukon
+#
+# From Paul Eggert (1994-11-22):
+# Alas, this sort of thing must be handled by localization software.
+
+# Unless otherwise specified, the data for Canada are all from Shanks
+# & Pottenger.
+
+# From Chris Walton (2006-04-01, 2006-04-25, 2006-06-26, 2007-01-31,
+# 2007-03-01):
+# The British Columbia government announced yesterday that it will
+# adjust daylight savings next year to align with changes in the
+# U.S. and the rest of Canada....
+# http://www2.news.gov.bc.ca/news_releases_2005-2009/2006AG0014-000330.htm
+# ...
+# Nova Scotia
+# Daylight saving time will be extended by four weeks starting in 2007....
+# http://www.gov.ns.ca/just/regulations/rg2/2006/ma1206.pdf
+#
+# [For New Brunswick] the new legislation dictates that the time change is to
+# be done at 02:00 instead of 00:01.
+# http://www.gnb.ca/0062/acts/BBA-2006/Chap-19.pdf
+# ...
+# Manitoba has traditionally changed the clock every fall at 03:00.
+# As of 2006, the transition is to take place one hour earlier at 02:00.
+# http://web2.gov.mb.ca/laws/statutes/ccsm/o030e.php
+# ...
+# [Alberta, Ontario, Quebec] will follow US rules.
+# http://www.qp.gov.ab.ca/documents/spring/CH03_06.CFM
+# http://www.e-laws.gov.on.ca/DBLaws/Source/Regs/English/2006/R06111_e.htm
+# http://www2.publicationsduquebec.gouv.qc.ca/dynamicSearch/telecharge.php?type=5&file=2006C39A.PDF
+# ...
+# P.E.I. will follow US rules....
+# http://www.assembly.pe.ca/bills/pdf_chapter/62/3/chapter-41.pdf
+# ...
+# Province of Newfoundland and Labrador....
+# http://www.hoa.gov.nl.ca/hoa/bills/Bill0634.htm
+# ...
+# Yukon
+# http://www.gov.yk.ca/legislation/regs/oic2006_127.pdf
+# ...
+# N.W.T. will follow US rules.  Whoever maintains the government web site
+# does not seem to believe in bookmarks.  To see the news release, click the
+# following link and search for "Daylight Savings Time Change".  Press the
+# "Daylight Savings Time Change" link; it will fire off a popup using
+# JavaScript.
+# http://www.exec.gov.nt.ca/currentnews/currentPR.asp?mode=archive
+# ...
+# Nunavut
+# An amendment to the Interpretation Act was registered on February 19/2007....
+# http://action.attavik.ca/home/justice-gn/attach/2007/gaz02part2.pdf
+
+# From Paul Eggert (2006-04-25):
+# H. David Matthews and Mary Vincent's map
+# <a href="http://www.canadiangeographic.ca/Magazine/SO98/geomap.asp">
+# "It's about TIME", _Canadian Geographic_ (September-October 1998)
+# </a> contains detailed boundaries for regions observing nonstandard
+# time and daylight saving time arrangements in Canada circa 1998.
+#
+# INMS, the Institute for National Measurement Standards in Ottawa, has <a
+# href="http://inms-ienm.nrc-cnrc.gc.ca/en/time_services/daylight_saving_e.php">
+# information about standard and daylight saving time zones in Canada.
+# </a> (updated periodically).
+# Its unofficial information is often taken from Matthews and Vincent.
+
+# From Paul Eggert (2006-06-27):
+# For now, assume all of DST-observing Canada will fall into line with the
+# new US DST rules,
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Canada	1918	only	-	Apr	14	2:00	1:00	D
+Rule	Canada	1918	only	-	Oct	31	2:00	0	S
+Rule	Canada	1942	only	-	Feb	 9	2:00	1:00	W # War
+Rule	Canada	1945	only	-	Aug	14	23:00u	1:00	P # Peace
+Rule	Canada	1945	only	-	Sep	30	2:00	0	S
+Rule	Canada	1974	1986	-	Apr	lastSun	2:00	1:00	D
+Rule	Canada	1974	2006	-	Oct	lastSun	2:00	0	S
+Rule	Canada	1987	2006	-	Apr	Sun>=1	2:00	1:00	D
+Rule	Canada	2007	max	-	Mar	Sun>=8	2:00	1:00	D
+Rule	Canada	2007	max	-	Nov	Sun>=1	2:00	0	S
+
+
+# Newfoundland and Labrador
+
+# From Paul Eggert (2000-10-02):
+# Matthews and Vincent (1998) write that Labrador should use NST/NDT,
+# but the only part of Labrador that follows the rules is the
+# southeast corner, including Port Hope Simpson and Mary's Harbour,
+# but excluding, say, Black Tickle.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	StJohns	1917	only	-	Apr	 8	2:00	1:00	D
+Rule	StJohns	1917	only	-	Sep	17	2:00	0	S
+# Whitman gives 1919 Apr 5 and 1920 Apr 5; go with Shanks & Pottenger.
+Rule	StJohns	1919	only	-	May	 5	23:00	1:00	D
+Rule	StJohns	1919	only	-	Aug	12	23:00	0	S
+# For 1931-1935 Whitman gives Apr same date; go with Shanks & Pottenger.
+Rule	StJohns	1920	1935	-	May	Sun>=1	23:00	1:00	D
+Rule	StJohns	1920	1935	-	Oct	lastSun	23:00	0	S
+# For 1936-1941 Whitman gives May Sun>=8 and Oct Sun>=1; go with Shanks &
+# Pottenger.
+Rule	StJohns	1936	1941	-	May	Mon>=9	0:00	1:00	D
+Rule	StJohns	1936	1941	-	Oct	Mon>=2	0:00	0	S
+# Whitman gives the following transitions:
+# 1942 03-01/12-31, 1943 05-30/09-05, 1944 07-10/09-02, 1945 01-01/10-07
+# but go with Shanks & Pottenger and assume they used Canadian rules.
+# For 1946-9 Whitman gives May 5,4,9,1 - Oct 1,5,3,2, and for 1950 he gives
+# Apr 30 - Sep 24; go with Shanks & Pottenger.
+Rule	StJohns	1946	1950	-	May	Sun>=8	2:00	1:00	D
+Rule	StJohns	1946	1950	-	Oct	Sun>=2	2:00	0	S
+Rule	StJohns	1951	1986	-	Apr	lastSun	2:00	1:00	D
+Rule	StJohns	1951	1959	-	Sep	lastSun	2:00	0	S
+Rule	StJohns	1960	1986	-	Oct	lastSun	2:00	0	S
+# From Paul Eggert (2000-10-02):
+# INMS (2000-09-12) says that, since 1988 at least, Newfoundland switches
+# at 00:01 local time.  For now, assume it started in 1987.
+Rule	StJohns	1987	only	-	Apr	Sun>=1	0:01	1:00	D
+Rule	StJohns	1987	2006	-	Oct	lastSun	0:01	0	S
+Rule	StJohns	1988	only	-	Apr	Sun>=1	0:01	2:00	DD
+Rule	StJohns	1989	2006	-	Apr	Sun>=1	0:01	1:00	D
+Rule	StJohns	2007	max	-	Mar	Sun>=8	0:01	1:00	D
+Rule	StJohns	2007	max	-	Nov	Sun>=1	0:01	0	S
+#
+# St John's has an apostrophe, but Posix file names can't have apostrophes.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/St_Johns	-3:30:52 -	LMT	1884
+			-3:30:52 StJohns N%sT	1918
+			-3:30:52 Canada	N%sT	1919
+			-3:30:52 StJohns N%sT	1935 Mar 30
+			-3:30	StJohns	N%sT	1942 May 11
+			-3:30	Canada	N%sT	1946
+			-3:30	StJohns	N%sT
+
+# most of east Labrador
+
+# The name `Happy Valley-Goose Bay' is too long; use `Goose Bay'.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Goose_Bay	-4:01:40 -	LMT	1884 # Happy Valley-Goose Bay
+			-3:30:52 -	NST	1918
+			-3:30:52 Canada N%sT	1919
+			-3:30:52 -	NST	1935 Mar 30
+			-3:30	-	NST	1936
+			-3:30	StJohns	N%sT	1942 May 11
+			-3:30	Canada	N%sT	1946
+			-3:30	StJohns	N%sT	1966 Mar 15 2:00
+			-4:00	StJohns	A%sT
+
+
+# west Labrador, Nova Scotia, Prince Edward I
+
+# From Paul Eggert (2006-03-22):
+# Shanks & Pottenger write that since 1970 most of this region has been like
+# Halifax.  Many locales did not observe peacetime DST until 1972;
+# Glace Bay, NS is the largest that we know of.
+# Shanks & Pottenger also write that Liverpool, NS was the only town
+# in Canada to observe DST in 1971 but not 1970; for now we'll assume
+# this is a typo.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Halifax	1916	only	-	Apr	 1	0:00	1:00	D
+Rule	Halifax	1916	only	-	Oct	 1	0:00	0	S
+Rule	Halifax	1920	only	-	May	 9	0:00	1:00	D
+Rule	Halifax	1920	only	-	Aug	29	0:00	0	S
+Rule	Halifax	1921	only	-	May	 6	0:00	1:00	D
+Rule	Halifax	1921	1922	-	Sep	 5	0:00	0	S
+Rule	Halifax	1922	only	-	Apr	30	0:00	1:00	D
+Rule	Halifax	1923	1925	-	May	Sun>=1	0:00	1:00	D
+Rule	Halifax	1923	only	-	Sep	 4	0:00	0	S
+Rule	Halifax	1924	only	-	Sep	15	0:00	0	S
+Rule	Halifax	1925	only	-	Sep	28	0:00	0	S
+Rule	Halifax	1926	only	-	May	16	0:00	1:00	D
+Rule	Halifax	1926	only	-	Sep	13	0:00	0	S
+Rule	Halifax	1927	only	-	May	 1	0:00	1:00	D
+Rule	Halifax	1927	only	-	Sep	26	0:00	0	S
+Rule	Halifax	1928	1931	-	May	Sun>=8	0:00	1:00	D
+Rule	Halifax	1928	only	-	Sep	 9	0:00	0	S
+Rule	Halifax	1929	only	-	Sep	 3	0:00	0	S
+Rule	Halifax	1930	only	-	Sep	15	0:00	0	S
+Rule	Halifax	1931	1932	-	Sep	Mon>=24	0:00	0	S
+Rule	Halifax	1932	only	-	May	 1	0:00	1:00	D
+Rule	Halifax	1933	only	-	Apr	30	0:00	1:00	D
+Rule	Halifax	1933	only	-	Oct	 2	0:00	0	S
+Rule	Halifax	1934	only	-	May	20	0:00	1:00	D
+Rule	Halifax	1934	only	-	Sep	16	0:00	0	S
+Rule	Halifax	1935	only	-	Jun	 2	0:00	1:00	D
+Rule	Halifax	1935	only	-	Sep	30	0:00	0	S
+Rule	Halifax	1936	only	-	Jun	 1	0:00	1:00	D
+Rule	Halifax	1936	only	-	Sep	14	0:00	0	S
+Rule	Halifax	1937	1938	-	May	Sun>=1	0:00	1:00	D
+Rule	Halifax	1937	1941	-	Sep	Mon>=24	0:00	0	S
+Rule	Halifax	1939	only	-	May	28	0:00	1:00	D
+Rule	Halifax	1940	1941	-	May	Sun>=1	0:00	1:00	D
+Rule	Halifax	1946	1949	-	Apr	lastSun	2:00	1:00	D
+Rule	Halifax	1946	1949	-	Sep	lastSun	2:00	0	S
+Rule	Halifax	1951	1954	-	Apr	lastSun	2:00	1:00	D
+Rule	Halifax	1951	1954	-	Sep	lastSun	2:00	0	S
+Rule	Halifax	1956	1959	-	Apr	lastSun	2:00	1:00	D
+Rule	Halifax	1956	1959	-	Sep	lastSun	2:00	0	S
+Rule	Halifax	1962	1973	-	Apr	lastSun	2:00	1:00	D
+Rule	Halifax	1962	1973	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Halifax	-4:14:24 -	LMT	1902 Jun 15
+			-4:00	Halifax	A%sT	1918
+			-4:00	Canada	A%sT	1919
+			-4:00	Halifax	A%sT	1942 Feb  9 2:00s
+			-4:00	Canada	A%sT	1946
+			-4:00	Halifax	A%sT	1974
+			-4:00	Canada	A%sT
+Zone America/Glace_Bay	-3:59:48 -	LMT	1902 Jun 15
+			-4:00	Canada	A%sT	1953
+			-4:00	Halifax	A%sT	1954
+			-4:00	-	AST	1972
+			-4:00	Halifax	A%sT	1974
+			-4:00	Canada	A%sT
+
+# New Brunswick
+
+# From Paul Eggert (2007-01-31):
+# The Time Definition Act <http://www.gnb.ca/0062/PDF-acts/t-06.pdf>
+# says they changed at 00:01 through 2006, and
+# <http://www.canlii.org/nb/laws/sta/t-6/20030127/whole.html> makes it
+# clear that this was the case since at least 1993.
+# For now, assume it started in 1993.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Moncton	1933	1935	-	Jun	Sun>=8	1:00	1:00	D
+Rule	Moncton	1933	1935	-	Sep	Sun>=8	1:00	0	S
+Rule	Moncton	1936	1938	-	Jun	Sun>=1	1:00	1:00	D
+Rule	Moncton	1936	1938	-	Sep	Sun>=1	1:00	0	S
+Rule	Moncton	1939	only	-	May	27	1:00	1:00	D
+Rule	Moncton	1939	1941	-	Sep	Sat>=21	1:00	0	S
+Rule	Moncton	1940	only	-	May	19	1:00	1:00	D
+Rule	Moncton	1941	only	-	May	 4	1:00	1:00	D
+Rule	Moncton	1946	1972	-	Apr	lastSun	2:00	1:00	D
+Rule	Moncton	1946	1956	-	Sep	lastSun	2:00	0	S
+Rule	Moncton	1957	1972	-	Oct	lastSun	2:00	0	S
+Rule	Moncton	1993	2006	-	Apr	Sun>=1	0:01	1:00	D
+Rule	Moncton	1993	2006	-	Oct	lastSun	0:01	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Moncton	-4:19:08 -	LMT	1883 Dec  9
+			-5:00	-	EST	1902 Jun 15
+			-4:00	Canada	A%sT	1933
+			-4:00	Moncton	A%sT	1942
+			-4:00	Canada	A%sT	1946
+			-4:00	Moncton	A%sT	1973
+			-4:00	Canada	A%sT	1993
+			-4:00	Moncton	A%sT	2007
+			-4:00	Canada	A%sT
+
+# Quebec
+
+# From Paul Eggert (2006-07-09):
+# Shanks & Pottenger write that since 1970 most of Quebec has been
+# like Montreal.
+
+# From Paul Eggert (2006-06-27):
+# Matthews and Vincent (1998) also write that Quebec east of the -63
+# meridian is supposed to observe AST, but residents as far east as
+# Natashquan use EST/EDT, and residents east of Natashquan use AST.
+# In "Official time in Quebec" the Quebec department of justice writes in
+# http://www.justice.gouv.qc.ca/english/publications/generale/temps-regl-1-a.htm
+# that "The residents of the Municipality of the
+# Cote-Nord-du-Golfe-Saint-Laurent and the municipalities of Saint-Augustin,
+# Bonne-Esperance and Blanc-Sablon apply the Official Time Act as it is
+# written and use Atlantic standard time all year round. The same applies to
+# the residents of the Native facilities along the lower North Shore."
+# <http://www.assnat.qc.ca/eng/37legislature2/Projets-loi/Publics/06-a002.htm>
+# says this common practice was codified into law as of 2007.
+# For lack of better info, guess this practice began around 1970, contra to
+# Shanks & Pottenger who have this region observing AST/ADT.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Mont	1917	only	-	Mar	25	2:00	1:00	D
+Rule	Mont	1917	only	-	Apr	24	0:00	0	S
+Rule	Mont	1919	only	-	Mar	31	2:30	1:00	D
+Rule	Mont	1919	only	-	Oct	25	2:30	0	S
+Rule	Mont	1920	only	-	May	 2	2:30	1:00	D
+Rule	Mont	1920	1922	-	Oct	Sun>=1	2:30	0	S
+Rule	Mont	1921	only	-	May	 1	2:00	1:00	D
+Rule	Mont	1922	only	-	Apr	30	2:00	1:00	D
+Rule	Mont	1924	only	-	May	17	2:00	1:00	D
+Rule	Mont	1924	1926	-	Sep	lastSun	2:30	0	S
+Rule	Mont	1925	1926	-	May	Sun>=1	2:00	1:00	D
+# The 1927-to-1937 rules can be expressed more simply as
+# Rule	Mont	1927	1937	-	Apr	lastSat	24:00	1:00	D
+# Rule	Mont	1927	1937	-	Sep	lastSat	24:00	0	S
+# The rules below avoid use of 24:00
+# (which pre-1998 versions of zic cannot handle).
+Rule	Mont	1927	only	-	May	1	0:00	1:00	D
+Rule	Mont	1927	1932	-	Sep	lastSun	0:00	0	S
+Rule	Mont	1928	1931	-	Apr	lastSun	0:00	1:00	D
+Rule	Mont	1932	only	-	May	1	0:00	1:00	D
+Rule	Mont	1933	1940	-	Apr	lastSun	0:00	1:00	D
+Rule	Mont	1933	only	-	Oct	1	0:00	0	S
+Rule	Mont	1934	1939	-	Sep	lastSun	0:00	0	S
+Rule	Mont	1946	1973	-	Apr	lastSun	2:00	1:00	D
+Rule	Mont	1945	1948	-	Sep	lastSun	2:00	0	S
+Rule	Mont	1949	1950	-	Oct	lastSun	2:00	0	S
+Rule	Mont	1951	1956	-	Sep	lastSun	2:00	0	S
+Rule	Mont	1957	1973	-	Oct	lastSun	2:00	0	S
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Blanc-Sablon -3:48:28 -	LMT	1884
+			-4:00	Canada	A%sT	1970
+			-4:00	-	AST
+Zone America/Montreal	-4:54:16 -	LMT	1884
+			-5:00	Mont	E%sT	1918
+			-5:00	Canada	E%sT	1919
+			-5:00	Mont	E%sT	1942 Feb  9 2:00s
+			-5:00	Canada	E%sT	1946
+			-5:00	Mont	E%sT	1974
+			-5:00	Canada	E%sT
+
+
+# Ontario
+
+# From Paul Eggert (2006-07-09):
+# Shanks & Pottenger write that since 1970 most of Ontario has been like
+# Toronto.
+# Thunder Bay skipped DST in 1973.
+# Many smaller locales did not observe peacetime DST until 1974;
+# Nipigon (EST) and Rainy River (CST) are the largest that we know of.
+# Far west Ontario is like Winnipeg; far east Quebec is like Halifax.
+
+# From Mark Brader (2003-07-26):
+# [According to the Toronto Star] Orillia, Ontario, adopted DST
+# effective Saturday, 1912-06-22, 22:00; the article mentions that
+# Port Arthur (now part of Thunder Bay, Ontario) as well as Moose Jaw
+# have already done so.  In Orillia DST was to run until Saturday,
+# 1912-08-31 (no time mentioned), but it was met with considerable
+# hostility from certain segments of the public, and was revoked after
+# only two weeks -- I copied it as Saturday, 1912-07-07, 22:00, but
+# presumably that should be -07-06.  (1912-06-19, -07-12; also letters
+# earlier in June).
+#
+# Kenora, Ontario, was to abandon DST on 1914-06-01 (-05-21).
+
+# From Paul Eggert (1997-10-17):
+# Mark Brader writes that an article in the 1997-10-14 Toronto Star
+# says that Atikokan, Ontario currently does not observe DST,
+# but will vote on 11-10 whether to use EST/EDT.
+# He also writes that the
+# <a href="http://www.gov.on.ca/MBS/english/publications/statregs/conttext.html">
+# Ontario Time Act (1990, Chapter T.9)
+# </a>
+# says that Ontario east of 90W uses EST/EDT, and west of 90W uses CST/CDT.
+# Officially Atikokan is therefore on CST/CDT, and most likely this report
+# concerns a non-official time observed as a matter of local practice.
+#
+# From Paul Eggert (2000-10-02):
+# Matthews and Vincent (1998) write that Atikokan, Pickle Lake, and
+# New Osnaburgh observe CST all year, that Big Trout Lake observes
+# CST/CDT, and that Upsala and Shebandowan observe EST/EDT, all in
+# violation of the official Ontario rules.
+#
+# From Paul Eggert (2006-07-09):
+# Chris Walton (2006-07-06) mentioned an article by Stephanie MacLellan in the
+# 2005-07-21 Chronicle-Journal, which said:
+#
+#	The clocks in Atikokan stay set on standard time year-round.
+#	This means they spend about half the time on central time and
+#	the other half on eastern time.
+#
+#	For the most part, the system works, Mayor Dennis Brown said.
+#
+#	"The majority of businesses in Atikokan deal more with Eastern
+#	Canada, but there are some that deal with Western Canada," he
+#	said.  "I don't see any changes happening here."
+#
+# Walton also writes "Supposedly Pickle Lake and Mishkeegogamang
+# [New Osnaburgh] follow the same practice."
+
+# From Garry McKinnon (2006-07-14) via Chris Walton:
+# I chatted with a member of my board who has an outstanding memory
+# and a long history in Atikokan (and in the telecom industry) and he
+# can say for certain that Atikokan has been practicing the current
+# time keeping since 1952, at least.
+
+# From Paul Eggert (2006-07-17):
+# Shanks & Pottenger say that Atikokan has agreed with Rainy River
+# ever since standard time was introduced, but the information from
+# McKinnon sounds more authoritative.  For now, assume that Atikokan
+# switched to EST immediately after WWII era daylight saving time
+# ended.  This matches the old (less-populous) America/Coral_Harbour
+# entry since our cutoff date of 1970, so we can move
+# America/Coral_Harbour to the 'backward' file.
+
+# From Mark Brader (2010-03-06):
+#
+# Currently the database has:
+#
+# # Ontario
+#
+# # From Paul Eggert (2006-07-09):
+# # Shanks & Pottenger write that since 1970 most of Ontario has been like
+# # Toronto.
+# # Thunder Bay skipped DST in 1973.
+# # Many smaller locales did not observe peacetime DST until 1974;
+# # Nipigon (EST) and Rainy River (CST) are the largest that we know of.
+#
+# In the (Toronto) Globe and Mail for Saturday, 1955-09-24, in the bottom
+# right corner of page 1, it says that Toronto will return to standard
+# time at 2 am Sunday morning (which agrees with the database), and that:
+#
+#     The one-hour setback will go into effect throughout most of Ontario,
+#     except in areas like Windsor which remains on standard time all year.
+#
+# Windsor is, of course, a lot larger than Nipigon.
+#
+# I only came across this incidentally.  I don't know if Windsor began
+# observing DST when Detroit did, or in 1974, or on some other date.
+#
+# By the way, the article continues by noting that:
+#
+#     Some cities in the United States have pushed the deadline back
+#     three weeks and will change over from daylight saving in October.
+
+# From Arthur David Olson (2010-07-17):
+#
+# "Standard Time and Time Zones in Canada" appeared in
+# The Journal of The Royal Astronomical Society of Canada,
+# volume 26, number 2 (February 1932) and, as of 2010-07-17,
+# was available at
+# <a href="http://adsabs.harvard.edu/full/1932JRASC..26...49S">
+# http://adsabs.harvard.edu/full/1932JRASC..26...49S
+# </a>
+#
+# It includes the text below (starting on page 57):
+#
+#   A list of the places in Canada using daylight saving time would
+# require yearly revision. From information kindly furnished by
+# the provincial governments and by the postmasters in many cities
+# and towns, it is found that the following places used daylight sav-
+# ing in 1930. The information for the province of Quebec is definite,
+# for the other provinces only approximate:
+#
+# 	Province	Daylight saving time used
+# Prince Edward Island	Not used.
+# Nova Scotia		In Halifax only.
+# New Brunswick		In St. John only.
+# Quebec		In the following places:
+# 			Montreal	Lachine
+# 			Quebec		Mont-Royal
+# 			Levis		Iberville
+# 			St. Lambert	Cap de la Madeleine
+# 			Verdun		Loretteville
+# 			Westmount	Richmond
+# 			Outremont	St. Jerome
+# 			Longueuil	Greenfield Park
+# 			Arvida		Waterloo
+# 			Chambly-Canton	Beaulieu
+# 			Melbourne	La Tuque
+# 			St. Theophile	Buckingham
+# Ontario		Used generally in the cities and towns along
+# 			the southerly part of the province. Not
+# 			used in the northwesterlhy part.
+# Manitoba		Not used.
+# Saskatchewan		In Regina only.
+# Alberta		Not used.
+# British Columbia	Not used.
+#
+#   With some exceptions, the use of daylight saving may be said to be limited
+# to those cities and towns lying between Quebec city and Windsor, Ont.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Toronto	1919	only	-	Mar	30	23:30	1:00	D
+Rule	Toronto	1919	only	-	Oct	26	0:00	0	S
+Rule	Toronto	1920	only	-	May	 2	2:00	1:00	D
+Rule	Toronto	1920	only	-	Sep	26	0:00	0	S
+Rule	Toronto	1921	only	-	May	15	2:00	1:00	D
+Rule	Toronto	1921	only	-	Sep	15	2:00	0	S
+Rule	Toronto	1922	1923	-	May	Sun>=8	2:00	1:00	D
+# Shanks & Pottenger say 1923-09-19; assume it's a typo and that "-16"
+# was meant.
+Rule	Toronto	1922	1926	-	Sep	Sun>=15	2:00	0	S
+Rule	Toronto	1924	1927	-	May	Sun>=1	2:00	1:00	D
+# The 1927-to-1939 rules can be expressed more simply as
+# Rule	Toronto	1927	1937	-	Sep	Sun>=25	2:00	0	S
+# Rule	Toronto	1928	1937	-	Apr	Sun>=25	2:00	1:00	D
+# Rule	Toronto	1938	1940	-	Apr	lastSun	2:00	1:00	D
+# Rule	Toronto	1938	1939	-	Sep	lastSun	2:00	0	S
+# The rules below avoid use of Sun>=25
+# (which pre-2004 versions of zic cannot handle).
+Rule	Toronto	1927	1932	-	Sep	lastSun	2:00	0	S
+Rule	Toronto	1928	1931	-	Apr	lastSun	2:00	1:00	D
+Rule	Toronto	1932	only	-	May	1	2:00	1:00	D
+Rule	Toronto	1933	1940	-	Apr	lastSun	2:00	1:00	D
+Rule	Toronto	1933	only	-	Oct	1	2:00	0	S
+Rule	Toronto	1934	1939	-	Sep	lastSun	2:00	0	S
+Rule	Toronto	1945	1946	-	Sep	lastSun	2:00	0	S
+Rule	Toronto	1946	only	-	Apr	lastSun	2:00	1:00	D
+Rule	Toronto	1947	1949	-	Apr	lastSun	0:00	1:00	D
+Rule	Toronto	1947	1948	-	Sep	lastSun	0:00	0	S
+Rule	Toronto	1949	only	-	Nov	lastSun	0:00	0	S
+Rule	Toronto	1950	1973	-	Apr	lastSun	2:00	1:00	D
+Rule	Toronto	1950	only	-	Nov	lastSun	2:00	0	S
+Rule	Toronto	1951	1956	-	Sep	lastSun	2:00	0	S
+# Shanks & Pottenger say Toronto ended DST a week early in 1971,
+# namely on 1971-10-24, but Mark Brader wrote (2003-05-31) that this
+# is wrong, and that he had confirmed it by checking the 1971-10-30
+# Toronto Star, which said that DST was ending 1971-10-31 as usual.
+Rule	Toronto	1957	1973	-	Oct	lastSun	2:00	0	S
+
+# From Paul Eggert (2003-07-27):
+# Willett (1914-03) writes (p. 17) "In the Cities of Fort William, and
+# Port Arthur, Ontario, the principle of the Bill has been in
+# operation for the past three years, and in the City of Moose Jaw,
+# Saskatchewan, for one year."
+
+# From David Bryan via Tory Tronrud, Director/Curator,
+# Thunder Bay Museum (2003-11-12):
+# There is some suggestion, however, that, by-law or not, daylight
+# savings time was being practiced in Fort William and Port Arthur
+# before 1909.... [I]n 1910, the line between the Eastern and Central
+# Time Zones was permanently moved about two hundred miles west to
+# include the Thunder Bay area....  When Canada adopted daylight
+# savings time in 1916, Fort William and Port Arthur, having done so
+# already, did not change their clocks....  During the Second World
+# War,... [t]he cities agreed to implement DST during the summer
+# months for the remainder of the war years.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Toronto	-5:17:32 -	LMT	1895
+			-5:00	Canada	E%sT	1919
+			-5:00	Toronto	E%sT	1942 Feb  9 2:00s
+			-5:00	Canada	E%sT	1946
+			-5:00	Toronto	E%sT	1974
+			-5:00	Canada	E%sT
+Zone America/Thunder_Bay -5:57:00 -	LMT	1895
+			-6:00	-	CST	1910
+			-5:00	-	EST	1942
+			-5:00	Canada	E%sT	1970
+			-5:00	Mont	E%sT	1973
+			-5:00	-	EST	1974
+			-5:00	Canada	E%sT
+Zone America/Nipigon	-5:53:04 -	LMT	1895
+			-5:00	Canada	E%sT	1940 Sep 29
+			-5:00	1:00	EDT	1942 Feb  9 2:00s
+			-5:00	Canada	E%sT
+Zone America/Rainy_River -6:18:16 -	LMT	1895
+			-6:00	Canada	C%sT	1940 Sep 29
+			-6:00	1:00	CDT	1942 Feb  9 2:00s
+			-6:00	Canada	C%sT
+Zone America/Atikokan	-6:06:28 -	LMT	1895
+			-6:00	Canada	C%sT	1940 Sep 29
+			-6:00	1:00	CDT	1942 Feb  9 2:00s
+			-6:00	Canada	C%sT	1945 Sep 30 2:00
+			-5:00	-	EST
+
+
+# Manitoba
+
+# From Rob Douglas (2006-04-06):
+# the old Manitoba Time Act - as amended by Bill 2, assented to
+# March 27, 1987 ... said ...
+# "between two o'clock Central Standard Time in the morning of
+# the first Sunday of April of each year and two o'clock Central
+# Standard Time in the morning of the last Sunday of October next
+# following, one hour in advance of Central Standard Time."...
+# I believe that the English legislation [of the old time act] had =
+# been assented to (March 22, 1967)....
+# Also, as far as I can tell, there was no order-in-council varying
+# the time of Daylight Saving Time for 2005 and so the provisions of
+# the 1987 version would apply - the changeover was at 2:00 Central
+# Standard Time (i.e. not until 3:00 Central Daylight Time).
+
+# From Paul Eggert (2006-04-10):
+# Shanks & Pottenger say Manitoba switched at 02:00 (not 02:00s)
+# starting 1966.  Since 02:00s is clearly correct for 1967 on, assume
+# it was also 02:00s in 1966.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Winn	1916	only	-	Apr	23	0:00	1:00	D
+Rule	Winn	1916	only	-	Sep	17	0:00	0	S
+Rule	Winn	1918	only	-	Apr	14	2:00	1:00	D
+Rule	Winn	1918	only	-	Oct	31	2:00	0	S
+Rule	Winn	1937	only	-	May	16	2:00	1:00	D
+Rule	Winn	1937	only	-	Sep	26	2:00	0	S
+Rule	Winn	1942	only	-	Feb	 9	2:00	1:00	W # War
+Rule	Winn	1945	only	-	Aug	14	23:00u	1:00	P # Peace
+Rule	Winn	1945	only	-	Sep	lastSun	2:00	0	S
+Rule	Winn	1946	only	-	May	12	2:00	1:00	D
+Rule	Winn	1946	only	-	Oct	13	2:00	0	S
+Rule	Winn	1947	1949	-	Apr	lastSun	2:00	1:00	D
+Rule	Winn	1947	1949	-	Sep	lastSun	2:00	0	S
+Rule	Winn	1950	only	-	May	 1	2:00	1:00	D
+Rule	Winn	1950	only	-	Sep	30	2:00	0	S
+Rule	Winn	1951	1960	-	Apr	lastSun	2:00	1:00	D
+Rule	Winn	1951	1958	-	Sep	lastSun	2:00	0	S
+Rule	Winn	1959	only	-	Oct	lastSun	2:00	0	S
+Rule	Winn	1960	only	-	Sep	lastSun	2:00	0	S
+Rule	Winn	1963	only	-	Apr	lastSun	2:00	1:00	D
+Rule	Winn	1963	only	-	Sep	22	2:00	0	S
+Rule	Winn	1966	1986	-	Apr	lastSun	2:00s	1:00	D
+Rule	Winn	1966	2005	-	Oct	lastSun	2:00s	0	S
+Rule	Winn	1987	2005	-	Apr	Sun>=1	2:00s	1:00	D
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Winnipeg	-6:28:36 -	LMT	1887 Jul 16
+			-6:00	Winn	C%sT	2006
+			-6:00	Canada	C%sT
+
+
+# Saskatchewan
+
+# From Mark Brader (2003-07-26):
+# The first actual adoption of DST in Canada was at the municipal
+# level.  As the [Toronto] Star put it (1912-06-07), "While people
+# elsewhere have long been talking of legislation to save daylight,
+# the city of Moose Jaw [Saskatchewan] has acted on its own hook."
+# DST in Moose Jaw began on Saturday, 1912-06-01 (no time mentioned:
+# presumably late evening, as below), and would run until "the end of
+# the summer".  The discrepancy between municipal time and railroad
+# time was noted.
+
+# From Paul Eggert (2003-07-27):
+# Willett (1914-03) notes that DST "has been in operation ... in the
+# City of Moose Jaw, Saskatchewan, for one year."
+
+# From Paul Eggert (2006-03-22):
+# Shanks & Pottenger say that since 1970 this region has mostly been as Regina.
+# Some western towns (e.g. Swift Current) switched from MST/MDT to CST in 1972.
+# Other western towns (e.g. Lloydminster) are like Edmonton.
+# Matthews and Vincent (1998) write that Denare Beach and Creighton
+# are like Winnipeg, in violation of Saskatchewan law.
+
+# From W. Jones (1992-11-06):
+# The. . .below is based on information I got from our law library, the
+# provincial archives, and the provincial Community Services department.
+# A precise history would require digging through newspaper archives, and
+# since you didn't say what you wanted, I didn't bother.
+#
+# Saskatchewan is split by a time zone meridian (105W) and over the years
+# the boundary became pretty ragged as communities near it reevaluated
+# their affiliations in one direction or the other.  In 1965 a provincial
+# referendum favoured legislating common time practices.
+#
+# On 15 April 1966 the Time Act (c. T-14, Revised Statutes of
+# Saskatchewan 1978) was proclaimed, and established that the eastern
+# part of Saskatchewan would use CST year round, that districts in
+# northwest Saskatchewan would by default follow CST but could opt to
+# follow Mountain Time rules (thus 1 hour difference in the winter and
+# zero in the summer), and that districts in southwest Saskatchewan would
+# by default follow MT but could opt to follow CST.
+#
+# It took a few years for the dust to settle (I know one story of a town
+# on one time zone having its school in another, such that a mom had to
+# serve her family lunch in two shifts), but presently it seems that only
+# a few towns on the border with Alberta (e.g. Lloydminster) follow MT
+# rules any more; all other districts appear to have used CST year round
+# since sometime in the 1960s.
+
+# From Chris Walton (2006-06-26):
+# The Saskatchewan time act which was last updated in 1996 is about 30 pages
+# long and rather painful to read.
+# http://www.qp.gov.sk.ca/documents/English/Statutes/Statutes/T14.pdf
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Regina	1918	only	-	Apr	14	2:00	1:00	D
+Rule	Regina	1918	only	-	Oct	31	2:00	0	S
+Rule	Regina	1930	1934	-	May	Sun>=1	0:00	1:00	D
+Rule	Regina	1930	1934	-	Oct	Sun>=1	0:00	0	S
+Rule	Regina	1937	1941	-	Apr	Sun>=8	0:00	1:00	D
+Rule	Regina	1937	only	-	Oct	Sun>=8	0:00	0	S
+Rule	Regina	1938	only	-	Oct	Sun>=1	0:00	0	S
+Rule	Regina	1939	1941	-	Oct	Sun>=8	0:00	0	S
+Rule	Regina	1942	only	-	Feb	 9	2:00	1:00	W # War
+Rule	Regina	1945	only	-	Aug	14	23:00u	1:00	P # Peace
+Rule	Regina	1945	only	-	Sep	lastSun	2:00	0	S
+Rule	Regina	1946	only	-	Apr	Sun>=8	2:00	1:00	D
+Rule	Regina	1946	only	-	Oct	Sun>=8	2:00	0	S
+Rule	Regina	1947	1957	-	Apr	lastSun	2:00	1:00	D
+Rule	Regina	1947	1957	-	Sep	lastSun	2:00	0	S
+Rule	Regina	1959	only	-	Apr	lastSun	2:00	1:00	D
+Rule	Regina	1959	only	-	Oct	lastSun	2:00	0	S
+#
+Rule	Swift	1957	only	-	Apr	lastSun	2:00	1:00	D
+Rule	Swift	1957	only	-	Oct	lastSun	2:00	0	S
+Rule	Swift	1959	1961	-	Apr	lastSun	2:00	1:00	D
+Rule	Swift	1959	only	-	Oct	lastSun	2:00	0	S
+Rule	Swift	1960	1961	-	Sep	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Regina	-6:58:36 -	LMT	1905 Sep
+			-7:00	Regina	M%sT	1960 Apr lastSun 2:00
+			-6:00	-	CST
+Zone America/Swift_Current -7:11:20 -	LMT	1905 Sep
+			-7:00	Canada	M%sT	1946 Apr lastSun 2:00
+			-7:00	Regina	M%sT	1950
+			-7:00	Swift	M%sT	1972 Apr lastSun 2:00
+			-6:00	-	CST
+
+
+# Alberta
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Edm	1918	1919	-	Apr	Sun>=8	2:00	1:00	D
+Rule	Edm	1918	only	-	Oct	31	2:00	0	S
+Rule	Edm	1919	only	-	May	27	2:00	0	S
+Rule	Edm	1920	1923	-	Apr	lastSun	2:00	1:00	D
+Rule	Edm	1920	only	-	Oct	lastSun	2:00	0	S
+Rule	Edm	1921	1923	-	Sep	lastSun	2:00	0	S
+Rule	Edm	1942	only	-	Feb	 9	2:00	1:00	W # War
+Rule	Edm	1945	only	-	Aug	14	23:00u	1:00	P # Peace
+Rule	Edm	1945	only	-	Sep	lastSun	2:00	0	S
+Rule	Edm	1947	only	-	Apr	lastSun	2:00	1:00	D
+Rule	Edm	1947	only	-	Sep	lastSun	2:00	0	S
+Rule	Edm	1967	only	-	Apr	lastSun	2:00	1:00	D
+Rule	Edm	1967	only	-	Oct	lastSun	2:00	0	S
+Rule	Edm	1969	only	-	Apr	lastSun	2:00	1:00	D
+Rule	Edm	1969	only	-	Oct	lastSun	2:00	0	S
+Rule	Edm	1972	1986	-	Apr	lastSun	2:00	1:00	D
+Rule	Edm	1972	2006	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Edmonton	-7:33:52 -	LMT	1906 Sep
+			-7:00	Edm	M%sT	1987
+			-7:00	Canada	M%sT
+
+
+# British Columbia
+
+# From Paul Eggert (2006-03-22):
+# Shanks & Pottenger write that since 1970 most of this region has
+# been like Vancouver.
+# Dawson Creek uses MST.  Much of east BC is like Edmonton.
+# Matthews and Vincent (1998) write that Creston is like Dawson Creek.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Vanc	1918	only	-	Apr	14	2:00	1:00	D
+Rule	Vanc	1918	only	-	Oct	31	2:00	0	S
+Rule	Vanc	1942	only	-	Feb	 9	2:00	1:00	W # War
+Rule	Vanc	1945	only	-	Aug	14	23:00u	1:00	P # Peace
+Rule	Vanc	1945	only	-	Sep	30	2:00	0	S
+Rule	Vanc	1946	1986	-	Apr	lastSun	2:00	1:00	D
+Rule	Vanc	1946	only	-	Oct	13	2:00	0	S
+Rule	Vanc	1947	1961	-	Sep	lastSun	2:00	0	S
+Rule	Vanc	1962	2006	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Vancouver	-8:12:28 -	LMT	1884
+			-8:00	Vanc	P%sT	1987
+			-8:00	Canada	P%sT
+Zone America/Dawson_Creek -8:00:56 -	LMT	1884
+			-8:00	Canada	P%sT	1947
+			-8:00	Vanc	P%sT	1972 Aug 30 2:00
+			-7:00	-	MST
+
+
+# Northwest Territories, Nunavut, Yukon
+
+# From Paul Eggert (2006-03-22):
+# Dawson switched to PST in 1973.  Inuvik switched to MST in 1979.
+# Mathew Englander (1996-10-07) gives the following refs:
+#	* 1967. Paragraph 28(34)(g) of the Interpretation Act, S.C. 1967-68,
+#	c. 7 defines Yukon standard time as UTC-9.  This is still valid;
+#	see Interpretation Act, R.S.C. 1985, c. I-21, s. 35(1).
+#	* C.O. 1973/214 switched Yukon to PST on 1973-10-28 00:00.
+#	* O.I.C. 1980/02 established DST.
+#	* O.I.C. 1987/056 changed DST to Apr firstSun 2:00 to Oct lastSun 2:00.
+# Shanks & Pottenger say Yukon's 1973-10-28 switch was at 2:00; go
+# with Englander.
+# From Chris Walton (2006-06-26):
+# Here is a link to the old daylight saving portion of the interpretation
+# act which was last updated in 1987:
+# http://www.gov.yk.ca/legislation/regs/oic1987_056.pdf
+
+# From Rives McDow (1999-09-04):
+# Nunavut ... moved ... to incorporate the whole territory into one time zone.
+# <a href="http://www.nunatsiaq.com/nunavut/nvt90903_13.html">
+# Nunavut moves to single time zone Oct. 31
+# </a>
+#
+# From Antoine Leca (1999-09-06):
+# We then need to create a new timezone for the Kitikmeot region of Nunavut
+# to differentiate it from the Yellowknife region.
+
+# From Paul Eggert (1999-09-20):
+# <a href="http://www.nunavut.com/basicfacts/english/basicfacts_1territory.html">
+# Basic Facts: The New Territory
+# </a> (1999) reports that Pangnirtung operates on eastern time,
+# and that Coral Harbour does not observe DST.  We don't know when
+# Pangnirtung switched to eastern time; we'll guess 1995.
+
+# From Rives McDow (1999-11-08):
+# On October 31, when the rest of Nunavut went to Central time,
+# Pangnirtung wobbled.  Here is the result of their wobble:
+#
+# The following businesses and organizations in Pangnirtung use Central Time:
+#
+#	First Air, Power Corp, Nunavut Construction, Health Center, RCMP,
+#	Eastern Arctic National Parks, A & D Specialist
+#
+# The following businesses and organizations in Pangnirtung use Eastern Time:
+#
+#	Hamlet office, All other businesses, Both schools, Airport operator
+#
+# This has made for an interesting situation there, which warranted the news.
+# No one there that I spoke with seems concerned, or has plans to
+# change the local methods of keeping time, as it evidently does not
+# really interfere with any activities or make things difficult locally.
+# They plan to celebrate New Year's turn-over twice, one hour apart,
+# so it appears that the situation will last at least that long.
+# The Nunavut Intergovernmental Affairs hopes that they will "come to
+# their senses", but the locals evidently don't see any problem with
+# the current state of affairs.
+
+# From Michaela Rodrigue, writing in the
+# <a href="http://www.nunatsiaq.com/archives/nunavut991130/nvt91119_17.html">
+# Nunatsiaq News (1999-11-19)</a>:
+# Clyde River, Pangnirtung and Sanikiluaq now operate with two time zones,
+# central - or Nunavut time - for government offices, and eastern time
+# for municipal offices and schools....  Igloolik [was similar but then]
+# made the switch to central time on Saturday, Nov. 6.
+
+# From Paul Eggert (2000-10-02):
+# Matthews and Vincent (1998) say the following, but we lack histories
+# for these potential new Zones.
+#
+# The Canadian Forces station at Alert uses Eastern Time while the
+# handful of residents at the Eureka weather station [in the Central
+# zone] skip daylight savings.  Baffin Island, which is crossed by the
+# Central, Eastern and Atlantic Time zones only uses Eastern Time.
+# Gjoa Haven, Taloyoak and Pelly Bay all use Mountain instead of
+# Central Time and Southampton Island [in the Central zone] is not
+# required to use daylight savings.
+
+# From
+# <a href="http://www.nunatsiaq.com/archives/nunavut001130/nvt21110_02.html">
+# Nunavut now has two time zones
+# </a> (2000-11-10):
+# The Nunavut government would allow its employees in Kugluktuk and
+# Cambridge Bay to operate on central time year-round, putting them
+# one hour behind the rest of Nunavut for six months during the winter.
+# At the end of October the two communities had rebelled against
+# Nunavut's unified time zone, refusing to shift to eastern time with
+# the rest of the territory for the winter.  Cambridge Bay remained on
+# central time, while Kugluktuk, even farther west, reverted to
+# mountain time, which they had used before the advent of Nunavut's
+# unified time zone in 1999.
+#
+# From Rives McDow (2001-01-20), quoting the Nunavut government:
+# The preceding decision came into effect at midnight, Saturday Nov 4, 2000.
+
+# From Paul Eggert (2000-12-04):
+# Let's just keep track of the official times for now.
+
+# From Rives McDow (2001-03-07):
+# The premier of Nunavut has issued a ministerial statement advising
+# that effective 2001-04-01, the territory of Nunavut will revert
+# back to three time zones (mountain, central, and eastern).  Of the
+# cities in Nunavut, Coral Harbor is the only one that I know of that
+# has said it will not observe dst, staying on EST year round.  I'm
+# checking for more info, and will get back to you if I come up with
+# more.
+# [Also see <http://www.nunatsiaq.com/nunavut/nvt10309_06.html> (2001-03-09).]
+
+# From Gwillim Law (2005-05-21):
+# According to maps at
+# http://inms-ienm.nrc-cnrc.gc.ca/images/time_services/TZ01SWE.jpg
+# http://inms-ienm.nrc-cnrc.gc.ca/images/time_services/TZ01SSE.jpg
+# (both dated 2003), and
+# http://www.canadiangeographic.ca/Magazine/SO98/geomap.asp
+# (from a 1998 Canadian Geographic article), the de facto and de jure time
+# for Southampton Island (at the north end of Hudson Bay) is UTC-5 all year
+# round.  Using Google, it's easy to find other websites that confirm this.
+# I wasn't able to find how far back this time regimen goes, but since it
+# predates the creation of Nunavut, it probably goes back many years....
+# The Inuktitut name of Coral Harbour is Sallit, but it's rarely used.
+#
+# From Paul Eggert (2005-07-26):
+# For lack of better information, assume that Southampton Island observed
+# daylight saving only during wartime.
+
+# From Chris Walton (2007-03-01):
+# ... the community of Resolute (located on Cornwallis Island in
+# Nunavut) moved from Central Time to Eastern Time last November.
+# Basically the community did not change its clocks at the end of
+# daylight saving....
+# http://www.nnsl.com/frames/newspapers/2006-11/nov13_06none.html
+
+# From Chris Walton (2007-03-14):
+# Today I phoned the "hamlet office" to find out what Resolute was doing with
+# its clocks.
+#
+# The individual that answered the phone confirmed that the clocks did not
+# move at the end of daylight saving on October 29/2006.  He also told me that
+# the clocks did not move this past weekend (March 11/2007)....
+
+# From Chris Walton (2008-11-13):
+# ...the residents of Resolute believe that they are changing "time zones"
+# twice a year.  In winter months, local time is qualified with "Eastern
+# Time" which is really "Eastern Standard Time (UTC-5)".  In summer
+# months, local time is qualified with "Central Time" which is really
+# "Central Daylight Time (UTC-5)"...
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	NT_YK	1918	only	-	Apr	14	2:00	1:00	D
+Rule	NT_YK	1918	only	-	Oct	27	2:00	0	S
+Rule	NT_YK	1919	only	-	May	25	2:00	1:00	D
+Rule	NT_YK	1919	only	-	Nov	 1	0:00	0	S
+Rule	NT_YK	1942	only	-	Feb	 9	2:00	1:00	W # War
+Rule	NT_YK	1945	only	-	Aug	14	23:00u	1:00	P # Peace
+Rule	NT_YK	1945	only	-	Sep	30	2:00	0	S
+Rule	NT_YK	1965	only	-	Apr	lastSun	0:00	2:00	DD
+Rule	NT_YK	1965	only	-	Oct	lastSun	2:00	0	S
+Rule	NT_YK	1980	1986	-	Apr	lastSun	2:00	1:00	D
+Rule	NT_YK	1980	2006	-	Oct	lastSun	2:00	0	S
+Rule	NT_YK	1987	2006	-	Apr	Sun>=1	2:00	1:00	D
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+# aka Panniqtuuq
+Zone America/Pangnirtung 0	-	zzz	1921 # trading post est.
+			-4:00	NT_YK	A%sT	1995 Apr Sun>=1 2:00
+			-5:00	Canada	E%sT	1999 Oct 31 2:00
+			-6:00	Canada	C%sT	2000 Oct 29 2:00
+			-5:00	Canada	E%sT
+# formerly Frobisher Bay
+Zone America/Iqaluit	0	-	zzz	1942 Aug # Frobisher Bay est.
+			-5:00	NT_YK	E%sT	1999 Oct 31 2:00
+			-6:00	Canada	C%sT	2000 Oct 29 2:00
+			-5:00	Canada	E%sT
+# aka Qausuittuq
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Resolute 2006	max	-	Nov	Sun>=1	2:00	0	ES
+Rule	Resolute 2007	max	-	Mar	Sun>=8	2:00	0	CD
+Zone America/Resolute	0	-	zzz	1947 Aug 31 # Resolute founded
+			-6:00	NT_YK	C%sT	2000 Oct 29 2:00
+			-5:00	-	EST	2001 Apr  1 3:00
+			-6:00	Canada	C%sT	2006 Oct 29 2:00
+			-5:00	Resolute	%sT
+# aka Kangiqiniq
+Zone America/Rankin_Inlet 0	-	zzz	1957 # Rankin Inlet founded
+			-6:00	NT_YK	C%sT	2000 Oct 29 2:00
+			-5:00	-	EST	2001 Apr  1 3:00
+			-6:00	Canada	C%sT
+# aka Iqaluktuuttiaq
+Zone America/Cambridge_Bay 0	-	zzz	1920 # trading post est.?
+			-7:00	NT_YK	M%sT	1999 Oct 31 2:00
+			-6:00	Canada	C%sT	2000 Oct 29 2:00
+			-5:00	-	EST	2000 Nov  5 0:00
+			-6:00	-	CST	2001 Apr  1 3:00
+			-7:00	Canada	M%sT
+Zone America/Yellowknife 0	-	zzz	1935 # Yellowknife founded?
+			-7:00	NT_YK	M%sT	1980
+			-7:00	Canada	M%sT
+Zone America/Inuvik	0	-	zzz	1953 # Inuvik founded
+			-8:00	NT_YK	P%sT	1979 Apr lastSun 2:00
+			-7:00	NT_YK	M%sT	1980
+			-7:00	Canada	M%sT
+Zone America/Whitehorse	-9:00:12 -	LMT	1900 Aug 20
+			-9:00	NT_YK	Y%sT	1966 Jul 1 2:00
+			-8:00	NT_YK	P%sT	1980
+			-8:00	Canada	P%sT
+Zone America/Dawson	-9:17:40 -	LMT	1900 Aug 20
+			-9:00	NT_YK	Y%sT	1973 Oct 28 0:00
+			-8:00	NT_YK	P%sT	1980
+			-8:00	Canada	P%sT
+
+
+###############################################################################
+
+# Mexico
+
+# From Paul Eggert (2001-03-05):
+# The Investigation and Analysis Service of the
+# Mexican Library of Congress (MLoC) has published a
+# <a href="http://www.cddhcu.gob.mx/bibliot/publica/inveyana/polisoc/horver/">
+# history of Mexican local time (in Spanish)
+# </a>.
+#
+# Here are the discrepancies between Shanks & Pottenger (S&P) and the MLoC.
+# (In all cases we go with the MLoC.)
+# S&P report that Baja was at -8:00 in 1922/1923.
+# S&P say the 1930 transition in Baja was 1930-11-16.
+# S&P report no DST during summer 1931.
+# S&P report a transition at 1932-03-30 23:00, not 1932-04-01.
+
+# From Gwillim Law (2001-02-20):
+# There are some other discrepancies between the Decrees page and the
+# tz database.  I think they can best be explained by supposing that
+# the researchers who prepared the Decrees page failed to find some of
+# the relevant documents.
+
+# From Alan Perry (1996-02-15):
+# A guy from our Mexico subsidiary finally found the Presidential Decree
+# outlining the timezone changes in Mexico.
+#
+# ------------- Begin Forwarded Message -------------
+#
+# I finally got my hands on the Official Presidential Decree that sets up the
+# rules for the DST changes. The rules are:
+#
+# 1. The country is divided in 3 timezones:
+#    - Baja California Norte (the Mexico/BajaNorte TZ)
+#    - Baja California Sur, Nayarit, Sinaloa and Sonora (the Mexico/BajaSur TZ)
+#    - The rest of the country (the Mexico/General TZ)
+#
+# 2. From the first Sunday in April at 2:00 AM to the last Sunday in October
+#    at 2:00 AM, the times in each zone are as follows:
+#    BajaNorte: GMT+7
+#    BajaSur:   GMT+6
+#    General:   GMT+5
+#
+# 3. The rest of the year, the times are as follows:
+#    BajaNorte: GMT+8
+#    BajaSur:   GMT+7
+#    General:   GMT+6
+#
+# The Decree was published in Mexico's Official Newspaper on January 4th.
+#
+# -------------- End Forwarded Message --------------
+# From Paul Eggert (1996-06-12):
+# For an English translation of the decree, see
+# <a href="http://mexico-travel.com/extra/timezone_eng.html">
+# ``Diario Oficial: Time Zone Changeover'' (1996-01-04).
+# </a>
+
+# From Rives McDow (1998-10-08):
+# The State of Quintana Roo has reverted back to central STD and DST times
+# (i.e. UTC -0600 and -0500 as of 1998-08-02).
+
+# From Rives McDow (2000-01-10):
+# Effective April 4, 1999 at 2:00 AM local time, Sonora changed to the time
+# zone 5 hours from the International Date Line, and will not observe daylight
+# savings time so as to stay on the same time zone as the southern part of
+# Arizona year round.
+
+# From Jesper Norgaard, translating
+# <http://www.reforma.com/nacional/articulo/064327/> (2001-01-17):
+# In Oaxaca, the 55.000 teachers from the Section 22 of the National
+# Syndicate of Education Workers, refuse to apply daylight saving each
+# year, so that the more than 10,000 schools work at normal hour the
+# whole year.
+
+# From Gwillim Law (2001-01-19):
+# <http://www.reforma.com/negocios_y_dinero/articulo/064481/> ... says
+# (translated):...
+# January 17, 2000 - The Energy Secretary, Ernesto Martens, announced
+# that Summer Time will be reduced from seven to five months, starting
+# this year....
+# <http://www.publico.com.mx/scripts/texto3.asp?action=pagina&pag=21&pos=p&secc=naci&date=01/17/2001>
+# [translated], says "summer time will ... take effect on the first Sunday
+# in May, and end on the last Sunday of September.
+
+# From Arthur David Olson (2001-01-25):
+# The 2001-01-24 traditional Washington Post contained the page one
+# story "Timely Issue Divides Mexicans."...
+# http://www.washingtonpost.com/wp-dyn/articles/A37383-2001Jan23.html
+# ... Mexico City Mayor Lopez Obrador "...is threatening to keep
+# Mexico City and its 20 million residents on a different time than
+# the rest of the country..." In particular, Lopez Obrador would abolish
+# observation of Daylight Saving Time.
+
+# <a href="http://www.conae.gob.mx/ahorro/decretohorver2001.html#decre">
+# Official statute published by the Energy Department
+# </a> (2001-02-01) shows Baja and Chihauhua as still using US DST rules,
+# and Sonora with no DST.  This was reported by Jesper Norgaard (2001-02-03).
+
+# From Paul Eggert (2001-03-03):
+#
+# <a href="http://www.latimes.com/news/nation/20010303/t000018766.html">
+# James F. Smith writes in today's LA Times
+# </a>
+# * Sonora will continue to observe standard time.
+# * Last week Mexico City's mayor Andres Manuel Lopez Obrador decreed that
+#   the Federal District will not adopt DST.
+# * 4 of 16 district leaders announced they'll ignore the decree.
+# * The decree does not affect federal-controlled facilities including
+#   the airport, banks, hospitals, and schools.
+#
+# For now we'll assume that the Federal District will bow to federal rules.
+
+# From Jesper Norgaard (2001-04-01):
+# I found some references to the Mexican application of daylight
+# saving, which modifies what I had already sent you, stating earlier
+# that a number of northern Mexican states would go on daylight
+# saving. The modification reverts this to only cover Baja California
+# (Norte), while all other states (except Sonora, who has no daylight
+# saving all year) will follow the original decree of president
+# Vicente Fox, starting daylight saving May 6, 2001 and ending
+# September 30, 2001.
+# References: "Diario de Monterrey" <www.diariodemonterrey.com/index.asp>
+# Palabra <http://palabra.infosel.com/010331/primera/ppri3101.pdf> (2001-03-31)
+
+# From Reuters (2001-09-04):
+# Mexico's Supreme Court on Tuesday declared that daylight savings was
+# unconstitutional in Mexico City, creating the possibility the
+# capital will be in a different time zone from the rest of the nation
+# next year....  The Supreme Court's ruling takes effect at 2:00
+# a.m. (0800 GMT) on Sept. 30, when Mexico is scheduled to revert to
+# standard time. "This is so residents of the Federal District are not
+# subject to unexpected time changes," a statement from the court said.
+
+# From Jesper Norgaard Welen (2002-03-12):
+# ... consulting my local grocery store(!) and my coworkers, they all insisted
+# that a new decision had been made to reinstate US style DST in Mexico....
+# http://www.conae.gob.mx/ahorro/horaver2001_m1_2002.html (2002-02-20)
+# confirms this.  Sonora as usual is the only state where DST is not applied.
+
+# From Steffen Thorsen (2009-12-28):
+#
+# Steffen Thorsen wrote:
+# > Mexico's House of Representatives has approved a proposal for northern
+# > Mexico's border cities to share the same daylight saving schedule as
+# > the United States.
+# Now this has passed both the Congress and the Senate, so starting from
+# 2010, some border regions will be the same:
+# <a href="http://www.signonsandiego.com/news/2009/dec/28/clocks-will-match-both-sides-border/">
+# http://www.signonsandiego.com/news/2009/dec/28/clocks-will-match-both-sides-border/
+# </a>
+# <a href="http://www.elmananarey.com/diario/noticia/nacional/noticias/empatan_horario_de_frontera_con_eu/621939">
+# http://www.elmananarey.com/diario/noticia/nacional/noticias/empatan_horario_de_frontera_con_eu/621939
+# </a>
+# (Spanish)
+#
+# Could not find the new law text, but the proposed law text changes are here:
+# <a href="http://gaceta.diputados.gob.mx/Gaceta/61/2009/dic/20091210-V.pdf">
+# http://gaceta.diputados.gob.mx/Gaceta/61/2009/dic/20091210-V.pdf
+# </a>
+# (Gaceta Parlamentaria)
+#
+# There is also a list of the votes here:
+# <a href="http://gaceta.diputados.gob.mx/Gaceta/61/2009/dic/V2-101209.html">
+# http://gaceta.diputados.gob.mx/Gaceta/61/2009/dic/V2-101209.html
+# </a>
+#
+# Our page:
+# <a href="http://www.timeanddate.com/news/time/north-mexico-dst-change.html">
+# http://www.timeanddate.com/news/time/north-mexico-dst-change.html
+# </a>
+
+# From Arthur David Olson (2010-01-20):
+# The page
+# <a href="http://dof.gob.mx/nota_detalle.php?codigo=5127480&fecha=06/01/2010">
+# http://dof.gob.mx/nota_detalle.php?codigo=5127480&fecha=06/01/2010
+# </a>
+# includes this text:
+# En los municipios fronterizos de Tijuana y Mexicali en Baja California;
+# Ju&aacute;rez y Ojinaga en Chihuahua; Acu&ntilde;a y Piedras Negras en Coahuila;
+# An&aacute;huac en Nuevo Le&oacute;n; y Nuevo Laredo, Reynosa y Matamoros en
+# Tamaulipas, la aplicaci&oacute;n de este horario estacional surtir&aacute; efecto
+# desde las dos horas del segundo domingo de marzo y concluir&aacute; a las dos
+# horas del primer domingo de noviembre.
+# En los municipios fronterizos que se encuentren ubicados en la franja
+# fronteriza norte en el territorio comprendido entre la l&iacute;nea
+# internacional y la l&iacute;nea paralela ubicada a una distancia de veinte
+# kil&oacute;metros, as&iacute; como la Ciudad de Ensenada, Baja California, hacia el
+# interior del pa&iacute;s, la aplicaci&oacute;n de este horario estacional surtir&aacute;
+# efecto desde las dos horas del segundo domingo de marzo y concluir&aacute; a
+# las dos horas del primer domingo de noviembre.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Mexico	1939	only	-	Feb	5	0:00	1:00	D
+Rule	Mexico	1939	only	-	Jun	25	0:00	0	S
+Rule	Mexico	1940	only	-	Dec	9	0:00	1:00	D
+Rule	Mexico	1941	only	-	Apr	1	0:00	0	S
+Rule	Mexico	1943	only	-	Dec	16	0:00	1:00	W # War
+Rule	Mexico	1944	only	-	May	1	0:00	0	S
+Rule	Mexico	1950	only	-	Feb	12	0:00	1:00	D
+Rule	Mexico	1950	only	-	Jul	30	0:00	0	S
+Rule	Mexico	1996	2000	-	Apr	Sun>=1	2:00	1:00	D
+Rule	Mexico	1996	2000	-	Oct	lastSun	2:00	0	S
+Rule	Mexico	2001	only	-	May	Sun>=1	2:00	1:00	D
+Rule	Mexico	2001	only	-	Sep	lastSun	2:00	0	S
+Rule	Mexico	2002	max	-	Apr	Sun>=1	2:00	1:00	D
+Rule	Mexico	2002	max	-	Oct	lastSun	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+# Quintana Roo
+Zone America/Cancun	-5:47:04 -	LMT	1922 Jan  1  0:12:56
+			-6:00	-	CST	1981 Dec 23
+			-5:00	Mexico	E%sT	1998 Aug  2  2:00
+			-6:00	Mexico	C%sT
+# Campeche, Yucatan
+Zone America/Merida	-5:58:28 -	LMT	1922 Jan  1  0:01:32
+			-6:00	-	CST	1981 Dec 23
+			-5:00	-	EST	1982 Dec  2
+			-6:00	Mexico	C%sT
+# Coahuila, Durango, Nuevo Leon, Tamaulipas (near US border)
+Zone America/Matamoros	-6:40:00 -	LMT	1921 Dec 31 23:20:00
+			-6:00	-	CST	1988
+			-6:00	US	C%sT	1989
+			-6:00	Mexico	C%sT	2010
+			-6:00	US	C%sT
+# Coahuila, Durango, Nuevo Leon, Tamaulipas (away from US border)
+Zone America/Monterrey	-6:41:16 -	LMT	1921 Dec 31 23:18:44
+			-6:00	-	CST	1988
+			-6:00	US	C%sT	1989
+			-6:00	Mexico	C%sT
+# Central Mexico
+Zone America/Mexico_City -6:36:36 -	LMT	1922 Jan  1 0:23:24
+			-7:00	-	MST	1927 Jun 10 23:00
+			-6:00	-	CST	1930 Nov 15
+			-7:00	-	MST	1931 May  1 23:00
+			-6:00	-	CST	1931 Oct
+			-7:00	-	MST	1932 Apr  1
+			-6:00	Mexico	C%sT	2001 Sep 30 02:00
+			-6:00	-	CST	2002 Feb 20
+			-6:00	Mexico	C%sT
+# Chihuahua (near US border)
+Zone America/Ojinaga	-6:57:40 -	LMT	1922 Jan 1 0:02:20
+			-7:00	-	MST	1927 Jun 10 23:00
+			-6:00	-	CST	1930 Nov 15
+			-7:00	-	MST	1931 May  1 23:00
+			-6:00	-	CST	1931 Oct
+			-7:00	-	MST	1932 Apr  1
+			-6:00	-	CST	1996
+			-6:00	Mexico	C%sT	1998
+			-6:00	-	CST	1998 Apr Sun>=1 3:00
+			-7:00	Mexico	M%sT	2010
+			-7:00	US	M%sT
+# Chihuahua (away from US border)
+Zone America/Chihuahua	-7:04:20 -	LMT	1921 Dec 31 23:55:40
+			-7:00	-	MST	1927 Jun 10 23:00
+			-6:00	-	CST	1930 Nov 15
+			-7:00	-	MST	1931 May  1 23:00
+			-6:00	-	CST	1931 Oct
+			-7:00	-	MST	1932 Apr  1
+			-6:00	-	CST	1996
+			-6:00	Mexico	C%sT	1998
+			-6:00	-	CST	1998 Apr Sun>=1 3:00
+			-7:00	Mexico	M%sT
+# Sonora
+Zone America/Hermosillo	-7:23:52 -	LMT	1921 Dec 31 23:36:08
+			-7:00	-	MST	1927 Jun 10 23:00
+			-6:00	-	CST	1930 Nov 15
+			-7:00	-	MST	1931 May  1 23:00
+			-6:00	-	CST	1931 Oct
+			-7:00	-	MST	1932 Apr  1
+			-6:00	-	CST	1942 Apr 24
+			-7:00	-	MST	1949 Jan 14
+			-8:00	-	PST	1970
+			-7:00	Mexico	M%sT	1999
+			-7:00	-	MST
+
+# From Alexander Krivenyshev (2010-04-21):
+# According to news, Bah&iacute;a de Banderas (Mexican state of Nayarit)
+# changed time zone UTC-7 to new time zone UTC-6 on April 4, 2010 (to
+# share the same time zone as nearby city Puerto Vallarta, Jalisco).
+#
+# (Spanish)
+# Bah&iacute;a de Banderas homologa su horario al del centro del
+# pa&iacute;s, a partir de este domingo
+# <a href="http://www.nayarit.gob.mx/notes.asp?id=20748">
+# http://www.nayarit.gob.mx/notes.asp?id=20748
+# </a>
+#
+# Bah&iacute;a de Banderas homologa su horario con el del Centro del
+# Pa&iacute;s
+# <a href="http://www.bahiadebanderas.gob.mx/principal/index.php?option=com_content&view=article&id=261:bahia-de-banderas-homologa-su-horario-con-el-del-centro-del-pais&catid=42:comunicacion-social&Itemid=50">
+# http://www.bahiadebanderas.gob.mx/principal/index.php?option=com_content&view=article&id=261:bahia-de-banderas-homologa-su-horario-con-el-del-centro-del-pais&catid=42:comunicacion-social&Itemid=50"
+# </a>
+#
+# (English)
+# Puerto Vallarta and Bah&iacute;a de Banderas: One Time Zone
+# <a href="http://virtualvallarta.com/puertovallarta/puertovallarta/localnews/2009-12-03-Puerto-Vallarta-and-Bahia-de-Banderas-One-Time-Zone.shtml">
+# http://virtualvallarta.com/puertovallarta/puertovallarta/localnews/2009-12-03-Puerto-Vallarta-and-Bahia-de-Banderas-One-Time-Zone.shtml
+# </a>
+#
+# or
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_mexico08.html">
+# http://www.worldtimezone.com/dst_news/dst_news_mexico08.html
+# </a>
+#
+# "Mexico's Senate approved the amendments to the Mexican Schedule System that
+# will allow Bah&iacute;a de Banderas and Puerto Vallarta to share the same time
+# zone ..."
+# Baja California Sur, Nayarit, Sinaloa
+
+# From Arthur David Olson (2010-05-01):
+# Use "Bahia_Banderas" to keep the name to fourteen characters.
+
+Zone America/Mazatlan	-7:05:40 -	LMT	1921 Dec 31 23:54:20
+			-7:00	-	MST	1927 Jun 10 23:00
+			-6:00	-	CST	1930 Nov 15
+			-7:00	-	MST	1931 May  1 23:00
+			-6:00	-	CST	1931 Oct
+			-7:00	-	MST	1932 Apr  1
+			-6:00	-	CST	1942 Apr 24
+			-7:00	-	MST	1949 Jan 14
+			-8:00	-	PST	1970
+			-7:00	Mexico	M%sT
+
+Zone America/Bahia_Banderas	-7:01:00 -	LMT	1921 Dec 31 23:59:00
+			-7:00	-	MST	1927 Jun 10 23:00
+			-6:00	-	CST	1930 Nov 15
+			-7:00	-	MST	1931 May  1 23:00
+			-6:00	-	CST	1931 Oct
+			-7:00	-	MST	1932 Apr  1
+			-6:00	-	CST	1942 Apr 24
+			-7:00	-	MST	1949 Jan 14
+			-8:00	-	PST	1970
+			-7:00	Mexico	M%sT	2010 Apr 4 2:00
+			-6:00	Mexico	C%sT
+
+# Baja California (near US border)
+Zone America/Tijuana	-7:48:04 -	LMT	1922 Jan  1  0:11:56
+			-7:00	-	MST	1924
+			-8:00	-	PST	1927 Jun 10 23:00
+			-7:00	-	MST	1930 Nov 15
+			-8:00	-	PST	1931 Apr  1
+			-8:00	1:00	PDT	1931 Sep 30
+			-8:00	-	PST	1942 Apr 24
+			-8:00	1:00	PWT	1945 Aug 14 23:00u
+			-8:00	1:00	PPT	1945 Nov 12 # Peace
+			-8:00	-	PST	1948 Apr  5
+			-8:00	1:00	PDT	1949 Jan 14
+			-8:00	-	PST	1954
+			-8:00	CA	P%sT	1961
+			-8:00	-	PST	1976
+			-8:00	US	P%sT	1996
+			-8:00	Mexico	P%sT	2001
+			-8:00	US	P%sT	2002 Feb 20
+			-8:00	Mexico	P%sT	2010
+			-8:00	US	P%sT
+# Baja California (away from US border)
+Zone America/Santa_Isabel	-7:39:28 -	LMT	1922 Jan  1  0:20:32
+			-7:00	-	MST	1924
+			-8:00	-	PST	1927 Jun 10 23:00
+			-7:00	-	MST	1930 Nov 15
+			-8:00	-	PST	1931 Apr  1
+			-8:00	1:00	PDT	1931 Sep 30
+			-8:00	-	PST	1942 Apr 24
+			-8:00	1:00	PWT	1945 Aug 14 23:00u
+			-8:00	1:00	PPT	1945 Nov 12 # Peace
+			-8:00	-	PST	1948 Apr  5
+			-8:00	1:00	PDT	1949 Jan 14
+			-8:00	-	PST	1954
+			-8:00	CA	P%sT	1961
+			-8:00	-	PST	1976
+			-8:00	US	P%sT	1996
+			-8:00	Mexico	P%sT	2001
+			-8:00	US	P%sT	2002 Feb 20
+			-8:00	Mexico	P%sT
+# From Paul Eggert (2006-03-22):
+# Formerly there was an America/Ensenada zone, which differed from
+# America/Tijuana only in that it did not observe DST from 1976
+# through 1995.  This was as per Shanks (1999).  But Shanks & Pottenger say
+# Ensenada did not observe DST from 1948 through 1975.  Guy Harris reports
+# that the 1987 OAG says "Only Ensenada, Mexicale, San Felipe and
+# Tijuana observe DST," which agrees with Shanks & Pottenger but implies that
+# DST-observance was a town-by-town matter back then.  This concerns
+# data after 1970 so most likely there should be at least one Zone
+# other than America/Tijuana for Baja, but it's not clear yet what its
+# name or contents should be.
+#
+# Revillagigedo Is
+# no information
+
+###############################################################################
+
+# Anguilla
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Anguilla	-4:12:16 -	LMT	1912 Mar 2
+			-4:00	-	AST
+
+# Antigua and Barbuda
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Antigua	-4:07:12 -	LMT	1912 Mar 2
+			-5:00	-	EST	1951
+			-4:00	-	AST
+
+# Bahamas
+#
+# From Sue Williams (2006-12-07):
+# The Bahamas announced about a month ago that they plan to change their DST
+# rules to sync with the U.S. starting in 2007....
+# http://www.jonesbahamas.com/?c=45&a=10412
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Bahamas	1964	1975	-	Oct	lastSun	2:00	0	S
+Rule	Bahamas	1964	1975	-	Apr	lastSun	2:00	1:00	D
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Nassau	-5:09:24 -	LMT	1912 Mar 2
+			-5:00	Bahamas	E%sT	1976
+			-5:00	US	E%sT
+
+# Barbados
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Barb	1977	only	-	Jun	12	2:00	1:00	D
+Rule	Barb	1977	1978	-	Oct	Sun>=1	2:00	0	S
+Rule	Barb	1978	1980	-	Apr	Sun>=15	2:00	1:00	D
+Rule	Barb	1979	only	-	Sep	30	2:00	0	S
+Rule	Barb	1980	only	-	Sep	25	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Barbados	-3:58:28 -	LMT	1924		# Bridgetown
+			-3:58:28 -	BMT	1932	  # Bridgetown Mean Time
+			-4:00	Barb	A%sT
+
+# Belize
+# Whitman entirely disagrees with Shanks; go with Shanks & Pottenger.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Belize	1918	1942	-	Oct	Sun>=2	0:00	0:30	HD
+Rule	Belize	1919	1943	-	Feb	Sun>=9	0:00	0	S
+Rule	Belize	1973	only	-	Dec	 5	0:00	1:00	D
+Rule	Belize	1974	only	-	Feb	 9	0:00	0	S
+Rule	Belize	1982	only	-	Dec	18	0:00	1:00	D
+Rule	Belize	1983	only	-	Feb	12	0:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Belize	-5:52:48 -	LMT	1912 Apr
+			-6:00	Belize	C%sT
+
+# Bermuda
+
+# From Dan Jones, reporting in The Royal Gazette (2006-06-26):
+
+# Next year, however, clocks in the US will go forward on the second Sunday
+# in March, until the first Sunday in November.  And, after the Time Zone
+# (Seasonal Variation) Bill 2006 was passed in the House of Assembly on
+# Friday, the same thing will happen in Bermuda.
+# http://www.theroyalgazette.com/apps/pbcs.dll/article?AID=/20060529/NEWS/105290135
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Atlantic/Bermuda	-4:19:04 -	LMT	1930 Jan  1 2:00    # Hamilton
+			-4:00	-	AST	1974 Apr 28 2:00
+			-4:00	Bahamas	A%sT	1976
+			-4:00	US	A%sT
+
+# Cayman Is
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Cayman	-5:25:32 -	LMT	1890		# Georgetown
+			-5:07:12 -	KMT	1912 Feb    # Kingston Mean Time
+			-5:00	-	EST
+
+# Costa Rica
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	CR	1979	1980	-	Feb	lastSun	0:00	1:00	D
+Rule	CR	1979	1980	-	Jun	Sun>=1	0:00	0	S
+Rule	CR	1991	1992	-	Jan	Sat>=15	0:00	1:00	D
+# IATA SSIM (1991-09) says the following was at 1:00;
+# go with Shanks & Pottenger.
+Rule	CR	1991	only	-	Jul	 1	0:00	0	S
+Rule	CR	1992	only	-	Mar	15	0:00	0	S
+# There are too many San Joses elsewhere, so we'll use `Costa Rica'.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Costa_Rica	-5:36:20 -	LMT	1890		# San Jose
+			-5:36:20 -	SJMT	1921 Jan 15 # San Jose Mean Time
+			-6:00	CR	C%sT
+# Coco
+# no information; probably like America/Costa_Rica
+
+# Cuba
+
+# From Arthur David Olson (1999-03-29):
+# The 1999-03-28 exhibition baseball game held in Havana, Cuba, between
+# the Cuban National Team and the Baltimore Orioles was carried live on
+# the Orioles Radio Network, including affiliate WTOP in Washington, DC.
+# During the game, play-by-play announcer Jim Hunter noted that
+# "We'll be losing two hours of sleep...Cuba switched to Daylight Saving
+# Time today."  (The "two hour" remark referred to losing one hour of
+# sleep on 1999-03-28--when the announcers were in Cuba as it switched
+# to DST--and one more hour on 1999-04-04--when the announcers will have
+# returned to Baltimore, which switches on that date.)
+
+# From Evert van der Veer via Steffen Thorsen (2004-10-28):
+# Cuba is not going back to standard time this year.
+# From Paul Eggert (2006-03-22):
+# http://www.granma.cu/ingles/2004/septiembre/juev30/41medid-i.html
+# says that it's due to a problem at the Antonio Guiteras
+# thermoelectric plant, and says "This October there will be no return
+# to normal hours (after daylight saving time)".
+# For now, let's assume that it's a temporary measure.
+
+# From Carlos A. Carnero Delgado (2005-11-12):
+# This year (just like in 2004-2005) there's no change in time zone
+# adjustment in Cuba.  We will stay in daylight saving time:
+# http://www.granma.cu/espanol/2005/noviembre/mier9/horario.html
+
+# From Jesper Norgaard Welen (2006-10-21):
+# An article in GRANMA INTERNACIONAL claims that Cuba will end
+# the 3 years of permanent DST next weekend, see
+# http://www.granma.cu/ingles/2006/octubre/lun16/43horario.html
+# "On Saturday night, October 28 going into Sunday, October 29, at 01:00,
+# watches should be set back one hour -- going back to 00:00 hours -- returning
+# to the normal schedule....
+
+# From Paul Eggert (2007-03-02):
+# http://www.granma.cubaweb.cu/english/news/art89.html, dated yesterday,
+# says Cuban clocks will advance at midnight on March 10.
+# For lack of better information, assume Cuba will use US rules,
+# except that it switches at midnight standard time as usual.
+#
+# From Steffen Thorsen (2007-10-25):
+# Carlos Alberto Fonseca Arauz informed me that Cuba will end DST one week 
+# earlier - on the last Sunday of October, just like in 2006.
+# 
+# He supplied these references:
+# 
+# http://www.prensalatina.com.mx/article.asp?ID=%7B4CC32C1B-A9F7-42FB-8A07-8631AFC923AF%7D&language=ES
+# http://actualidad.terra.es/sociedad/articulo/cuba_llama_ahorrar_energia_cambio_1957044.htm
+# 
+# From Alex Kryvenishev (2007-10-25):
+# Here is also article from Granma (Cuba):
+# 
+# [Regira] el Horario Normal desde el [proximo] domingo 28 de octubre
+# http://www.granma.cubaweb.cu/2007/10/24/nacional/artic07.html
+# 
+# http://www.worldtimezone.com/dst_news/dst_news_cuba03.html
+
+# From Arthur David Olson (2008-03-09):
+# I'm in Maryland which is now observing United States Eastern Daylight
+# Time. At 9:44 local time I used RealPlayer to listen to
+# <a href="http://media.enet.cu/radioreloj">
+# http://media.enet.cu/radioreloj
+# </a>, a Cuban information station, and heard
+# the time announced as "ocho cuarenta y cuatro" ("eight forty-four"),
+# indicating that Cuba is still on standard time.
+
+# From Steffen Thorsen (2008-03-12):
+# It seems that Cuba will start DST on Sunday, 2007-03-16...
+# It was announced yesterday, according to this source (in Spanish):
+# <a href="http://www.nnc.cubaweb.cu/marzo-2008/cien-1-11-3-08.htm">
+# http://www.nnc.cubaweb.cu/marzo-2008/cien-1-11-3-08.htm
+# </a>
+#
+# Some more background information is posted here:
+# <a href="http://www.timeanddate.com/news/time/cuba-starts-dst-march-16.html">
+# http://www.timeanddate.com/news/time/cuba-starts-dst-march-16.html
+# </a>
+#
+# The article also says that Cuba has been observing DST since 1963,
+# while Shanks (and tzdata) has 1965 as the first date (except in the
+# 1940's). Many other web pages in Cuba also claim that it has been
+# observed since 1963, but with the exception of 1970 - an exception
+# which is not present in tzdata/Shanks. So there is a chance we need to
+# change some historic records as well.
+#
+# One example:
+# <a href="http://www.radiohc.cu/espanol/noticias/mar07/11mar/hor.htm">
+# http://www.radiohc.cu/espanol/noticias/mar07/11mar/hor.htm
+# </a>
+
+# From Jesper Norgaard Welen (2008-03-13):
+# The Cuban time change has just been confirmed on the most authoritative
+# web site, the Granma.  Please check out
+# <a href="http://www.granma.cubaweb.cu/2008/03/13/nacional/artic10.html">
+# http://www.granma.cubaweb.cu/2008/03/13/nacional/artic10.html
+# </a>
+#
+# Basically as expected after Steffen Thorsens information, the change
+# will take place midnight between Saturday and Sunday.
+
+# From Arthur David Olson (2008-03-12):
+# Assume Sun>=15 (third Sunday) going forward.
+
+# From Alexander Krivenyshev (2009-03-04)
+# According to the Radio Reloj - Cuba will start Daylight Saving Time on
+# midnight between Saturday, March 07, 2009 and Sunday, March 08, 2009-
+# not on midnight March 14 / March 15 as previously thought.
+#
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_cuba05.html">
+# http://www.worldtimezone.com/dst_news/dst_news_cuba05.html
+# (in Spanish)
+# </a>
+
+# From Arthur David Olson (2009-03-09)
+# I listened over the Internet to
+# <a href="http://media.enet.cu/readioreloj">
+# http://media.enet.cu/readioreloj
+# </a>
+# this morning; when it was 10:05 a. m. here in Bethesda, Maryland the
+# the time was announced as "diez cinco"--the same time as here, indicating
+# that has indeed switched to DST. Assume second Sunday from 2009 forward.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Cuba	1928	only	-	Jun	10	0:00	1:00	D
+Rule	Cuba	1928	only	-	Oct	10	0:00	0	S
+Rule	Cuba	1940	1942	-	Jun	Sun>=1	0:00	1:00	D
+Rule	Cuba	1940	1942	-	Sep	Sun>=1	0:00	0	S
+Rule	Cuba	1945	1946	-	Jun	Sun>=1	0:00	1:00	D
+Rule	Cuba	1945	1946	-	Sep	Sun>=1	0:00	0	S
+Rule	Cuba	1965	only	-	Jun	1	0:00	1:00	D
+Rule	Cuba	1965	only	-	Sep	30	0:00	0	S
+Rule	Cuba	1966	only	-	May	29	0:00	1:00	D
+Rule	Cuba	1966	only	-	Oct	2	0:00	0	S
+Rule	Cuba	1967	only	-	Apr	8	0:00	1:00	D
+Rule	Cuba	1967	1968	-	Sep	Sun>=8	0:00	0	S
+Rule	Cuba	1968	only	-	Apr	14	0:00	1:00	D
+Rule	Cuba	1969	1977	-	Apr	lastSun	0:00	1:00	D
+Rule	Cuba	1969	1971	-	Oct	lastSun	0:00	0	S
+Rule	Cuba	1972	1974	-	Oct	8	0:00	0	S
+Rule	Cuba	1975	1977	-	Oct	lastSun	0:00	0	S
+Rule	Cuba	1978	only	-	May	7	0:00	1:00	D
+Rule	Cuba	1978	1990	-	Oct	Sun>=8	0:00	0	S
+Rule	Cuba	1979	1980	-	Mar	Sun>=15	0:00	1:00	D
+Rule	Cuba	1981	1985	-	May	Sun>=5	0:00	1:00	D
+Rule	Cuba	1986	1989	-	Mar	Sun>=14	0:00	1:00	D
+Rule	Cuba	1990	1997	-	Apr	Sun>=1	0:00	1:00	D
+Rule	Cuba	1991	1995	-	Oct	Sun>=8	0:00s	0	S
+Rule	Cuba	1996	only	-	Oct	 6	0:00s	0	S
+Rule	Cuba	1997	only	-	Oct	12	0:00s	0	S
+Rule	Cuba	1998	1999	-	Mar	lastSun	0:00s	1:00	D
+Rule	Cuba	1998	2003	-	Oct	lastSun	0:00s	0	S
+Rule	Cuba	2000	2004	-	Apr	Sun>=1	0:00s	1:00	D
+Rule	Cuba	2006	max	-	Oct	lastSun	0:00s	0	S
+Rule	Cuba	2007	only	-	Mar	Sun>=8	0:00s	1:00	D
+Rule	Cuba	2008	only	-	Mar	Sun>=15	0:00s	1:00	D
+Rule	Cuba	2009	max	-	Mar	Sun>=8	0:00s	1:00	D
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Havana	-5:29:28 -	LMT	1890
+			-5:29:36 -	HMT	1925 Jul 19 12:00 # Havana MT
+			-5:00	Cuba	C%sT
+
+# Dominica
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Dominica	-4:05:36 -	LMT	1911 Jul 1 0:01		# Roseau
+			-4:00	-	AST
+
+# Dominican Republic
+
+# From Steffen Thorsen (2000-10-30):
+# Enrique Morales reported to me that the Dominican Republic has changed the
+# time zone to Eastern Standard Time as of Sunday 29 at 2 am....
+# http://www.listin.com.do/antes/261000/republica/princi.html
+
+# From Paul Eggert (2000-12-04):
+# That URL (2000-10-26, in Spanish) says they planned to use US-style DST.
+
+# From Rives McDow (2000-12-01):
+# Dominican Republic changed its mind and presidential decree on Tuesday,
+# November 28, 2000, with a new decree.  On Sunday, December 3 at 1:00 AM the
+# Dominican Republic will be reverting to 8 hours from the International Date
+# Line, and will not be using DST in the foreseeable future.  The reason they
+# decided to use DST was to be in synch with Puerto Rico, who was also going
+# to implement DST.  When Puerto Rico didn't implement DST, the president
+# decided to revert.
+
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	DR	1966	only	-	Oct	30	0:00	1:00	D
+Rule	DR	1967	only	-	Feb	28	0:00	0	S
+Rule	DR	1969	1973	-	Oct	lastSun	0:00	0:30	HD
+Rule	DR	1970	only	-	Feb	21	0:00	0	S
+Rule	DR	1971	only	-	Jan	20	0:00	0	S
+Rule	DR	1972	1974	-	Jan	21	0:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Santo_Domingo -4:39:36 -	LMT	1890
+			-4:40	-	SDMT	1933 Apr  1 12:00 # S. Dom. MT
+			-5:00	DR	E%sT	1974 Oct 27
+			-4:00	-	AST	2000 Oct 29 02:00
+			-5:00	US	E%sT	2000 Dec  3 01:00
+			-4:00	-	AST
+
+# El Salvador
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Salv	1987	1988	-	May	Sun>=1	0:00	1:00	D
+Rule	Salv	1987	1988	-	Sep	lastSun	0:00	0	S
+# There are too many San Salvadors elsewhere, so use America/El_Salvador
+# instead of America/San_Salvador.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/El_Salvador -5:56:48 -	LMT	1921		# San Salvador
+			-6:00	Salv	C%sT
+
+# Grenada
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Grenada	-4:07:00 -	LMT	1911 Jul	# St George's
+			-4:00	-	AST
+
+# Guadeloupe
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Guadeloupe	-4:06:08 -	LMT	1911 Jun 8	# Pointe a Pitre
+			-4:00	-	AST
+# St Barthelemy
+Link America/Guadeloupe	America/St_Barthelemy
+# St Martin (French part)
+Link America/Guadeloupe	America/Marigot
+
+# Guatemala
+#
+# From Gwillim Law (2006-04-22), after a heads-up from Oscar van Vlijmen:
+# Diario Co Latino, at
+# http://www.diariocolatino.com/internacionales/detalles.asp?NewsID=8079,
+# says in an article dated 2006-04-19 that the Guatemalan government had
+# decided on that date to advance official time by 60 minutes, to lessen the
+# impact of the elevated cost of oil....  Daylight saving time will last from
+# 2006-04-29 24:00 (Guatemalan standard time) to 2006-09-30 (time unspecified).
+# From Paul Eggert (2006-06-22):
+# The Ministry of Energy and Mines, press release CP-15/2006
+# (2006-04-19), says DST ends at 24:00.  See
+# <http://www.sieca.org.gt/Sitio_publico/Energeticos/Doc/Medidas/Cambio_Horario_Nac_190406.pdf>.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Guat	1973	only	-	Nov	25	0:00	1:00	D
+Rule	Guat	1974	only	-	Feb	24	0:00	0	S
+Rule	Guat	1983	only	-	May	21	0:00	1:00	D
+Rule	Guat	1983	only	-	Sep	22	0:00	0	S
+Rule	Guat	1991	only	-	Mar	23	0:00	1:00	D
+Rule	Guat	1991	only	-	Sep	 7	0:00	0	S
+Rule	Guat	2006	only	-	Apr	30	0:00	1:00	D
+Rule	Guat	2006	only	-	Oct	 1	0:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Guatemala	-6:02:04 -	LMT	1918 Oct 5
+			-6:00	Guat	C%sT
+
+# Haiti
+# From Gwillim Law (2005-04-15):
+# Risto O. Nykanen wrote me that Haiti is now on DST.
+# I searched for confirmation, and I found a
+# <a href="http://www.haitianconsulate.org/time.doc"> press release
+# on the Web page of the Haitian Consulate in Chicago (2005-03-31),
+# </a>.  Translated from French, it says:
+#
+#  "The Prime Minister's Communication Office notifies the public in general
+#   and the press in particular that, following a decision of the Interior
+#   Ministry and the Territorial Collectivities [I suppose that means the
+#   provinces], Haiti will move to Eastern Daylight Time in the night from next
+#   Saturday the 2nd to Sunday the 3rd.
+#
+#  "Consequently, the Prime Minister's Communication Office wishes to inform
+#   the population that the country's clocks will be set forward one hour
+#   starting at midnight.  This provision will hold until the last Saturday in
+#   October 2005.
+#
+#  "Port-au-Prince, March 31, 2005"
+#
+# From Steffen Thorsen (2006-04-04):
+# I have been informed by users that Haiti observes DST this year like
+# last year, so the current "only" rule for 2005 might be changed to a
+# "max" rule or to last until 2006. (Who knows if they will observe DST
+# next year or if they will extend their DST like US/Canada next year).
+#
+# I have found this article about it (in French):
+# http://www.haitipressnetwork.com/news.cfm?articleID=7612
+#
+# The reason seems to be an energy crisis.
+
+# From Stephen Colebourne (2007-02-22):
+# Some IATA info: Haiti won't be having DST in 2007.
+
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Haiti	1983	only	-	May	8	0:00	1:00	D
+Rule	Haiti	1984	1987	-	Apr	lastSun	0:00	1:00	D
+Rule	Haiti	1983	1987	-	Oct	lastSun	0:00	0	S
+# Shanks & Pottenger say AT is 2:00, but IATA SSIM (1991/1997) says 1:00s.
+# Go with IATA.
+Rule	Haiti	1988	1997	-	Apr	Sun>=1	1:00s	1:00	D
+Rule	Haiti	1988	1997	-	Oct	lastSun	1:00s	0	S
+Rule	Haiti	2005	2006	-	Apr	Sun>=1	0:00	1:00	D
+Rule	Haiti	2005	2006	-	Oct	lastSun	0:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Port-au-Prince -4:49:20 -	LMT	1890
+			-4:49	-	PPMT	1917 Jan 24 12:00 # P-a-P MT
+			-5:00	Haiti	E%sT
+
+# Honduras
+# Shanks & Pottenger say 1921 Jan 1; go with Whitman's more precise Apr 1.
+
+# From Paul Eggert (2006-05-05):
+# worldtimezone.com reports a 2006-05-02 Spanish-language AP article
+# saying Honduras will start using DST midnight Saturday, effective 4
+# months until September.  La Tribuna reported today
+# <http://www.latribuna.hn/99299.html> that Manuel Zelaya, the president
+# of Honduras, refused to back down on this.
+
+# From Jesper Norgaard Welen (2006-08-08):
+# It seems that Honduras has returned from DST to standard time this Monday at
+# 00:00 hours (prolonging Sunday to 25 hours duration).
+# http://www.worldtimezone.com/dst_news/dst_news_honduras04.html
+
+# From Paul Eggert (2006-08-08):
+# Also see Diario El Heraldo, The country returns to standard time (2006-08-08)
+# <http://www.elheraldo.hn/nota.php?nid=54941&sec=12>.
+# It mentions executive decree 18-2006.
+
+# From Steffen Thorsen (2006-08-17):
+# Honduras will observe DST from 2007 to 2009, exact dates are not
+# published, I have located this authoritative source:
+# http://www.presidencia.gob.hn/noticia.aspx?nId=47
+
+# From Steffen Thorsen (2007-03-30):
+# http://www.laprensahn.com/pais_nota.php?id04962=7386
+# So it seems that Honduras will not enter DST this year....
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Hond	1987	1988	-	May	Sun>=1	0:00	1:00	D
+Rule	Hond	1987	1988	-	Sep	lastSun	0:00	0	S
+Rule	Hond	2006	only	-	May	Sun>=1	0:00	1:00	D
+Rule	Hond	2006	only	-	Aug	Mon>=1	0:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Tegucigalpa -5:48:52 -	LMT	1921 Apr
+			-6:00	Hond	C%sT
+#
+# Great Swan I ceded by US to Honduras in 1972
+
+# Jamaica
+
+# From Bob Devine (1988-01-28):
+# Follows US rules.
+
+# From U. S. Naval Observatory (1989-01-19):
+# JAMAICA             5 H  BEHIND UTC
+
+# From Shanks & Pottenger:
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Jamaica	-5:07:12 -	LMT	1890		# Kingston
+			-5:07:12 -	KMT	1912 Feb    # Kingston Mean Time
+			-5:00	-	EST	1974 Apr 28 2:00
+			-5:00	US	E%sT	1984
+			-5:00	-	EST
+
+# Martinique
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Martinique	-4:04:20 -      LMT	1890		# Fort-de-France
+			-4:04:20 -	FFMT	1911 May     # Fort-de-France MT
+			-4:00	-	AST	1980 Apr  6
+			-4:00	1:00	ADT	1980 Sep 28
+			-4:00	-	AST
+
+# Montserrat
+# From Paul Eggert (2006-03-22):
+# In 1995 volcanic eruptions forced evacuation of Plymouth, the capital.
+# world.gazetteer.com says Cork Hill is the most populous location now.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Montserrat	-4:08:52 -	LMT	1911 Jul 1 0:01   # Cork Hill
+			-4:00	-	AST
+
+# Nicaragua
+#
+# This uses Shanks & Pottenger for times before 2005.
+#
+# From Steffen Thorsen (2005-04-12):
+# I've got reports from 8 different people that Nicaragua just started
+# DST on Sunday 2005-04-10, in order to save energy because of
+# expensive petroleum.  The exact end date for DST is not yet
+# announced, only "September" but some sites also say "mid-September".
+# Some background information is available on the President's official site:
+# http://www.presidencia.gob.ni/Presidencia/Files_index/Secretaria/Notas%20de%20Prensa/Presidente/2005/ABRIL/Gobierno-de-nicaragua-adelanta-hora-oficial-06abril.htm
+# The Decree, no 23-2005 is available here:
+# http://www.presidencia.gob.ni/buscador_gaceta/BD/DECRETOS/2005/Decreto%2023-2005%20Se%20adelanta%20en%20una%20hora%20en%20todo%20el%20territorio%20nacional%20apartir%20de%20las%2024horas%20del%2009%20de%20Abril.pdf
+#
+# From Paul Eggert (2005-05-01):
+# The decree doesn't say anything about daylight saving, but for now let's
+# assume that it is daylight saving....
+#
+# From Gwillim Law (2005-04-21):
+# The Associated Press story on the time change, which can be found at
+# http://www.lapalmainteractivo.com/guias/content/gen/ap/America_Latina/AMC_GEN_NICARAGUA_HORA.html
+# and elsewhere, says (fifth paragraph, translated from Spanish):  "The last
+# time that a change of clocks was applied to save energy was in the year 2000
+# during the Arnoldo Aleman administration."...
+# The northamerica file says that Nicaragua has been on UTC-6 continuously
+# since December 1998.  I wasn't able to find any details of Nicaraguan time
+# changes in 2000.  Perhaps a note could be added to the northamerica file, to
+# the effect that we have indirect evidence that DST was observed in 2000.
+#
+# From Jesper Norgaard Welen (2005-11-02):
+# Nicaragua left DST the 2005-10-02 at 00:00 (local time).
+# http://www.presidencia.gob.ni/presidencia/files_index/secretaria/comunicados/2005/septiembre/26septiembre-cambio-hora.htm
+# (2005-09-26)
+#
+# From Jesper Norgaard Welen (2006-05-05):
+# http://www.elnuevodiario.com.ni/2006/05/01/nacionales/18410
+# (my informal translation)
+# By order of the president of the republic, Enrique Bolanos, Nicaragua
+# advanced by sixty minutes their official time, yesterday at 2 in the
+# morning, and will stay that way until 30.th. of september.
+#
+# From Jesper Norgaard Welen (2006-09-30):
+# http://www.presidencia.gob.ni/buscador_gaceta/BD/DECRETOS/2006/D-063-2006P-PRN-Cambio-Hora.pdf
+# My informal translation runs:
+# The natural sun time is restored in all the national territory, in that the
+# time is returned one hour at 01:00 am of October 1 of 2006.
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Nic	1979	1980	-	Mar	Sun>=16	0:00	1:00	D
+Rule	Nic	1979	1980	-	Jun	Mon>=23	0:00	0	S
+Rule	Nic	2005	only	-	Apr	10	0:00	1:00	D
+Rule	Nic	2005	only	-	Oct	Sun>=1	0:00	0	S
+Rule	Nic	2006	only	-	Apr	30	2:00	1:00	D
+Rule	Nic	2006	only	-	Oct	Sun>=1	1:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Managua	-5:45:08 -	LMT	1890
+			-5:45:12 -	MMT	1934 Jun 23 # Managua Mean Time?
+			-6:00	-	CST	1973 May
+			-5:00	-	EST	1975 Feb 16
+			-6:00	Nic	C%sT	1992 Jan  1 4:00
+			-5:00	-	EST	1992 Sep 24
+			-6:00	-	CST	1993
+			-5:00	-	EST	1997
+			-6:00	Nic	C%sT
+
+# Panama
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Panama	-5:18:08 -	LMT	1890
+			-5:19:36 -	CMT	1908 Apr 22   # Colon Mean Time
+			-5:00	-	EST
+
+# Puerto Rico
+# There are too many San Juans elsewhere, so we'll use `Puerto_Rico'.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Puerto_Rico -4:24:25 -	LMT	1899 Mar 28 12:00    # San Juan
+			-4:00	-	AST	1942 May  3
+			-4:00	US	A%sT	1946
+			-4:00	-	AST
+
+# St Kitts-Nevis
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/St_Kitts	-4:10:52 -	LMT	1912 Mar 2	# Basseterre
+			-4:00	-	AST
+
+# St Lucia
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/St_Lucia	-4:04:00 -	LMT	1890		# Castries
+			-4:04:00 -	CMT	1912	    # Castries Mean Time
+			-4:00	-	AST
+
+# St Pierre and Miquelon
+# There are too many St Pierres elsewhere, so we'll use `Miquelon'.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Miquelon	-3:44:40 -	LMT	1911 May 15	# St Pierre
+			-4:00	-	AST	1980 May
+			-3:00	-	PMST	1987 # Pierre & Miquelon Time
+			-3:00	Canada	PM%sT
+
+# St Vincent and the Grenadines
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/St_Vincent	-4:04:56 -	LMT	1890		# Kingstown
+			-4:04:56 -	KMT	1912	   # Kingstown Mean Time
+			-4:00	-	AST
+
+# Turks and Caicos
+#
+# From Chris Dunn in
+# <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=415007>
+# (2007-03-15): In the Turks & Caicos Islands (America/Grand_Turk) the
+# daylight saving dates for time changes have been adjusted to match
+# the recent U.S. change of dates.
+#
+# From Brian Inglis (2007-04-28):
+# http://www.turksandcaicos.tc/calendar/index.htm [2007-04-26]
+# there is an entry for Nov 4 "Daylight Savings Time Ends 2007" and three
+# rows before that there is an out of date entry for Oct:
+# "Eastern Standard Times Begins 2007
+# Clocks are set back one hour at 2:00 a.m. local Daylight Saving Time"
+# indicating that the normal ET rules are followed.
+#
+# From Paul Eggert (2006-05-01):
+# Shanks & Pottenger say they use US DST rules, but IATA SSIM (1991/1998)
+# says they switch at midnight.  Go with Shanks & Pottenger.
+#
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	TC	1979	1986	-	Apr	lastSun	2:00	1:00	D
+Rule	TC	1979	2006	-	Oct	lastSun	2:00	0	S
+Rule	TC	1987	2006	-	Apr	Sun>=1	2:00	1:00	D
+Rule	TC	2007	max	-	Mar	Sun>=8	2:00	1:00	D
+Rule	TC	2007	max	-	Nov	Sun>=1	2:00	0	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Grand_Turk	-4:44:32 -	LMT	1890
+			-5:07:12 -	KMT	1912 Feb    # Kingston Mean Time
+			-5:00	TC	E%sT
+
+# British Virgin Is
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Tortola	-4:18:28 -	LMT	1911 Jul    # Road Town
+			-4:00	-	AST
+
+# Virgin Is
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/St_Thomas	-4:19:44 -	LMT	1911 Jul    # Charlotte Amalie
+			-4:00	-	AST
diff --git a/JodaTime/src/java/org/joda/time/tz/src/pacificnew b/JodaTime/src/java/org/joda/time/tz/src/pacificnew
index 6ee97d60e..e2512c1d1 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/pacificnew
+++ b/JodaTime/src/java/org/joda/time/tz/src/pacificnew
@@ -1,26 +1,29 @@
-# @(#)pacificnew	8.1
-
-# From Arthur David Olson (1989-04-05):
-# On 1989-04-05, the U. S. House of Representatives passed (238-154) a bill
-# establishing "Pacific Presidential Election Time"; it was not acted on
-# by the Senate or signed into law by the President.
-# You might want to change the "PE" (Presidential Election) below to
-# "Q" (Quadrennial) to maintain three-character zone abbreviations.
-# If you're really conservative, you might want to change it to "D".
-# Avoid "L" (Leap Year), which won't be true in 2100.
-
-# If Presidential Election Time is ever established, replace "XXXX" below
-# with the year the law takes effect and uncomment the "##" lines.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-## Rule	Twilite	XXXX	max	-	Apr	Sun>=1	2:00	1:00	D
-## Rule	Twilite	XXXX	max	uspres	Oct	lastSun	2:00	1:00	PE
-## Rule	Twilite	XXXX	max	uspres	Nov	Sun>=7	2:00	0	S
-## Rule	Twilite	XXXX	max	nonpres	Oct	lastSun	2:00	0	S
-
-# Zone	NAME			GMTOFF	RULES/SAVE	FORMAT	[UNTIL]
-## Zone	America/Los_Angeles-PET	-8:00	US		P%sT	XXXX
-##				-8:00	Twilite		P%sT
-
-# For now...
-Link	America/Los_Angeles	US/Pacific-New	##
+# <pre>
+# @(#)pacificnew	8.2
+# This file is in the public domain, so clarified as of
+# 2009-05-17 by Arthur David Olson.
+
+# From Arthur David Olson (1989-04-05):
+# On 1989-04-05, the U. S. House of Representatives passed (238-154) a bill
+# establishing "Pacific Presidential Election Time"; it was not acted on
+# by the Senate or signed into law by the President.
+# You might want to change the "PE" (Presidential Election) below to
+# "Q" (Quadrennial) to maintain three-character zone abbreviations.
+# If you're really conservative, you might want to change it to "D".
+# Avoid "L" (Leap Year), which won't be true in 2100.
+
+# If Presidential Election Time is ever established, replace "XXXX" below
+# with the year the law takes effect and uncomment the "##" lines.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+## Rule	Twilite	XXXX	max	-	Apr	Sun>=1	2:00	1:00	D
+## Rule	Twilite	XXXX	max	uspres	Oct	lastSun	2:00	1:00	PE
+## Rule	Twilite	XXXX	max	uspres	Nov	Sun>=7	2:00	0	S
+## Rule	Twilite	XXXX	max	nonpres	Oct	lastSun	2:00	0	S
+
+# Zone	NAME			GMTOFF	RULES/SAVE	FORMAT	[UNTIL]
+## Zone	America/Los_Angeles-PET	-8:00	US		P%sT	XXXX
+##				-8:00	Twilite		P%sT
+
+# For now...
+Link	America/Los_Angeles	US/Pacific-New	##
diff --git a/JodaTime/src/java/org/joda/time/tz/src/southamerica b/JodaTime/src/java/org/joda/time/tz/src/southamerica
index bbae0f6c6..735502292 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/southamerica
+++ b/JodaTime/src/java/org/joda/time/tz/src/southamerica
@@ -1,1428 +1,1568 @@
-# @(#)southamerica	8.33
-# <pre>
-
-# This data is by no means authoritative; if you think you know better,
-# go ahead and edit the file (and please send any changes to
-# tz@elsie.nci.nih.gov for general use in the future).
-
-# From Paul Eggert (2006-03-22):
-# A good source for time zone historical data outside the U.S. is
-# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),
-# San Diego: ACS Publications, Inc. (2003).
-#
-# Gwillim Law writes that a good source
-# for recent time zone data is the International Air Transport
-# Association's Standard Schedules Information Manual (IATA SSIM),
-# published semiannually.  Law sent in several helpful summaries
-# of the IATA's data after 1990.
-#
-# Except where otherwise noted, Shanks & Pottenger is the source for
-# entries through 1990, and IATA SSIM is the source for entries afterwards.
-#
-# Earlier editions of these tables used the North American style (e.g. ARST and
-# ARDT for Argentine Standard and Daylight Time), but the following quote
-# suggests that it's better to use European style (e.g. ART and ARST).
-#	I suggest the use of _Summer time_ instead of the more cumbersome
-#	_daylight-saving time_.  _Summer time_ seems to be in general use
-#	in Europe and South America.
-#	-- E O Cutler, _New York Times_ (1937-02-14), quoted in
-#	H L Mencken, _The American Language: Supplement I_ (1960), p 466
-#
-# Earlier editions of these tables also used the North American style
-# for time zones in Brazil, but this was incorrect, as Brazilians say
-# "summer time".  Reinaldo Goulart, a Sao Paulo businessman active in
-# the railroad sector, writes (1999-07-06):
-#	The subject of time zones is currently a matter of discussion/debate in
-#	Brazil.  Let's say that "the Brasilia time" is considered the
-#	"official time" because Brasilia is the capital city.
-#	The other three time zones are called "Brasilia time "minus one" or
-#	"plus one" or "plus two".  As far as I know there is no such
-#	name/designation as "Eastern Time" or "Central Time".
-# So I invented the following (English-language) abbreviations for now.
-# Corrections are welcome!
-#		std	dst
-#	-2:00	FNT	FNST	Fernando de Noronha
-#	-3:00	BRT	BRST	Brasilia
-#	-4:00	AMT	AMST	Amazon
-#	-5:00	ACT	ACST	Acre
-
-###############################################################################
-
-###############################################################################
-
-# Argentina
-
-# From Bob Devine (1988-01-28):
-# Argentina: first Sunday in October to first Sunday in April since 1976.
-# Double Summer time from 1969 to 1974.  Switches at midnight.
-
-# From U. S. Naval Observatory (1988-01-199):
-# ARGENTINA           3 H BEHIND   UTC
-
-# From Hernan G. Otero (1995-06-26):
-# I am sending modifications to the Argentine time zone table...
-# AR was chosen because they are the ISO letters that represent Argentina.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Arg	1930	only	-	Dec	 1	0:00	1:00	S
-Rule	Arg	1931	only	-	Apr	 1	0:00	0	-
-Rule	Arg	1931	only	-	Oct	15	0:00	1:00	S
-Rule	Arg	1932	1940	-	Mar	 1	0:00	0	-
-Rule	Arg	1932	1939	-	Nov	 1	0:00	1:00	S
-Rule	Arg	1940	only	-	Jul	 1	0:00	1:00	S
-Rule	Arg	1941	only	-	Jun	15	0:00	0	-
-Rule	Arg	1941	only	-	Oct	15	0:00	1:00	S
-Rule	Arg	1943	only	-	Aug	 1	0:00	0	-
-Rule	Arg	1943	only	-	Oct	15	0:00	1:00	S
-Rule	Arg	1946	only	-	Mar	 1	0:00	0	-
-Rule	Arg	1946	only	-	Oct	 1	0:00	1:00	S
-Rule	Arg	1963	only	-	Oct	 1	0:00	0	-
-Rule	Arg	1963	only	-	Dec	15	0:00	1:00	S
-Rule	Arg	1964	1966	-	Mar	 1	0:00	0	-
-Rule	Arg	1964	1966	-	Oct	15	0:00	1:00	S
-Rule	Arg	1967	only	-	Apr	 2	0:00	0	-
-Rule	Arg	1967	1968	-	Oct	Sun>=1	0:00	1:00	S
-Rule	Arg	1968	1969	-	Apr	Sun>=1	0:00	0	-
-Rule	Arg	1974	only	-	Jan	23	0:00	1:00	S
-Rule	Arg	1974	only	-	May	 1	0:00	0	-
-Rule	Arg	1988	only	-	Dec	 1	0:00	1:00	S
-#
-# From Hernan G. Otero (1995-06-26):
-# These corrections were contributed by InterSoft Argentina S.A.,
-# obtaining the data from the:
-# Talleres de Hidrografia Naval Argentina
-# (Argentine Naval Hydrography Institute)
-Rule	Arg	1989	1993	-	Mar	Sun>=1	0:00	0	-
-Rule	Arg	1989	1992	-	Oct	Sun>=15	0:00	1:00	S
-#
-# From Hernan G. Otero (1995-06-26):
-# From this moment on, the law that mandated the daylight saving
-# time corrections was derogated and no more modifications
-# to the time zones (for daylight saving) are now made.
-#
-# From Rives McDow (2000-01-10):
-# On October 3, 1999, 0:00 local, Argentina implemented daylight savings time,
-# which did not result in the switch of a time zone, as they stayed 9 hours
-# from the International Date Line.
-Rule	Arg	1999	only	-	Oct	Sun>=1	0:00	1:00	S
-# From Paul Eggert (2007-12-28):
-# DST was set to expire on March 5, not March 3, but since it was converted
-# to standard time on March 3 it's more convenient for us to pretend that
-# it ended on March 3.
-Rule	Arg	2000	only	-	Mar	3	0:00	0	-
-#
-# From Peter Gradelski via Steffen Thorsen (2000-03-01):
-# We just checked with our Sao Paulo office and they say the government of
-# Argentina decided not to become one of the countries that go on or off DST.
-# So Buenos Aires should be -3 hours from GMT at all times.
-#
-# From Fabian L. Arce Jofre (2000-04-04):
-# The law that claimed DST for Argentina was derogated by President Fernando
-# de la Rua on March 2, 2000, because it would make people spend more energy
-# in the winter time, rather than less.  The change took effect on March 3.
-#
-# From Mariano Absatz (2001-06-06):
-# one of the major newspapers here in Argentina said that the 1999
-# Timezone Law (which never was effectively applied) will (would?) be
-# in effect.... The article is at
-# http://ar.clarin.com/diario/2001-06-06/e-01701.htm
-# ... The Law itself is "Ley No 25155", sanctioned on 1999-08-25, enacted
-# 1999-09-17, and published 1999-09-21.  The official publication is at:
-# http://www.boletin.jus.gov.ar/BON/Primera/1999/09-Septiembre/21/PDF/BO21-09-99LEG.PDF
-# Regretfully, you have to subscribe (and pay) for the on-line version....
-#
-# (2001-06-12):
-# the timezone for Argentina will not change next Sunday.
-# Apparently it will do so on Sunday 24th....
-# http://ar.clarin.com/diario/2001-06-12/s-03501.htm
-#
-# (2001-06-25):
-# Last Friday (yes, the last working day before the date of the change), the
-# Senate annulled the 1999 law that introduced the changes later postponed.
-# http://www.clarin.com.ar/diario/2001-06-22/s-03601.htm
-# It remains the vote of the Deputies..., but it will be the same....
-# This kind of things had always been done this way in Argentina.
-# We are still -03:00 all year round in all of the country.
-#
-# From Steffen Thorsen (2007-12-21):
-# A user (Leonardo Chaim) reported that Argentina will adopt DST....
-# all of the country (all Zone-entries) are affected.  News reports like
-# http://www.lanacion.com.ar/opinion/nota.asp?nota_id=973037 indicate
-# that Argentina will use DST next year as well, from October to
-# March, although exact rules are not given.
-#
-# From Jesper Norgaard Welen (2007-12-26)
-# The last hurdle of Argentina DST is over, the proposal was approved in
-# the lower chamber too (Deputados) with a vote 192 for and 2 against.
-# By the way thanks to Mariano Absatz and Daniel Mario Vega for the link to
-# the original scanned proposal, where the dates and the zero hours are
-# clear and unambiguous...This is the article about final approval:
-# <a href="http://www.lanacion.com.ar/politica/nota.asp?nota_id=973996">
-# http://www.lanacion.com.ar/politica/nota.asp?nota_id=973996
-# </a>
-#
-# From Paul Eggert (2007-12-22):
-# For dates after mid-2008, the following rules are my guesses and
-# are quite possibly wrong, but are more likely than no DST at all.
-
-# From Alexander Krivenyshev (2008-09-05):
-# As per message from Carlos Alberto Fonseca Arauz (Nicaragua),
-# Argentina will start DST on Sunday October 19, 2008.
-#
-# <a href="http://www.worldtimezone.com/dst_news/dst_news_argentina03.html">
-# http://www.worldtimezone.com/dst_news/dst_news_argentina03.html
-# </a>
-# OR
-# <a href="http://www.impulsobaires.com.ar/nota.php?id=57832 (in spanish)">
-# http://www.impulsobaires.com.ar/nota.php?id=57832 (in spanish)
-# </a>
-
-# From Rodrigo Severo (2008-10-06):
-# Here is some info available at a Gentoo bug related to TZ on Argentina's DST:
-# ...
-# ------- Comment #1 from [jmdocile]  2008-10-06 16:28 0000 -------
-# Hi, there is a problem with timezone-data-2008e and maybe with
-# timezone-data-2008f
-# Argentinian law [Number] 25.155 is no longer valid.
-# <a href="http://www.infoleg.gov.ar/infolegInternet/anexos/60000-64999/60036/norma.htm">
-# http://www.infoleg.gov.ar/infolegInternet/anexos/60000-64999/60036/norma.htm
-# </a>
-# The new one is law [Number] 26.350
-# <a href="http://www.infoleg.gov.ar/infolegInternet/anexos/135000-139999/136191/norma.htm">
-# http://www.infoleg.gov.ar/infolegInternet/anexos/135000-139999/136191/norma.htm
-# </a>
-# So there is no summer time in Argentina for now.
-
-# From Mariano Absatz (2008-10-20):
-# Decree 1693/2008 applies Law 26.350 for the summer 2008/2009 establishing DST in Argentina
-# From 2008-10-19 until 2009-03-15
-# <a href="http://www.boletinoficial.gov.ar/Bora.Portal/CustomControls/PdfContent.aspx?fp=16102008&pi=3&pf=4&s=0&sec=01">
-# http://www.boletinoficial.gov.ar/Bora.Portal/CustomControls/PdfContent.aspx?fp=16102008&pi=3&pf=4&s=0&sec=01
-# </a>
-#
-# Decree 1705/2008 excepting 12 Provinces from applying DST in the summer 2008/2009:
-# Catamarca, La Rioja, Mendoza, Salta, San Juan, San Luis, La Pampa, Neuquen, Rio Negro, Chubut, Santa Cruz
-# and Tierra del Fuego
-# <a href="http://www.boletinoficial.gov.ar/Bora.Portal/CustomControls/PdfContent.aspx?fp=17102008&pi=1&pf=1&s=0&sec=01">
-# http://www.boletinoficial.gov.ar/Bora.Portal/CustomControls/PdfContent.aspx?fp=17102008&pi=1&pf=1&s=0&sec=01
-# </a>
-#
-# Press release 235 dated Saturday October 18th, from the Government of the Province of Jujuy saying
-# it will not apply DST either (even when it was not included in Decree 1705/2008)
-# <a href="http://www.jujuy.gov.ar/index2/partes_prensa/18_10_08/235-181008.doc">
-# http://www.jujuy.gov.ar/index2/partes_prensa/18_10_08/235-181008.doc
-# </a>
-
-Rule	Arg	2007	only	-	Dec	30	0:00	1:00	S
-Rule	Arg	2008	max	-	Mar	Sun>=15	0:00	0	-
-Rule	Arg	2008	max	-	Oct	Sun>=15	0:00	1:00	S
- 
-# From Mariano Absatz (2004-05-21):
-# Today it was officially published that the Province of Mendoza is changing
-# its timezone this winter... starting tomorrow night....
-# http://www.gobernac.mendoza.gov.ar/boletin/pdf/20040521-27158-normas.pdf
-# From Paul Eggert (2004-05-24):
-# It's Law No. 7,210.  This change is due to a public power emergency, so for
-# now we'll assume it's for this year only.
-#
-# From Paul Eggert (2006-03-22):
-# <a href="http://www.spicasc.net/horvera.html">
-# Hora de verano para la Republica Argentina (2003-06-08)
-# </a> says that standard time in Argentina from 1894-10-31
-# to 1920-05-01 was -4:16:48.25.  Go with this more-precise value
-# over Shanks & Pottenger.
-#
-# From Mariano Absatz (2004-06-05):
-# These media articles from a major newspaper mostly cover the current state:
-# http://www.lanacion.com.ar/04/05/27/de_604825.asp
-# http://www.lanacion.com.ar/04/05/28/de_605203.asp
-#
-# The following eight (8) provinces pulled clocks back to UTC-04:00 at
-# midnight Monday May 31st. (that is, the night between 05/31 and 06/01).
-# Apparently, all nine provinces would go back to UTC-03:00 at the same
-# time in October 17th.
-#
-# Catamarca, Chubut, La Rioja, San Juan, San Luis, Santa Cruz,
-# Tierra del Fuego, Tucuman.
-#
-# From Mariano Absatz (2004-06-14):
-# ... this weekend, the Province of Tucuman decided it'd go back to UTC-03:00
-# yesterday midnight (that is, at 24:00 Saturday 12th), since the people's
-# annoyance with the change is much higher than the power savings obtained....
-#
-# From Gwillim Law (2004-06-14):
-# http://www.lanacion.com.ar/04/06/10/de_609078.asp ...
-#     "The time change in Tierra del Fuego was a conflicted decision from
-#   the start.  The government had decreed that the measure would take
-#   effect on June 1, but a normative error forced the new time to begin
-#   three days earlier, from a Saturday to a Sunday....
-# Our understanding was that the change was originally scheduled to take place
-# on June 1 at 00:00 in Chubut, Santa Cruz, Tierra del Fuego (and some other
-# provinces).  Sunday was May 30, only two days earlier.  So the article
-# contains a contradiction.  I would give more credence to the Saturday/Sunday
-# date than the "three days earlier" phrase, and conclude that Tierra del
-# Fuego set its clocks back at 2004-05-30 00:00.
-#
-# From Steffen Thorsen (2004-10-05):
-# The previous law 7210 which changed the province of Mendoza's time zone
-# back in May have been modified slightly in a new law 7277, which set the
-# new end date to 2004-09-26 (original date was 2004-10-17).
-# http://www.gobernac.mendoza.gov.ar/boletin/pdf/20040924-27244-normas.pdf
-#
-# From Mariano Absatz (2004-10-05):
-# San Juan changed from UTC-03:00 to UTC-04:00 at midnight between
-# Sunday, May 30th and Monday, May 31st.  It changed back to UTC-03:00
-# at midnight between Saturday, July 24th and Sunday, July 25th....
-# http://www.sanjuan.gov.ar/prensa/archivo/000329.html
-# http://www.sanjuan.gov.ar/prensa/archivo/000426.html
-# http://www.sanjuan.gov.ar/prensa/archivo/000441.html
-
-# From Alex Krivenyshev (2008-01-17):
-# Here are articles that Argentina Province San Luis is planning to end DST
-# as earlier as upcoming Monday January 21, 2008 or February 2008:
-#
-# Provincia argentina retrasa reloj y marca diferencia con resto del pais
-# (Argentine Province delayed clock and mark difference with the rest of the
-# country)
-# <a href="http://cl.invertia.com/noticias/noticia.aspx?idNoticia=200801171849_EFE_ET4373&idtel">
-# http://cl.invertia.com/noticias/noticia.aspx?idNoticia=200801171849_EFE_ET4373&idtel
-# </a>
-#
-# Es inminente que en San Luis atrasen una hora los relojes
-# (It is imminent in San Luis clocks one hour delay)
-# <a href="http://www.lagaceta.com.ar/vernotae.asp?id_nota=253414">
-# http://www.lagaceta.com.ar/vernotae.asp?id_nota=253414
-# </a>
-#
-# <a href="http://www.worldtimezone.net/dst_news/dst_news_argentina02.html">
-# http://www.worldtimezone.net/dst_news/dst_news_argentina02.html
-# </a>
-
-# From Jesper Norgaard Welen (2008-01-18):
-# The page of the San Luis provincial government
-# <a href="http://www.sanluis.gov.ar/notas.asp?idCanal=0&id=22812">
-# http://www.sanluis.gov.ar/notas.asp?idCanal=0&id=22812
-# </a>
-# confirms what Alex Krivenyshev has earlier sent to the tz
-# emailing list about that San Luis plans to return to standard
-# time much earlier than the rest of the country. It also
-# confirms that upon request the provinces San Juan and Mendoza 
-# refused to follow San Luis in this change. 
-# 
-# The change is supposed to take place Monday the 21.st at 0:00
-# hours. As far as I understand it if this goes ahead, we need
-# a new timezone for San Luis (although there are also documented
-# independent changes in the southamerica file of San Luis in
-# 1990 and 1991 which has not been confirmed).
-
-# From Jesper Norgaard Welen (2008-01-25):
-# Unfortunately the below page has become defunct, about the San Luis
-# time change. Perhaps because it now is part of a group of pages "Most
-# important pages of 2008."
-#
-# You can use
-# <a href="http://www.sanluis.gov.ar/notas.asp?idCanal=8141&id=22834">
-# http://www.sanluis.gov.ar/notas.asp?idCanal=8141&id=22834
-# </a>
-# instead it seems. Or use "Buscador" from the main page of the San Luis
-# government, and fill in "huso" and click OK, and you will get 3 pages
-# from which the first one is identical to the above.
-
-# From Mariano Absatz (2008-01-28):
-# I can confirm that the Province of San Luis (and so far only that
-# province) decided to go back to UTC-3 effective midnight Jan 20th 2008
-# (that is, Monday 21st at 0:00 is the time the clocks were delayed back
-# 1 hour), and they intend to keep UTC-3 as their timezone all year round
-# (that is, unless they change their mind any minute now).
-#
-# So we'll have to add yet another city to 'southamerica' (I think San
-# Luis city is the mos populated city in the Province, so it'd be
-# America/Argentina/San_Luis... of course I can't remember if San Luis's
-# history of particular changes goes along with Mendoza or San Juan :-(
-# (I only remember not being able to collect hard facts about San Luis
-# back in 2004, when these provinces changed to UTC-4 for a few days, I
-# mailed them personally and never got an answer).
-
-# From Paul Eggert (2008-06-30):
-# Unless otherwise specified, data are from Shanks & Pottenger through 1992,
-# from the IATA otherwise.  As noted below, Shanks & Pottenger say that
-# America/Cordoba split into 6 subregions during 1991/1992, one of which
-# was America/San_Luis, but we haven't verified this yet so for now we'll
-# keep America/Cordoba a single region rather than splitting it into the
-# other 5 subregions.
-
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-#
-# Buenos Aires (BA), Capital Federal (CF),
-Zone America/Argentina/Buenos_Aires -3:53:48 - LMT 1894 Oct 31
-			-4:16:48 -	CMT	1920 May # Cordoba Mean Time
-			-4:00	-	ART	1930 Dec
-			-4:00	Arg	AR%sT	1969 Oct  5
-			-3:00	Arg	AR%sT	1999 Oct  3
-			-4:00	Arg	AR%sT	2000 Mar  3
-			-3:00	Arg	AR%sT
-#
-# Cordoba (CB), Santa Fe (SF), Entre Rios (ER), Corrientes (CN), Misiones (MN),
-# Chaco (CC), Formosa (FM), Santiago del Estero (SE)
-#
-# Shanks & Pottenger also make the following claims, which we haven't verified:
-# - Formosa switched to -3:00 on 1991-01-07.
-# - Misiones switched to -3:00 on 1990-12-29.
-# - Chaco switched to -3:00 on 1991-01-04.
-# - Santiago del Estero switched to -4:00 on 1991-04-01,
-#   then to -3:00 on 1991-04-26.
-#
-Zone America/Argentina/Cordoba -4:16:48 - LMT	1894 Oct 31
-			-4:16:48 -	CMT	1920 May
-			-4:00	-	ART	1930 Dec
-			-4:00	Arg	AR%sT	1969 Oct  5
-			-3:00	Arg	AR%sT	1991 Mar  3
-			-4:00	-	WART	1991 Oct 20
-			-3:00	Arg	AR%sT	1999 Oct  3
-			-4:00	Arg	AR%sT	2000 Mar  3
-			-3:00	Arg	AR%sT
-#
-# Salta (SA), La Pampa (LP), Neuquen (NQ), Rio Negro (RN)
-Zone America/Argentina/Salta -4:21:40 - LMT	1894 Oct 31
-			-4:16:48 -	CMT	1920 May
-			-4:00	-	ART	1930 Dec
-			-4:00	Arg	AR%sT	1969 Oct  5
-			-3:00	Arg	AR%sT	1991 Mar  3
-			-4:00	-	WART	1991 Oct 20
-			-3:00	Arg	AR%sT	1999 Oct  3
-			-4:00	Arg	AR%sT	2000 Mar  3
-			-3:00	Arg	AR%sT	2008 Oct 18
-			-3:00	-	ART
-#
-# Tucuman (TM)
-Zone America/Argentina/Tucuman -4:20:52 - LMT	1894 Oct 31
-			-4:16:48 -	CMT	1920 May
-			-4:00	-	ART	1930 Dec
-			-4:00	Arg	AR%sT	1969 Oct  5
-			-3:00	Arg	AR%sT	1991 Mar  3
-			-4:00	-	WART	1991 Oct 20
-			-3:00	Arg	AR%sT	1999 Oct  3
-			-4:00	Arg	AR%sT	2000 Mar  3
-			-3:00	-	ART	2004 Jun  1
-			-4:00	-	WART	2004 Jun 13
-			-3:00	Arg	AR%sT
-#
-# La Rioja (LR)
-Zone America/Argentina/La_Rioja -4:27:24 - LMT	1894 Oct 31
-			-4:16:48 -	CMT	1920 May
-			-4:00	-	ART	1930 Dec
-			-4:00	Arg	AR%sT	1969 Oct  5
-			-3:00	Arg	AR%sT	1991 Mar  1
-			-4:00	-	WART	1991 May  7
-			-3:00	Arg	AR%sT	1999 Oct  3
-			-4:00	Arg	AR%sT	2000 Mar  3
-			-3:00	-	ART	2004 Jun  1
-			-4:00	-	WART	2004 Jun 20
-			-3:00	Arg	AR%sT	2008 Oct 18
-			-3:00	-	ART
-#
-# San Juan (SJ)
-Zone America/Argentina/San_Juan -4:34:04 - LMT	1894 Oct 31
-			-4:16:48 -	CMT	1920 May
-			-4:00	-	ART	1930 Dec
-			-4:00	Arg	AR%sT	1969 Oct  5
-			-3:00	Arg	AR%sT	1991 Mar  1
-			-4:00	-	WART	1991 May  7
-			-3:00	Arg	AR%sT	1999 Oct  3
-			-4:00	Arg	AR%sT	2000 Mar  3
-			-3:00	-	ART	2004 May 31
-			-4:00	-	WART	2004 Jul 25
-			-3:00	Arg	AR%sT	2008 Oct 18
-			-3:00	-	ART
-#
-# Jujuy (JY)
-Zone America/Argentina/Jujuy -4:21:12 -	LMT	1894 Oct 31
-			-4:16:48 -	CMT	1920 May
-			-4:00	-	ART	1930 Dec
-			-4:00	Arg	AR%sT	1969 Oct  5
-			-3:00	Arg	AR%sT	1990 Mar  4
-			-4:00	-	WART	1990 Oct 28
-			-4:00	1:00	WARST	1991 Mar 17
-			-4:00	-	WART	1991 Oct  6
-			-3:00	1:00	ARST	1992
-			-3:00	Arg	AR%sT	1999 Oct  3
-			-4:00	Arg	AR%sT	2000 Mar  3
-			-3:00	Arg	AR%sT	2008 Oct 18
-			-3:00	-	ART
-#
-# Catamarca (CT), Chubut (CH)
-Zone America/Argentina/Catamarca -4:23:08 - LMT	1894 Oct 31
-			-4:16:48 -	CMT	1920 May
-			-4:00	-	ART	1930 Dec
-			-4:00	Arg	AR%sT	1969 Oct  5
-			-3:00	Arg	AR%sT	1991 Mar  3
-			-4:00	-	WART	1991 Oct 20
-			-3:00	Arg	AR%sT	1999 Oct  3
-			-4:00	Arg	AR%sT	2000 Mar  3
-			-3:00	-	ART	2004 Jun  1
-			-4:00	-	WART	2004 Jun 20
-			-3:00	Arg	AR%sT	2008 Oct 18
-			-3:00	-	ART
-#
-# Mendoza (MZ)
-Zone America/Argentina/Mendoza -4:35:16 - LMT	1894 Oct 31
-			-4:16:48 -	CMT	1920 May
-			-4:00	-	ART	1930 Dec
-			-4:00	Arg	AR%sT	1969 Oct  5
-			-3:00	Arg	AR%sT	1990 Mar  4
-			-4:00	-	WART	1990 Oct 15
-			-4:00	1:00	WARST	1991 Mar  1
-			-4:00	-	WART	1991 Oct 15
-			-4:00	1:00	WARST	1992 Mar  1
-			-4:00	-	WART	1992 Oct 18
-			-3:00	Arg	AR%sT	1999 Oct  3
-			-4:00	Arg	AR%sT	2000 Mar  3
-			-3:00	-	ART	2004 May 23
-			-4:00	-	WART	2004 Sep 26
-			-3:00	Arg	AR%sT	2008 Oct 18
-			-3:00	-	ART
-#
-# San Luis (SL)
-Zone America/Argentina/San_Luis -4:25:24 - LMT	1894 Oct 31
-			-4:16:48 -	CMT	1920 May
-			-4:00	-	ART	1930 Dec
-			-4:00	Arg	AR%sT	1969 Oct  5
-			-3:00	Arg	AR%sT	1990
-			-3:00	1:00	ARST	1990 Mar 14
-			-4:00	-	WART	1990 Oct 15
-			-4:00	1:00	WARST	1991 Mar  1
-			-4:00	-	WART	1991 Jun  1
-			-3:00	-	ART	1999 Oct  3
-			-4:00	1:00	WARST	2000 Mar  3
-			-3:00	-	ART	2004 May 31
-			-4:00	-	WART	2004 Jul 25
-			-3:00	Arg	AR%sT	2008 Jan 21
-			-3:00	-	ART
-#
-# Santa Cruz (SC)
-Zone America/Argentina/Rio_Gallegos -4:36:52 - LMT 1894 Oct 31
-			-4:16:48 -	CMT	1920 May # Cordoba Mean Time
-			-4:00	-	ART	1930 Dec
-			-4:00	Arg	AR%sT	1969 Oct  5
-			-3:00	Arg	AR%sT	1999 Oct  3
-			-4:00	Arg	AR%sT	2000 Mar  3
-			-3:00	-	ART	2004 Jun  1
-			-4:00	-	WART	2004 Jun 20
-			-3:00	Arg	AR%sT	2008 Oct 18
-			-3:00	-	ART
-#
-# Tierra del Fuego, Antartida e Islas del Atlantico Sur (TF)
-Zone America/Argentina/Ushuaia -4:33:12 - LMT 1894 Oct 31
-			-4:16:48 -	CMT	1920 May # Cordoba Mean Time
-			-4:00	-	ART	1930 Dec
-			-4:00	Arg	AR%sT	1969 Oct  5
-			-3:00	Arg	AR%sT	1999 Oct  3
-			-4:00	Arg	AR%sT	2000 Mar  3
-			-3:00	-	ART	2004 May 30
-			-4:00	-	WART	2004 Jun 20
-			-3:00	Arg	AR%sT	2008 Oct 18
-			-3:00	-	ART
-
-# Aruba
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Aruba	-4:40:24 -	LMT	1912 Feb 12	# Oranjestad
-			-4:30	-	ANT	1965 # Netherlands Antilles Time
-			-4:00	-	AST
-
-# Bolivia
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/La_Paz	-4:32:36 -	LMT	1890
-			-4:32:36 -	CMT	1931 Oct 15 # Calamarca MT
-			-4:32:36 1:00	BOST	1932 Mar 21 # Bolivia ST
-			-4:00	-	BOT	# Bolivia Time
-
-# Brazil
-
-# From Paul Eggert (1993-11-18):
-# The mayor of Rio recently attempted to change the time zone rules
-# just in his city, in order to leave more summer time for the tourist trade.
-# The rule change lasted only part of the day;
-# the federal government refused to follow the city's rules, and business
-# was in a chaos, so the mayor backed down that afternoon.
-
-# From IATA SSIM (1996-02):
-# _Only_ the following states in BR1 observe DST: Rio Grande do Sul (RS),
-# Santa Catarina (SC), Parana (PR), Sao Paulo (SP), Rio de Janeiro (RJ),
-# Espirito Santo (ES), Minas Gerais (MG), Bahia (BA), Goias (GO),
-# Distrito Federal (DF), Tocantins (TO), Sergipe [SE] and Alagoas [AL].
-# [The last three states are new to this issue of the IATA SSIM.]
-
-# From Gwillim Law (1996-10-07):
-# Geography, history (Tocantins was part of Goias until 1989), and other
-# sources of time zone information lead me to believe that AL, SE, and TO were
-# always in BR1, and so the only change was whether or not they observed DST....
-# The earliest issue of the SSIM I have is 2/91.  Each issue from then until
-# 9/95 says that DST is observed only in the ten states I quoted from 9/95,
-# along with Mato Grosso (MT) and Mato Grosso do Sul (MS), which are in BR2
-# (UTC-4)....  The other two time zones given for Brazil are BR3, which is
-# UTC-5, no DST, and applies only in the state of Acre (AC); and BR4, which is
-# UTC-2, and applies to Fernando de Noronha (formerly FN, but I believe it's
-# become part of the state of Pernambuco).  The boundary between BR1 and BR2
-# has never been clearly stated.  They've simply been called East and West.
-# However, some conclusions can be drawn from another IATA manual: the Airline
-# Coding Directory, which lists close to 400 airports in Brazil.  For each
-# airport it gives a time zone which is coded to the SSIM.  From that
-# information, I'm led to conclude that the states of Amapa (AP), Ceara (CE),
-# Maranhao (MA), Paraiba (PR), Pernambuco (PE), Piaui (PI), and Rio Grande do
-# Norte (RN), and the eastern part of Para (PA) are all in BR1 without DST.
-
-# From Marcos Tadeu (1998-09-27):
-# <a href="http://pcdsh01.on.br/verao1.html">
-# Brazilian official page
-# </a>
-
-# From Jesper Norgaard (2000-11-03):
-# [For an official list of which regions in Brazil use which time zones, see:]
-# http://pcdsh01.on.br/Fusbr.htm
-# http://pcdsh01.on.br/Fusbrhv.htm
-
-# From Celso Doria via David Madeo (2002-10-09):
-# The reason for the delay this year has to do with elections in Brazil.
-#
-# Unlike in the United States, elections in Brazil are 100% computerized and
-# the results are known almost immediately.  Yesterday, it was the first
-# round of the elections when 115 million Brazilians voted for President,
-# Governor, Senators, Federal Deputies, and State Deputies.  Nobody is
-# counting (or re-counting) votes anymore and we know there will be a second
-# round for the Presidency and also for some Governors.  The 2nd round will
-# take place on October 27th.
-#
-# The reason why the DST will only begin November 3rd is that the thousands
-# of electoral machines used cannot have their time changed, and since the
-# Constitution says the elections must begin at 8:00 AM and end at 5:00 PM,
-# the Government decided to postpone DST, instead of changing the Constitution
-# (maybe, for the next elections, it will be possible to change the clock)...
-
-# From Rodrigo Severo (2004-10-04):
-# It's just the biannual change made necessary by the much hyped, supposedly
-# modern Brazilian eletronic voting machines which, apparently, can't deal
-# with a time change between the first and the second rounds of the elections.
-
-# From Steffen Thorsen (2007-09-20):
-# Brazil will start DST on 2007-10-14 00:00 and end on 2008-02-17 00:00:
-# http://www.mme.gov.br/site/news/detail.do;jsessionid=BBA06811AFCAAC28F0285210913513DA?newsId=13975
-
-# From Paul Schulze (2008-06-24):
-# ...by law number 11.662 of April 24, 2008 (published in the "Diario
-# Oficial da Uniao"...) in Brazil there are changes in the timezones,
-# effective today (00:00am at June 24, 2008) as follows:
-#
-# a) The timezone UTC+5 is e[x]tinguished, with all the Acre state and the
-# part of the Amazonas state that had this timezone now being put to the
-# timezone UTC+4
-# b) The whole Para state now is put at timezone UTC+3, instead of just
-# part of it, as was before.
-#
-# This change follows a proposal of senator Tiao Viana of Acre state, that
-# proposed it due to concerns about open television channels displaying
-# programs inappropriate to youths in the states that had the timezone
-# UTC+5 too early in the night. In the occasion, some more corrections
-# were proposed, trying to unify the timezones of any given state. This
-# change modifies timezone rules defined in decree 2.784 of 18 June,
-# 1913.
-
-# From Rodrigo Severo (2008-06-24):
-# Just correcting the URL:
-# <a href="https://www.in.gov.br/imprensa/visualiza/index.jsp?jornal=3Ddo&secao=3D1&pagina=3D1&data=3D25/04/2008">
-# https://www.in.gov.br/imprensa/visualiza/index.jsp?jornal=3Ddo&secao=3D1&pagina=3D1&data=3D25/04/2008
-# </a>
-#
-# As a result of the above Decree I believe the America/Rio_Branco
-# timezone shall be modified from UTC-5 to UTC-4 and a new timezone shall
-# be created to represent the the west side of the Para State. I
-# suggest this new timezone be called Santarem as the most
-# important/populated city in the affected area.
-#
-# This new timezone would be the same as the Rio_Branco timezone up to
-# the 2008/06/24 change which would be to UTC-3 instead of UTC-4.
-
-# From Alex Krivenyshev (2008-06-24):
-# This is a quick reference page for New and Old Brazil Time Zones map.
-# <a href="http://www.worldtimezone.com/brazil-time-new-old.php">
-# http://www.worldtimezone.com/brazil-time-new-old.php
-# </a>
-#
-# - 4 time zones replaced by 3 time zones-eliminating time zone UTC- 05
-# (state Acre and the part of the Amazonas will be UTC/GMT- 04) - western
-# part of Par state is moving to one timezone UTC- 03 (from UTC -04).
-
-# From Paul Eggert (2002-10-10):
-# The official decrees referenced below are mostly taken from
-# <a href="http://pcdsh01.on.br/DecHV.html">
-# Decretos sobre o Horario de Verao no Brasil
-# </a>.
-
-# From Steffen Thorsen (2008-08-29):
-# As announced by the government and many newspapers in Brazil late
-# yesterday, Brazil will start DST on 2008-10-19 (need to change rule) and
-# it will end on 2009-02-15 (current rule for Brazil is fine). Based on
-# past years experience with the elections, there was a good chance that
-# the start was postponed to November, but it did not happen this year.
-#
-# It has not yet been posted to http://pcdsh01.on.br/DecHV.html
-#
-# An official page about it:
-# <a href="http://www.mme.gov.br/site/news/detail.do?newsId=16722">
-# http://www.mme.gov.br/site/news/detail.do?newsId=16722
-# </a>
-# Note that this link does not always work directly, but must be accessed
-# by going to
-# <a href="http://www.mme.gov.br/first">
-# http://www.mme.gov.br/first
-# </a>
-#
-# One example link that works directly:
-# <a href="http://jornale.com.br/index.php?option=com_content&task=view&id=13530&Itemid=54">
-# http://jornale.com.br/index.php?option=com_content&task=view&id=13530&Itemid=54
-# (Portuguese)
-# </a>
-#
-# We have a written a short article about it as well:
-# <a href="http://www.timeanddate.com/news/time/brazil-dst-2008-2009.html">
-# http://www.timeanddate.com/news/time/brazil-dst-2008-2009.html
-# </a>
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-# Decree <a href="http://pcdsh01.on.br/HV20466.htm">20,466</a> (1931-10-01)
-# Decree <a href="http://pcdsh01.on.br/HV21896.htm">21,896</a> (1932-01-10)
-Rule	Brazil	1931	only	-	Oct	 3	11:00	1:00	S
-Rule	Brazil	1932	1933	-	Apr	 1	 0:00	0	-
-Rule	Brazil	1932	only	-	Oct	 3	 0:00	1:00	S
-# Decree <a href="http://pcdsh01.on.br/HV23195.htm">23,195</a> (1933-10-10)
-# revoked DST.
-# Decree <a href="http://pcdsh01.on.br/HV27496.htm">27,496</a> (1949-11-24)
-# Decree <a href="http://pcdsh01.on.br/HV27998.htm">27,998</a> (1950-04-13)
-Rule	Brazil	1949	1952	-	Dec	 1	 0:00	1:00	S
-Rule	Brazil	1950	only	-	Apr	16	 1:00	0	-
-Rule	Brazil	1951	1952	-	Apr	 1	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/HV32308.htm">32,308</a> (1953-02-24)
-Rule	Brazil	1953	only	-	Mar	 1	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/HV34724.htm">34,724</a> (1953-11-30)
-# revoked DST.
-# Decree <a href="http://pcdsh01.on.br/HV52700.htm">52,700</a> (1963-10-18)
-# established DST from 1963-10-23 00:00 to 1964-02-29 00:00
-# in SP, RJ, GB, MG, ES, due to the prolongation of the drought.
-# Decree <a href="http://pcdsh01.on.br/HV53071.htm">53,071</a> (1963-12-03)
-# extended the above decree to all of the national territory on 12-09.
-Rule	Brazil	1963	only	-	Dec	 9	 0:00	1:00	S
-# Decree <a href="http://pcdsh01.on.br/HV53604.htm">53,604</a> (1964-02-25)
-# extended summer time by one day to 1964-03-01 00:00 (start of school).
-Rule	Brazil	1964	only	-	Mar	 1	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/HV55639.htm">55,639</a> (1965-01-27)
-Rule	Brazil	1965	only	-	Jan	31	 0:00	1:00	S
-Rule	Brazil	1965	only	-	Mar	31	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/HV57303.htm">57,303</a> (1965-11-22)
-Rule	Brazil	1965	only	-	Dec	 1	 0:00	1:00	S
-# Decree <a href="http://pcdsh01.on.br/HV57843.htm">57,843</a> (1966-02-18)
-Rule	Brazil	1966	1968	-	Mar	 1	 0:00	0	-
-Rule	Brazil	1966	1967	-	Nov	 1	 0:00	1:00	S
-# Decree <a href="http://pcdsh01.on.br/HV63429.htm">63,429</a> (1968-10-15)
-# revoked DST.
-# Decree <a href="http://pcdsh01.on.br/HV91698.htm">91,698</a> (1985-09-27)
-Rule	Brazil	1985	only	-	Nov	 2	 0:00	1:00	S
-# Decree 92,310 (1986-01-21)
-# Decree 92,463 (1986-03-13)
-Rule	Brazil	1986	only	-	Mar	15	 0:00	0	-
-# Decree 93,316 (1986-10-01)
-Rule	Brazil	1986	only	-	Oct	25	 0:00	1:00	S
-Rule	Brazil	1987	only	-	Feb	14	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/HV94922.htm">94,922</a> (1987-09-22)
-Rule	Brazil	1987	only	-	Oct	25	 0:00	1:00	S
-Rule	Brazil	1988	only	-	Feb	 7	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/HV96676.htm">96,676</a> (1988-09-12)
-# except for the states of AC, AM, PA, RR, RO, and AP (then a territory)
-Rule	Brazil	1988	only	-	Oct	16	 0:00	1:00	S
-Rule	Brazil	1989	only	-	Jan	29	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/HV98077.htm">98,077</a> (1989-08-21)
-# with the same exceptions
-Rule	Brazil	1989	only	-	Oct	15	 0:00	1:00	S
-Rule	Brazil	1990	only	-	Feb	11	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/HV99530.htm">99,530</a> (1990-09-17)
-# adopted by RS, SC, PR, SP, RJ, ES, MG, GO, MS, DF.
-# Decree 99,629 (1990-10-19) adds BA, MT.
-Rule	Brazil	1990	only	-	Oct	21	 0:00	1:00	S
-Rule	Brazil	1991	only	-	Feb	17	 0:00	0	-
-# <a href="http://pcdsh01.on.br/HV1991.htm">Unnumbered decree</a> (1991-09-25)
-# adopted by RS, SC, PR, SP, RJ, ES, MG, BA, GO, MT, MS, DF.
-Rule	Brazil	1991	only	-	Oct	20	 0:00	1:00	S
-Rule	Brazil	1992	only	-	Feb	 9	 0:00	0	-
-# <a href="http://pcdsh01.on.br/HV1992.htm">Unnumbered decree</a> (1992-10-16)
-# adopted by same states.
-Rule	Brazil	1992	only	-	Oct	25	 0:00	1:00	S
-Rule	Brazil	1993	only	-	Jan	31	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/HV942.htm">942</a> (1993-09-28)
-# adopted by same states, plus AM.
-# Decree <a href="http://pcdsh01.on.br/HV1252.htm">1,252</a> (1994-09-22;
-# web page corrected 2004-01-07) adopted by same states, minus AM.
-# Decree <a href="http://pcdsh01.on.br/HV1636.htm">1,636</a> (1995-09-14)
-# adopted by same states, plus MT and TO.
-# Decree <a href="http://pcdsh01.on.br/HV1674.htm">1,674</a> (1995-10-13)
-# adds AL, SE.
-Rule	Brazil	1993	1995	-	Oct	Sun>=11	 0:00	1:00	S
-Rule	Brazil	1994	1995	-	Feb	Sun>=15	 0:00	0	-
-Rule	Brazil	1996	only	-	Feb	11	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/HV2000.htm">2,000</a> (1996-09-04)
-# adopted by same states, minus AL, SE.
-Rule	Brazil	1996	only	-	Oct	 6	 0:00	1:00	S
-Rule	Brazil	1997	only	-	Feb	16	 0:00	0	-
-# From Daniel C. Sobral (1998-02-12):
-# In 1997, the DS began on October 6. The stated reason was that
-# because international television networks ignored Brazil's policy on DS,
-# they bought the wrong times on satellite for coverage of Pope's visit.
-# This year, the ending date of DS was postponed to March 1
-# to help dealing with the shortages of electric power.
-#
-# Decree 2,317 (1997-09-04), adopted by same states.
-Rule	Brazil	1997	only	-	Oct	 6	 0:00	1:00	S
-# Decree <a href="http://pcdsh01.on.br/figuras/HV2495.JPG">2,495</a>
-# (1998-02-10)
-Rule	Brazil	1998	only	-	Mar	 1	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/figuras/Hv98.jpg">2,780</a> (1998-09-11)
-# adopted by the same states as before.
-Rule	Brazil	1998	only	-	Oct	11	 0:00	1:00	S
-Rule	Brazil	1999	only	-	Feb	21	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/figuras/HV3150.gif">3,150</a>
-# (1999-08-23) adopted by same states.
-# Decree <a href="http://pcdsh01.on.br/DecHV99.gif">3,188</a> (1999-09-30)
-# adds SE, AL, PB, PE, RN, CE, PI, MA and RR.
-Rule	Brazil	1999	only	-	Oct	 3	 0:00	1:00	S
-Rule	Brazil	2000	only	-	Feb	27	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/DEC3592.htm">3,592</a> (2000-09-06)
-# adopted by the same states as before.
-# Decree <a href="http://pcdsh01.on.br/Dec3630.jpg">3,630</a> (2000-10-13)
-# repeals DST in PE and RR, effective 2000-10-15 00:00.
-# Decree <a href="http://pcdsh01.on.br/Dec3632.jpg">3,632</a> (2000-10-17)
-# repeals DST in SE, AL, PB, RN, CE, PI and MA, effective 2000-10-22 00:00.
-# Decree <a href="http://pcdsh01.on.br/figuras/HV3916.gif">3,916</a>
-# (2001-09-13) reestablishes DST in AL, CE, MA, PB, PE, PI, RN, SE.
-Rule	Brazil	2000	2001	-	Oct	Sun>=8	 0:00	1:00	S
-Rule	Brazil	2001	2006	-	Feb	Sun>=15	 0:00	0	-
-# Decree 4,399 (2002-10-01) repeals DST in AL, CE, MA, PB, PE, PI, RN, SE.
-# <a href="http://www.presidencia.gov.br/CCIVIL/decreto/2002/D4399.htm">4,399</a>
-Rule	Brazil	2002	only	-	Nov	 3	 0:00	1:00	S
-# Decree 4,844 (2003-09-24; corrected 2003-09-26) repeals DST in BA, MT, TO.
-# <a href="http://www.presidencia.gov.br/CCIVIL/decreto/2003/D4844.htm">4,844</a>
-Rule	Brazil	2003	only	-	Oct	19	 0:00	1:00	S
-# Decree 5,223 (2004-10-01) reestablishes DST in MT.
-# <a href="http://www.planalto.gov.br/ccivil_03/_Ato2004-2006/2004/Decreto/D5223.htm">5,223</a>
-Rule	Brazil	2004	only	-	Nov	 2	 0:00	1:00	S
-# Decree <a href="http://pcdsh01.on.br/DecHV5539.gif">5,539</a> (2005-09-19),
-# adopted by the same states as before.
-Rule	Brazil	2005	only	-	Oct	16	 0:00	1:00	S
-# Decree <a href="http://pcdsh01.on.br/DecHV5920.gif">5,920</a> (2006-10-03),
-# adopted by the same states as before.
-Rule	Brazil	2006	only	-	Nov	 5	 0:00	1:00	S
-Rule	Brazil	2007	only	-	Feb	25	 0:00	0	-
-# Decree <a href="http://pcdsh01.on.br/DecHV6212.gif">6,212</a> (2007-09-26),
-# adopted by the same states as before.
-Rule	Brazil	2007	only	-	Oct	Sun>=8	 0:00	1:00	S
-# From Frederico A. C. Neves (2008-09-10):
-# Acording to this decree
-# <a href="http://www.planalto.gov.br/ccivil_03/_Ato2007-2010/2008/Decreto/D6558.htm">
-# http://www.planalto.gov.br/ccivil_03/_Ato2007-2010/2008/Decreto/D6558.htm
-# </a>
-# [t]he DST period in Brazil now on will be from the 3rd Oct Sunday to the
-# 3rd Feb Sunday. There is an exception on the return date when this is
-# the Carnival Sunday then the return date will be the next Sunday...
-Rule	Brazil	2008	max	-	Oct	Sun>=15	0:00	1:00	S
-Rule	Brazil	2008	2011	-	Feb	Sun>=15	0:00	0	-
-Rule	Brazil	2012	only	-	Feb	Sun>=22	0:00	0	-
-Rule	Brazil	2013	2014	-	Feb	Sun>=15	0:00	0	-
-Rule	Brazil	2015	only	-	Feb	Sun>=22	0:00	0	-
-Rule	Brazil	2016	2022	-	Feb	Sun>=15	0:00	0	-
-Rule	Brazil	2023	only	-	Feb	Sun>=22	0:00	0	-
-Rule	Brazil	2024	2025	-	Feb	Sun>=15	0:00	0	-
-Rule	Brazil	2026	only	-	Feb	Sun>=22	0:00	0	-
-Rule	Brazil	2027	2033	-	Feb	Sun>=15	0:00	0	-
-Rule	Brazil	2034	only	-	Feb	Sun>=22	0:00	0	-
-Rule	Brazil	2035	2036	-	Feb	Sun>=15	0:00	0	-
-Rule	Brazil	2037	only	-	Feb	Sun>=22	0:00	0	-
-# From Arthur David Olson (2008-09-29):
-# The next is wrong in some years but is better than nothing.
-Rule	Brazil	2038	max	-	Feb	Sun>=15	0:00	0	-
-
-# The latest ruleset listed above says that the following states observe DST:
-# DF, ES, GO, MG, MS, MT, PR, RJ, RS, SC, SP.
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-#
-# Fernando de Noronha (administratively part of PE)
-Zone America/Noronha	-2:09:40 -	LMT	1914
-			-2:00	Brazil	FN%sT	1990 Sep 17
-			-2:00	-	FNT	1999 Sep 30
-			-2:00	Brazil	FN%sT	2000 Oct 15
-			-2:00	-	FNT	2001 Sep 13
-			-2:00	Brazil	FN%sT	2002 Oct  1
-			-2:00	-	FNT
-# Other Atlantic islands have no permanent settlement.
-# These include Trindade and Martin Vaz (administratively part of ES),
-# Atol das Rocas (RN), and Penedos de Sao Pedro e Sao Paulo (PE).
-# Fernando de Noronha was a separate territory from 1942-09-02 to 1989-01-01;
-# it also included the Penedos.
-#
-# Amapa (AP), east Para (PA)
-# East Para includes Belem, Maraba, Serra Norte, and Sao Felix do Xingu.
-# The division between east and west Para is the river Xingu.
-# In the north a very small part from the river Javary (now Jari I guess,
-# the border with Amapa) to the Amazon, then to the Xingu.
-Zone America/Belem	-3:13:56 -	LMT	1914
-			-3:00	Brazil	BR%sT	1988 Sep 12
-			-3:00	-	BRT
-#
-# west Para (PA)
-# West Para includes Altamira, Oribidos, Prainha, Oriximina, and Santarem.
-Zone America/Santarem	-3:38:48 -	LMT	1914
-			-4:00	Brazil	AM%sT	1988 Sep 12
-			-4:00	-	AMT	2008 Jun 24 00:00
-			-3:00	-	BRT
-#
-# Maranhao (MA), Piaui (PI), Ceara (CE), Rio Grande do Norte (RN),
-# Paraiba (PB)
-Zone America/Fortaleza	-2:34:00 -	LMT	1914
-			-3:00	Brazil	BR%sT	1990 Sep 17
-			-3:00	-	BRT	1999 Sep 30
-			-3:00	Brazil	BR%sT	2000 Oct 22
-			-3:00	-	BRT	2001 Sep 13
-			-3:00	Brazil	BR%sT	2002 Oct  1
-			-3:00	-	BRT
-#
-# Pernambuco (PE) (except Atlantic islands)
-Zone America/Recife	-2:19:36 -	LMT	1914
-			-3:00	Brazil	BR%sT	1990 Sep 17
-			-3:00	-	BRT	1999 Sep 30
-			-3:00	Brazil	BR%sT	2000 Oct 15
-			-3:00	-	BRT	2001 Sep 13
-			-3:00	Brazil	BR%sT	2002 Oct  1
-			-3:00	-	BRT
-#
-# Tocantins (TO)
-Zone America/Araguaina	-3:12:48 -	LMT	1914
-			-3:00	Brazil	BR%sT	1990 Sep 17
-			-3:00	-	BRT	1995 Sep 14
-			-3:00	Brazil	BR%sT	2003 Sep 24
-			-3:00	-	BRT
-#
-# Alagoas (AL), Sergipe (SE)
-Zone America/Maceio	-2:22:52 -	LMT	1914
-			-3:00	Brazil	BR%sT	1990 Sep 17
-			-3:00	-	BRT	1995 Oct 13
-			-3:00	Brazil	BR%sT	1996 Sep  4
-			-3:00	-	BRT	1999 Sep 30
-			-3:00	Brazil	BR%sT	2000 Oct 22
-			-3:00	-	BRT	2001 Sep 13
-			-3:00	Brazil	BR%sT	2002 Oct  1
-			-3:00	-	BRT
-#
-# Bahia (BA)
-# There are too many Salvadors elsewhere, so use America/Bahia instead
-# of America/Salvador.
-Zone America/Bahia	-2:34:04 -	LMT	1914
-			-3:00	Brazil	BR%sT	2003 Sep 24
-			-3:00	-	BRT
-#
-# Goias (GO), Distrito Federal (DF), Minas Gerais (MG),
-# Espirito Santo (ES), Rio de Janeiro (RJ), Sao Paulo (SP), Parana (PR),
-# Santa Catarina (SC), Rio Grande do Sul (RS)
-Zone America/Sao_Paulo	-3:06:28 -	LMT	1914
-			-3:00	Brazil	BR%sT	1963 Oct 23 00:00
-			-3:00	1:00	BRST	1964
-			-3:00	Brazil	BR%sT
-#
-# Mato Grosso do Sul (MS)
-Zone America/Campo_Grande -3:38:28 -	LMT	1914
-			-4:00	Brazil	AM%sT
-#
-# Mato Grosso (MT)
-Zone America/Cuiaba	-3:44:20 -	LMT	1914
-			-4:00	Brazil	AM%sT	2003 Sep 24
-			-4:00	-	AMT	2004 Oct  1
-			-4:00	Brazil	AM%sT
-#
-# Rondonia (RO)
-Zone America/Porto_Velho -4:15:36 -	LMT	1914
-			-4:00	Brazil	AM%sT	1988 Sep 12
-			-4:00	-	AMT
-#
-# Roraima (RR)
-Zone America/Boa_Vista	-4:02:40 -	LMT	1914
-			-4:00	Brazil	AM%sT	1988 Sep 12
-			-4:00	-	AMT	1999 Sep 30
-			-4:00	Brazil	AM%sT	2000 Oct 15
-			-4:00	-	AMT
-#
-# east Amazonas (AM): Boca do Acre, Jutai, Manaus, Floriano Peixoto
-# The great circle line from Tabatinga to Porto Acre divides
-# east from west Amazonas.
-Zone America/Manaus	-4:00:04 -	LMT	1914
-			-4:00	Brazil	AM%sT	1988 Sep 12
-			-4:00	-	AMT	1993 Sep 28
-			-4:00	Brazil	AM%sT	1994 Sep 22
-			-4:00	-	AMT
-#
-# west Amazonas (AM): Atalaia do Norte, Boca do Maoco, Benjamin Constant,
-#	Eirunepe, Envira, Ipixuna
-Zone America/Eirunepe	-4:39:28 -	LMT	1914
-			-5:00	Brazil	AC%sT	1988 Sep 12
-			-5:00	-	ACT	1993 Sep 28
-			-5:00	Brazil	AC%sT	1994 Sep 22
-			-5:00	-	ACT	2008 Jun 24 00:00
-			-4:00	-	AMT
-#
-# Acre (AC)
-Zone America/Rio_Branco	-4:31:12 -	LMT	1914
-			-5:00	Brazil	AC%sT	1988 Sep 12
-			-5:00	-	ACT	2008 Jun 24 00:00
-			-4:00	-	AMT
-
-# Chile
-
-# From Eduardo Krell (1995-10-19):
-# The law says to switch to DST at midnight [24:00] on the second SATURDAY
-# of October....  The law is the same for March and October.
-# (1998-09-29):
-# Because of the drought this year, the government decided to go into
-# DST earlier (saturday 9/26 at 24:00). This is a one-time change only ...
-# (unless there's another dry season next year, I guess).
-
-# From Julio I. Pacheco Troncoso (1999-03-18):
-# Because of the same drought, the government decided to end DST later,
-# on April 3, (one-time change).
-
-# From Oscar van Vlijmen (2006-10-08):
-# http://www.horaoficial.cl/cambio.htm
-
-# From Jesper Norgaard Welen (2006-10-08):
-# I think that there are some obvious mistakes in the suggested link
-# from Oscar van Vlijmen,... for instance entry 66 says that GMT-4
-# ended 1990-09-12 while entry 67 only begins GMT-3 at 1990-09-15
-# (they should have been 1990-09-15 and 1990-09-16 respectively), but
-# anyhow it clears up some doubts too.
-
-# From Paul Eggert (2006-12-27):
-# The following data for Chile and America/Santiago are from
-# <http://www.horaoficial.cl/horaof.htm> (2006-09-20), transcribed by
-# Jesper Norgaard Welen.  The data for Pacific/Easter are from Shanks
-# & Pottenger, except with DST transitions after 1932 cloned from
-# America/Santiago.  The pre-1980 Pacific/Easter data are dubious,
-# but we have no other source.
-
-# From German Poo-Caaman~o (2008-03-03):
-# Due to drought, Chile extends Daylight Time in three weeks.  This
-# is one-time change (Saturday 3/29 at 24:00 for America/Santiago
-# and Saturday 3/29 at 22:00 for Pacific/Easter)
-# The Supreme Decree is located at 
-# <a href="http://www.shoa.cl/servicios/supremo316.pdf">
-# http://www.shoa.cl/servicios/supremo316.pdf
-# </a>
-# and the instructions for 2008 are located in:
-# <a href="http://www.horaoficial.cl/cambio.htm">
-# http://www.horaoficial.cl/cambio.htm
-# </a>.
-
-# From Jose Miguel Garrido (2008-03-05):
-# ...
-# You could see the announces of the change on 
-# <a href="http://www.shoa.cl/noticias/2008/04hora/hora.htm">
-# http://www.shoa.cl/noticias/2008/04hora/hora.htm
-# </a>.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Chile	1927	1932	-	Sep	 1	0:00	1:00	S
-Rule	Chile	1928	1932	-	Apr	 1	0:00	0	-
-Rule	Chile	1942	only	-	Jun	 1	4:00u	0	-
-Rule	Chile	1942	only	-	Aug	 1	5:00u	1:00	S
-Rule	Chile	1946	only	-	Jul	15	4:00u	1:00	S
-Rule	Chile	1946	only	-	Sep	 1	3:00u	0:00	-
-Rule	Chile	1947	only	-	Apr	 1	4:00u	0	-
-Rule	Chile	1968	only	-	Nov	 3	4:00u	1:00	S
-Rule	Chile	1969	only	-	Mar	30	3:00u	0	-
-Rule	Chile	1969	only	-	Nov	23	4:00u	1:00	S
-Rule	Chile	1970	only	-	Mar	29	3:00u	0	-
-Rule	Chile	1971	only	-	Mar	14	3:00u	0	-
-Rule	Chile	1970	1972	-	Oct	Sun>=9	4:00u	1:00	S
-Rule	Chile	1972	1986	-	Mar	Sun>=9	3:00u	0	-
-Rule	Chile	1973	only	-	Sep	30	4:00u	1:00	S
-Rule	Chile	1974	1987	-	Oct	Sun>=9	4:00u	1:00	S
-Rule	Chile	1987	only	-	Apr	12	3:00u	0	-
-Rule	Chile	1988	1989	-	Mar	Sun>=9	3:00u	0	-
-Rule	Chile	1988	only	-	Oct	Sun>=1	4:00u	1:00	S
-Rule	Chile	1989	only	-	Oct	Sun>=9	4:00u	1:00	S
-Rule	Chile	1990	only	-	Mar	18	3:00u	0	-
-Rule	Chile	1990	only	-	Sep	16	4:00u	1:00	S
-Rule	Chile	1991	1996	-	Mar	Sun>=9	3:00u	0	-
-Rule	Chile	1991	1997	-	Oct	Sun>=9	4:00u	1:00	S
-Rule	Chile	1997	only	-	Mar	30	3:00u	0	-
-Rule	Chile	1998	only	-	Mar	Sun>=9	3:00u	0	-
-Rule	Chile	1998	only	-	Sep	27	4:00u	1:00	S
-Rule	Chile	1999	only	-	Apr	 4	3:00u	0	-
-Rule	Chile	1999	max	-	Oct	Sun>=9	4:00u	1:00	S
-Rule	Chile	2000	2007	-	Mar	Sun>=9	3:00u	0	-
-# N.B.: the end of March 29 in Chile is March 30 in Universal time,
-# which is used below in specifying the transition.
-Rule	Chile	2008	only	-	Mar	30	3:00u	0	-
-Rule	Chile	2009	max	-	Mar	Sun>=9	3:00u	0	-
-# IATA SSIM anomalies: (1992-02) says 1992-03-14;
-# (1996-09) says 1998-03-08.  Ignore these.
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Santiago	-4:42:46 -	LMT	1890
-			-4:42:46 -	SMT	1910 	    # Santiago Mean Time
-			-5:00	-	CLT	1916 Jul  1 # Chile Time
-			-4:42:46 -	SMT	1918 Sep  1 # Santiago Mean Time
-			-4:00	-	CLT	1919 Jul  1 # Chile Time
-			-4:42:46 -	SMT	1927 Sep  1 # Santiago Mean Time
-			-5:00	Chile	CL%sT	1947 May 22 # Chile Time
-			-4:00	Chile	CL%sT
-Zone Pacific/Easter	-7:17:44 -	LMT	1890
-			-7:17:28 -	EMT	1932 Sep    # Easter Mean Time
-			-7:00	Chile	EAS%sT	1982 Mar 13 21:00 # Easter I Time
-			-6:00	Chile	EAS%sT
-#
-# Sala y Gomez Island is like Pacific/Easter.
-# Other Chilean locations, including Juan Fernandez Is, San Ambrosio,
-# San Felix, and Antarctic bases, are like America/Santiago.
-
-# Colombia
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	CO	1992	only	-	May	 3	0:00	1:00	S
-Rule	CO	1993	only	-	Apr	 4	0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Bogota	-4:56:20 -	LMT	1884 Mar 13
-			-4:56:20 -	BMT	1914 Nov 23 # Bogota Mean Time
-			-5:00	CO	CO%sT	# Colombia Time
-# Malpelo, Providencia, San Andres
-# no information; probably like America/Bogota
-
-# Curacao
-#
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger say that The Bottom and Philipsburg have been at
-# -4:00 since standard time was introduced on 1912-03-02; and that
-# Kralendijk and Rincon used Kralendijk Mean Time (-4:33:08) from
-# 1912-02-02 to 1965-01-01.  The former is dubious, since S&P also say
-# Saba Island has been like Curacao.
-# This all predates our 1970 cutoff, though.
-#
-# By July 2007 Curacao and St Maarten are planned to become
-# associated states within the Netherlands, much like Aruba;
-# Bonaire, Saba and St Eustatius would become directly part of the
-# Netherlands as Kingdom Islands.  This won't affect their time zones
-# though, as far as we know.
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Curacao	-4:35:44 -	LMT	1912 Feb 12	# Willemstad
-			-4:30	-	ANT	1965 # Netherlands Antilles Time
-			-4:00	-	AST
-
-# Ecuador
-#
-# From Paul Eggert (2007-03-04):
-# Apparently Ecuador had a failed experiment with DST in 1992.
-# <http://midena.gov.ec/content/view/1261/208/> (2007-02-27) and
-# <http://www.hoy.com.ec/NoticiaNue.asp?row_id=249856> (2006-11-06) both
-# talk about "hora Sixto".  Leave this alone for now, as we have no data.
-#
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Guayaquil	-5:19:20 -	LMT	1890
-			-5:14:00 -	QMT	1931 # Quito Mean Time
-			-5:00	-	ECT	     # Ecuador Time
-Zone Pacific/Galapagos	-5:58:24 -	LMT	1931 # Puerto Baquerizo Moreno
-			-5:00	-	ECT	1986
-			-6:00	-	GALT	     # Galapagos Time
-
-# Falklands
-
-# From Paul Eggert (2006-03-22):
-# Between 1990 and 2000 inclusive, Shanks & Pottenger and the IATA agree except
-# the IATA gives 1996-09-08.  Go with Shanks & Pottenger.
-
-# From Falkland Islands Government Office, London (2001-01-22)
-# via Jesper Norgaard:
-# ... the clocks revert back to Local Mean Time at 2 am on Sunday 15
-# April 2001 and advance one hour to summer time at 2 am on Sunday 2
-# September.  It is anticipated that the clocks will revert back at 2
-# am on Sunday 21 April 2002 and advance to summer time at 2 am on
-# Sunday 1 September.
-
-# From Rives McDow (2001-02-13):
-#
-# I have communicated several times with people there, and the last
-# time I had communications that was helpful was in 1998.  Here is
-# what was said then:
-#
-# "The general rule was that Stanley used daylight saving and the Camp
-# did not. However for various reasons many people in the Camp have
-# started to use daylight saving (known locally as 'Stanley Time')
-# There is no rule as to who uses daylight saving - it is a matter of
-# personal choice and so it is impossible to draw a map showing who
-# uses it and who does not. Any list would be out of date as soon as
-# it was produced. This year daylight saving ended on April 18/19th
-# and started again on September 12/13th.  I do not know what the rule
-# is, but can find out if you like.  We do not change at the same time
-# as UK or Chile."
-#
-# I did have in my notes that the rule was "Second Saturday in Sep at
-# 0:00 until third Saturday in Apr at 0:00".  I think that this does
-# not agree in some cases with Shanks; is this true?
-#
-# Also, there is no mention in the list that some areas in the
-# Falklands do not use DST.  I have found in my communications there
-# that these areas are on the western half of East Falkland and all of
-# West Falkland.  Stanley is the only place that consistently observes
-# DST.  Again, as in other places in the world, the farmers don't like
-# it.  West Falkland is almost entirely sheep farmers.
-#
-# I know one lady there that keeps a list of which farm keeps DST and
-# which doesn't each year.  She runs a shop in Stanley, and says that
-# the list changes each year.  She uses it to communicate to her
-# customers, catching them when they are home for lunch or dinner.
-
-# From Paul Eggert (2001-03-05):
-# For now, we'll just record the time in Stanley, since we have no
-# better info.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Falk	1937	1938	-	Sep	lastSun	0:00	1:00	S
-Rule	Falk	1938	1942	-	Mar	Sun>=19	0:00	0	-
-Rule	Falk	1939	only	-	Oct	1	0:00	1:00	S
-Rule	Falk	1940	1942	-	Sep	lastSun	0:00	1:00	S
-Rule	Falk	1943	only	-	Jan	1	0:00	0	-
-Rule	Falk	1983	only	-	Sep	lastSun	0:00	1:00	S
-Rule	Falk	1984	1985	-	Apr	lastSun	0:00	0	-
-Rule	Falk	1984	only	-	Sep	16	0:00	1:00	S
-Rule	Falk	1985	2000	-	Sep	Sun>=9	0:00	1:00	S
-Rule	Falk	1986	2000	-	Apr	Sun>=16	0:00	0	-
-Rule	Falk	2001	max	-	Apr	Sun>=15	2:00	0	-
-Rule	Falk	2001	max	-	Sep	Sun>=1	2:00	1:00	S
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Atlantic/Stanley	-3:51:24 -	LMT	1890
-			-3:51:24 -	SMT	1912 Mar 12  # Stanley Mean Time
-			-4:00	Falk	FK%sT	1983 May     # Falkland Is Time
-			-3:00	Falk	FK%sT	1985 Sep 15
-			-4:00	Falk	FK%sT
-
-# French Guiana
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Cayenne	-3:29:20 -	LMT	1911 Jul
-			-4:00	-	GFT	1967 Oct # French Guiana Time
-			-3:00	-	GFT
-
-# Guyana
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Guyana	-3:52:40 -	LMT	1915 Mar	# Georgetown
-			-3:45	-	GBGT	1966 May 26 # Br Guiana Time
-			-3:45	-	GYT	1975 Jul 31 # Guyana Time
-			-3:00	-	GYT	1991
-# IATA SSIM (1996-06) says -4:00.  Assume a 1991 switch.
-			-4:00	-	GYT
-
-# Paraguay
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger say that spring transitions are from 01:00 -> 02:00,
-# and autumn transitions are from 00:00 -> 23:00.  Go with pre-1999
-# editions of Shanks, and with the IATA, who say transitions occur at 00:00.
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Para	1975	1988	-	Oct	 1	0:00	1:00	S
-Rule	Para	1975	1978	-	Mar	 1	0:00	0	-
-Rule	Para	1979	1991	-	Apr	 1	0:00	0	-
-Rule	Para	1989	only	-	Oct	22	0:00	1:00	S
-Rule	Para	1990	only	-	Oct	 1	0:00	1:00	S
-Rule	Para	1991	only	-	Oct	 6	0:00	1:00	S
-Rule	Para	1992	only	-	Mar	 1	0:00	0	-
-Rule	Para	1992	only	-	Oct	 5	0:00	1:00	S
-Rule	Para	1993	only	-	Mar	31	0:00	0	-
-Rule	Para	1993	1995	-	Oct	 1	0:00	1:00	S
-Rule	Para	1994	1995	-	Feb	lastSun	0:00	0	-
-Rule	Para	1996	only	-	Mar	 1	0:00	0	-
-# IATA SSIM (2000-02) says 1999-10-10; ignore this for now.
-# From Steffen Thorsen (2000-10-02):
-# I have three independent reports that Paraguay changed to DST this Sunday
-# (10-01).
-#
-# Translated by Gwillim Law (2001-02-27) from
-# <a href="http://www.diarionoticias.com.py/011000/nacional/naciona1.htm">
-# Noticias, a daily paper in Asuncion, Paraguay (2000-10-01)
-# </a>:
-# Starting at 0:00 today, the clock will be set forward 60 minutes, in
-# fulfillment of Decree No. 7,273 of the Executive Power....  The time change
-# system has been operating for several years.  Formerly there was a separate
-# decree each year; the new law has the same effect, but permanently.  Every
-# year, the time will change on the first Sunday of October; likewise, the
-# clock will be set back on the first Sunday of March.
-#
-Rule	Para	1996	2001	-	Oct	Sun>=1	0:00	1:00	S
-# IATA SSIM (1997-09) says Mar 1; go with Shanks & Pottenger.
-Rule	Para	1997	only	-	Feb	lastSun	0:00	0	-
-# Shanks & Pottenger say 1999-02-28; IATA SSIM (1999-02) says 1999-02-27, but
-# (1999-09) reports no date; go with above sources and Gerd Knops (2001-02-27).
-Rule	Para	1998	2001	-	Mar	Sun>=1	0:00	0	-
-# From Rives McDow (2002-02-28):
-# A decree was issued in Paraguay (no. 16350) on 2002-02-26 that changed the
-# dst method to be from the first Sunday in September to the first Sunday in
-# April.
-Rule	Para	2002	2004	-	Apr	Sun>=1	0:00	0	-
-Rule	Para	2002	2003	-	Sep	Sun>=1	0:00	1:00	S
-#
-# From Jesper Norgaard Welen (2005-01-02):
-# There are several sources that claim that Paraguay made
-# a timezone rule change in autumn 2004.
-# From Steffen Thorsen (2005-01-05):
-# Decree 1,867 (2004-03-05)
-# From Carlos Raul Perasso via Jesper Norgaard Welen (2006-10-13)
-# <http://www.presidencia.gov.py/decretos/D1867.pdf>
-Rule	Para	2004	max	-	Oct	Sun>=15	0:00	1:00	S
-Rule	Para	2005	max	-	Mar	Sun>=8	0:00	0	-
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Asuncion	-3:50:40 -	LMT	1890
-			-3:50:40 -	AMT	1931 Oct 10 # Asuncion Mean Time
-			-4:00	-	PYT	1972 Oct # Paraguay Time
-			-3:00	-	PYT	1974 Apr
-			-4:00	Para	PY%sT
-
-# Peru
-#
-# <a href="news:xrGmb.39935$gA1.13896113@news4.srv.hcvlny.cv.net">
-# From Evelyn C. Leeper via Mark Brader (2003-10-26):</a>
-# When we were in Peru in 1985-1986, they apparently switched over
-# sometime between December 29 and January 3 while we were on the Amazon.
-#
-# From Paul Eggert (2006-03-22):
-# Shanks & Pottenger don't have this transition.  Assume 1986 was like 1987.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	Peru	1938	only	-	Jan	 1	0:00	1:00	S
-Rule	Peru	1938	only	-	Apr	 1	0:00	0	-
-Rule	Peru	1938	1939	-	Sep	lastSun	0:00	1:00	S
-Rule	Peru	1939	1940	-	Mar	Sun>=24	0:00	0	-
-Rule	Peru	1986	1987	-	Jan	 1	0:00	1:00	S
-Rule	Peru	1986	1987	-	Apr	 1	0:00	0	-
-Rule	Peru	1990	only	-	Jan	 1	0:00	1:00	S
-Rule	Peru	1990	only	-	Apr	 1	0:00	0	-
-# IATA is ambiguous for 1993/1995; go with Shanks & Pottenger.
-Rule	Peru	1994	only	-	Jan	 1	0:00	1:00	S
-Rule	Peru	1994	only	-	Apr	 1	0:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Lima	-5:08:12 -	LMT	1890
-			-5:08:36 -	LMT	1908 Jul 28 # Lima Mean Time?
-			-5:00	Peru	PE%sT	# Peru Time
-
-# South Georgia
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone Atlantic/South_Georgia -2:26:08 -	LMT	1890		# Grytviken
-			-2:00	-	GST	# South Georgia Time
-
-# South Sandwich Is
-# uninhabited; scientific personnel have wintered
-
-# Suriname
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Paramaribo	-3:40:40 -	LMT	1911
-			-3:40:52 -	PMT	1935     # Paramaribo Mean Time
-			-3:40:36 -	PMT	1945 Oct # The capital moved?
-			-3:30	-	NEGT	1975 Nov 20 # Dutch Guiana Time
-			-3:30	-	SRT	1984 Oct # Suriname Time
-			-3:00	-	SRT
-
-# Trinidad and Tobago
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Port_of_Spain -4:06:04 -	LMT	1912 Mar 2
-			-4:00	-	AST
-
-# Uruguay
-# From Paul Eggert (1993-11-18):
-# Uruguay wins the prize for the strangest peacetime manipulation of the rules.
-# From Shanks & Pottenger:
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-# Whitman gives 1923 Oct 1; go with Shanks & Pottenger.
-Rule	Uruguay	1923	only	-	Oct	 2	 0:00	0:30	HS
-Rule	Uruguay	1924	1926	-	Apr	 1	 0:00	0	-
-Rule	Uruguay	1924	1925	-	Oct	 1	 0:00	0:30	HS
-Rule	Uruguay	1933	1935	-	Oct	lastSun	 0:00	0:30	HS
-# Shanks & Pottenger give 1935 Apr 1 0:00 & 1936 Mar 30 0:00; go with Whitman.
-Rule	Uruguay	1934	1936	-	Mar	Sat>=25	23:30s	0	-
-Rule	Uruguay	1936	only	-	Nov	 1	 0:00	0:30	HS
-Rule	Uruguay	1937	1941	-	Mar	lastSun	 0:00	0	-
-# Whitman gives 1937 Oct 3; go with Shanks & Pottenger.
-Rule	Uruguay	1937	1940	-	Oct	lastSun	 0:00	0:30	HS
-# Whitman gives 1941 Oct 24 - 1942 Mar 27, 1942 Dec 14 - 1943 Apr 13,
-# and 1943 Apr 13 ``to present time''; go with Shanks & Pottenger.
-Rule	Uruguay	1941	only	-	Aug	 1	 0:00	0:30	HS
-Rule	Uruguay	1942	only	-	Jan	 1	 0:00	0	-
-Rule	Uruguay	1942	only	-	Dec	14	 0:00	1:00	S
-Rule	Uruguay	1943	only	-	Mar	14	 0:00	0	-
-Rule	Uruguay	1959	only	-	May	24	 0:00	1:00	S
-Rule	Uruguay	1959	only	-	Nov	15	 0:00	0	-
-Rule	Uruguay	1960	only	-	Jan	17	 0:00	1:00	S
-Rule	Uruguay	1960	only	-	Mar	 6	 0:00	0	-
-Rule	Uruguay	1965	1967	-	Apr	Sun>=1	 0:00	1:00	S
-Rule	Uruguay	1965	only	-	Sep	26	 0:00	0	-
-Rule	Uruguay	1966	1967	-	Oct	31	 0:00	0	-
-Rule	Uruguay	1968	1970	-	May	27	 0:00	0:30	HS
-Rule	Uruguay	1968	1970	-	Dec	 2	 0:00	0	-
-Rule	Uruguay	1972	only	-	Apr	24	 0:00	1:00	S
-Rule	Uruguay	1972	only	-	Aug	15	 0:00	0	-
-Rule	Uruguay	1974	only	-	Mar	10	 0:00	0:30	HS
-Rule	Uruguay	1974	only	-	Dec	22	 0:00	1:00	S
-Rule	Uruguay	1976	only	-	Oct	 1	 0:00	0	-
-Rule	Uruguay	1977	only	-	Dec	 4	 0:00	1:00	S
-Rule	Uruguay	1978	only	-	Apr	 1	 0:00	0	-
-Rule	Uruguay	1979	only	-	Oct	 1	 0:00	1:00	S
-Rule	Uruguay	1980	only	-	May	 1	 0:00	0	-
-Rule	Uruguay	1987	only	-	Dec	14	 0:00	1:00	S
-Rule	Uruguay	1988	only	-	Mar	14	 0:00	0	-
-Rule	Uruguay	1988	only	-	Dec	11	 0:00	1:00	S
-Rule	Uruguay	1989	only	-	Mar	12	 0:00	0	-
-Rule	Uruguay	1989	only	-	Oct	29	 0:00	1:00	S
-# Shanks & Pottenger say no DST was observed in 1990/1 and 1991/2,
-# and that 1992/3's DST was from 10-25 to 03-01.  Go with IATA.
-Rule	Uruguay	1990	1992	-	Mar	Sun>=1	 0:00	0	-
-Rule	Uruguay	1990	1991	-	Oct	Sun>=21	 0:00	1:00	S
-Rule	Uruguay	1992	only	-	Oct	18	 0:00	1:00	S
-Rule	Uruguay	1993	only	-	Feb	28	 0:00	0	-
-# From Eduardo Cota (2004-09-20):
-# The uruguayan government has decreed a change in the local time....
-# http://www.presidencia.gub.uy/decretos/2004091502.htm
-Rule	Uruguay	2004	only	-	Sep	19	 0:00	1:00	S
-# From Steffen Thorsen (2005-03-11):
-# Uruguay's DST was scheduled to end on Sunday, 2005-03-13, but in order to
-# save energy ... it was postponed two weeks....
-# http://www.presidencia.gub.uy/_Web/noticias/2005/03/2005031005.htm
-Rule	Uruguay	2005	only	-	Mar	27	 2:00	0	-
-# From Eduardo Cota (2005-09-27):
-# http://www.presidencia.gub.uy/_Web/decretos/2005/09/CM%20119_09%2009%202005_00001.PDF
-# This means that from 2005-10-09 at 02:00 local time, until 2006-03-12 at
-# 02:00 local time, official time in Uruguay will be at GMT -2.
-Rule	Uruguay	2005	only	-	Oct	 9	 2:00	1:00	S
-Rule	Uruguay	2006	only	-	Mar	12	 2:00	0	-
-# From Jesper Norgaard Welen (2006-09-06):
-# http://www.presidencia.gub.uy/_web/decretos/2006/09/CM%20210_08%2006%202006_00001.PDF
-Rule	Uruguay	2006	max	-	Oct	Sun>=1	 2:00	1:00	S
-Rule	Uruguay	2007	max	-	Mar	Sun>=8	 2:00	0	-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone America/Montevideo	-3:44:44 -	LMT	1898 Jun 28
-			-3:44:44 -	MMT	1920 May  1	# Montevideo MT
-			-3:30	Uruguay	UY%sT	1942 Dec 14	# Uruguay Time
-			-3:00	Uruguay	UY%sT
-
-# Venezuela
-#
-# From John Stainforth (2007-11-28):
-# ... the change for Venezuela originally expected for 2007-12-31 has
-# been brought forward to 2007-12-09.  The official announcement was
-# published today in the "Gaceta Oficial de la Republica Bolivariana
-# de Venezuela, numero 38.819" (official document for all laws or
-# resolution publication)
-# http://www.globovision.com/news.php?nid=72208
-
-# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
-Zone	America/Caracas	-4:27:44 -	LMT	1890
-			-4:27:40 -	CMT	1912 Feb 12 # Caracas Mean Time?
-			-4:30	-	VET	1965	     # Venezuela Time
-			-4:00	-	VET	2007 Dec  9 03:00
-			-4:30	-	VET
+# <pre>
+# @(#)southamerica	8.44
+# This file is in the public domain, so clarified as of
+# 2009-05-17 by Arthur David Olson.
+
+# This data is by no means authoritative; if you think you know better,
+# go ahead and edit the file (and please send any changes to
+# tz@elsie.nci.nih.gov for general use in the future).
+
+# From Paul Eggert (2006-03-22):
+# A good source for time zone historical data outside the U.S. is
+# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),
+# San Diego: ACS Publications, Inc. (2003).
+#
+# Gwillim Law writes that a good source
+# for recent time zone data is the International Air Transport
+# Association's Standard Schedules Information Manual (IATA SSIM),
+# published semiannually.  Law sent in several helpful summaries
+# of the IATA's data after 1990.
+#
+# Except where otherwise noted, Shanks & Pottenger is the source for
+# entries through 1990, and IATA SSIM is the source for entries afterwards.
+#
+# Earlier editions of these tables used the North American style (e.g. ARST and
+# ARDT for Argentine Standard and Daylight Time), but the following quote
+# suggests that it's better to use European style (e.g. ART and ARST).
+#	I suggest the use of _Summer time_ instead of the more cumbersome
+#	_daylight-saving time_.  _Summer time_ seems to be in general use
+#	in Europe and South America.
+#	-- E O Cutler, _New York Times_ (1937-02-14), quoted in
+#	H L Mencken, _The American Language: Supplement I_ (1960), p 466
+#
+# Earlier editions of these tables also used the North American style
+# for time zones in Brazil, but this was incorrect, as Brazilians say
+# "summer time".  Reinaldo Goulart, a Sao Paulo businessman active in
+# the railroad sector, writes (1999-07-06):
+#	The subject of time zones is currently a matter of discussion/debate in
+#	Brazil.  Let's say that "the Brasilia time" is considered the
+#	"official time" because Brasilia is the capital city.
+#	The other three time zones are called "Brasilia time "minus one" or
+#	"plus one" or "plus two".  As far as I know there is no such
+#	name/designation as "Eastern Time" or "Central Time".
+# So I invented the following (English-language) abbreviations for now.
+# Corrections are welcome!
+#		std	dst
+#	-2:00	FNT	FNST	Fernando de Noronha
+#	-3:00	BRT	BRST	Brasilia
+#	-4:00	AMT	AMST	Amazon
+#	-5:00	ACT	ACST	Acre
+
+###############################################################################
+
+###############################################################################
+
+# Argentina
+
+# From Bob Devine (1988-01-28):
+# Argentina: first Sunday in October to first Sunday in April since 1976.
+# Double Summer time from 1969 to 1974.  Switches at midnight.
+
+# From U. S. Naval Observatory (1988-01-199):
+# ARGENTINA           3 H BEHIND   UTC
+
+# From Hernan G. Otero (1995-06-26):
+# I am sending modifications to the Argentine time zone table...
+# AR was chosen because they are the ISO letters that represent Argentina.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Arg	1930	only	-	Dec	 1	0:00	1:00	S
+Rule	Arg	1931	only	-	Apr	 1	0:00	0	-
+Rule	Arg	1931	only	-	Oct	15	0:00	1:00	S
+Rule	Arg	1932	1940	-	Mar	 1	0:00	0	-
+Rule	Arg	1932	1939	-	Nov	 1	0:00	1:00	S
+Rule	Arg	1940	only	-	Jul	 1	0:00	1:00	S
+Rule	Arg	1941	only	-	Jun	15	0:00	0	-
+Rule	Arg	1941	only	-	Oct	15	0:00	1:00	S
+Rule	Arg	1943	only	-	Aug	 1	0:00	0	-
+Rule	Arg	1943	only	-	Oct	15	0:00	1:00	S
+Rule	Arg	1946	only	-	Mar	 1	0:00	0	-
+Rule	Arg	1946	only	-	Oct	 1	0:00	1:00	S
+Rule	Arg	1963	only	-	Oct	 1	0:00	0	-
+Rule	Arg	1963	only	-	Dec	15	0:00	1:00	S
+Rule	Arg	1964	1966	-	Mar	 1	0:00	0	-
+Rule	Arg	1964	1966	-	Oct	15	0:00	1:00	S
+Rule	Arg	1967	only	-	Apr	 2	0:00	0	-
+Rule	Arg	1967	1968	-	Oct	Sun>=1	0:00	1:00	S
+Rule	Arg	1968	1969	-	Apr	Sun>=1	0:00	0	-
+Rule	Arg	1974	only	-	Jan	23	0:00	1:00	S
+Rule	Arg	1974	only	-	May	 1	0:00	0	-
+Rule	Arg	1988	only	-	Dec	 1	0:00	1:00	S
+#
+# From Hernan G. Otero (1995-06-26):
+# These corrections were contributed by InterSoft Argentina S.A.,
+# obtaining the data from the:
+# Talleres de Hidrografia Naval Argentina
+# (Argentine Naval Hydrography Institute)
+Rule	Arg	1989	1993	-	Mar	Sun>=1	0:00	0	-
+Rule	Arg	1989	1992	-	Oct	Sun>=15	0:00	1:00	S
+#
+# From Hernan G. Otero (1995-06-26):
+# From this moment on, the law that mandated the daylight saving
+# time corrections was derogated and no more modifications
+# to the time zones (for daylight saving) are now made.
+#
+# From Rives McDow (2000-01-10):
+# On October 3, 1999, 0:00 local, Argentina implemented daylight savings time,
+# which did not result in the switch of a time zone, as they stayed 9 hours
+# from the International Date Line.
+Rule	Arg	1999	only	-	Oct	Sun>=1	0:00	1:00	S
+# From Paul Eggert (2007-12-28):
+# DST was set to expire on March 5, not March 3, but since it was converted
+# to standard time on March 3 it's more convenient for us to pretend that
+# it ended on March 3.
+Rule	Arg	2000	only	-	Mar	3	0:00	0	-
+#
+# From Peter Gradelski via Steffen Thorsen (2000-03-01):
+# We just checked with our Sao Paulo office and they say the government of
+# Argentina decided not to become one of the countries that go on or off DST.
+# So Buenos Aires should be -3 hours from GMT at all times.
+#
+# From Fabian L. Arce Jofre (2000-04-04):
+# The law that claimed DST for Argentina was derogated by President Fernando
+# de la Rua on March 2, 2000, because it would make people spend more energy
+# in the winter time, rather than less.  The change took effect on March 3.
+#
+# From Mariano Absatz (2001-06-06):
+# one of the major newspapers here in Argentina said that the 1999
+# Timezone Law (which never was effectively applied) will (would?) be
+# in effect.... The article is at
+# http://ar.clarin.com/diario/2001-06-06/e-01701.htm
+# ... The Law itself is "Ley No 25155", sanctioned on 1999-08-25, enacted
+# 1999-09-17, and published 1999-09-21.  The official publication is at:
+# http://www.boletin.jus.gov.ar/BON/Primera/1999/09-Septiembre/21/PDF/BO21-09-99LEG.PDF
+# Regretfully, you have to subscribe (and pay) for the on-line version....
+#
+# (2001-06-12):
+# the timezone for Argentina will not change next Sunday.
+# Apparently it will do so on Sunday 24th....
+# http://ar.clarin.com/diario/2001-06-12/s-03501.htm
+#
+# (2001-06-25):
+# Last Friday (yes, the last working day before the date of the change), the
+# Senate annulled the 1999 law that introduced the changes later postponed.
+# http://www.clarin.com.ar/diario/2001-06-22/s-03601.htm
+# It remains the vote of the Deputies..., but it will be the same....
+# This kind of things had always been done this way in Argentina.
+# We are still -03:00 all year round in all of the country.
+#
+# From Steffen Thorsen (2007-12-21):
+# A user (Leonardo Chaim) reported that Argentina will adopt DST....
+# all of the country (all Zone-entries) are affected.  News reports like
+# http://www.lanacion.com.ar/opinion/nota.asp?nota_id=973037 indicate
+# that Argentina will use DST next year as well, from October to
+# March, although exact rules are not given.
+#
+# From Jesper Norgaard Welen (2007-12-26)
+# The last hurdle of Argentina DST is over, the proposal was approved in
+# the lower chamber too (Deputados) with a vote 192 for and 2 against.
+# By the way thanks to Mariano Absatz and Daniel Mario Vega for the link to
+# the original scanned proposal, where the dates and the zero hours are
+# clear and unambiguous...This is the article about final approval:
+# <a href="http://www.lanacion.com.ar/politica/nota.asp?nota_id=973996">
+# http://www.lanacion.com.ar/politica/nota.asp?nota_id=973996
+# </a>
+#
+# From Paul Eggert (2007-12-22):
+# For dates after mid-2008, the following rules are my guesses and
+# are quite possibly wrong, but are more likely than no DST at all.
+
+# From Alexander Krivenyshev (2008-09-05):
+# As per message from Carlos Alberto Fonseca Arauz (Nicaragua),
+# Argentina will start DST on Sunday October 19, 2008.
+#
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_argentina03.html">
+# http://www.worldtimezone.com/dst_news/dst_news_argentina03.html
+# </a>
+# OR
+# <a href="http://www.impulsobaires.com.ar/nota.php?id=57832 (in spanish)">
+# http://www.impulsobaires.com.ar/nota.php?id=57832 (in spanish)
+# </a>
+
+# From Rodrigo Severo (2008-10-06):
+# Here is some info available at a Gentoo bug related to TZ on Argentina's DST:
+# ...
+# ------- Comment #1 from [jmdocile]  2008-10-06 16:28 0000 -------
+# Hi, there is a problem with timezone-data-2008e and maybe with
+# timezone-data-2008f
+# Argentinian law [Number] 25.155 is no longer valid.
+# <a href="http://www.infoleg.gov.ar/infolegInternet/anexos/60000-64999/60036/norma.htm">
+# http://www.infoleg.gov.ar/infolegInternet/anexos/60000-64999/60036/norma.htm
+# </a>
+# The new one is law [Number] 26.350
+# <a href="http://www.infoleg.gov.ar/infolegInternet/anexos/135000-139999/136191/norma.htm">
+# http://www.infoleg.gov.ar/infolegInternet/anexos/135000-139999/136191/norma.htm
+# </a>
+# So there is no summer time in Argentina for now.
+
+# From Mariano Absatz (2008-10-20):
+# Decree 1693/2008 applies Law 26.350 for the summer 2008/2009 establishing DST in Argentina
+# From 2008-10-19 until 2009-03-15
+# <a href="http://www.boletinoficial.gov.ar/Bora.Portal/CustomControls/PdfContent.aspx?fp=16102008&pi=3&pf=4&s=0&sec=01">
+# http://www.boletinoficial.gov.ar/Bora.Portal/CustomControls/PdfContent.aspx?fp=16102008&pi=3&pf=4&s=0&sec=01
+# </a>
+#
+# Decree 1705/2008 excepting 12 Provinces from applying DST in the summer 2008/2009:
+# Catamarca, La Rioja, Mendoza, Salta, San Juan, San Luis, La Pampa, Neuquen, Rio Negro, Chubut, Santa Cruz
+# and Tierra del Fuego
+# <a href="http://www.boletinoficial.gov.ar/Bora.Portal/CustomControls/PdfContent.aspx?fp=17102008&pi=1&pf=1&s=0&sec=01">
+# http://www.boletinoficial.gov.ar/Bora.Portal/CustomControls/PdfContent.aspx?fp=17102008&pi=1&pf=1&s=0&sec=01
+# </a>
+#
+# Press release 235 dated Saturday October 18th, from the Government of the Province of Jujuy saying
+# it will not apply DST either (even when it was not included in Decree 1705/2008)
+# <a href="http://www.jujuy.gov.ar/index2/partes_prensa/18_10_08/235-181008.doc">
+# http://www.jujuy.gov.ar/index2/partes_prensa/18_10_08/235-181008.doc
+# </a>
+
+# From fullinet (2009-10-18):
+# As announced in
+# <a hef="http://www.argentina.gob.ar/argentina/portal/paginas.dhtml?pagina=356">
+# http://www.argentina.gob.ar/argentina/portal/paginas.dhtml?pagina=356
+# </a>
+# (an official .gob.ar) under title: "Sin Cambio de Hora" (english: "No hour change")
+#
+# "Por el momento, el Gobierno Nacional resolvio no modificar la hora
+# oficial, decision que estaba en estudio para su implementacion el
+# domingo 18 de octubre. Desde el Ministerio de Planificacion se anuncio
+# que la Argentina hoy, en estas condiciones meteorologicas, no necesita
+# la modificacion del huso horario, ya que 2009 nos encuentra con
+# crecimiento en la produccion y distribucion energetica."
+
+Rule	Arg	2007	only	-	Dec	30	0:00	1:00	S
+Rule	Arg	2008	2009	-	Mar	Sun>=15	0:00	0	-
+Rule	Arg	2008	only	-	Oct	Sun>=15	0:00	1:00	S
+ 
+# From Mariano Absatz (2004-05-21):
+# Today it was officially published that the Province of Mendoza is changing
+# its timezone this winter... starting tomorrow night....
+# http://www.gobernac.mendoza.gov.ar/boletin/pdf/20040521-27158-normas.pdf
+# From Paul Eggert (2004-05-24):
+# It's Law No. 7,210.  This change is due to a public power emergency, so for
+# now we'll assume it's for this year only.
+#
+# From Paul Eggert (2006-03-22):
+# <a href="http://www.spicasc.net/horvera.html">
+# Hora de verano para la Republica Argentina (2003-06-08)
+# </a> says that standard time in Argentina from 1894-10-31
+# to 1920-05-01 was -4:16:48.25.  Go with this more-precise value
+# over Shanks & Pottenger.
+#
+# From Mariano Absatz (2004-06-05):
+# These media articles from a major newspaper mostly cover the current state:
+# http://www.lanacion.com.ar/04/05/27/de_604825.asp
+# http://www.lanacion.com.ar/04/05/28/de_605203.asp
+#
+# The following eight (8) provinces pulled clocks back to UTC-04:00 at
+# midnight Monday May 31st. (that is, the night between 05/31 and 06/01).
+# Apparently, all nine provinces would go back to UTC-03:00 at the same
+# time in October 17th.
+#
+# Catamarca, Chubut, La Rioja, San Juan, San Luis, Santa Cruz,
+# Tierra del Fuego, Tucuman.
+#
+# From Mariano Absatz (2004-06-14):
+# ... this weekend, the Province of Tucuman decided it'd go back to UTC-03:00
+# yesterday midnight (that is, at 24:00 Saturday 12th), since the people's
+# annoyance with the change is much higher than the power savings obtained....
+#
+# From Gwillim Law (2004-06-14):
+# http://www.lanacion.com.ar/04/06/10/de_609078.asp ...
+#     "The time change in Tierra del Fuego was a conflicted decision from
+#   the start.  The government had decreed that the measure would take
+#   effect on June 1, but a normative error forced the new time to begin
+#   three days earlier, from a Saturday to a Sunday....
+# Our understanding was that the change was originally scheduled to take place
+# on June 1 at 00:00 in Chubut, Santa Cruz, Tierra del Fuego (and some other
+# provinces).  Sunday was May 30, only two days earlier.  So the article
+# contains a contradiction.  I would give more credence to the Saturday/Sunday
+# date than the "three days earlier" phrase, and conclude that Tierra del
+# Fuego set its clocks back at 2004-05-30 00:00.
+#
+# From Steffen Thorsen (2004-10-05):
+# The previous law 7210 which changed the province of Mendoza's time zone
+# back in May have been modified slightly in a new law 7277, which set the
+# new end date to 2004-09-26 (original date was 2004-10-17).
+# http://www.gobernac.mendoza.gov.ar/boletin/pdf/20040924-27244-normas.pdf
+#
+# From Mariano Absatz (2004-10-05):
+# San Juan changed from UTC-03:00 to UTC-04:00 at midnight between
+# Sunday, May 30th and Monday, May 31st.  It changed back to UTC-03:00
+# at midnight between Saturday, July 24th and Sunday, July 25th....
+# http://www.sanjuan.gov.ar/prensa/archivo/000329.html
+# http://www.sanjuan.gov.ar/prensa/archivo/000426.html
+# http://www.sanjuan.gov.ar/prensa/archivo/000441.html
+
+# From Alex Krivenyshev (2008-01-17):
+# Here are articles that Argentina Province San Luis is planning to end DST
+# as earlier as upcoming Monday January 21, 2008 or February 2008:
+#
+# Provincia argentina retrasa reloj y marca diferencia con resto del pais
+# (Argentine Province delayed clock and mark difference with the rest of the
+# country)
+# <a href="http://cl.invertia.com/noticias/noticia.aspx?idNoticia=200801171849_EFE_ET4373&idtel">
+# http://cl.invertia.com/noticias/noticia.aspx?idNoticia=200801171849_EFE_ET4373&idtel
+# </a>
+#
+# Es inminente que en San Luis atrasen una hora los relojes
+# (It is imminent in San Luis clocks one hour delay)
+# <a href="http://www.lagaceta.com.ar/vernotae.asp?id_nota=253414">
+# http://www.lagaceta.com.ar/vernotae.asp?id_nota=253414
+# </a>
+#
+# <a href="http://www.worldtimezone.net/dst_news/dst_news_argentina02.html">
+# http://www.worldtimezone.net/dst_news/dst_news_argentina02.html
+# </a>
+
+# From Jesper Norgaard Welen (2008-01-18):
+# The page of the San Luis provincial government
+# <a href="http://www.sanluis.gov.ar/notas.asp?idCanal=0&id=22812">
+# http://www.sanluis.gov.ar/notas.asp?idCanal=0&id=22812
+# </a>
+# confirms what Alex Krivenyshev has earlier sent to the tz
+# emailing list about that San Luis plans to return to standard
+# time much earlier than the rest of the country. It also
+# confirms that upon request the provinces San Juan and Mendoza 
+# refused to follow San Luis in this change. 
+# 
+# The change is supposed to take place Monday the 21.st at 0:00
+# hours. As far as I understand it if this goes ahead, we need
+# a new timezone for San Luis (although there are also documented
+# independent changes in the southamerica file of San Luis in
+# 1990 and 1991 which has not been confirmed).
+
+# From Jesper Norgaard Welen (2008-01-25):
+# Unfortunately the below page has become defunct, about the San Luis
+# time change. Perhaps because it now is part of a group of pages "Most
+# important pages of 2008."
+#
+# You can use
+# <a href="http://www.sanluis.gov.ar/notas.asp?idCanal=8141&id=22834">
+# http://www.sanluis.gov.ar/notas.asp?idCanal=8141&id=22834
+# </a>
+# instead it seems. Or use "Buscador" from the main page of the San Luis
+# government, and fill in "huso" and click OK, and you will get 3 pages
+# from which the first one is identical to the above.
+
+# From Mariano Absatz (2008-01-28):
+# I can confirm that the Province of San Luis (and so far only that
+# province) decided to go back to UTC-3 effective midnight Jan 20th 2008
+# (that is, Monday 21st at 0:00 is the time the clocks were delayed back
+# 1 hour), and they intend to keep UTC-3 as their timezone all year round
+# (that is, unless they change their mind any minute now).
+#
+# So we'll have to add yet another city to 'southamerica' (I think San
+# Luis city is the mos populated city in the Province, so it'd be
+# America/Argentina/San_Luis... of course I can't remember if San Luis's
+# history of particular changes goes along with Mendoza or San Juan :-(
+# (I only remember not being able to collect hard facts about San Luis
+# back in 2004, when these provinces changed to UTC-4 for a few days, I
+# mailed them personally and never got an answer).
+
+# From Paul Eggert (2008-06-30):
+# Unless otherwise specified, data are from Shanks & Pottenger through 1992,
+# from the IATA otherwise.  As noted below, Shanks & Pottenger say that
+# America/Cordoba split into 6 subregions during 1991/1992, one of which
+# was America/San_Luis, but we haven't verified this yet so for now we'll
+# keep America/Cordoba a single region rather than splitting it into the
+# other 5 subregions.
+
+# From Mariano Absatz (2009-03-13):
+# Yesterday (with our usual 2-day notice) the Province of San Luis
+# decided that next Sunday instead of "staying" @utc-03:00 they will go
+# to utc-04:00 until the second Saturday in October...
+#
+# The press release is at
+# <a href="http://www.sanluis.gov.ar/SL/Paginas/NoticiaDetalle.asp?TemaId=1&InfoPrensaId=3102">
+# http://www.sanluis.gov.ar/SL/Paginas/NoticiaDetalle.asp?TemaId=1&InfoPrensaId=3102
+# </a>
+# (I couldn't find the decree, but
+# <a href="http://www.sanluis.gov.ar">
+# www.sanluis.gov.ar
+# <a/>
+# is the official page for the Province Government).
+#
+# There's also a note in only one of the major national papers (La Naci�n) at
+# <a href="http://www.lanacion.com.ar/nota.asp?nota_id=1107912">
+# http://www.lanacion.com.ar/nota.asp?nota_id=1107912
+# </a>
+# 
+# The press release says:
+#  (...) anunci� que el pr�ximo domingo a las 00:00 los puntanos deber�n
+# atrasar una hora sus relojes.
+#
+# A partir de entonces, San Luis establecer� el huso horario propio de
+# la Provincia. De esta manera, durante el periodo del calendario anual
+# 2009, el cambio horario quedar� comprendido entre las 00:00 del tercer
+# domingo de marzo y las 24:00 del segundo s�bado de octubre.
+# Quick&dirty translation
+# (...) announced that next Sunday, at 00:00, Puntanos (the San Luis
+# inhabitants) will have to turn back one hour their clocks
+#
+# Since then, San Luis will establish its own Province timezone. Thus,
+# during 2009, this timezone change will run from 00:00 the third Sunday
+# in March until 24:00 of the second Saturday in October.
+
+# From Mariano Absatz (2009-10-16):
+# ...the Province of San Luis is a case in itself.
+#
+# The Law at
+# <a href="http://www.diputadossanluis.gov.ar/diputadosasp/paginas/verNorma.asp?NormaID=276>"
+# http://www.diputadossanluis.gov.ar/diputadosasp/paginas/verNorma.asp?NormaID=276
+# </a>
+# is ambiguous because establishes a calendar from the 2nd Sunday in
+# October at 0:00 thru the 2nd Saturday in March at 24:00 and the
+# complement of that starting on the 2nd Sunday of March at 0:00 and
+# ending on the 2nd Saturday of March at 24:00.
+#
+# This clearly breaks every time the 1st of March or October is a Sunday.
+#
+# IMHO, the "spirit of the Law" is to make the changes at 0:00 on the 2nd
+# Sunday of October and March.
+#
+# The problem is that the changes in the rest of the Provinces that did
+# change in 2007/2008, were made according to the Federal Law and Decrees
+# that did so on the 3rd Sunday of October and March.
+#
+# In fact, San Luis actually switched from UTC-4 to UTC-3 last Sunday
+# (October 11th) at 0:00.
+#
+# So I guess a new set of rules, besides "Arg", must be made and the last
+# America/Argentina/San_Luis entries should change to use these...
+#
+# I'm enclosing a patch that does what I say... regretfully, the San Luis
+# timezone must be called "WART/WARST" even when most of the time (like,
+# right now) WARST == ART... that is, since last Sunday, all the country
+# is using UTC-3, but in my patch, San Luis calls it "WARST" and the rest
+# of the country calls it "ART".
+# ...
+
+# From Alexander Krivenyshev (2010-04-09):
+# According to news reports from El Diario de la Republica Province San
+# Luis, Argentina (standard time UTC-04) will keep Daylight Saving Time
+# after April 11, 2010--will continue to have same time as rest of
+# Argentina (UTC-3) (no DST).
+#
+# Confirmaron la pr&oacute;rroga del huso horario de verano (Spanish)
+# <a href="http://www.eldiariodelarepublica.com/index.php?option=com_content&task=view&id=29383&Itemid=9">
+# http://www.eldiariodelarepublica.com/index.php?option=com_content&task=view&id=29383&Itemid=9
+# </a>
+# or (some English translation):
+# <a href="http://www.worldtimezone.com/dst_news/dst_news_argentina08.html">
+# http://www.worldtimezone.com/dst_news/dst_news_argentina08.html
+# </a>
+
+# From Mariano Absatz (2010-04-12):
+# yes...I can confirm this...and given that San Luis keeps calling
+# UTC-03:00 "summer time", we should't just let San Luis go back to "Arg"
+# rules...San Luis is still using "Western ARgentina Time" and it got
+# stuck on Summer daylight savings time even though the summer is over.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+#
+# Buenos Aires (BA), Capital Federal (CF),
+Zone America/Argentina/Buenos_Aires -3:53:48 - LMT 1894 Oct 31
+			-4:16:48 -	CMT	1920 May # Cordoba Mean Time
+			-4:00	-	ART	1930 Dec
+			-4:00	Arg	AR%sT	1969 Oct  5
+			-3:00	Arg	AR%sT	1999 Oct  3
+			-4:00	Arg	AR%sT	2000 Mar  3
+			-3:00	Arg	AR%sT
+#
+# Cordoba (CB), Santa Fe (SF), Entre Rios (ER), Corrientes (CN), Misiones (MN),
+# Chaco (CC), Formosa (FM), Santiago del Estero (SE)
+#
+# Shanks & Pottenger also make the following claims, which we haven't verified:
+# - Formosa switched to -3:00 on 1991-01-07.
+# - Misiones switched to -3:00 on 1990-12-29.
+# - Chaco switched to -3:00 on 1991-01-04.
+# - Santiago del Estero switched to -4:00 on 1991-04-01,
+#   then to -3:00 on 1991-04-26.
+#
+Zone America/Argentina/Cordoba -4:16:48 - LMT	1894 Oct 31
+			-4:16:48 -	CMT	1920 May
+			-4:00	-	ART	1930 Dec
+			-4:00	Arg	AR%sT	1969 Oct  5
+			-3:00	Arg	AR%sT	1991 Mar  3
+			-4:00	-	WART	1991 Oct 20
+			-3:00	Arg	AR%sT	1999 Oct  3
+			-4:00	Arg	AR%sT	2000 Mar  3
+			-3:00	Arg	AR%sT
+#
+# Salta (SA), La Pampa (LP), Neuquen (NQ), Rio Negro (RN)
+Zone America/Argentina/Salta -4:21:40 - LMT	1894 Oct 31
+			-4:16:48 -	CMT	1920 May
+			-4:00	-	ART	1930 Dec
+			-4:00	Arg	AR%sT	1969 Oct  5
+			-3:00	Arg	AR%sT	1991 Mar  3
+			-4:00	-	WART	1991 Oct 20
+			-3:00	Arg	AR%sT	1999 Oct  3
+			-4:00	Arg	AR%sT	2000 Mar  3
+			-3:00	Arg	AR%sT	2008 Oct 18
+			-3:00	-	ART
+#
+# Tucuman (TM)
+Zone America/Argentina/Tucuman -4:20:52 - LMT	1894 Oct 31
+			-4:16:48 -	CMT	1920 May
+			-4:00	-	ART	1930 Dec
+			-4:00	Arg	AR%sT	1969 Oct  5
+			-3:00	Arg	AR%sT	1991 Mar  3
+			-4:00	-	WART	1991 Oct 20
+			-3:00	Arg	AR%sT	1999 Oct  3
+			-4:00	Arg	AR%sT	2000 Mar  3
+			-3:00	-	ART	2004 Jun  1
+			-4:00	-	WART	2004 Jun 13
+			-3:00	Arg	AR%sT
+#
+# La Rioja (LR)
+Zone America/Argentina/La_Rioja -4:27:24 - LMT	1894 Oct 31
+			-4:16:48 -	CMT	1920 May
+			-4:00	-	ART	1930 Dec
+			-4:00	Arg	AR%sT	1969 Oct  5
+			-3:00	Arg	AR%sT	1991 Mar  1
+			-4:00	-	WART	1991 May  7
+			-3:00	Arg	AR%sT	1999 Oct  3
+			-4:00	Arg	AR%sT	2000 Mar  3
+			-3:00	-	ART	2004 Jun  1
+			-4:00	-	WART	2004 Jun 20
+			-3:00	Arg	AR%sT	2008 Oct 18
+			-3:00	-	ART
+#
+# San Juan (SJ)
+Zone America/Argentina/San_Juan -4:34:04 - LMT	1894 Oct 31
+			-4:16:48 -	CMT	1920 May
+			-4:00	-	ART	1930 Dec
+			-4:00	Arg	AR%sT	1969 Oct  5
+			-3:00	Arg	AR%sT	1991 Mar  1
+			-4:00	-	WART	1991 May  7
+			-3:00	Arg	AR%sT	1999 Oct  3
+			-4:00	Arg	AR%sT	2000 Mar  3
+			-3:00	-	ART	2004 May 31
+			-4:00	-	WART	2004 Jul 25
+			-3:00	Arg	AR%sT	2008 Oct 18
+			-3:00	-	ART
+#
+# Jujuy (JY)
+Zone America/Argentina/Jujuy -4:21:12 -	LMT	1894 Oct 31
+			-4:16:48 -	CMT	1920 May
+			-4:00	-	ART	1930 Dec
+			-4:00	Arg	AR%sT	1969 Oct  5
+			-3:00	Arg	AR%sT	1990 Mar  4
+			-4:00	-	WART	1990 Oct 28
+			-4:00	1:00	WARST	1991 Mar 17
+			-4:00	-	WART	1991 Oct  6
+			-3:00	1:00	ARST	1992
+			-3:00	Arg	AR%sT	1999 Oct  3
+			-4:00	Arg	AR%sT	2000 Mar  3
+			-3:00	Arg	AR%sT	2008 Oct 18
+			-3:00	-	ART
+#
+# Catamarca (CT), Chubut (CH)
+Zone America/Argentina/Catamarca -4:23:08 - LMT	1894 Oct 31
+			-4:16:48 -	CMT	1920 May
+			-4:00	-	ART	1930 Dec
+			-4:00	Arg	AR%sT	1969 Oct  5
+			-3:00	Arg	AR%sT	1991 Mar  3
+			-4:00	-	WART	1991 Oct 20
+			-3:00	Arg	AR%sT	1999 Oct  3
+			-4:00	Arg	AR%sT	2000 Mar  3
+			-3:00	-	ART	2004 Jun  1
+			-4:00	-	WART	2004 Jun 20
+			-3:00	Arg	AR%sT	2008 Oct 18
+			-3:00	-	ART
+#
+# Mendoza (MZ)
+Zone America/Argentina/Mendoza -4:35:16 - LMT	1894 Oct 31
+			-4:16:48 -	CMT	1920 May
+			-4:00	-	ART	1930 Dec
+			-4:00	Arg	AR%sT	1969 Oct  5
+			-3:00	Arg	AR%sT	1990 Mar  4
+			-4:00	-	WART	1990 Oct 15
+			-4:00	1:00	WARST	1991 Mar  1
+			-4:00	-	WART	1991 Oct 15
+			-4:00	1:00	WARST	1992 Mar  1
+			-4:00	-	WART	1992 Oct 18
+			-3:00	Arg	AR%sT	1999 Oct  3
+			-4:00	Arg	AR%sT	2000 Mar  3
+			-3:00	-	ART	2004 May 23
+			-4:00	-	WART	2004 Sep 26
+			-3:00	Arg	AR%sT	2008 Oct 18
+			-3:00	-	ART
+#
+# San Luis (SL)
+
+Rule	SanLuis	2008	2009	-	Mar	Sun>=8	0:00	0	-
+Rule	SanLuis	2007	2009	-	Oct	Sun>=8	0:00	1:00	S
+
+Zone America/Argentina/San_Luis -4:25:24 - LMT	1894 Oct 31
+			-4:16:48 -	CMT	1920 May
+			-4:00	-	ART	1930 Dec
+			-4:00	Arg	AR%sT	1969 Oct  5
+			-3:00	Arg	AR%sT	1990
+			-3:00	1:00	ARST	1990 Mar 14
+			-4:00	-	WART	1990 Oct 15
+			-4:00	1:00	WARST	1991 Mar  1
+			-4:00	-	WART	1991 Jun  1
+			-3:00	-	ART	1999 Oct  3
+			-4:00	1:00	WARST	2000 Mar  3
+			-3:00	-	ART	2004 May 31
+			-4:00	-	WART	2004 Jul 25
+			-3:00	Arg	AR%sT	2008 Jan 21
+			-4:00	SanLuis	WAR%sT
+#
+# Santa Cruz (SC)
+Zone America/Argentina/Rio_Gallegos -4:36:52 - LMT 1894 Oct 31
+			-4:16:48 -	CMT	1920 May # Cordoba Mean Time
+			-4:00	-	ART	1930 Dec
+			-4:00	Arg	AR%sT	1969 Oct  5
+			-3:00	Arg	AR%sT	1999 Oct  3
+			-4:00	Arg	AR%sT	2000 Mar  3
+			-3:00	-	ART	2004 Jun  1
+			-4:00	-	WART	2004 Jun 20
+			-3:00	Arg	AR%sT	2008 Oct 18
+			-3:00	-	ART
+#
+# Tierra del Fuego, Antartida e Islas del Atlantico Sur (TF)
+Zone America/Argentina/Ushuaia -4:33:12 - LMT 1894 Oct 31
+			-4:16:48 -	CMT	1920 May # Cordoba Mean Time
+			-4:00	-	ART	1930 Dec
+			-4:00	Arg	AR%sT	1969 Oct  5
+			-3:00	Arg	AR%sT	1999 Oct  3
+			-4:00	Arg	AR%sT	2000 Mar  3
+			-3:00	-	ART	2004 May 30
+			-4:00	-	WART	2004 Jun 20
+			-3:00	Arg	AR%sT	2008 Oct 18
+			-3:00	-	ART
+
+# Aruba
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Aruba	-4:40:24 -	LMT	1912 Feb 12	# Oranjestad
+			-4:30	-	ANT	1965 # Netherlands Antilles Time
+			-4:00	-	AST
+
+# Bolivia
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/La_Paz	-4:32:36 -	LMT	1890
+			-4:32:36 -	CMT	1931 Oct 15 # Calamarca MT
+			-4:32:36 1:00	BOST	1932 Mar 21 # Bolivia ST
+			-4:00	-	BOT	# Bolivia Time
+
+# Brazil
+
+# From Paul Eggert (1993-11-18):
+# The mayor of Rio recently attempted to change the time zone rules
+# just in his city, in order to leave more summer time for the tourist trade.
+# The rule change lasted only part of the day;
+# the federal government refused to follow the city's rules, and business
+# was in a chaos, so the mayor backed down that afternoon.
+
+# From IATA SSIM (1996-02):
+# _Only_ the following states in BR1 observe DST: Rio Grande do Sul (RS),
+# Santa Catarina (SC), Parana (PR), Sao Paulo (SP), Rio de Janeiro (RJ),
+# Espirito Santo (ES), Minas Gerais (MG), Bahia (BA), Goias (GO),
+# Distrito Federal (DF), Tocantins (TO), Sergipe [SE] and Alagoas [AL].
+# [The last three states are new to this issue of the IATA SSIM.]
+
+# From Gwillim Law (1996-10-07):
+# Geography, history (Tocantins was part of Goias until 1989), and other
+# sources of time zone information lead me to believe that AL, SE, and TO were
+# always in BR1, and so the only change was whether or not they observed DST....
+# The earliest issue of the SSIM I have is 2/91.  Each issue from then until
+# 9/95 says that DST is observed only in the ten states I quoted from 9/95,
+# along with Mato Grosso (MT) and Mato Grosso do Sul (MS), which are in BR2
+# (UTC-4)....  The other two time zones given for Brazil are BR3, which is
+# UTC-5, no DST, and applies only in the state of Acre (AC); and BR4, which is
+# UTC-2, and applies to Fernando de Noronha (formerly FN, but I believe it's
+# become part of the state of Pernambuco).  The boundary between BR1 and BR2
+# has never been clearly stated.  They've simply been called East and West.
+# However, some conclusions can be drawn from another IATA manual: the Airline
+# Coding Directory, which lists close to 400 airports in Brazil.  For each
+# airport it gives a time zone which is coded to the SSIM.  From that
+# information, I'm led to conclude that the states of Amapa (AP), Ceara (CE),
+# Maranhao (MA), Paraiba (PR), Pernambuco (PE), Piaui (PI), and Rio Grande do
+# Norte (RN), and the eastern part of Para (PA) are all in BR1 without DST.
+
+# From Marcos Tadeu (1998-09-27):
+# <a href="http://pcdsh01.on.br/verao1.html">
+# Brazilian official page
+# </a>
+
+# From Jesper Norgaard (2000-11-03):
+# [For an official list of which regions in Brazil use which time zones, see:]
+# http://pcdsh01.on.br/Fusbr.htm
+# http://pcdsh01.on.br/Fusbrhv.htm
+
+# From Celso Doria via David Madeo (2002-10-09):
+# The reason for the delay this year has to do with elections in Brazil.
+#
+# Unlike in the United States, elections in Brazil are 100% computerized and
+# the results are known almost immediately.  Yesterday, it was the first
+# round of the elections when 115 million Brazilians voted for President,
+# Governor, Senators, Federal Deputies, and State Deputies.  Nobody is
+# counting (or re-counting) votes anymore and we know there will be a second
+# round for the Presidency and also for some Governors.  The 2nd round will
+# take place on October 27th.
+#
+# The reason why the DST will only begin November 3rd is that the thousands
+# of electoral machines used cannot have their time changed, and since the
+# Constitution says the elections must begin at 8:00 AM and end at 5:00 PM,
+# the Government decided to postpone DST, instead of changing the Constitution
+# (maybe, for the next elections, it will be possible to change the clock)...
+
+# From Rodrigo Severo (2004-10-04):
+# It's just the biannual change made necessary by the much hyped, supposedly
+# modern Brazilian eletronic voting machines which, apparently, can't deal
+# with a time change between the first and the second rounds of the elections.
+
+# From Steffen Thorsen (2007-09-20):
+# Brazil will start DST on 2007-10-14 00:00 and end on 2008-02-17 00:00:
+# http://www.mme.gov.br/site/news/detail.do;jsessionid=BBA06811AFCAAC28F0285210913513DA?newsId=13975
+
+# From Paul Schulze (2008-06-24):
+# ...by law number 11.662 of April 24, 2008 (published in the "Diario
+# Oficial da Uniao"...) in Brazil there are changes in the timezones,
+# effective today (00:00am at June 24, 2008) as follows:
+#
+# a) The timezone UTC+5 is e[x]tinguished, with all the Acre state and the
+# part of the Amazonas state that had this timezone now being put to the
+# timezone UTC+4
+# b) The whole Para state now is put at timezone UTC+3, instead of just
+# part of it, as was before.
+#
+# This change follows a proposal of senator Tiao Viana of Acre state, that
+# proposed it due to concerns about open television channels displaying
+# programs inappropriate to youths in the states that had the timezone
+# UTC+5 too early in the night. In the occasion, some more corrections
+# were proposed, trying to unify the timezones of any given state. This
+# change modifies timezone rules defined in decree 2.784 of 18 June,
+# 1913.
+
+# From Rodrigo Severo (2008-06-24):
+# Just correcting the URL:
+# <a href="https://www.in.gov.br/imprensa/visualiza/index.jsp?jornal=do&secao=1&pagina=1&data=25/04/2008">
+# https://www.in.gov.br/imprensa/visualiza/index.jsp?jornal=do&secao=1&pagina=1&data=25/04/2008
+# </a>
+#
+# As a result of the above Decree I believe the America/Rio_Branco
+# timezone shall be modified from UTC-5 to UTC-4 and a new timezone shall
+# be created to represent the the west side of the Para State. I
+# suggest this new timezone be called Santarem as the most
+# important/populated city in the affected area.
+#
+# This new timezone would be the same as the Rio_Branco timezone up to
+# the 2008/06/24 change which would be to UTC-3 instead of UTC-4.
+
+# From Alex Krivenyshev (2008-06-24):
+# This is a quick reference page for New and Old Brazil Time Zones map.
+# <a href="http://www.worldtimezone.com/brazil-time-new-old.php">
+# http://www.worldtimezone.com/brazil-time-new-old.php
+# </a>
+#
+# - 4 time zones replaced by 3 time zones-eliminating time zone UTC- 05
+# (state Acre and the part of the Amazonas will be UTC/GMT- 04) - western
+# part of Par state is moving to one timezone UTC- 03 (from UTC -04).
+
+# From Paul Eggert (2002-10-10):
+# The official decrees referenced below are mostly taken from
+# <a href="http://pcdsh01.on.br/DecHV.html">
+# Decretos sobre o Horario de Verao no Brasil
+# </a>.
+
+# From Steffen Thorsen (2008-08-29):
+# As announced by the government and many newspapers in Brazil late
+# yesterday, Brazil will start DST on 2008-10-19 (need to change rule) and
+# it will end on 2009-02-15 (current rule for Brazil is fine). Based on
+# past years experience with the elections, there was a good chance that
+# the start was postponed to November, but it did not happen this year.
+#
+# It has not yet been posted to http://pcdsh01.on.br/DecHV.html
+#
+# An official page about it:
+# <a href="http://www.mme.gov.br/site/news/detail.do?newsId=16722">
+# http://www.mme.gov.br/site/news/detail.do?newsId=16722
+# </a>
+# Note that this link does not always work directly, but must be accessed
+# by going to
+# <a href="http://www.mme.gov.br/first">
+# http://www.mme.gov.br/first
+# </a>
+#
+# One example link that works directly:
+# <a href="http://jornale.com.br/index.php?option=com_content&task=view&id=13530&Itemid=54">
+# http://jornale.com.br/index.php?option=com_content&task=view&id=13530&Itemid=54
+# (Portuguese)
+# </a>
+#
+# We have a written a short article about it as well:
+# <a href="http://www.timeanddate.com/news/time/brazil-dst-2008-2009.html">
+# http://www.timeanddate.com/news/time/brazil-dst-2008-2009.html
+# </a>
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+# Decree <a href="http://pcdsh01.on.br/HV20466.htm">20,466</a> (1931-10-01)
+# Decree <a href="http://pcdsh01.on.br/HV21896.htm">21,896</a> (1932-01-10)
+Rule	Brazil	1931	only	-	Oct	 3	11:00	1:00	S
+Rule	Brazil	1932	1933	-	Apr	 1	 0:00	0	-
+Rule	Brazil	1932	only	-	Oct	 3	 0:00	1:00	S
+# Decree <a href="http://pcdsh01.on.br/HV23195.htm">23,195</a> (1933-10-10)
+# revoked DST.
+# Decree <a href="http://pcdsh01.on.br/HV27496.htm">27,496</a> (1949-11-24)
+# Decree <a href="http://pcdsh01.on.br/HV27998.htm">27,998</a> (1950-04-13)
+Rule	Brazil	1949	1952	-	Dec	 1	 0:00	1:00	S
+Rule	Brazil	1950	only	-	Apr	16	 1:00	0	-
+Rule	Brazil	1951	1952	-	Apr	 1	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/HV32308.htm">32,308</a> (1953-02-24)
+Rule	Brazil	1953	only	-	Mar	 1	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/HV34724.htm">34,724</a> (1953-11-30)
+# revoked DST.
+# Decree <a href="http://pcdsh01.on.br/HV52700.htm">52,700</a> (1963-10-18)
+# established DST from 1963-10-23 00:00 to 1964-02-29 00:00
+# in SP, RJ, GB, MG, ES, due to the prolongation of the drought.
+# Decree <a href="http://pcdsh01.on.br/HV53071.htm">53,071</a> (1963-12-03)
+# extended the above decree to all of the national territory on 12-09.
+Rule	Brazil	1963	only	-	Dec	 9	 0:00	1:00	S
+# Decree <a href="http://pcdsh01.on.br/HV53604.htm">53,604</a> (1964-02-25)
+# extended summer time by one day to 1964-03-01 00:00 (start of school).
+Rule	Brazil	1964	only	-	Mar	 1	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/HV55639.htm">55,639</a> (1965-01-27)
+Rule	Brazil	1965	only	-	Jan	31	 0:00	1:00	S
+Rule	Brazil	1965	only	-	Mar	31	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/HV57303.htm">57,303</a> (1965-11-22)
+Rule	Brazil	1965	only	-	Dec	 1	 0:00	1:00	S
+# Decree <a href="http://pcdsh01.on.br/HV57843.htm">57,843</a> (1966-02-18)
+Rule	Brazil	1966	1968	-	Mar	 1	 0:00	0	-
+Rule	Brazil	1966	1967	-	Nov	 1	 0:00	1:00	S
+# Decree <a href="http://pcdsh01.on.br/HV63429.htm">63,429</a> (1968-10-15)
+# revoked DST.
+# Decree <a href="http://pcdsh01.on.br/HV91698.htm">91,698</a> (1985-09-27)
+Rule	Brazil	1985	only	-	Nov	 2	 0:00	1:00	S
+# Decree 92,310 (1986-01-21)
+# Decree 92,463 (1986-03-13)
+Rule	Brazil	1986	only	-	Mar	15	 0:00	0	-
+# Decree 93,316 (1986-10-01)
+Rule	Brazil	1986	only	-	Oct	25	 0:00	1:00	S
+Rule	Brazil	1987	only	-	Feb	14	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/HV94922.htm">94,922</a> (1987-09-22)
+Rule	Brazil	1987	only	-	Oct	25	 0:00	1:00	S
+Rule	Brazil	1988	only	-	Feb	 7	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/HV96676.htm">96,676</a> (1988-09-12)
+# except for the states of AC, AM, PA, RR, RO, and AP (then a territory)
+Rule	Brazil	1988	only	-	Oct	16	 0:00	1:00	S
+Rule	Brazil	1989	only	-	Jan	29	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/HV98077.htm">98,077</a> (1989-08-21)
+# with the same exceptions
+Rule	Brazil	1989	only	-	Oct	15	 0:00	1:00	S
+Rule	Brazil	1990	only	-	Feb	11	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/HV99530.htm">99,530</a> (1990-09-17)
+# adopted by RS, SC, PR, SP, RJ, ES, MG, GO, MS, DF.
+# Decree 99,629 (1990-10-19) adds BA, MT.
+Rule	Brazil	1990	only	-	Oct	21	 0:00	1:00	S
+Rule	Brazil	1991	only	-	Feb	17	 0:00	0	-
+# <a href="http://pcdsh01.on.br/HV1991.htm">Unnumbered decree</a> (1991-09-25)
+# adopted by RS, SC, PR, SP, RJ, ES, MG, BA, GO, MT, MS, DF.
+Rule	Brazil	1991	only	-	Oct	20	 0:00	1:00	S
+Rule	Brazil	1992	only	-	Feb	 9	 0:00	0	-
+# <a href="http://pcdsh01.on.br/HV1992.htm">Unnumbered decree</a> (1992-10-16)
+# adopted by same states.
+Rule	Brazil	1992	only	-	Oct	25	 0:00	1:00	S
+Rule	Brazil	1993	only	-	Jan	31	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/HV942.htm">942</a> (1993-09-28)
+# adopted by same states, plus AM.
+# Decree <a href="http://pcdsh01.on.br/HV1252.htm">1,252</a> (1994-09-22;
+# web page corrected 2004-01-07) adopted by same states, minus AM.
+# Decree <a href="http://pcdsh01.on.br/HV1636.htm">1,636</a> (1995-09-14)
+# adopted by same states, plus MT and TO.
+# Decree <a href="http://pcdsh01.on.br/HV1674.htm">1,674</a> (1995-10-13)
+# adds AL, SE.
+Rule	Brazil	1993	1995	-	Oct	Sun>=11	 0:00	1:00	S
+Rule	Brazil	1994	1995	-	Feb	Sun>=15	 0:00	0	-
+Rule	Brazil	1996	only	-	Feb	11	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/HV2000.htm">2,000</a> (1996-09-04)
+# adopted by same states, minus AL, SE.
+Rule	Brazil	1996	only	-	Oct	 6	 0:00	1:00	S
+Rule	Brazil	1997	only	-	Feb	16	 0:00	0	-
+# From Daniel C. Sobral (1998-02-12):
+# In 1997, the DS began on October 6. The stated reason was that
+# because international television networks ignored Brazil's policy on DS,
+# they bought the wrong times on satellite for coverage of Pope's visit.
+# This year, the ending date of DS was postponed to March 1
+# to help dealing with the shortages of electric power.
+#
+# Decree 2,317 (1997-09-04), adopted by same states.
+Rule	Brazil	1997	only	-	Oct	 6	 0:00	1:00	S
+# Decree <a href="http://pcdsh01.on.br/figuras/HV2495.JPG">2,495</a>
+# (1998-02-10)
+Rule	Brazil	1998	only	-	Mar	 1	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/figuras/Hv98.jpg">2,780</a> (1998-09-11)
+# adopted by the same states as before.
+Rule	Brazil	1998	only	-	Oct	11	 0:00	1:00	S
+Rule	Brazil	1999	only	-	Feb	21	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/figuras/HV3150.gif">3,150</a>
+# (1999-08-23) adopted by same states.
+# Decree <a href="http://pcdsh01.on.br/DecHV99.gif">3,188</a> (1999-09-30)
+# adds SE, AL, PB, PE, RN, CE, PI, MA and RR.
+Rule	Brazil	1999	only	-	Oct	 3	 0:00	1:00	S
+Rule	Brazil	2000	only	-	Feb	27	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/DEC3592.htm">3,592</a> (2000-09-06)
+# adopted by the same states as before.
+# Decree <a href="http://pcdsh01.on.br/Dec3630.jpg">3,630</a> (2000-10-13)
+# repeals DST in PE and RR, effective 2000-10-15 00:00.
+# Decree <a href="http://pcdsh01.on.br/Dec3632.jpg">3,632</a> (2000-10-17)
+# repeals DST in SE, AL, PB, RN, CE, PI and MA, effective 2000-10-22 00:00.
+# Decree <a href="http://pcdsh01.on.br/figuras/HV3916.gif">3,916</a>
+# (2001-09-13) reestablishes DST in AL, CE, MA, PB, PE, PI, RN, SE.
+Rule	Brazil	2000	2001	-	Oct	Sun>=8	 0:00	1:00	S
+Rule	Brazil	2001	2006	-	Feb	Sun>=15	 0:00	0	-
+# Decree 4,399 (2002-10-01) repeals DST in AL, CE, MA, PB, PE, PI, RN, SE.
+# <a href="http://www.presidencia.gov.br/CCIVIL/decreto/2002/D4399.htm">4,399</a>
+Rule	Brazil	2002	only	-	Nov	 3	 0:00	1:00	S
+# Decree 4,844 (2003-09-24; corrected 2003-09-26) repeals DST in BA, MT, TO.
+# <a href="http://www.presidencia.gov.br/CCIVIL/decreto/2003/D4844.htm">4,844</a>
+Rule	Brazil	2003	only	-	Oct	19	 0:00	1:00	S
+# Decree 5,223 (2004-10-01) reestablishes DST in MT.
+# <a href="http://www.planalto.gov.br/ccivil_03/_Ato2004-2006/2004/Decreto/D5223.htm">5,223</a>
+Rule	Brazil	2004	only	-	Nov	 2	 0:00	1:00	S
+# Decree <a href="http://pcdsh01.on.br/DecHV5539.gif">5,539</a> (2005-09-19),
+# adopted by the same states as before.
+Rule	Brazil	2005	only	-	Oct	16	 0:00	1:00	S
+# Decree <a href="http://pcdsh01.on.br/DecHV5920.gif">5,920</a> (2006-10-03),
+# adopted by the same states as before.
+Rule	Brazil	2006	only	-	Nov	 5	 0:00	1:00	S
+Rule	Brazil	2007	only	-	Feb	25	 0:00	0	-
+# Decree <a href="http://pcdsh01.on.br/DecHV6212.gif">6,212</a> (2007-09-26),
+# adopted by the same states as before.
+Rule	Brazil	2007	only	-	Oct	Sun>=8	 0:00	1:00	S
+# From Frederico A. C. Neves (2008-09-10):
+# Acording to this decree
+# <a href="http://www.planalto.gov.br/ccivil_03/_Ato2007-2010/2008/Decreto/D6558.htm">
+# http://www.planalto.gov.br/ccivil_03/_Ato2007-2010/2008/Decreto/D6558.htm
+# </a>
+# [t]he DST period in Brazil now on will be from the 3rd Oct Sunday to the
+# 3rd Feb Sunday. There is an exception on the return date when this is
+# the Carnival Sunday then the return date will be the next Sunday...
+Rule	Brazil	2008	max	-	Oct	Sun>=15	0:00	1:00	S
+Rule	Brazil	2008	2011	-	Feb	Sun>=15	0:00	0	-
+Rule	Brazil	2012	only	-	Feb	Sun>=22	0:00	0	-
+Rule	Brazil	2013	2014	-	Feb	Sun>=15	0:00	0	-
+Rule	Brazil	2015	only	-	Feb	Sun>=22	0:00	0	-
+Rule	Brazil	2016	2022	-	Feb	Sun>=15	0:00	0	-
+Rule	Brazil	2023	only	-	Feb	Sun>=22	0:00	0	-
+Rule	Brazil	2024	2025	-	Feb	Sun>=15	0:00	0	-
+Rule	Brazil	2026	only	-	Feb	Sun>=22	0:00	0	-
+Rule	Brazil	2027	2033	-	Feb	Sun>=15	0:00	0	-
+Rule	Brazil	2034	only	-	Feb	Sun>=22	0:00	0	-
+Rule	Brazil	2035	2036	-	Feb	Sun>=15	0:00	0	-
+Rule	Brazil	2037	only	-	Feb	Sun>=22	0:00	0	-
+# From Arthur David Olson (2008-09-29):
+# The next is wrong in some years but is better than nothing.
+Rule	Brazil	2038	max	-	Feb	Sun>=15	0:00	0	-
+
+# The latest ruleset listed above says that the following states observe DST:
+# DF, ES, GO, MG, MS, MT, PR, RJ, RS, SC, SP.
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+#
+# Fernando de Noronha (administratively part of PE)
+Zone America/Noronha	-2:09:40 -	LMT	1914
+			-2:00	Brazil	FN%sT	1990 Sep 17
+			-2:00	-	FNT	1999 Sep 30
+			-2:00	Brazil	FN%sT	2000 Oct 15
+			-2:00	-	FNT	2001 Sep 13
+			-2:00	Brazil	FN%sT	2002 Oct  1
+			-2:00	-	FNT
+# Other Atlantic islands have no permanent settlement.
+# These include Trindade and Martin Vaz (administratively part of ES),
+# Atol das Rocas (RN), and Penedos de Sao Pedro e Sao Paulo (PE).
+# Fernando de Noronha was a separate territory from 1942-09-02 to 1989-01-01;
+# it also included the Penedos.
+#
+# Amapa (AP), east Para (PA)
+# East Para includes Belem, Maraba, Serra Norte, and Sao Felix do Xingu.
+# The division between east and west Para is the river Xingu.
+# In the north a very small part from the river Javary (now Jari I guess,
+# the border with Amapa) to the Amazon, then to the Xingu.
+Zone America/Belem	-3:13:56 -	LMT	1914
+			-3:00	Brazil	BR%sT	1988 Sep 12
+			-3:00	-	BRT
+#
+# west Para (PA)
+# West Para includes Altamira, Oribidos, Prainha, Oriximina, and Santarem.
+Zone America/Santarem	-3:38:48 -	LMT	1914
+			-4:00	Brazil	AM%sT	1988 Sep 12
+			-4:00	-	AMT	2008 Jun 24 00:00
+			-3:00	-	BRT
+#
+# Maranhao (MA), Piaui (PI), Ceara (CE), Rio Grande do Norte (RN),
+# Paraiba (PB)
+Zone America/Fortaleza	-2:34:00 -	LMT	1914
+			-3:00	Brazil	BR%sT	1990 Sep 17
+			-3:00	-	BRT	1999 Sep 30
+			-3:00	Brazil	BR%sT	2000 Oct 22
+			-3:00	-	BRT	2001 Sep 13
+			-3:00	Brazil	BR%sT	2002 Oct  1
+			-3:00	-	BRT
+#
+# Pernambuco (PE) (except Atlantic islands)
+Zone America/Recife	-2:19:36 -	LMT	1914
+			-3:00	Brazil	BR%sT	1990 Sep 17
+			-3:00	-	BRT	1999 Sep 30
+			-3:00	Brazil	BR%sT	2000 Oct 15
+			-3:00	-	BRT	2001 Sep 13
+			-3:00	Brazil	BR%sT	2002 Oct  1
+			-3:00	-	BRT
+#
+# Tocantins (TO)
+Zone America/Araguaina	-3:12:48 -	LMT	1914
+			-3:00	Brazil	BR%sT	1990 Sep 17
+			-3:00	-	BRT	1995 Sep 14
+			-3:00	Brazil	BR%sT	2003 Sep 24
+			-3:00	-	BRT
+#
+# Alagoas (AL), Sergipe (SE)
+Zone America/Maceio	-2:22:52 -	LMT	1914
+			-3:00	Brazil	BR%sT	1990 Sep 17
+			-3:00	-	BRT	1995 Oct 13
+			-3:00	Brazil	BR%sT	1996 Sep  4
+			-3:00	-	BRT	1999 Sep 30
+			-3:00	Brazil	BR%sT	2000 Oct 22
+			-3:00	-	BRT	2001 Sep 13
+			-3:00	Brazil	BR%sT	2002 Oct  1
+			-3:00	-	BRT
+#
+# Bahia (BA)
+# There are too many Salvadors elsewhere, so use America/Bahia instead
+# of America/Salvador.
+Zone America/Bahia	-2:34:04 -	LMT	1914
+			-3:00	Brazil	BR%sT	2003 Sep 24
+			-3:00	-	BRT
+#
+# Goias (GO), Distrito Federal (DF), Minas Gerais (MG),
+# Espirito Santo (ES), Rio de Janeiro (RJ), Sao Paulo (SP), Parana (PR),
+# Santa Catarina (SC), Rio Grande do Sul (RS)
+Zone America/Sao_Paulo	-3:06:28 -	LMT	1914
+			-3:00	Brazil	BR%sT	1963 Oct 23 00:00
+			-3:00	1:00	BRST	1964
+			-3:00	Brazil	BR%sT
+#
+# Mato Grosso do Sul (MS)
+Zone America/Campo_Grande -3:38:28 -	LMT	1914
+			-4:00	Brazil	AM%sT
+#
+# Mato Grosso (MT)
+Zone America/Cuiaba	-3:44:20 -	LMT	1914
+			-4:00	Brazil	AM%sT	2003 Sep 24
+			-4:00	-	AMT	2004 Oct  1
+			-4:00	Brazil	AM%sT
+#
+# Rondonia (RO)
+Zone America/Porto_Velho -4:15:36 -	LMT	1914
+			-4:00	Brazil	AM%sT	1988 Sep 12
+			-4:00	-	AMT
+#
+# Roraima (RR)
+Zone America/Boa_Vista	-4:02:40 -	LMT	1914
+			-4:00	Brazil	AM%sT	1988 Sep 12
+			-4:00	-	AMT	1999 Sep 30
+			-4:00	Brazil	AM%sT	2000 Oct 15
+			-4:00	-	AMT
+#
+# east Amazonas (AM): Boca do Acre, Jutai, Manaus, Floriano Peixoto
+# The great circle line from Tabatinga to Porto Acre divides
+# east from west Amazonas.
+Zone America/Manaus	-4:00:04 -	LMT	1914
+			-4:00	Brazil	AM%sT	1988 Sep 12
+			-4:00	-	AMT	1993 Sep 28
+			-4:00	Brazil	AM%sT	1994 Sep 22
+			-4:00	-	AMT
+#
+# west Amazonas (AM): Atalaia do Norte, Boca do Maoco, Benjamin Constant,
+#	Eirunepe, Envira, Ipixuna
+Zone America/Eirunepe	-4:39:28 -	LMT	1914
+			-5:00	Brazil	AC%sT	1988 Sep 12
+			-5:00	-	ACT	1993 Sep 28
+			-5:00	Brazil	AC%sT	1994 Sep 22
+			-5:00	-	ACT	2008 Jun 24 00:00
+			-4:00	-	AMT
+#
+# Acre (AC)
+Zone America/Rio_Branco	-4:31:12 -	LMT	1914
+			-5:00	Brazil	AC%sT	1988 Sep 12
+			-5:00	-	ACT	2008 Jun 24 00:00
+			-4:00	-	AMT
+
+# Chile
+
+# From Eduardo Krell (1995-10-19):
+# The law says to switch to DST at midnight [24:00] on the second SATURDAY
+# of October....  The law is the same for March and October.
+# (1998-09-29):
+# Because of the drought this year, the government decided to go into
+# DST earlier (saturday 9/26 at 24:00). This is a one-time change only ...
+# (unless there's another dry season next year, I guess).
+
+# From Julio I. Pacheco Troncoso (1999-03-18):
+# Because of the same drought, the government decided to end DST later,
+# on April 3, (one-time change).
+
+# From Oscar van Vlijmen (2006-10-08):
+# http://www.horaoficial.cl/cambio.htm
+
+# From Jesper Norgaard Welen (2006-10-08):
+# I think that there are some obvious mistakes in the suggested link
+# from Oscar van Vlijmen,... for instance entry 66 says that GMT-4
+# ended 1990-09-12 while entry 67 only begins GMT-3 at 1990-09-15
+# (they should have been 1990-09-15 and 1990-09-16 respectively), but
+# anyhow it clears up some doubts too.
+
+# From Paul Eggert (2006-12-27):
+# The following data for Chile and America/Santiago are from
+# <http://www.horaoficial.cl/horaof.htm> (2006-09-20), transcribed by
+# Jesper Norgaard Welen.  The data for Pacific/Easter are from Shanks
+# & Pottenger, except with DST transitions after 1932 cloned from
+# America/Santiago.  The pre-1980 Pacific/Easter data are dubious,
+# but we have no other source.
+
+# From German Poo-Caaman~o (2008-03-03):
+# Due to drought, Chile extends Daylight Time in three weeks.  This
+# is one-time change (Saturday 3/29 at 24:00 for America/Santiago
+# and Saturday 3/29 at 22:00 for Pacific/Easter)
+# The Supreme Decree is located at 
+# <a href="http://www.shoa.cl/servicios/supremo316.pdf">
+# http://www.shoa.cl/servicios/supremo316.pdf
+# </a>
+# and the instructions for 2008 are located in:
+# <a href="http://www.horaoficial.cl/cambio.htm">
+# http://www.horaoficial.cl/cambio.htm
+# </a>.
+
+# From Jose Miguel Garrido (2008-03-05):
+# ...
+# You could see the announces of the change on 
+# <a href="http://www.shoa.cl/noticias/2008/04hora/hora.htm">
+# http://www.shoa.cl/noticias/2008/04hora/hora.htm
+# </a>.
+
+# From Angel Chiang (2010-03-04):
+# Subject: DST in Chile exceptionally extended to 3 April due to earthquake
+# <a href="http://www.gobiernodechile.cl/viewNoticia.aspx?idArticulo=30098">
+# http://www.gobiernodechile.cl/viewNoticia.aspx?idArticulo=30098
+# </a>
+# (in Spanish, last paragraph).
+#
+# This is breaking news. There should be more information available later.
+
+# From Arthur Daivd Olson (2010-03-06):
+# Angel Chiang's message confirmed by Julio Pacheco; Julio provided a patch.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Chile	1927	1932	-	Sep	 1	0:00	1:00	S
+Rule	Chile	1928	1932	-	Apr	 1	0:00	0	-
+Rule	Chile	1942	only	-	Jun	 1	4:00u	0	-
+Rule	Chile	1942	only	-	Aug	 1	5:00u	1:00	S
+Rule	Chile	1946	only	-	Jul	15	4:00u	1:00	S
+Rule	Chile	1946	only	-	Sep	 1	3:00u	0:00	-
+Rule	Chile	1947	only	-	Apr	 1	4:00u	0	-
+Rule	Chile	1968	only	-	Nov	 3	4:00u	1:00	S
+Rule	Chile	1969	only	-	Mar	30	3:00u	0	-
+Rule	Chile	1969	only	-	Nov	23	4:00u	1:00	S
+Rule	Chile	1970	only	-	Mar	29	3:00u	0	-
+Rule	Chile	1971	only	-	Mar	14	3:00u	0	-
+Rule	Chile	1970	1972	-	Oct	Sun>=9	4:00u	1:00	S
+Rule	Chile	1972	1986	-	Mar	Sun>=9	3:00u	0	-
+Rule	Chile	1973	only	-	Sep	30	4:00u	1:00	S
+Rule	Chile	1974	1987	-	Oct	Sun>=9	4:00u	1:00	S
+Rule	Chile	1987	only	-	Apr	12	3:00u	0	-
+Rule	Chile	1988	1989	-	Mar	Sun>=9	3:00u	0	-
+Rule	Chile	1988	only	-	Oct	Sun>=1	4:00u	1:00	S
+Rule	Chile	1989	only	-	Oct	Sun>=9	4:00u	1:00	S
+Rule	Chile	1990	only	-	Mar	18	3:00u	0	-
+Rule	Chile	1990	only	-	Sep	16	4:00u	1:00	S
+Rule	Chile	1991	1996	-	Mar	Sun>=9	3:00u	0	-
+Rule	Chile	1991	1997	-	Oct	Sun>=9	4:00u	1:00	S
+Rule	Chile	1997	only	-	Mar	30	3:00u	0	-
+Rule	Chile	1998	only	-	Mar	Sun>=9	3:00u	0	-
+Rule	Chile	1998	only	-	Sep	27	4:00u	1:00	S
+Rule	Chile	1999	only	-	Apr	 4	3:00u	0	-
+Rule	Chile	1999	max	-	Oct	Sun>=9	4:00u	1:00	S
+Rule	Chile	2000	2007	-	Mar	Sun>=9	3:00u	0	-
+# N.B.: the end of March 29 in Chile is March 30 in Universal time,
+# which is used below in specifying the transition.
+Rule	Chile	2008	only	-	Mar	30	3:00u	0	-
+Rule	Chile	2009	only	-	Mar	Sun>=9	3:00u	0	-
+Rule	Chile	2010	only	-	Apr	 4	3:00u	0	-
+Rule	Chile	2011	max	-	Mar	Sun>=9	3:00u	0	-
+# IATA SSIM anomalies: (1992-02) says 1992-03-14;
+# (1996-09) says 1998-03-08.  Ignore these.
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Santiago	-4:42:46 -	LMT	1890
+			-4:42:46 -	SMT	1910 	    # Santiago Mean Time
+			-5:00	-	CLT	1916 Jul  1 # Chile Time
+			-4:42:46 -	SMT	1918 Sep  1 # Santiago Mean Time
+			-4:00	-	CLT	1919 Jul  1 # Chile Time
+			-4:42:46 -	SMT	1927 Sep  1 # Santiago Mean Time
+			-5:00	Chile	CL%sT	1947 May 22 # Chile Time
+			-4:00	Chile	CL%sT
+Zone Pacific/Easter	-7:17:44 -	LMT	1890
+			-7:17:28 -	EMT	1932 Sep    # Easter Mean Time
+			-7:00	Chile	EAS%sT	1982 Mar 13 21:00 # Easter I Time
+			-6:00	Chile	EAS%sT
+#
+# Sala y Gomez Island is like Pacific/Easter.
+# Other Chilean locations, including Juan Fernandez Is, San Ambrosio,
+# San Felix, and Antarctic bases, are like America/Santiago.
+
+# Colombia
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	CO	1992	only	-	May	 3	0:00	1:00	S
+Rule	CO	1993	only	-	Apr	 4	0:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Bogota	-4:56:20 -	LMT	1884 Mar 13
+			-4:56:20 -	BMT	1914 Nov 23 # Bogota Mean Time
+			-5:00	CO	CO%sT	# Colombia Time
+# Malpelo, Providencia, San Andres
+# no information; probably like America/Bogota
+
+# Curacao
+#
+# From Paul Eggert (2006-03-22):
+# Shanks & Pottenger say that The Bottom and Philipsburg have been at
+# -4:00 since standard time was introduced on 1912-03-02; and that
+# Kralendijk and Rincon used Kralendijk Mean Time (-4:33:08) from
+# 1912-02-02 to 1965-01-01.  The former is dubious, since S&P also say
+# Saba Island has been like Curacao.
+# This all predates our 1970 cutoff, though.
+#
+# By July 2007 Curacao and St Maarten are planned to become
+# associated states within the Netherlands, much like Aruba;
+# Bonaire, Saba and St Eustatius would become directly part of the
+# Netherlands as Kingdom Islands.  This won't affect their time zones
+# though, as far as we know.
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Curacao	-4:35:44 -	LMT	1912 Feb 12	# Willemstad
+			-4:30	-	ANT	1965 # Netherlands Antilles Time
+			-4:00	-	AST
+
+# Ecuador
+#
+# From Paul Eggert (2007-03-04):
+# Apparently Ecuador had a failed experiment with DST in 1992.
+# <http://midena.gov.ec/content/view/1261/208/> (2007-02-27) and
+# <http://www.hoy.com.ec/NoticiaNue.asp?row_id=249856> (2006-11-06) both
+# talk about "hora Sixto".  Leave this alone for now, as we have no data.
+#
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Guayaquil	-5:19:20 -	LMT	1890
+			-5:14:00 -	QMT	1931 # Quito Mean Time
+			-5:00	-	ECT	     # Ecuador Time
+Zone Pacific/Galapagos	-5:58:24 -	LMT	1931 # Puerto Baquerizo Moreno
+			-5:00	-	ECT	1986
+			-6:00	-	GALT	     # Galapagos Time
+
+# Falklands
+
+# From Paul Eggert (2006-03-22):
+# Between 1990 and 2000 inclusive, Shanks & Pottenger and the IATA agree except
+# the IATA gives 1996-09-08.  Go with Shanks & Pottenger.
+
+# From Falkland Islands Government Office, London (2001-01-22)
+# via Jesper Norgaard:
+# ... the clocks revert back to Local Mean Time at 2 am on Sunday 15
+# April 2001 and advance one hour to summer time at 2 am on Sunday 2
+# September.  It is anticipated that the clocks will revert back at 2
+# am on Sunday 21 April 2002 and advance to summer time at 2 am on
+# Sunday 1 September.
+
+# From Rives McDow (2001-02-13):
+#
+# I have communicated several times with people there, and the last
+# time I had communications that was helpful was in 1998.  Here is
+# what was said then:
+#
+# "The general rule was that Stanley used daylight saving and the Camp
+# did not. However for various reasons many people in the Camp have
+# started to use daylight saving (known locally as 'Stanley Time')
+# There is no rule as to who uses daylight saving - it is a matter of
+# personal choice and so it is impossible to draw a map showing who
+# uses it and who does not. Any list would be out of date as soon as
+# it was produced. This year daylight saving ended on April 18/19th
+# and started again on September 12/13th.  I do not know what the rule
+# is, but can find out if you like.  We do not change at the same time
+# as UK or Chile."
+#
+# I did have in my notes that the rule was "Second Saturday in Sep at
+# 0:00 until third Saturday in Apr at 0:00".  I think that this does
+# not agree in some cases with Shanks; is this true?
+#
+# Also, there is no mention in the list that some areas in the
+# Falklands do not use DST.  I have found in my communications there
+# that these areas are on the western half of East Falkland and all of
+# West Falkland.  Stanley is the only place that consistently observes
+# DST.  Again, as in other places in the world, the farmers don't like
+# it.  West Falkland is almost entirely sheep farmers.
+#
+# I know one lady there that keeps a list of which farm keeps DST and
+# which doesn't each year.  She runs a shop in Stanley, and says that
+# the list changes each year.  She uses it to communicate to her
+# customers, catching them when they are home for lunch or dinner.
+
+# From Paul Eggert (2001-03-05):
+# For now, we'll just record the time in Stanley, since we have no
+# better info.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Falk	1937	1938	-	Sep	lastSun	0:00	1:00	S
+Rule	Falk	1938	1942	-	Mar	Sun>=19	0:00	0	-
+Rule	Falk	1939	only	-	Oct	1	0:00	1:00	S
+Rule	Falk	1940	1942	-	Sep	lastSun	0:00	1:00	S
+Rule	Falk	1943	only	-	Jan	1	0:00	0	-
+Rule	Falk	1983	only	-	Sep	lastSun	0:00	1:00	S
+Rule	Falk	1984	1985	-	Apr	lastSun	0:00	0	-
+Rule	Falk	1984	only	-	Sep	16	0:00	1:00	S
+Rule	Falk	1985	2000	-	Sep	Sun>=9	0:00	1:00	S
+Rule	Falk	1986	2000	-	Apr	Sun>=16	0:00	0	-
+Rule	Falk	2001	max	-	Apr	Sun>=15	2:00	0	-
+Rule	Falk	2001	max	-	Sep	Sun>=1	2:00	1:00	S
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Atlantic/Stanley	-3:51:24 -	LMT	1890
+			-3:51:24 -	SMT	1912 Mar 12  # Stanley Mean Time
+			-4:00	Falk	FK%sT	1983 May     # Falkland Is Time
+			-3:00	Falk	FK%sT	1985 Sep 15
+			-4:00	Falk	FK%sT
+
+# French Guiana
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Cayenne	-3:29:20 -	LMT	1911 Jul
+			-4:00	-	GFT	1967 Oct # French Guiana Time
+			-3:00	-	GFT
+
+# Guyana
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Guyana	-3:52:40 -	LMT	1915 Mar	# Georgetown
+			-3:45	-	GBGT	1966 May 26 # Br Guiana Time
+			-3:45	-	GYT	1975 Jul 31 # Guyana Time
+			-3:00	-	GYT	1991
+# IATA SSIM (1996-06) says -4:00.  Assume a 1991 switch.
+			-4:00	-	GYT
+
+# Paraguay
+# From Paul Eggert (2006-03-22):
+# Shanks & Pottenger say that spring transitions are from 01:00 -> 02:00,
+# and autumn transitions are from 00:00 -> 23:00.  Go with pre-1999
+# editions of Shanks, and with the IATA, who say transitions occur at 00:00.
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Para	1975	1988	-	Oct	 1	0:00	1:00	S
+Rule	Para	1975	1978	-	Mar	 1	0:00	0	-
+Rule	Para	1979	1991	-	Apr	 1	0:00	0	-
+Rule	Para	1989	only	-	Oct	22	0:00	1:00	S
+Rule	Para	1990	only	-	Oct	 1	0:00	1:00	S
+Rule	Para	1991	only	-	Oct	 6	0:00	1:00	S
+Rule	Para	1992	only	-	Mar	 1	0:00	0	-
+Rule	Para	1992	only	-	Oct	 5	0:00	1:00	S
+Rule	Para	1993	only	-	Mar	31	0:00	0	-
+Rule	Para	1993	1995	-	Oct	 1	0:00	1:00	S
+Rule	Para	1994	1995	-	Feb	lastSun	0:00	0	-
+Rule	Para	1996	only	-	Mar	 1	0:00	0	-
+# IATA SSIM (2000-02) says 1999-10-10; ignore this for now.
+# From Steffen Thorsen (2000-10-02):
+# I have three independent reports that Paraguay changed to DST this Sunday
+# (10-01).
+#
+# Translated by Gwillim Law (2001-02-27) from
+# <a href="http://www.diarionoticias.com.py/011000/nacional/naciona1.htm">
+# Noticias, a daily paper in Asuncion, Paraguay (2000-10-01)
+# </a>:
+# Starting at 0:00 today, the clock will be set forward 60 minutes, in
+# fulfillment of Decree No. 7,273 of the Executive Power....  The time change
+# system has been operating for several years.  Formerly there was a separate
+# decree each year; the new law has the same effect, but permanently.  Every
+# year, the time will change on the first Sunday of October; likewise, the
+# clock will be set back on the first Sunday of March.
+#
+Rule	Para	1996	2001	-	Oct	Sun>=1	0:00	1:00	S
+# IATA SSIM (1997-09) says Mar 1; go with Shanks & Pottenger.
+Rule	Para	1997	only	-	Feb	lastSun	0:00	0	-
+# Shanks & Pottenger say 1999-02-28; IATA SSIM (1999-02) says 1999-02-27, but
+# (1999-09) reports no date; go with above sources and Gerd Knops (2001-02-27).
+Rule	Para	1998	2001	-	Mar	Sun>=1	0:00	0	-
+# From Rives McDow (2002-02-28):
+# A decree was issued in Paraguay (no. 16350) on 2002-02-26 that changed the
+# dst method to be from the first Sunday in September to the first Sunday in
+# April.
+Rule	Para	2002	2004	-	Apr	Sun>=1	0:00	0	-
+Rule	Para	2002	2003	-	Sep	Sun>=1	0:00	1:00	S
+#
+# From Jesper Norgaard Welen (2005-01-02):
+# There are several sources that claim that Paraguay made
+# a timezone rule change in autumn 2004.
+# From Steffen Thorsen (2005-01-05):
+# Decree 1,867 (2004-03-05)
+# From Carlos Raul Perasso via Jesper Norgaard Welen (2006-10-13)
+# <http://www.presidencia.gov.py/decretos/D1867.pdf>
+Rule	Para	2004	2009	-	Oct	Sun>=15	0:00	1:00	S
+Rule	Para	2005	2009	-	Mar	Sun>=8	0:00	0	-
+# From Carlos Raul Perasso (2010-02-18):
+# By decree number 3958 issued yesterday (
+# <a href="http://www.presidencia.gov.py/v1/wp-content/uploads/2010/02/decreto3958.pdf">
+# http://www.presidencia.gov.py/v1/wp-content/uploads/2010/02/decreto3958.pdf
+# </a>
+# )
+# Paraguay changes its DST schedule, postponing the March rule to April and
+# modifying the October date. The decree reads:
+# ...
+# Art. 1. It is hereby established that from the second Sunday of the month of
+# April of this year (2010), the official time is to be set back 60 minutes,
+# and that on the first Sunday of the month of October, it is to be set
+# forward 60 minutes, in all the territory of the Paraguayan Republic.
+# ...
+Rule	Para	2010	max	-	Oct	Sun>=1	0:00	1:00	S
+Rule	Para	2010	max	-	Apr	Sun>=8	0:00	0	-
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Asuncion	-3:50:40 -	LMT	1890
+			-3:50:40 -	AMT	1931 Oct 10 # Asuncion Mean Time
+			-4:00	-	PYT	1972 Oct # Paraguay Time
+			-3:00	-	PYT	1974 Apr
+			-4:00	Para	PY%sT
+
+# Peru
+#
+# <a href="news:xrGmb.39935$gA1.13896113@news4.srv.hcvlny.cv.net">
+# From Evelyn C. Leeper via Mark Brader (2003-10-26):</a>
+# When we were in Peru in 1985-1986, they apparently switched over
+# sometime between December 29 and January 3 while we were on the Amazon.
+#
+# From Paul Eggert (2006-03-22):
+# Shanks & Pottenger don't have this transition.  Assume 1986 was like 1987.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	Peru	1938	only	-	Jan	 1	0:00	1:00	S
+Rule	Peru	1938	only	-	Apr	 1	0:00	0	-
+Rule	Peru	1938	1939	-	Sep	lastSun	0:00	1:00	S
+Rule	Peru	1939	1940	-	Mar	Sun>=24	0:00	0	-
+Rule	Peru	1986	1987	-	Jan	 1	0:00	1:00	S
+Rule	Peru	1986	1987	-	Apr	 1	0:00	0	-
+Rule	Peru	1990	only	-	Jan	 1	0:00	1:00	S
+Rule	Peru	1990	only	-	Apr	 1	0:00	0	-
+# IATA is ambiguous for 1993/1995; go with Shanks & Pottenger.
+Rule	Peru	1994	only	-	Jan	 1	0:00	1:00	S
+Rule	Peru	1994	only	-	Apr	 1	0:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Lima	-5:08:12 -	LMT	1890
+			-5:08:36 -	LMT	1908 Jul 28 # Lima Mean Time?
+			-5:00	Peru	PE%sT	# Peru Time
+
+# South Georgia
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone Atlantic/South_Georgia -2:26:08 -	LMT	1890		# Grytviken
+			-2:00	-	GST	# South Georgia Time
+
+# South Sandwich Is
+# uninhabited; scientific personnel have wintered
+
+# Suriname
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Paramaribo	-3:40:40 -	LMT	1911
+			-3:40:52 -	PMT	1935     # Paramaribo Mean Time
+			-3:40:36 -	PMT	1945 Oct # The capital moved?
+			-3:30	-	NEGT	1975 Nov 20 # Dutch Guiana Time
+			-3:30	-	SRT	1984 Oct # Suriname Time
+			-3:00	-	SRT
+
+# Trinidad and Tobago
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Port_of_Spain -4:06:04 -	LMT	1912 Mar 2
+			-4:00	-	AST
+
+# Uruguay
+# From Paul Eggert (1993-11-18):
+# Uruguay wins the prize for the strangest peacetime manipulation of the rules.
+# From Shanks & Pottenger:
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+# Whitman gives 1923 Oct 1; go with Shanks & Pottenger.
+Rule	Uruguay	1923	only	-	Oct	 2	 0:00	0:30	HS
+Rule	Uruguay	1924	1926	-	Apr	 1	 0:00	0	-
+Rule	Uruguay	1924	1925	-	Oct	 1	 0:00	0:30	HS
+Rule	Uruguay	1933	1935	-	Oct	lastSun	 0:00	0:30	HS
+# Shanks & Pottenger give 1935 Apr 1 0:00 & 1936 Mar 30 0:00; go with Whitman.
+Rule	Uruguay	1934	1936	-	Mar	Sat>=25	23:30s	0	-
+Rule	Uruguay	1936	only	-	Nov	 1	 0:00	0:30	HS
+Rule	Uruguay	1937	1941	-	Mar	lastSun	 0:00	0	-
+# Whitman gives 1937 Oct 3; go with Shanks & Pottenger.
+Rule	Uruguay	1937	1940	-	Oct	lastSun	 0:00	0:30	HS
+# Whitman gives 1941 Oct 24 - 1942 Mar 27, 1942 Dec 14 - 1943 Apr 13,
+# and 1943 Apr 13 ``to present time''; go with Shanks & Pottenger.
+Rule	Uruguay	1941	only	-	Aug	 1	 0:00	0:30	HS
+Rule	Uruguay	1942	only	-	Jan	 1	 0:00	0	-
+Rule	Uruguay	1942	only	-	Dec	14	 0:00	1:00	S
+Rule	Uruguay	1943	only	-	Mar	14	 0:00	0	-
+Rule	Uruguay	1959	only	-	May	24	 0:00	1:00	S
+Rule	Uruguay	1959	only	-	Nov	15	 0:00	0	-
+Rule	Uruguay	1960	only	-	Jan	17	 0:00	1:00	S
+Rule	Uruguay	1960	only	-	Mar	 6	 0:00	0	-
+Rule	Uruguay	1965	1967	-	Apr	Sun>=1	 0:00	1:00	S
+Rule	Uruguay	1965	only	-	Sep	26	 0:00	0	-
+Rule	Uruguay	1966	1967	-	Oct	31	 0:00	0	-
+Rule	Uruguay	1968	1970	-	May	27	 0:00	0:30	HS
+Rule	Uruguay	1968	1970	-	Dec	 2	 0:00	0	-
+Rule	Uruguay	1972	only	-	Apr	24	 0:00	1:00	S
+Rule	Uruguay	1972	only	-	Aug	15	 0:00	0	-
+Rule	Uruguay	1974	only	-	Mar	10	 0:00	0:30	HS
+Rule	Uruguay	1974	only	-	Dec	22	 0:00	1:00	S
+Rule	Uruguay	1976	only	-	Oct	 1	 0:00	0	-
+Rule	Uruguay	1977	only	-	Dec	 4	 0:00	1:00	S
+Rule	Uruguay	1978	only	-	Apr	 1	 0:00	0	-
+Rule	Uruguay	1979	only	-	Oct	 1	 0:00	1:00	S
+Rule	Uruguay	1980	only	-	May	 1	 0:00	0	-
+Rule	Uruguay	1987	only	-	Dec	14	 0:00	1:00	S
+Rule	Uruguay	1988	only	-	Mar	14	 0:00	0	-
+Rule	Uruguay	1988	only	-	Dec	11	 0:00	1:00	S
+Rule	Uruguay	1989	only	-	Mar	12	 0:00	0	-
+Rule	Uruguay	1989	only	-	Oct	29	 0:00	1:00	S
+# Shanks & Pottenger say no DST was observed in 1990/1 and 1991/2,
+# and that 1992/3's DST was from 10-25 to 03-01.  Go with IATA.
+Rule	Uruguay	1990	1992	-	Mar	Sun>=1	 0:00	0	-
+Rule	Uruguay	1990	1991	-	Oct	Sun>=21	 0:00	1:00	S
+Rule	Uruguay	1992	only	-	Oct	18	 0:00	1:00	S
+Rule	Uruguay	1993	only	-	Feb	28	 0:00	0	-
+# From Eduardo Cota (2004-09-20):
+# The uruguayan government has decreed a change in the local time....
+# http://www.presidencia.gub.uy/decretos/2004091502.htm
+Rule	Uruguay	2004	only	-	Sep	19	 0:00	1:00	S
+# From Steffen Thorsen (2005-03-11):
+# Uruguay's DST was scheduled to end on Sunday, 2005-03-13, but in order to
+# save energy ... it was postponed two weeks....
+# http://www.presidencia.gub.uy/_Web/noticias/2005/03/2005031005.htm
+Rule	Uruguay	2005	only	-	Mar	27	 2:00	0	-
+# From Eduardo Cota (2005-09-27):
+# http://www.presidencia.gub.uy/_Web/decretos/2005/09/CM%20119_09%2009%202005_00001.PDF
+# This means that from 2005-10-09 at 02:00 local time, until 2006-03-12 at
+# 02:00 local time, official time in Uruguay will be at GMT -2.
+Rule	Uruguay	2005	only	-	Oct	 9	 2:00	1:00	S
+Rule	Uruguay	2006	only	-	Mar	12	 2:00	0	-
+# From Jesper Norgaard Welen (2006-09-06):
+# http://www.presidencia.gub.uy/_web/decretos/2006/09/CM%20210_08%2006%202006_00001.PDF
+Rule	Uruguay	2006	max	-	Oct	Sun>=1	 2:00	1:00	S
+Rule	Uruguay	2007	max	-	Mar	Sun>=8	 2:00	0	-
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone America/Montevideo	-3:44:44 -	LMT	1898 Jun 28
+			-3:44:44 -	MMT	1920 May  1	# Montevideo MT
+			-3:30	Uruguay	UY%sT	1942 Dec 14	# Uruguay Time
+			-3:00	Uruguay	UY%sT
+
+# Venezuela
+#
+# From John Stainforth (2007-11-28):
+# ... the change for Venezuela originally expected for 2007-12-31 has
+# been brought forward to 2007-12-09.  The official announcement was
+# published today in the "Gaceta Oficial de la Republica Bolivariana
+# de Venezuela, numero 38.819" (official document for all laws or
+# resolution publication)
+# http://www.globovision.com/news.php?nid=72208
+
+# Zone	NAME		GMTOFF	RULES	FORMAT	[UNTIL]
+Zone	America/Caracas	-4:27:44 -	LMT	1890
+			-4:27:40 -	CMT	1912 Feb 12 # Caracas Mean Time?
+			-4:30	-	VET	1965	     # Venezuela Time
+			-4:00	-	VET	2007 Dec  9 03:00
+			-4:30	-	VET
diff --git a/JodaTime/src/java/org/joda/time/tz/src/systemv b/JodaTime/src/java/org/joda/time/tz/src/systemv
index bfb332140..767388d6a 100644
--- a/JodaTime/src/java/org/joda/time/tz/src/systemv
+++ b/JodaTime/src/java/org/joda/time/tz/src/systemv
@@ -1,36 +1,39 @@
-# @(#)systemv	8.1
-
-# Old rules, should the need arise.
-# No attempt is made to handle Newfoundland, since it cannot be expressed
-# using the System V "TZ" scheme (half-hour offset), or anything outside
-# North America (no support for non-standard DST start/end dates), nor
-# the changes in the DST rules in the US after 1976 (which occurred after
-# the old rules were written).
-#
-# If you need the old rules, uncomment ## lines.
-# Compile this *without* leap second correction for true conformance.
-
-# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
-Rule	SystemV	min	1973	-	Apr	lastSun	2:00	1:00	D
-Rule	SystemV	min	1973	-	Oct	lastSun	2:00	0	S
-Rule	SystemV	1974	only	-	Jan	6	2:00	1:00	D
-Rule	SystemV	1974	only	-	Nov	lastSun	2:00	0	S
-Rule	SystemV	1975	only	-	Feb	23	2:00	1:00	D
-Rule	SystemV	1975	only	-	Oct	lastSun	2:00	0	S
-Rule	SystemV	1976	max	-	Apr	lastSun	2:00	1:00	D
-Rule	SystemV	1976	max	-	Oct	lastSun	2:00	0	S
-
-# Zone	NAME		GMTOFF	RULES/SAVE	FORMAT	[UNTIL]
-## Zone	SystemV/AST4ADT	-4:00	SystemV		A%sT
-## Zone	SystemV/EST5EDT	-5:00	SystemV		E%sT
-## Zone	SystemV/CST6CDT	-6:00	SystemV		C%sT
-## Zone	SystemV/MST7MDT	-7:00	SystemV		M%sT
-## Zone	SystemV/PST8PDT	-8:00	SystemV		P%sT
-## Zone	SystemV/YST9YDT	-9:00	SystemV		Y%sT
-## Zone	SystemV/AST4	-4:00	-		AST
-## Zone	SystemV/EST5	-5:00	-		EST
-## Zone	SystemV/CST6	-6:00	-		CST
-## Zone	SystemV/MST7	-7:00	-		MST
-## Zone	SystemV/PST8	-8:00	-		PST
-## Zone	SystemV/YST9	-9:00	-		YST
-## Zone	SystemV/HST10	-10:00	-		HST
+# <pre>
+# @(#)systemv	8.2
+# This file is in the public domain, so clarified as of
+# 2009-05-17 by Arthur David Olson.
+
+# Old rules, should the need arise.
+# No attempt is made to handle Newfoundland, since it cannot be expressed
+# using the System V "TZ" scheme (half-hour offset), or anything outside
+# North America (no support for non-standard DST start/end dates), nor
+# the changes in the DST rules in the US after 1976 (which occurred after
+# the old rules were written).
+#
+# If you need the old rules, uncomment ## lines.
+# Compile this *without* leap second correction for true conformance.
+
+# Rule	NAME	FROM	TO	TYPE	IN	ON	AT	SAVE	LETTER/S
+Rule	SystemV	min	1973	-	Apr	lastSun	2:00	1:00	D
+Rule	SystemV	min	1973	-	Oct	lastSun	2:00	0	S
+Rule	SystemV	1974	only	-	Jan	6	2:00	1:00	D
+Rule	SystemV	1974	only	-	Nov	lastSun	2:00	0	S
+Rule	SystemV	1975	only	-	Feb	23	2:00	1:00	D
+Rule	SystemV	1975	only	-	Oct	lastSun	2:00	0	S
+Rule	SystemV	1976	max	-	Apr	lastSun	2:00	1:00	D
+Rule	SystemV	1976	max	-	Oct	lastSun	2:00	0	S
+
+# Zone	NAME		GMTOFF	RULES/SAVE	FORMAT	[UNTIL]
+## Zone	SystemV/AST4ADT	-4:00	SystemV		A%sT
+## Zone	SystemV/EST5EDT	-5:00	SystemV		E%sT
+## Zone	SystemV/CST6CDT	-6:00	SystemV		C%sT
+## Zone	SystemV/MST7MDT	-7:00	SystemV		M%sT
+## Zone	SystemV/PST8PDT	-8:00	SystemV		P%sT
+## Zone	SystemV/YST9YDT	-9:00	SystemV		Y%sT
+## Zone	SystemV/AST4	-4:00	-		AST
+## Zone	SystemV/EST5	-5:00	-		EST
+## Zone	SystemV/CST6	-6:00	-		CST
+## Zone	SystemV/MST7	-7:00	-		MST
+## Zone	SystemV/PST8	-8:00	-		PST
+## Zone	SystemV/YST9	-9:00	-		YST
+## Zone	SystemV/HST10	-10:00	-		HST

From 9d151663dbb20d688e1cce0b52bd5c6efe879cee Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sat, 7 Aug 2010 22:50:34 +0000
Subject: [PATCH 02/36] Initialise file for v1.6.1

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1496 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/RELEASE-NOTES.txt | 94 ++++++--------------------------------
 1 file changed, 15 insertions(+), 79 deletions(-)

diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt
index 69f5ae2c5..d4ce5d63a 100644
--- a/JodaTime/RELEASE-NOTES.txt
+++ b/JodaTime/RELEASE-NOTES.txt
@@ -1,11 +1,12 @@
-Joda-Time version 1.6
----------------------
+Joda-Time version 1.6.1
+-----------------------
 
 Joda-Time is a date and time handling library that seeks to replace the JDK
 Date and Calendar classes.
 
-This is the seventh release of Joda-Time.
-This release contains enhancements, bug fixes and a time zone update.
+This is a patch release for Joda-Time 1.6.
+This release only contains bug fixes.
+We recommend all users of 1.6 upgrade to 1.6.1.
 
 We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
 
@@ -17,38 +18,8 @@ of restrictions. If the license causes you problems please contact the mailing l
 **  Please also check out our related projects   **
 ** http://joda-time.sourceforge.net/related.html **
 
-********************************************************************
- The next release will probably be v2.0
- This will be source and binary compatible with the exception that
- deprecated methods and classes will be removed.
- If you rely on the deprecated methods or classes please move to
- their replacements, or let us know why you can't move by writing
- in https://sourceforge.net/forum/forum.php?forum_id=337835
-********************************************************************
 
-
-Enhancements since 1.5
-----------------------
-- Add static factory methods to Duration [1909376]
-  Duration now has four factory methods, standardDays(), standardHours(),
-  standardMinutes() and standardSeconds(). These create durations of the
-  length normally associated with a day/hour/minute/second
-
-- Added Duration.getStandardSeconds() and Duration.toStandardSeconds()
-  These convert a duration in milliseconds to a number of seconds.
-
-- Added OSGi bundle information [1889787]
-  Joda-Time should be usable directly as an OSGi bundle
-
-- Added stable Chronology hash code implementations [2018795]
-  The hash codes of each Chronology implementation is now stable.
-  This should aid large scale caching/distribution tools.
-
-- Added DateTimeZone.isLocalDateTimeGap
-  Returns true/false depending on whether the time is in a time-zone gap
-
-
-Compatibility with 1.5
+Compatibility with 1.6
 ----------------------
 Binary compatible - Yes
 
@@ -57,58 +28,23 @@ Source compatible - Yes
 Serialization compatible - Yes
 
 Data compatible - Yes, except
-  - DateTimeZone data updated to version 2008i
+  - DateTimeZone data updated to version 2010k
 
 Semantic compatible - Yes
 
 
-Deprecations since 1.5
+Deprecations since 1.6
 ----------------------
+- None
 
 
-Bug fixes since 1.5
+Bug fixes since 1.6
 -------------------
-- ISODateTimeFormat millisecond parsing broken
-  Millisecond parsing would parse 12:00:00.4 as 4 milliseconds rather
-  than 400 milliseconds
-
-- ISODateTimeFormat basic field parsing too lenient
-  The basic parsers in ISODateTimeFormat were too lenient
-  They have been changed to only accept the correct number of digits as
-  per the ISO-8601 standard. The non basic parsers are unaffected
-
-- DateTimeFormat.forFields(List) method can't handle immutable [1877843]
-  Fix so that the method does not throw an exception when an unmodifiable
-  list is passed in
-
-- Fixed offset time zones calculated incorrect periods
-  ZonedChronology.ZonedDuration.isPrecise() did not take into account
-  the decorated isPrecise() value. This meant that date fields for fixed
-  offset time zones were always considered precise. The result was periods
-  containing months and years when they should not have done.
-
-- ZonedChronology (regression from 1.4) [1887104]
-  Fix to roundFloor/roundCeiling
-  Bug affected DST cutover in Autumn for time fields (not date fields)
-  
-- Clarify Javadoc time zone formats
-  Time zone formats were incorrectly documented as 'Z' instead of 'ZZ'
-  Javadoc only change
-
-- Period formatting [2025928]
-  Formatting option printZeroRarelyFirst() did not work unless years
-  field was included.
-
-- DateTimeZone (regression from 1.4) [fix also available in v1.5.2]
-  Fix getOffsetFromLocal DST gap adjustment
-  Bug affected parsing of DST cutover in Autumn
-
-- Parsing (regression from 1.4) [1839440] [fix also available in v1.5.1]
-  Support parsing all upper-case and all lower-case text
-
-- Javadoc clarity enhancements [fix also available in v1.5.1]
-  - Constants in Years/Months/Weeks/Days/Hours/Minutes/Seconds etc.
-  - Period/Interval Object constructors
+
+
+Enhancements since 1.6
+----------------------
+- None
 
 
 Feedback

From 6bc8dba4a931a2e15f519347e92e9816d69ed93c Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sat, 7 Aug 2010 22:58:33 +0000
Subject: [PATCH 03/36] Need to use WinSCP for releases now

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1497 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/release.bat | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/JodaTime/release.bat b/JodaTime/release.bat
index 154d9e6f3..2c52499d3 100644
--- a/JodaTime/release.bat
+++ b/JodaTime/release.bat
@@ -1,6 +1,5 @@
-call maven site:sshdeploy
 cd build
-pscp joda-time-1.6-bundle.jar scolebourne@shell.sourceforge.net:/home/groups/j/jo/joda-time/htdocs
+pscp joda-time-1.6-bundle.jar scolebourne,joda-time@web.sourceforge.net:/home/groups/j/jo/joda-time/htdocs
 cd ..
 svn mkdir "https://joda-time.svn.sourceforge.net/svnroot/joda-time/tags/v1_6_000" -m "Release 1.6"
 svn copy https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk/JodaTime https://joda-time.svn.sourceforge.net/svnroot/joda-time/tags/v1_6_000/JodaTime -m "Release 1.6"
\ No newline at end of file

From 456398e792188bab56b428c6857d63524b257be9 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sat, 7 Aug 2010 23:19:06 +0000
Subject: [PATCH 04/36] Fix so that builder works even when system time zone
 isn't UTC.

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1498 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 .../org/joda/time/tz/DateTimeZoneBuilder.java | 21 +++++++++++++------
 1 file changed, 15 insertions(+), 6 deletions(-)

diff --git a/JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java b/JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java
index c32fef2e6..d7901be5e 100644
--- a/JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java
+++ b/JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java
@@ -1385,7 +1385,8 @@ static PrecalculatedZone readFrom(DataInput in, String id) throws IOException {
          * @param transitions  the list of Transition objects
          * @param tailZone  optional zone for getting info beyond precalculated tables
          */
-        static PrecalculatedZone create(String id, boolean outputID, ArrayList transitions, DSTZone tailZone) {
+        static PrecalculatedZone create(String id, boolean outputID, ArrayList transitions,
+                                        DSTZone tailZone) {
             int size = transitions.size();
             if (size == 0) {
                 throw new IllegalArgumentException();
@@ -1422,6 +1423,9 @@ static PrecalculatedZone create(String id, boolean outputID, ArrayList transitio
                     zoneNameData = set;
                 }
             }
+
+            Chronology chrono = ISOChronology.getInstanceUTC();
+
             for (int i = 0; i < nameKeys.length - 1; i++) {
                 String curNameKey = nameKeys[i];
                 String nextNameKey = nameKeys[i + 1];
@@ -1429,7 +1433,7 @@ static PrecalculatedZone create(String id, boolean outputID, ArrayList transitio
                 long nextOffset = wallOffsets[i + 1];
                 long curStdOffset = standardOffsets[i];
                 long nextStdOffset = standardOffsets[i + 1];
-                Period p = new Period(trans[i], trans[i + 1], PeriodType.yearMonthDay());
+                Period p = new Period(trans[i], trans[i + 1], PeriodType.yearMonthDay(), chrono);
                 if (curOffset != nextOffset &&
                         curStdOffset == nextStdOffset &&
                         curNameKey.equals(nextNameKey) &&
@@ -1438,7 +1442,8 @@ static PrecalculatedZone create(String id, boolean outputID, ArrayList transitio
                         curNameKey.equals(zoneNameData[4])) {
                     
                     System.out.println("Fixing duplicate name key - " + nextNameKey);
-                    System.out.println("     - " + new DateTime(trans[i]) + " - " + new DateTime(trans[i + 1]));
+                    System.out.println("     - " + new DateTime(trans[i], chrono) +
+                                       " - " + new DateTime(trans[i + 1], chrono));
                     if (curOffset > nextOffset) {
                         nameKeys[i] = (curNameKey + "-Summer").intern();
                     } else if (curOffset < nextOffset) {
@@ -1447,9 +1452,12 @@ static PrecalculatedZone create(String id, boolean outputID, ArrayList transitio
                     }
                 }
             }
+
             if (tailZone != null) {
-                if (tailZone.iStartRecurrence.getNameKey().equals(tailZone.iEndRecurrence.getNameKey())) {
-                    System.out.println("Fixing duplicate recurrent name key - " + tailZone.iStartRecurrence.getNameKey());
+                if (tailZone.iStartRecurrence.getNameKey()
+                    .equals(tailZone.iEndRecurrence.getNameKey())) {
+                    System.out.println("Fixing duplicate recurrent name key - " +
+                                       tailZone.iStartRecurrence.getNameKey());
                     if (tailZone.iStartRecurrence.getSaveMillis() > 0) {
                         tailZone = new DSTZone(
                             tailZone.getID(),
@@ -1466,7 +1474,8 @@ static PrecalculatedZone create(String id, boolean outputID, ArrayList transitio
                 }
             }
             
-            return new PrecalculatedZone((outputID ? id : ""), trans, wallOffsets, standardOffsets, nameKeys, tailZone);
+            return new PrecalculatedZone
+                ((outputID ? id : ""), trans, wallOffsets, standardOffsets, nameKeys, tailZone);
         }
 
         // All array fields have the same length.

From 99a5ea56b6e96c561bb52d1df537e1010988fa20 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sat, 7 Aug 2010 23:22:20 +0000
Subject: [PATCH 05/36] Fix so that builder works even when system time zone
 isn't UTC.

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1499 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/RELEASE-NOTES.txt | 1 +
 1 file changed, 1 insertion(+)

diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt
index d4ce5d63a..7a0ff18dd 100644
--- a/JodaTime/RELEASE-NOTES.txt
+++ b/JodaTime/RELEASE-NOTES.txt
@@ -40,6 +40,7 @@ Deprecations since 1.6
 
 Bug fixes since 1.6
 -------------------
+- Time zone compiler now handles non-UTC better
 
 
 Enhancements since 1.6

From c6c2ce08511c19833ba57c3d6f3c635b6d6a18cc Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sat, 7 Aug 2010 23:29:58 +0000
Subject: [PATCH 06/36] Fix method name typo - DateTimeFormatter.getChronolgy()
 [2783325]

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1500 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/RELEASE-NOTES.txt                             |  3 ++-
 .../java/org/joda/time/format/DateTimeFormatter.java   | 10 ++++++++++
 .../org/joda/time/format/TestDateTimeFormatter.java    |  4 ++--
 3 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt
index 7a0ff18dd..2d3bc2f10 100644
--- a/JodaTime/RELEASE-NOTES.txt
+++ b/JodaTime/RELEASE-NOTES.txt
@@ -35,7 +35,8 @@ Semantic compatible - Yes
 
 Deprecations since 1.6
 ----------------------
-- None
+- DateTimeFormatter.getChronolgy() [2783325]
+  Incorrect spelling - new method DateTimeFormatter.getChronology()
 
 
 Bug fixes since 1.6
diff --git a/JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java b/JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java
index 4ea36e0be..a83cca71b 100644
--- a/JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java
+++ b/JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java
@@ -257,6 +257,16 @@ public DateTimeFormatter withChronology(Chronology chrono) {
      * 
      * @return the chronology to use as an override
      */
+    public Chronology getChronology() {
+        return iChrono;
+    }
+
+    /**
+     * Gets the chronology to use as an override.
+     * 
+     * @return the chronology to use as an override
+     * @deprecated Use the method with the correct spelling
+     */
     public Chronology getChronolgy() {
         return iChrono;
     }
diff --git a/JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java b/JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java
index 9ca69f767..5db45eb56 100644
--- a/JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java
+++ b/JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java
@@ -257,11 +257,11 @@ public void testWithGetZone() {
 
     public void testWithGetChronology() {
         DateTimeFormatter f2 = f.withChronology(BUDDHIST_PARIS);
-        assertEquals(BUDDHIST_PARIS, f2.getChronolgy());
+        assertEquals(BUDDHIST_PARIS, f2.getChronology());
         assertSame(f2, f2.withChronology(BUDDHIST_PARIS));
         
         f2 = f.withChronology(null);
-        assertEquals(null, f2.getChronolgy());
+        assertEquals(null, f2.getChronology());
         assertSame(f2, f2.withChronology(null));
     }
 

From b34f8e67afea662997b8880e73dd79d042504d5c Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sat, 7 Aug 2010 23:47:06 +0000
Subject: [PATCH 07/36] Update documentation including backport of fixes from
 TRUNK

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1501 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/xdocs/cal_islamic.xml  |  2 +-
 JodaTime/xdocs/index.xml        |  8 +++---
 JodaTime/xdocs/installation.xml |  7 +++--
 JodaTime/xdocs/navigation.xml   |  7 +++--
 JodaTime/xdocs/privacy.xml      | 49 +++++++++++++++++++++++++++++++++
 JodaTime/xdocs/related.xml      |  9 ++++--
 JodaTime/xdocs/tz_update.xml    |  2 +-
 JodaTime/xdocs/upgradeto161.xml | 22 +++++++++++++++
 8 files changed, 93 insertions(+), 13 deletions(-)
 create mode 100644 JodaTime/xdocs/privacy.xml
 create mode 100644 JodaTime/xdocs/upgradeto161.xml

diff --git a/JodaTime/xdocs/cal_islamic.xml b/JodaTime/xdocs/cal_islamic.xml
index bbc987635..350743efd 100644
--- a/JodaTime/xdocs/cal_islamic.xml
+++ b/JodaTime/xdocs/cal_islamic.xml
@@ -29,7 +29,7 @@ the second 29 days and so on.
 In a leap year, the twelfth month has 30 days instead of the normal 29.
 </p>
 <p>
-There definition of a leap year in the Islamic calendar varies.
+The definition of a leap year in the Islamic calendar varies.
 All agree on a 30 year cycle, however which years within the 30 are leap
 varies by the leap year pattern:
 </p>
diff --git a/JodaTime/xdocs/index.xml b/JodaTime/xdocs/index.xml
index 5df998e04..1c9221f29 100644
--- a/JodaTime/xdocs/index.xml
+++ b/JodaTime/xdocs/index.xml
@@ -58,8 +58,8 @@ public boolean isJoinedInLastThreeMonths(<a href="api-release/index.html?org/jod
   return last3Months.contains(datetimeJoined);
 }
 -->
-Version 1.6 was released on 2008-10-27 -
-<a href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=104212">Download now</a>
+Version 1.6.1 was released on 2010-08-08 -
+<a href="http://sourceforge.net/projects/joda-time/files/joda-time/">Download now</a>
 </p>
 </section>
 
@@ -143,7 +143,7 @@ Various documentation is available:
 
 <section name="Releases">
 <p>
-<a href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=104212">Release 1.6</a>
+<a href="http://sourceforge.net/projects/joda-time/files/joda-time/">Release 1.6.1</a>
 is the current latest release.
 This release is considered stable and worthy of the 1.x tag.
 It has extensive testing suites and has been used in production.
@@ -162,7 +162,7 @@ Support on bugs, library usage or enhancement requests is available via:
 </p>
 <ul>
 <li>the joda-interest <a href="mail-lists.html">mailing list</a>. Due to spam, you must be subscribed to post to the mailing list.</li>
-<li>the joda-time sourceforge <a href="http://sourceforge.net/forum/forum.php?forum_id=337835">forum</a>.</li>
+<li>the joda-time sourceforge <a href="http://sourceforge.net/projects/joda-time/forums/forum/337835">forum</a>.</li>
 </ul>
 <p>
 Alternatively, you can contact the project lead, Stephen Colebourne via scolebourne.at.users.sourceforge.net.
diff --git a/JodaTime/xdocs/installation.xml b/JodaTime/xdocs/installation.xml
index 46c699c06..a3fda18f8 100644
--- a/JodaTime/xdocs/installation.xml
+++ b/JodaTime/xdocs/installation.xml
@@ -11,17 +11,18 @@
 <section name="Download and Installation">
 <p>
 To use Joda-Time you need to
-<a href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=104212">download the latest version</a>.
-The download will contain the joda-time-1.6.jar.
+<a href="http://sourceforge.net/projects/joda-time/files/joda-time/">download the latest version</a>.
+The download will contain the joda-time-1.6.1.jar.
 Once you add this to your classpath you will be able to use Joda-Time.
 </p>
 <p>
-The binary download also includes joda-time-1.6-sources.jar, which is a jar file
+The binary download also includes joda-time-1.6.1-sources.jar, which is a jar file
 of the source code suitable for linking to the jar file in IDEs such as Eclipse.
 </p>
 <p>
 The release notes for upgraders can be found here:
 <ul>
+<li><a href="upgradeto161.html">Version 1.6 to Version 1.6.1</a></li>
 <li><a href="upgradeto160.html">Version 1.5 to Version 1.6</a></li>
 <li><a href="upgradeto152.html">Version 1.5.1 to Version 1.5.2</a></li>
 <li><a href="upgradeto151.html">Version 1.5 to Version 1.5.1</a></li>
diff --git a/JodaTime/xdocs/navigation.xml b/JodaTime/xdocs/navigation.xml
index ecf4317a5..2e201795f 100644
--- a/JodaTime/xdocs/navigation.xml
+++ b/JodaTime/xdocs/navigation.xml
@@ -21,7 +21,7 @@
       <item name="Related projects" href="/related.html"/>
       <item name="Javadoc (Release)" href="/api-release/index.html"/>
       <item name="License" href="/license.html"/>
-      <item name="Download" href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=104212"/>
+      <item name="Download" href="http://sourceforge.net/projects/joda-time/files/joda-time/"/>
     </menu>
     
     <menu name="Key concepts">
@@ -56,14 +56,17 @@
     
     <menu name="Joda">
       <item name="Joda home" href="http://joda.sourceforge.net"/>
-      <item name="Beans" href="http://joda.sourceforge.net/beans.html"/>
+      <item name="Money" href="http://joda-money.sourceforge.net/index.html"/>
       <item name="Primitives" href="http://joda-primitives.sourceforge.net/index.html"/>
+      <item name="Beans" href="http://joda-beans.sourceforge.net/index.html"/>
     </menu>
     
     <footer>
       <a href="http://sourceforge.net">
         <img src="http://sourceforge.net/sflogo.php?group_id=97367&amp;type=2" width="125" height="37" border="0" alt="SourceForge.net Logo" />
       </a>
+      <br />
+      <a href="privacy.html">Privacy</a>
     </footer>
   </body>
 </project>
diff --git a/JodaTime/xdocs/privacy.xml b/JodaTime/xdocs/privacy.xml
new file mode 100644
index 000000000..4cb646fb4
--- /dev/null
+++ b/JodaTime/xdocs/privacy.xml
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Privacy</title>
+ </properties>
+<body>
+
+<!-- ========================================================================= -->
+
+<section name="Privacy">
+<p>
+Information about your use of this website is collected using cookies.
+The collected information consists of the following:
+<br />
+   1. The IP address from which you access the website;<br />
+   2. The type of browser and operating system you use to access our site;<br />
+   3. The date and time you access our site;<br />
+   4. The pages you visit; and<br />
+   5. The addresses of pages from where you followed a link to our site.<br />
+</p>
+<p>
+Part of this information is gathered using a tracking cookie set by the 
+<a href="http://www.google.com/analytics/">Google Analytics</a> service
+and handled by Google as described in their 
+<a href="http://www.google.com/privacy.html">privacy policy</a>. See your browser documentation for
+instructions on how to disable the cookie if you prefer not to share this data with Google.
+</p>
+<p>
+We use the gathered information to help us make our site more useful to visitors and to better
+understand how and when our site is used. We do not track or collect personally identifiable information
+or associate gathered data with any personally identifying information from other sources.
+</p>
+<p>
+By using this website, you consent to the collection of this data in the manner and for the purpose described above.
+<br />
+</p>
+<!-- <p>
+This website also makes use of targetted adverts supplied by
+<a href="https://www.google.com/adsense">Google Adsense</a>.
+To achieve this targetting, Google utilises cookies which collect the same information described above.
+The cookies identfy your usage of many different internet websites, not just this one, and may be used
+in conjunction with other advertising networks.
+For more details on the Adsense program, and to find out your options to control how the data
+is used please <a href="http://www.google.com/privacy_ads.html">click here</a>.
+</p>-->
+</section>
+</body>
+</document>
diff --git a/JodaTime/xdocs/related.xml b/JodaTime/xdocs/related.xml
index 691e87c77..abd5d56da 100644
--- a/JodaTime/xdocs/related.xml
+++ b/JodaTime/xdocs/related.xml
@@ -14,8 +14,11 @@
 A number of libraries and applications are now built using Joda-Time.
 </p>
 <ul>
-<li><a href="http://joda-time.sourceforge.net/contrib/hibernate/index.html">Hibernate support</a>
+
+<li><a href="http://usertype.sourceforge.net/">Extended Hibernate support</a>
 A set of classes to link Joda-Time to databases using Hibernate.</li>
+<li><a href="http://joda-time.sourceforge.net/contrib/hibernate/index.html">Original Hibernate support</a>
+The original set of classes to link Joda-Time to databases using Hibernate (UserType project is newer and better maintained).</li>
 <li><a href="http://joda-time.sourceforge.net/contrib/jsptags/index.html">JSP tag support</a>
 A tag library in the style of JSTL to allow Joda-Time classes to be used in JSP.</li>
 <li><a href="http://joda-time.sourceforge.net/contrib/i18n/index.html">I18N support</a>
@@ -23,7 +26,9 @@ A simple library that provides additional internationalization data for Joda-Tim
 <li><a href="http://objectlabkit.sourceforge.net/">Holiday calculation</a>
 Support for working and non-working days, plus how to calculate and resolve holidays.</li>
 <li><a href="http://code.google.com/p/google-rfc-2445/">Recurrance (RFC 2445)</a>
-Support for the RFC2445 recurrance specification, as found in iCal.</li>
+Support for the RFC2445 recurrence specification, as found in iCal.</li>
+<li><a href="http://www.datanucleus.org/plugins/store.types.jodatime.html">DataNucleus support</a>
+A library providing persistence via the DataNucleus platform.</li>
 </ul>
 <p>
 If your open source library provides a value added feature on top of Joda-Time, then let us know!
diff --git a/JodaTime/xdocs/tz_update.xml b/JodaTime/xdocs/tz_update.xml
index 5e4bd6847..8483adcc7 100644
--- a/JodaTime/xdocs/tz_update.xml
+++ b/JodaTime/xdocs/tz_update.xml
@@ -35,7 +35,7 @@ you need to pick the 'FTP distribution' or 'HTTP mirror' links.
 </p>
 <p>
 Secondly, you need a source code download of Joda-Time, available via
-<a href="http://sourceforge.net/project/showfiles.php?group_id=97367&amp;package_id=104212">sourceforge</a>.
+<a href="http://sourceforge.net/projects/joda-time/files/joda-time/">sourceforge</a>.
 </p>
 <p>
 Thirdly, you must take the time zone data files from step one, and replace those in the Joda-Time download.
diff --git a/JodaTime/xdocs/upgradeto161.xml b/JodaTime/xdocs/upgradeto161.xml
new file mode 100644
index 000000000..0fcacde11
--- /dev/null
+++ b/JodaTime/xdocs/upgradeto161.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 1.6 to 1.6.1</title>
+  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 1.6 to version 1.6.1.
+<source>
+
+</source>
+</p>
+</section>
+
+</body>
+</document>

From f272ce2c67b8f9730d350be8945992977ddd9c29 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 00:02:05 +0000
Subject: [PATCH 08/36] Backport Javadoc fixes

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1502 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/RELEASE-NOTES.txt                    |  2 +
 .../src/java/org/joda/time/LocalDate.java     | 18 ++++--
 .../src/java/org/joda/time/LocalDateTime.java | 18 ++++--
 .../src/java/org/joda/time/LocalTime.java     | 18 ++++--
 JodaTime/src/java/org/joda/time/Months.java   |  4 +-
 .../org/joda/time/tz/DateTimeZoneBuilder.java | 57 ++++++++++---------
 6 files changed, 75 insertions(+), 42 deletions(-)

diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt
index 2d3bc2f10..4cb325078 100644
--- a/JodaTime/RELEASE-NOTES.txt
+++ b/JodaTime/RELEASE-NOTES.txt
@@ -43,6 +43,8 @@ Bug fixes since 1.6
 -------------------
 - Time zone compiler now handles non-UTC better
 
+- Assorted Javadoc clarifications, including [2721880]
+
 
 Enhancements since 1.6
 ----------------------
diff --git a/JodaTime/src/java/org/joda/time/LocalDate.java b/JodaTime/src/java/org/joda/time/LocalDate.java
index 45415dc09..d37b8d8d9 100644
--- a/JodaTime/src/java/org/joda/time/LocalDate.java
+++ b/JodaTime/src/java/org/joda/time/LocalDate.java
@@ -108,11 +108,16 @@
     //-----------------------------------------------------------------------
     /**
      * Constructs a LocalDate from a <code>java.util.Calendar</code>
-     * using exactly the same field values avoiding any time zone effects.
+     * using exactly the same field values.
      * <p>
      * Each field is queried from the Calendar and assigned to the LocalDate.
      * This is useful if you have been using the Calendar as a local date,
-     * ignoing the zone.
+     * ignoring the zone.
+     * <p>
+     * One advantage of this method is that this method is unaffected if the
+     * version of the time zone data differs between the JDK and Joda-Time.
+     * That is because the local field values are transferred, calculated using
+     * the JDK time zone data and without using the Joda-Time time zone data.
      * <p>
      * This factory method ignores the type of the calendar and always
      * creates a LocalDate with ISO chronology. It is expected that you
@@ -137,11 +142,16 @@ public static LocalDate fromCalendarFields(Calendar calendar) {
 
     /**
      * Constructs a LocalDate from a <code>java.util.Date</code>
-     * using exactly the same field values avoiding any time zone effects.
+     * using exactly the same field values.
      * <p>
      * Each field is queried from the Date and assigned to the LocalDate.
      * This is useful if you have been using the Date as a local date,
-     * ignoing the zone.
+     * ignoring the zone.
+     * <p>
+     * One advantage of this method is that this method is unaffected if the
+     * version of the time zone data differs between the JDK and Joda-Time.
+     * That is because the local field values are transferred, calculated using
+     * the JDK time zone data and without using the Joda-Time time zone data.
      * <p>
      * This factory method always creates a LocalDate with ISO chronology.
      *
diff --git a/JodaTime/src/java/org/joda/time/LocalDateTime.java b/JodaTime/src/java/org/joda/time/LocalDateTime.java
index 7d0376fac..a070f9462 100644
--- a/JodaTime/src/java/org/joda/time/LocalDateTime.java
+++ b/JodaTime/src/java/org/joda/time/LocalDateTime.java
@@ -96,11 +96,16 @@
     //-----------------------------------------------------------------------
     /**
      * Constructs a LocalDateTime from a <code>java.util.Calendar</code>
-     * using exactly the same field values avoiding any time zone effects.
+     * using exactly the same field values.
      * <p>
      * Each field is queried from the Calendar and assigned to the LocalDateTime.
      * This is useful if you have been using the Calendar as a local date,
-     * ignoing the zone.
+     * ignoring the zone.
+     * <p>
+     * One advantage of this method is that this method is unaffected if the
+     * version of the time zone data differs between the JDK and Joda-Time.
+     * That is because the local field values are transferred, calculated using
+     * the JDK time zone data and without using the Joda-Time time zone data.
      * <p>
      * This factory method ignores the type of the calendar and always
      * creates a LocalDateTime with ISO chronology. It is expected that you
@@ -129,11 +134,16 @@ public static LocalDateTime fromCalendarFields(Calendar calendar) {
 
     /**
      * Constructs a LocalDateTime from a <code>java.util.Date</code>
-     * using exactly the same field values avoiding any time zone effects.
+     * using exactly the same field values.
      * <p>
      * Each field is queried from the Date and assigned to the LocalDateTime.
      * This is useful if you have been using the Date as a local date,
-     * ignoing the zone.
+     * ignoring the zone.
+     * <p>
+     * One advantage of this method is that this method is unaffected if the
+     * version of the time zone data differs between the JDK and Joda-Time.
+     * That is because the local field values are transferred, calculated using
+     * the JDK time zone data and without using the Joda-Time time zone data.
      * <p>
      * This factory method always creates a LocalDateTime with ISO chronology.
      *
diff --git a/JodaTime/src/java/org/joda/time/LocalTime.java b/JodaTime/src/java/org/joda/time/LocalTime.java
index 4e0ecf881..e800ca1ca 100644
--- a/JodaTime/src/java/org/joda/time/LocalTime.java
+++ b/JodaTime/src/java/org/joda/time/LocalTime.java
@@ -136,11 +136,16 @@ public static LocalTime fromMillisOfDay(long millisOfDay, Chronology chrono) {
     //-----------------------------------------------------------------------
     /**
      * Constructs a LocalTime from a <code>java.util.Calendar</code>
-     * using exactly the same field values avoiding any time zone effects.
+     * using exactly the same field values.
      * <p>
      * Each field is queried from the Calendar and assigned to the LocalTime.
      * This is useful if you have been using the Calendar as a local time,
-     * ignoing the zone.
+     * ignoring the zone.
+     * <p>
+     * One advantage of this method is that this method is unaffected if the
+     * version of the time zone data differs between the JDK and Joda-Time.
+     * That is because the local field values are transferred, calculated using
+     * the JDK time zone data and without using the Joda-Time time zone data.
      * <p>
      * This factory method ignores the type of the calendar and always
      * creates a LocalTime with ISO chronology. It is expected that you
@@ -166,11 +171,16 @@ public static LocalTime fromCalendarFields(Calendar calendar) {
 
     /**
      * Constructs a LocalTime from a <code>java.util.Date</code>
-     * using exactly the same field values avoiding any time zone effects.
+     * using exactly the same field values.
      * <p>
      * Each field is queried from the Date and assigned to the LocalTime.
      * This is useful if you have been using the Date as a local time,
-     * ignoing the zone.
+     * ignoring the zone.
+     * <p>
+     * One advantage of this method is that this method is unaffected if the
+     * version of the time zone data differs between the JDK and Joda-Time.
+     * That is because the local field values are transferred, calculated using
+     * the JDK time zone data and without using the Joda-Time time zone data.
      * <p>
      * This factory method always creates a LocalTime with ISO chronology.
      *
diff --git a/JodaTime/src/java/org/joda/time/Months.java b/JodaTime/src/java/org/joda/time/Months.java
index 3dc9bd361..f8d4b3ad2 100644
--- a/JodaTime/src/java/org/joda/time/Months.java
+++ b/JodaTime/src/java/org/joda/time/Months.java
@@ -41,7 +41,7 @@
 
     /** Constant representing zero months. */
     public static final Months ZERO = new Months(0);
-    /** Constant representing one day. */
+    /** Constant representing one month. */
     public static final Months ONE = new Months(1);
     /** Constant representing two months. */
     public static final Months TWO = new Months(2);
@@ -70,7 +70,7 @@
     /** Constant representing the minimum number of months that can be stored in this object. */
     public static final Months MIN_VALUE = new Months(Integer.MIN_VALUE);
 
-    /** The paser to use for this class. */
+    /** The parser to use for this class. */
     private static final PeriodFormatter PARSER = ISOPeriodFormat.standard().withParseType(PeriodType.months());
     /** Serialization version. */
     private static final long serialVersionUID = 87525275727380867L;
diff --git a/JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java b/JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java
index d7901be5e..d3a0630c7 100644
--- a/JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java
+++ b/JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java
@@ -75,7 +75,7 @@
  *     .addRecurringSavings("PDT", 3600000, 1975, 1975, 'w', 2, 23,  0, false, 7200000)
  *     .addRecurringSavings("PDT", 3600000, 1976, 1986, 'w', 4, -1,  7, false, 7200000)
  *     .addRecurringSavings("PDT", 3600000, 1987, 2147483647, 'w', 4, 1, 7, true, 7200000)
- *     .toDateTimeZone("America/Los_Angeles");
+ *     .toDateTimeZone("America/Los_Angeles", true);
  * </pre>
  *
  * @author Brian S O'Neill
@@ -230,16 +230,16 @@ public DateTimeZoneBuilder() {
      * Adds a cutover for added rules. The standard offset at the cutover
      * defaults to 0. Call setStandardOffset afterwards to change it.
      *
-     * @param year year of cutover
+     * @param year  the year of cutover
      * @param mode 'u' - cutover is measured against UTC, 'w' - against wall
-     * offset, 's' - against standard offset.
-     * @param dayOfMonth if negative, set to ((last day of month) - ~dayOfMonth).
-     * For example, if -1, set to last day of month
-     * @param dayOfWeek if 0, ignore
-     * @param advanceDayOfWeek if dayOfMonth does not fall on dayOfWeek, advance to
-     * dayOfWeek when true, retreat when false.
-     * @param millisOfDay additional precision for specifying time of day of
-     * cutover
+     *  offset, 's' - against standard offset
+     * @param monthOfYear  the month from 1 (January) to 12 (December)
+     * @param dayOfMonth  if negative, set to ((last day of month) - ~dayOfMonth).
+     *  For example, if -1, set to last day of month
+     * @param dayOfWeek  from 1 (Monday) to 7 (Sunday), if 0 then ignore
+     * @param advanceDayOfWeek  if dayOfMonth does not fall on dayOfWeek, advance to
+     *  dayOfWeek when true, retreat when false.
+     * @param millisOfDay  additional precision for specifying time of day of cutover
      */
     public DateTimeZoneBuilder addCutover(int year,
                                           char mode,
@@ -262,6 +262,7 @@ public DateTimeZoneBuilder addCutover(int year,
     /**
      * Sets the standard offset to use for newly added rules until the next
      * cutover is added.
+     * @param standardOffset  the standard offset in millis
      */
     public DateTimeZoneBuilder setStandardOffset(int standardOffset) {
         getLastRuleSet().setStandardOffset(standardOffset);
@@ -279,22 +280,22 @@ public DateTimeZoneBuilder setFixedSavings(String nameKey, int saveMillis) {
     /**
      * Add a recurring daylight saving time rule.
      *
-     * @param nameKey name key of new rule
-     * @param saveMillis milliseconds to add to standard offset
-     * @param fromYear First year that rule is in effect. MIN_VALUE indicates
-     * beginning of time.
-     * @param toYear Last year (inclusive) that rule is in effect. MAX_VALUE
-     * indicates end of time.
-     * @param mode 'u' - transitions are calculated against UTC, 'w' -
-     * transitions are calculated against wall offset, 's' - transitions are
-     * calculated against standard offset.
-     * @param dayOfMonth if negative, set to ((last day of month) - ~dayOfMonth).
-     * For example, if -1, set to last day of month
-     * @param dayOfWeek if 0, ignore
-     * @param advanceDayOfWeek if dayOfMonth does not fall on dayOfWeek, advance to
-     * dayOfWeek when true, retreat when false.
-     * @param millisOfDay additional precision for specifying time of day of
-     * transitions
+     * @param nameKey  the name key of new rule
+     * @param saveMillis  the milliseconds to add to standard offset
+     * @param fromYear  the first year that rule is in effect, MIN_VALUE indicates
+     * beginning of time
+     * @param toYear  the last year (inclusive) that rule is in effect, MAX_VALUE
+     *  indicates end of time
+     * @param mode  'u' - transitions are calculated against UTC, 'w' -
+     *  transitions are calculated against wall offset, 's' - transitions are
+     *  calculated against standard offset
+     * @param monthOfYear  the month from 1 (January) to 12 (December)
+     * @param dayOfMonth  if negative, set to ((last day of month) - ~dayOfMonth).
+     *  For example, if -1, set to last day of month
+     * @param dayOfWeek  from 1 (Monday) to 7 (Sunday), if 0 then ignore
+     * @param advanceDayOfWeek  if dayOfMonth does not fall on dayOfWeek, advance to
+     *  dayOfWeek when true, retreat when false.
+     * @param millisOfDay  additional precision for specifying time of day of transitions
      */
     public DateTimeZoneBuilder addRecurringSavings(String nameKey, int saveMillis,
                                                    int fromYear, int toYear,
@@ -435,7 +436,7 @@ private boolean addTransition(ArrayList transitions, Transition tr) {
      * Encodes a built DateTimeZone to the given stream. Call readFrom to
      * decode the data into a DateTimeZone object.
      *
-     * @param out output stream to receive encoded DateTimeZone.
+     * @param out  the output stream to receive the encoded DateTimeZone
      * @since 1.5 (parameter added)
      */
     public void writeTo(String zoneID, OutputStream out) throws IOException {
@@ -450,7 +451,7 @@ public void writeTo(String zoneID, OutputStream out) throws IOException {
      * Encodes a built DateTimeZone to the given stream. Call readFrom to
      * decode the data into a DateTimeZone object.
      *
-     * @param out output stream to receive encoded DateTimeZone.
+     * @param out  the output stream to receive the encoded DateTimeZone
      * @since 1.5 (parameter added)
      */
     public void writeTo(String zoneID, DataOutput out) throws IOException {

From fa34fbf9d80d3ca3329f459f18cfa5f441b5f3bb Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 00:07:15 +0000
Subject: [PATCH 09/36] Fix DST cutover issues for LocalDate.toInterval()
 [2487417] Raised by Luc Claes

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1503 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/RELEASE-NOTES.txt                      |  3 +++
 JodaTime/src/java/org/joda/time/LocalDate.java  | 10 +++++++++-
 .../org/joda/time/TestLocalDate_Basics.java     | 17 ++++++++++++++---
 3 files changed, 26 insertions(+), 4 deletions(-)

diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt
index 4cb325078..2ea197a19 100644
--- a/JodaTime/RELEASE-NOTES.txt
+++ b/JodaTime/RELEASE-NOTES.txt
@@ -41,6 +41,9 @@ Deprecations since 1.6
 
 Bug fixes since 1.6
 -------------------
+- LocalDate.toInterval() [2487417]
+  Now handles time zones which have no midnight at DST cutover
+
 - Time zone compiler now handles non-UTC better
 
 - Assorted Javadoc clarifications, including [2721880]
diff --git a/JodaTime/src/java/org/joda/time/LocalDate.java b/JodaTime/src/java/org/joda/time/LocalDate.java
index d37b8d8d9..586bdade6 100644
--- a/JodaTime/src/java/org/joda/time/LocalDate.java
+++ b/JodaTime/src/java/org/joda/time/LocalDate.java
@@ -836,6 +836,9 @@ public DateTime toDateTime(LocalTime time, DateTimeZone zone) {
      * Converts this object to an Interval representing the whole day
      * in the default time zone.
      * <p>
+     * The interval may have more or less than 24 hours if this is a daylight
+     * savings cutover date.
+     * <p>
      * This instance is immutable and unaffected by this method call.
      *
      * @return a interval over the day
@@ -847,6 +850,9 @@ public Interval toInterval() {
     /**
      * Converts this object to an Interval representing the whole day.
      * <p>
+     * The interval may have more or less than 24 hours if this is a daylight
+     * savings cutover date.
+     * <p>
      * This instance is immutable and unaffected by this method call.
      *
      * @param zone  the zone to get the Interval in, null means default
@@ -854,7 +860,9 @@ public Interval toInterval() {
      */
     public Interval toInterval(DateTimeZone zone) {
         zone = DateTimeUtils.getZone(zone);
-        return toDateMidnight(zone).toInterval();
+        DateTime start = toDateTimeAtStartOfDay(zone);
+        DateTime end = plusDays(1).toDateTimeAtStartOfDay(zone);
+        return new Interval(start, end);
     }
 
     //-----------------------------------------------------------------------
diff --git a/JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java b/JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java
index 09134009d..e18b2bb4a 100644
--- a/JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java
+++ b/JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java
@@ -902,7 +902,7 @@ public void testToInterval() {
         LocalDate base = new LocalDate(2005, 6, 9, COPTIC_PARIS); // PARIS irrelevant
         Interval test = base.toInterval();
         check(base, 2005, 6, 9);
-        DateTime start = base.toDateTimeAtMidnight();
+        DateTime start = base.toDateTimeAtStartOfDay();
         DateTime end = start.plus(Period.days(1));
         Interval expected = new Interval(start, end);
         assertEquals(expected, test);
@@ -913,17 +913,28 @@ public void testToInterval_Zone() {
         LocalDate base = new LocalDate(2005, 6, 9, COPTIC_PARIS); // PARIS irrelevant
         Interval test = base.toInterval(TOKYO);
         check(base, 2005, 6, 9);
-        DateTime start = base.toDateTimeAtMidnight(TOKYO);
+        DateTime start = base.toDateTimeAtStartOfDay(TOKYO);
         DateTime end = start.plus(Period.days(1));
         Interval expected = new Interval(start, end);
         assertEquals(expected, test);
     }
 
+    public void testToInterval_Zone_noMidnight() {
+        LocalDate base = new LocalDate(2006, 4, 1, ISO_LONDON);  // LONDON irrelevant
+        DateTimeZone gaza = DateTimeZone.forID("Asia/Gaza");
+        Interval test = base.toInterval(gaza);
+        check(base, 2006, 4, 1);
+        DateTime start = new DateTime(2006, 4, 1, 1, 0, 0, 0, gaza);
+        DateTime end = new DateTime(2006, 4, 2, 0, 0, 0, 0, gaza);
+        Interval expected = new Interval(start, end);
+        assertEquals(expected, test);
+    }
+
     public void testToInterval_nullZone() {
         LocalDate base = new LocalDate(2005, 6, 9, COPTIC_PARIS); // PARIS irrelevant
         Interval test = base.toInterval(null);
         check(base, 2005, 6, 9);
-        DateTime start = base.toDateTimeAtMidnight(LONDON);
+        DateTime start = base.toDateTimeAtStartOfDay(LONDON);
         DateTime end = start.plus(Period.days(1));
         Interval expected = new Interval(start, end);
         assertEquals(expected, test);

From 6ed8bd62eb3a31e925bc09632849d603202e4d73 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 00:15:27 +0000
Subject: [PATCH 10/36] Fix possible concurrency hole in
 PeriodFormatBuilder.Separator [2820871]

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1504 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/RELEASE-NOTES.txt                                | 3 +++
 .../java/org/joda/time/format/PeriodFormatterBuilder.java | 8 ++++----
 2 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt
index 2ea197a19..a1a40dabd 100644
--- a/JodaTime/RELEASE-NOTES.txt
+++ b/JodaTime/RELEASE-NOTES.txt
@@ -44,6 +44,9 @@ Bug fixes since 1.6
 - LocalDate.toInterval() [2487417]
   Now handles time zones which have no midnight at DST cutover
 
+- Period formatting concurrency [2820871]
+  Fix possible concurrency hole in PeriodFormatBuilder.Separator
+
 - Time zone compiler now handles non-UTC better
 
 - Assorted Javadoc clarifications, including [2721880]
diff --git a/JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java b/JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java
index c12a131e3..6623d1cc6 100644
--- a/JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java
+++ b/JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java
@@ -1583,10 +1583,10 @@ public int parseInto(
         private final boolean iUseBefore;
         private final boolean iUseAfter;
 
-        private PeriodPrinter iBeforePrinter;
-        private PeriodPrinter iAfterPrinter;
-        private PeriodParser iBeforeParser;
-        private PeriodParser iAfterParser;
+        private final PeriodPrinter iBeforePrinter;
+        private volatile PeriodPrinter iAfterPrinter;
+        private final PeriodParser iBeforeParser;
+        private volatile PeriodParser iAfterParser;
 
         Separator(String text, String finalText, String[] variants,
                 PeriodPrinter beforePrinter, PeriodParser beforeParser,

From af9ebf5a2f6b6fa259ac1ad69360597d99985efa Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 00:21:24 +0000
Subject: [PATCH 11/36] Fix fromDateFields() where j.u.Date before 1970
 reported by Jure Mercun

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1505 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/RELEASE-NOTES.txt                           |  3 +++
 JodaTime/src/java/org/joda/time/LocalTime.java       |  2 +-
 JodaTime/src/java/org/joda/time/TimeOfDay.java       |  2 +-
 .../org/joda/time/TestLocalTime_Constructors.java    | 12 +++++++++++-
 .../org/joda/time/TestTimeOfDay_Constructors.java    | 12 +++++++++++-
 5 files changed, 27 insertions(+), 4 deletions(-)

diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt
index a1a40dabd..ad7fcf989 100644
--- a/JodaTime/RELEASE-NOTES.txt
+++ b/JodaTime/RELEASE-NOTES.txt
@@ -41,6 +41,9 @@ Deprecations since 1.6
 
 Bug fixes since 1.6
 -------------------
+- LocalTime.fromDateFields()
+  Now handles times based on java.util.Date before 1970
+
 - LocalDate.toInterval() [2487417]
   Now handles time zones which have no midnight at DST cutover
 
diff --git a/JodaTime/src/java/org/joda/time/LocalTime.java b/JodaTime/src/java/org/joda/time/LocalTime.java
index e800ca1ca..5879decfc 100644
--- a/JodaTime/src/java/org/joda/time/LocalTime.java
+++ b/JodaTime/src/java/org/joda/time/LocalTime.java
@@ -197,7 +197,7 @@ public static LocalTime fromDateFields(Date date) {
             date.getHours(),
             date.getMinutes(),
             date.getSeconds(),
-            (int) (date.getTime() % 1000)
+            (((int) (date.getTime() % 1000)) + 1000) % 1000
         );
     }
 
diff --git a/JodaTime/src/java/org/joda/time/TimeOfDay.java b/JodaTime/src/java/org/joda/time/TimeOfDay.java
index dd0de9432..0c483fd94 100644
--- a/JodaTime/src/java/org/joda/time/TimeOfDay.java
+++ b/JodaTime/src/java/org/joda/time/TimeOfDay.java
@@ -148,7 +148,7 @@ public static TimeOfDay fromDateFields(Date date) {
             date.getHours(),
             date.getMinutes(),
             date.getSeconds(),
-            (int) (date.getTime() % 1000)
+            (((int) (date.getTime() % 1000)) + 1000) % 1000
         );
     }
 
diff --git a/JodaTime/src/test/org/joda/time/TestLocalTime_Constructors.java b/JodaTime/src/test/org/joda/time/TestLocalTime_Constructors.java
index 6a5e511bc..31874503a 100644
--- a/JodaTime/src/test/org/joda/time/TestLocalTime_Constructors.java
+++ b/JodaTime/src/test/org/joda/time/TestLocalTime_Constructors.java
@@ -119,11 +119,21 @@ public void testFactory_FromCalendarFields_Calendar() throws Exception {
     }
 
     //-----------------------------------------------------------------------
-    public void testFactory_FromDateFields_Date() throws Exception {
+    public void testFactory_FromDateFields_after1970() throws Exception {
         GregorianCalendar cal = new GregorianCalendar(1970, 1, 3, 4, 5, 6);
         cal.set(Calendar.MILLISECOND, 7);
         LocalTime expected = new LocalTime(4, 5, 6, 7);
         assertEquals(expected, LocalTime.fromDateFields(cal.getTime()));
+    }
+
+    public void testFactory_FromDateFields_before1970() throws Exception {
+        GregorianCalendar cal = new GregorianCalendar(1969, 1, 3, 4, 5, 6);
+        cal.set(Calendar.MILLISECOND, 7);
+        LocalTime expected = new LocalTime(4, 5, 6, 7);
+        assertEquals(expected, LocalTime.fromDateFields(cal.getTime()));
+    }
+
+    public void testFactory_FromDateFields_null() throws Exception {
         try {
             LocalTime.fromDateFields((Date) null);
             fail();
diff --git a/JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java b/JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java
index df4f1920a..6fdb45d0f 100644
--- a/JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java
+++ b/JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java
@@ -112,11 +112,21 @@ public void testFactory_FromCalendarFields() throws Exception {
     }
 
     //-----------------------------------------------------------------------
-    public void testFactory_FromDateFields() throws Exception {
+    public void testFactory_FromDateFields_after1970() throws Exception {
         GregorianCalendar cal = new GregorianCalendar(1970, 1, 3, 4, 5, 6);
         cal.set(Calendar.MILLISECOND, 7);
         TimeOfDay expected = new TimeOfDay(4, 5, 6, 7);
         assertEquals(expected, TimeOfDay.fromDateFields(cal.getTime()));
+    }
+
+    public void testFactory_FromDateFields_before1970() throws Exception {
+        GregorianCalendar cal = new GregorianCalendar(1969, 1, 3, 4, 5, 6);
+        cal.set(Calendar.MILLISECOND, 7);
+        TimeOfDay expected = new TimeOfDay(4, 5, 6, 7);
+        assertEquals(expected, TimeOfDay.fromDateFields(cal.getTime()));
+    }
+
+    public void testFactory_FromDateFields_null() throws Exception {
         try {
             TimeOfDay.fromDateFields(null);
             fail();

From 98b3e95b51cecb9546ce46d25035d41ca6b3a849 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 00:26:24 +0000
Subject: [PATCH 12/36] Update manifest, hopefully fixing OSGI issues

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1506 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/src/conf/MANIFEST.MF | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/JodaTime/src/conf/MANIFEST.MF b/JodaTime/src/conf/MANIFEST.MF
index 216078851..a74f8d811 100644
--- a/JodaTime/src/conf/MANIFEST.MF
+++ b/JodaTime/src/conf/MANIFEST.MF
@@ -8,11 +8,17 @@ Implementation-Title: org.joda.time
 Implementation-Version: 1.6
 Implementation-Vendor-Id: org.joda
 Bundle-ManifestVersion: 2
+Bundle-Vendor: Joda.org
+Bundle-Name: Joda-Time
+Bundle-SymbolicName: joda-time
+Bundle-Version: 1.6
 Export-Package: org.joda.time;version=1.6,
+ org.joda.time.base;version=1.6,
  org.joda.time.chrono;version=1.6,
- org.joda.time.format;version=1.6
-Bundle-Symbolicname: joda-time
-Bundle-Name: Joda-Time
+ org.joda.time.convert;version=1.6,
+ org.joda.time.field;version=1.6,
+ org.joda.time.format;version=1.6,
+ org.joda.time.tz;version=1.6
 Bundle-License: Apache 2.0
-Bundle-Version: 1.6
 Bundle-RequiredExecutionEnvironment: J2SE-1.3
+Bundle-DocURL: http://joda-time.sourceforge.net/

From 0bc29e0ac1f537f4349baf3ce86e9a636e60bd83 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 00:36:08 +0000
Subject: [PATCH 13/36] DateTimeZone.convertLocalToUTC [2903029] Now handles
 date after last ever DST change reported by Christoph Goldner

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1507 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/RELEASE-NOTES.txt                    |  3 +++
 .../src/java/org/joda/time/DateTimeZone.java  |  6 ++++++
 .../joda/time/TestDateTimeZoneCutover.java    | 20 +++++++++++++++++++
 3 files changed, 29 insertions(+)

diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt
index ad7fcf989..110933ff4 100644
--- a/JodaTime/RELEASE-NOTES.txt
+++ b/JodaTime/RELEASE-NOTES.txt
@@ -47,6 +47,9 @@ Bug fixes since 1.6
 - LocalDate.toInterval() [2487417]
   Now handles time zones which have no midnight at DST cutover
 
+- DateTimeZone.convertLocalToUTC [2903029]
+  Now handles date after last ever DST change
+
 - Period formatting concurrency [2820871]
   Fix possible concurrency hole in PeriodFormatBuilder.Separator
 
diff --git a/JodaTime/src/java/org/joda/time/DateTimeZone.java b/JodaTime/src/java/org/joda/time/DateTimeZone.java
index 34d02ef98..9e9c381f2 100644
--- a/JodaTime/src/java/org/joda/time/DateTimeZone.java
+++ b/JodaTime/src/java/org/joda/time/DateTimeZone.java
@@ -923,7 +923,13 @@ public long convertLocalToUTC(long instantLocal, boolean strict) {
             if (strict || offsetLocal < 0) {
                 // determine if we are in the DST gap
                 long nextLocal = nextTransition(instantLocal - offsetLocal);
+                if (nextLocal == (instantLocal - offsetLocal)) {
+                    nextLocal = Long.MAX_VALUE;
+                }
                 long nextAdjusted = nextTransition(instantLocal - offset);
+                if (nextAdjusted == (instantLocal - offset)) {
+                    nextAdjusted = Long.MAX_VALUE;
+                }
                 if (nextLocal != nextAdjusted) {
                     // yes we are in the DST gap
                     if (strict) {
diff --git a/JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java b/JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java
index bd6b81456..d8ccc71a2 100644
--- a/JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java
+++ b/JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java
@@ -18,6 +18,8 @@
 import junit.framework.TestCase;
 import junit.framework.TestSuite;
 
+import org.joda.time.tz.DateTimeZoneBuilder;
+
 /**
  * This class is a JUnit test for DateTimeZone.
  *
@@ -1047,6 +1049,24 @@ public void test_DateTime_minusHour_Guatemata_Autumn() {
     //-----------------------------------------------------------------------
     //-----------------------------------------------------------------------
 
+    public void test_DateTime_JustAfterLastEverOverlap() {
+        // based on America/Argentina/Catamarca in file 2009s
+        DateTimeZone zone = new DateTimeZoneBuilder()
+            .setStandardOffset(-3 * DateTimeConstants.MILLIS_PER_HOUR)
+            .addRecurringSavings("SUMMER", 1 * DateTimeConstants.MILLIS_PER_HOUR, 2000, 2008,
+                                    'w', 4, 10, 0, true, 23 * DateTimeConstants.MILLIS_PER_HOUR)
+            .addRecurringSavings("WINTER", 0, 2000, 2008,
+                                    'w', 8, 10, 0, true, 0 * DateTimeConstants.MILLIS_PER_HOUR)
+            .toDateTimeZone("Zone", false);
+        
+        LocalDate date = new LocalDate(2008, 8, 10);
+        assertEquals("2008-08-10", date.toString());
+        
+        DateTime dt = date.toDateTimeAtStartOfDay(zone);
+        System.out.println(dt);
+        assertEquals("2008-08-10T00:00:00.000-03:00", dt.toString());
+    }
+
 //    public void test_toDateMidnight_SaoPaolo() {
 //        // RFE: 1684259
 //        DateTimeZone zone = DateTimeZone.forID("America/Sao_Paulo");

From 1db20f5400d5639d475851f36bfbfe9c320e73c4 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 00:48:07 +0000
Subject: [PATCH 14/36] Classloading CachedDateTimeZone could invalidate state
 [2935625] Reported by Michael Barker

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1508 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/RELEASE-NOTES.txt                    |  3 +
 .../src/java/org/joda/time/DateTimeZone.java  | 89 ++++++++++---------
 2 files changed, 49 insertions(+), 43 deletions(-)

diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt
index 110933ff4..996bbe9d0 100644
--- a/JodaTime/RELEASE-NOTES.txt
+++ b/JodaTime/RELEASE-NOTES.txt
@@ -53,6 +53,9 @@ Bug fixes since 1.6
 - Period formatting concurrency [2820871]
   Fix possible concurrency hole in PeriodFormatBuilder.Separator
 
+- Classloading CachedDateTimeZone could invalidate state [2935625]
+  Default time zone now lazily loaded
+
 - Time zone compiler now handles non-UTC better
 
 - Assorted Javadoc clarifications, including [2721880]
diff --git a/JodaTime/src/java/org/joda/time/DateTimeZone.java b/JodaTime/src/java/org/joda/time/DateTimeZone.java
index 9e9c381f2..a84e9d56e 100644
--- a/JodaTime/src/java/org/joda/time/DateTimeZone.java
+++ b/JodaTime/src/java/org/joda/time/DateTimeZone.java
@@ -29,7 +29,6 @@
 import java.util.TimeZone;
 
 import org.joda.time.chrono.BaseChronology;
-import org.joda.time.chrono.ISOChronology;
 import org.joda.time.field.FieldUtils;
 import org.joda.time.format.DateTimeFormat;
 import org.joda.time.format.DateTimeFormatter;
@@ -100,7 +99,7 @@
     /** The set of ID strings. */
     private static Set cAvailableIDs;
     /** The default time zone. */
-    private static DateTimeZone cDefault;
+    private static volatile DateTimeZone cDefault;
     /** A formatter for printing and parsing zones. */
     private static DateTimeFormatter cOffsetFormatter;
 
@@ -113,23 +112,6 @@
     static {
         setProvider0(null);
         setNameProvider0(null);
-
-        try {
-            try {
-                cDefault = forID(System.getProperty("user.timezone"));
-            } catch (RuntimeException ex) {
-                // ignored
-            }
-            if (cDefault == null) {
-                cDefault = forTimeZone(TimeZone.getDefault());
-            }
-        } catch (IllegalArgumentException ex) {
-            // ignored
-        }
-
-        if (cDefault == null) {
-            cDefault = UTC;
-        }
     }
 
     //-----------------------------------------------------------------------
@@ -139,7 +121,32 @@
      * @return the default datetime zone object
      */
     public static DateTimeZone getDefault() {
-        return cDefault;
+        DateTimeZone zone = cDefault;
+        if (zone == null) {
+            synchronized(DateTimeZone.class) {
+                zone = cDefault;
+                if (zone == null) {
+                    DateTimeZone temp = null;
+                    try {
+                        try {
+                            temp = forID(System.getProperty("user.timezone"));
+                        } catch (RuntimeException ex) {
+                            // ignored
+                        }
+                        if (temp == null) {
+                            temp = forTimeZone(TimeZone.getDefault());
+                        }
+                    } catch (IllegalArgumentException ex) {
+                        // ignored
+                    }
+                    if (temp == null) {
+                        temp = UTC;
+                    }
+                    cDefault = zone = temp;
+                }
+            }
+        }
+        return zone;
     }
 
     /**
@@ -157,7 +164,9 @@ public static void setDefault(DateTimeZone zone) throws SecurityException {
         if (zone == null) {
             throw new IllegalArgumentException("The datetime zone must not be null");
         }
-        cDefault = zone;
+        synchronized(DateTimeZone.class) {
+            cDefault = zone;
+        }
     }
 
     //-----------------------------------------------------------------------
@@ -575,28 +584,22 @@ private static synchronized String getConvertedId(String id) {
     }
 
     private static int parseOffset(String str) {
-        Chronology chrono;
-        if (cDefault != null) {
-            chrono = ISOChronology.getInstanceUTC();
-        } else {
-            // Can't use a real chronology if called during class
-            // initialization. Offset parser doesn't need it anyhow.
-            chrono = new BaseChronology() {
-                public DateTimeZone getZone() {
-                    return null;
-                }
-                public Chronology withUTC() {
-                    return this;
-                }
-                public Chronology withZone(DateTimeZone zone) {
-                    return this;
-                }
-                public String toString() {
-                    return getClass().getName();
-                }
-            };
-        }
-
+        // Can't use a real chronology if called during class
+        // initialization. Offset parser doesn't need it anyhow.
+        Chronology chrono = new BaseChronology() {
+            public DateTimeZone getZone() {
+                return null;
+            }
+            public Chronology withUTC() {
+                return this;
+            }
+            public Chronology withZone(DateTimeZone zone) {
+                return this;
+            }
+            public String toString() {
+                return getClass().getName();
+            }
+        };
         return -(int) offsetFormatter().withChronology(chrono).parseMillis(str);
     }
 

From 9e83bb3f76e5bf8b697f94449dd8cae8ae8b4bf7 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 00:55:37 +0000
Subject: [PATCH 15/36] DateTimeUtils shared static variable now volatile
 [2986043]

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1509 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/RELEASE-NOTES.txt                         |  2 ++
 JodaTime/src/java/org/joda/time/DateTimeUtils.java | 11 +++++------
 2 files changed, 7 insertions(+), 6 deletions(-)

diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt
index 996bbe9d0..9c0725150 100644
--- a/JodaTime/RELEASE-NOTES.txt
+++ b/JodaTime/RELEASE-NOTES.txt
@@ -56,6 +56,8 @@ Bug fixes since 1.6
 - Classloading CachedDateTimeZone could invalidate state [2935625]
   Default time zone now lazily loaded
 
+- DateTimeUtils shared static variable now volatile [2986043]
+
 - Time zone compiler now handles non-UTC better
 
 - Assorted Javadoc clarifications, including [2721880]
diff --git a/JodaTime/src/java/org/joda/time/DateTimeUtils.java b/JodaTime/src/java/org/joda/time/DateTimeUtils.java
index 74d4f5570..41e594dc7 100644
--- a/JodaTime/src/java/org/joda/time/DateTimeUtils.java
+++ b/JodaTime/src/java/org/joda/time/DateTimeUtils.java
@@ -1,5 +1,5 @@
 /*
- *  Copyright 2001-2006 Stephen Colebourne
+ *  Copyright 2001-2010 Stephen Colebourne
  *
  *  Licensed under the Apache License, Version 2.0 (the "License");
  *  you may not use this file except in compliance with the License.
@@ -18,7 +18,7 @@
 import org.joda.time.chrono.ISOChronology;
 
 /**
- * DateTimeUtils provide public utility methods for the datetime library.
+ * DateTimeUtils provide public utility methods for the date-time library.
  * <p>
  * DateTimeUtils is thread-safe although shared static variables are used.
  *
@@ -27,11 +27,10 @@
  */
 public class DateTimeUtils {
 
-    /** The singleton instance of the system millisecond provider */
+    /** The singleton instance of the system millisecond provider. */
     private static final SystemMillisProvider SYSTEM_MILLIS_PROVIDER = new SystemMillisProvider();
-    
-    /** The millisecond provider currently in use */
-    private static MillisProvider cMillisProvider = SYSTEM_MILLIS_PROVIDER;
+    /** The millisecond provider currently in use. */
+    private static volatile MillisProvider cMillisProvider = SYSTEM_MILLIS_PROVIDER;
 
     /**
      * Restrictive constructor

From 825dc6f17d796d9e8aec4f5669aabf4a2772c7de Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 01:02:50 +0000
Subject: [PATCH 16/36] Fix time zone compiler to handle 24:00 [2804258]

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1510 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/RELEASE-NOTES.txt                    |  2 +
 .../org/joda/time/tz/ZoneInfoCompiler.java    | 15 +++++-
 .../test/org/joda/time/tz/TestCompiler.java   | 53 +++++++++++++++++++
 3 files changed, 68 insertions(+), 2 deletions(-)

diff --git a/JodaTime/RELEASE-NOTES.txt b/JodaTime/RELEASE-NOTES.txt
index 9c0725150..7c7f94c4a 100644
--- a/JodaTime/RELEASE-NOTES.txt
+++ b/JodaTime/RELEASE-NOTES.txt
@@ -58,6 +58,8 @@ Bug fixes since 1.6
 
 - DateTimeUtils shared static variable now volatile [2986043]
 
+- Time zone compiler now handles 24:00 [2804258]
+
 - Time zone compiler now handles non-UTC better
 
 - Assorted Javadoc clarifications, including [2721880]
diff --git a/JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java b/JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java
index 6f25917e6..39aaf8c88 100644
--- a/JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java
+++ b/JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java
@@ -37,6 +37,7 @@
 import org.joda.time.DateTime;
 import org.joda.time.DateTimeField;
 import org.joda.time.DateTimeZone;
+import org.joda.time.LocalDate;
 import org.joda.time.MutableDateTime;
 import org.joda.time.chrono.ISOChronology;
 import org.joda.time.chrono.LenientChronology;
@@ -491,7 +492,7 @@ public void parseDataFile(BufferedReader in) throws IOException {
         }
     }
 
-    private static class DateTimeOfYear {
+    static class DateTimeOfYear {
         public final int iMonthOfYear;
         public final int iDayOfMonth;
         public final int iDayOfWeek;
@@ -552,7 +553,17 @@ public void parseDataFile(BufferedReader in) throws IOException {
                     if (st.hasMoreTokens()) {
                         str = st.nextToken();
                         zoneChar = parseZoneChar(str.charAt(str.length() - 1));
-                        millis = parseTime(str);
+                        if (str.equals("24:00")) {
+                            LocalDate date = (day == -1 ?
+                                    new LocalDate(2001, month, 1).plusMonths(1) :
+                                    new LocalDate(2001, month, day).plusDays(1));
+                            advance = (day != -1);
+                            month = date.getMonthOfYear();
+                            day = date.getDayOfMonth();
+                            dayOfWeek = ((dayOfWeek - 1 + 1) % 7) + 1;
+                        } else {
+                            millis = parseTime(str);
+                        }
                     }
                 }
             }
diff --git a/JodaTime/src/test/org/joda/time/tz/TestCompiler.java b/JodaTime/src/test/org/joda/time/tz/TestCompiler.java
index 916a8f988..3f91b67f5 100644
--- a/JodaTime/src/test/org/joda/time/tz/TestCompiler.java
+++ b/JodaTime/src/test/org/joda/time/tz/TestCompiler.java
@@ -20,11 +20,14 @@
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
+import java.util.StringTokenizer;
 
 import junit.framework.TestCase;
 import junit.framework.TestSuite;
 
+import org.joda.time.DateTime;
 import org.joda.time.DateTimeZone;
+import org.joda.time.tz.ZoneInfoCompiler.DateTimeOfYear;
 
 /**
  * Test cases for ZoneInfoCompiler.
@@ -144,4 +147,54 @@ private void deleteOnExit(File tempFile) {
             }
         }
     }
+
+    //-----------------------------------------------------------------------
+    public void test_2400_fromDay() {
+        StringTokenizer st = new StringTokenizer("Apr Sun>=1  24:00");
+        DateTimeOfYear test = new DateTimeOfYear(st);
+        assertEquals(4, test.iMonthOfYear);  // Apr
+        assertEquals(2, test.iDayOfMonth);   // 2nd
+        assertEquals(1, test.iDayOfWeek);    // Mon
+        assertEquals(0, test.iMillisOfDay);  // 00:00
+        assertEquals(true, test.iAdvanceDayOfWeek);
+    }
+
+    public void test_2400_last() {
+        StringTokenizer st = new StringTokenizer("Mar lastSun 24:00");
+        DateTimeOfYear test = new DateTimeOfYear(st);
+        assertEquals(4, test.iMonthOfYear);  // Apr
+        assertEquals(1, test.iDayOfMonth);   // 1st
+        assertEquals(1, test.iDayOfWeek);    // Mon
+        assertEquals(0, test.iMillisOfDay);  // 00:00
+        assertEquals(false, test.iAdvanceDayOfWeek);
+    }
+
+    public void test_Amman_2003() {
+        DateTimeZone zone = DateTimeZone.forID("Asia/Amman");
+        DateTime dt = new DateTime(2003, 3, 1, 0, 0, 0, 0, zone);
+        long next = zone.nextTransition(dt.getMillis());
+        assertEquals(next, new DateTime(2003, 3, 28, 0, 0, 0, 0, DateTimeZone.forOffsetHours(2)).getMillis());
+    }
+
+    public void test_Amman_2004() {
+        DateTimeZone zone = DateTimeZone.forID("Asia/Amman");
+        DateTime dt = new DateTime(2004, 3, 1, 0, 0, 0, 0, zone);
+        long next = zone.nextTransition(dt.getMillis());
+        assertEquals(next, new DateTime(2004, 3, 26, 0, 0, 0, 0, DateTimeZone.forOffsetHours(2)).getMillis());
+    }
+
+    public void test_Amman_2005() {
+        DateTimeZone zone = DateTimeZone.forID("Asia/Amman");
+        DateTime dt = new DateTime(2005, 3, 1, 0, 0, 0, 0, zone);
+        long next = zone.nextTransition(dt.getMillis());
+        assertEquals(next, new DateTime(2005, 4, 1, 0, 0, 0, 0, DateTimeZone.forOffsetHours(2)).getMillis());
+    }
+
+    public void test_Amman_2006() {
+        DateTimeZone zone = DateTimeZone.forID("Asia/Amman");
+        DateTime dt = new DateTime(2006, 3, 1, 0, 0, 0, 0, zone);
+        long next = zone.nextTransition(dt.getMillis());
+        assertEquals(next, new DateTime(2006, 3, 31, 0, 0, 0, 0, DateTimeZone.forOffsetHours(2)).getMillis());
+    }
+
 }

From 018c33874f8aec18bc76c9e027511df668775adb Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 01:04:28 +0000
Subject: [PATCH 17/36] Include ant runtime setting

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1511 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/build.xml | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/JodaTime/build.xml b/JodaTime/build.xml
index 8ee3325c1..d3fcb83a2 100644
--- a/JodaTime/build.xml
+++ b/JodaTime/build.xml
@@ -27,8 +27,8 @@
   <property name="component.title"         value="Joda date and time"/>
 
   <!-- The current version number of this component -->
-  <property name="component.version"       value="1.6"/>
-  <property name="previous.version"        value="1.5.2"/>
+  <property name="component.version"       value="1.6.1"/>
+  <property name="previous.version"        value="1.6"/>
 
   <!-- The current version number of this component -->
   <property name="component.fullname"      value="${component.name}-${component.version}"/>
@@ -181,7 +181,7 @@
         debuglevel="${compile.debuglevel}"
        deprecation="${compile.deprecation}"
           optimize="${compile.optimize}"
-    	    source="1.3" target="1.3">
+    	    source="1.3" target="1.3" includeantruntime="false">
       <classpath refid="compile.classpath"/>
     </javac>
   </target>
@@ -227,7 +227,7 @@
            destdir="${build.tests}"
              debug="${compile.debug}"
        deprecation="${compile.deprecation}"
-          optimize="${compile.optimize}">
+          optimize="${compile.optimize}" includeantruntime="false">
       <classpath refid="test.classpath"/>
     </javac>
     <copy    todir="${build.tests}" filtering="on">

From b6de92ce0fb2fdada9e6906de88b370020ddee63 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 01:16:50 +0000
Subject: [PATCH 18/36] Update version to v1.6.1

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1512 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/project.properties |  2 +-
 JodaTime/project.xml        | 40 +------------------------------------
 2 files changed, 2 insertions(+), 40 deletions(-)

diff --git a/JodaTime/project.properties b/JodaTime/project.properties
index 66e739439..6ad392b64 100644
--- a/JodaTime/project.properties
+++ b/JodaTime/project.properties
@@ -17,7 +17,7 @@ maven.javadoc.public=true
 maven.javadoc.package=false
 maven.javadoc.private=false
 
-maven.jdiff.old.tag=v1_5_000
+maven.jdiff.old.tag=v1_6_000
 maven.jdiff.new.tag=CURRENT
 
 maven.repo.remote=http://repo1.maven.org/maven, http://emma.sourceforge.net/maven/ 
\ No newline at end of file
diff --git a/JodaTime/project.xml b/JodaTime/project.xml
index 33c5d7cc5..37ee62935 100644
--- a/JodaTime/project.xml
+++ b/JodaTime/project.xml
@@ -7,7 +7,7 @@
   <groupId>joda-time</groupId>
   <artifactId>joda-time</artifactId>
   <name>Joda time</name>
-  <currentVersion>1.6</currentVersion>
+  <currentVersion>1.6.1</currentVersion>
   <organization>
     <name>Joda.org</name>
     <url>http://www.joda.org</url>
@@ -52,44 +52,6 @@
     </license>
   </licenses>
 
-  <versions>
-    <version>
-      <id>0.95</id>
-      <name>0.95</name>
-      <tag>v0_9_500</tag>
-    </version>
-    <version>
-      <id>0.98</id>
-      <name>0.98</name>
-      <tag>v0_9_800</tag>
-    </version>
-    <version>
-      <id>0.99</id>
-      <name>0.99</name>
-      <tag>v0_9_900</tag>
-    </version>
-    <version>
-      <id>1.0</id>
-      <name>1.0</name>
-      <tag>v1_0_000</tag>
-    </version>
-    <version>
-      <id>1.1</id>
-      <name>1.1</name>
-      <tag>v1_1_000</tag>
-    </version>
-    <version>
-      <id>1.2</id>
-      <name>1.2</name>
-      <tag>v1_2_000</tag>
-    </version>
-    <version>
-      <id>1.2.1</id>
-      <name>1.2.1</name>
-      <tag>v1_2_100</tag>
-    </version>
-  </versions>
-  
   <mailingLists>
     <mailingList>
       <name>Joda Interest list</name>

From 5cae678cc445be1fe14eeb9c31bdb751a05f9fee Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 01:30:01 +0000
Subject: [PATCH 19/36] Add updated release notes

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1513 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/xdocs/upgradeto161.xml | 69 +++++++++++++++++++++++++++++++++
 1 file changed, 69 insertions(+)

diff --git a/JodaTime/xdocs/upgradeto161.xml b/JodaTime/xdocs/upgradeto161.xml
index 0fcacde11..280dfc74d 100644
--- a/JodaTime/xdocs/upgradeto161.xml
+++ b/JodaTime/xdocs/upgradeto161.xml
@@ -13,7 +13,76 @@
 These are the release notes and advice for upgrading Joda-Time from
 version 1.6 to version 1.6.1.
 <source>
+Joda-Time version 1.6.1
+-----------------------
 
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is a patch release for Joda-Time 1.6.
+This release only contains bug fixes.
+We recommend all users of 1.6 upgrade to 1.6.1.
+
+We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license causes you problems please contact the mailing list.
+
+**  Please also check out our related projects   **
+** http://joda-time.sourceforge.net/related.html **
+
+
+Compatibility with 1.6
+----------------------
+Binary compatible - Yes
+
+Source compatible - Yes
+
+Serialization compatible - Yes
+
+Data compatible - Yes, except
+  - DateTimeZone data updated to version 2010k
+
+Semantic compatible - Yes
+
+
+Deprecations since 1.6
+----------------------
+- DateTimeFormatter.getChronolgy() [2783325]
+  Incorrect spelling - new method DateTimeFormatter.getChronology()
+
+
+Bug fixes since 1.6
+-------------------
+- LocalTime.fromDateFields()
+  Now handles times based on java.util.Date before 1970
+
+- LocalDate.toInterval() [2487417]
+  Now handles time zones which have no midnight at DST cutover
+
+- DateTimeZone.convertLocalToUTC [2903029]
+  Now handles date after last ever DST change
+
+- Period formatting concurrency [2820871]
+  Fix possible concurrency hole in PeriodFormatBuilder.Separator
+
+- Classloading CachedDateTimeZone could invalidate state [2935625]
+  Default time zone now lazily loaded
+
+- DateTimeUtils shared static variable now volatile [2986043]
+
+- Time zone compiler now handles 24:00 [2804258]
+
+- Time zone compiler now handles non-UTC better
+
+- Assorted Javadoc clarifications, including [2721880]
+
+
+Enhancements since 1.6
+----------------------
+- None
 </source>
 </p>
 </section>

From f66f7f85e86360c8a773c85db5ce7dbf09fbfbef Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 09:31:10 +0000
Subject: [PATCH 20/36] Fix TimeZoneTable generator

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1514 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 .../org/joda/example/time/TimeZoneTable.java        | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/JodaTime/src/example/org/joda/example/time/TimeZoneTable.java b/JodaTime/src/example/org/joda/example/time/TimeZoneTable.java
index af44c6293..b959fe3af 100644
--- a/JodaTime/src/example/org/joda/example/time/TimeZoneTable.java
+++ b/JodaTime/src/example/org/joda/example/time/TimeZoneTable.java
@@ -1,5 +1,5 @@
 /*
- *  Copyright 2001-2005 Stephen Colebourne
+ *  Copyright 2001-2010 Stephen Colebourne
  *
  *  Licensed under the Apache License, Version 2.0 (the "License");
  *  you may not use this file except in compliance with the License.
@@ -22,8 +22,9 @@
 import java.util.List;
 import java.util.Set;
 
-import org.joda.time.*;
-import org.joda.time.format.*;
+import org.joda.time.DateTimeZone;
+import org.joda.time.format.DateTimeFormatter;
+import org.joda.time.format.DateTimeFormatterBuilder;
 
 /**
  * Prints out all available time zones to standard out in an HTML table.
@@ -136,7 +137,11 @@ public boolean isCanonical() {
         public String getStandardOffsetStr() {
             long millis = cNow;
             while (iZone.getOffset(millis) != iZone.getStandardOffset(millis)) {
-                millis = iZone.nextTransition(millis);
+                long next = iZone.nextTransition(millis);
+                if (next == millis) {
+                    break;
+                }
+                millis = next;
             }
             return cOffsetFormatter.withZone(iZone).print(millis);
         }

From bbb8e99123a865d572eee864c2402a781c7c513b Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 09:36:23 +0000
Subject: [PATCH 21/36] Rebuild time zone table; Enhance FAQ

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1515 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/xdocs/faq.xml       |  8 ++++----
 JodaTime/xdocs/timezones.xml | 35 ++++++++++++++++++++++-------------
 2 files changed, 26 insertions(+), 17 deletions(-)

diff --git a/JodaTime/xdocs/faq.xml b/JodaTime/xdocs/faq.xml
index c0bdb40fc..fb169b41d 100644
--- a/JodaTime/xdocs/faq.xml
+++ b/JodaTime/xdocs/faq.xml
@@ -14,7 +14,7 @@
 <p>
 Some common questions about Joda-Time are answered here.
 <ul>
-<li><a href="#newzonerules">Does Joda-Time support the new US and Canada time zone rules?</a></li>
+<li><a href="#newzonerules">Does Joda-Time support the 2007 US and Canada time zone rules?</a></li>
 <li><a href="#datediff">How do I calculate the difference between two dates?</a></li>
 <li><a href="#iso">What is ISO8601?</a></li>
 <li><a href="#default">Why is ISO8601 the default?</a></li>
@@ -91,12 +91,12 @@ For more info, consult the <a href="key_period.html">period guide</a>.
 </subsection>
 
 <a name="iso" />
-<subsection name="What is ISO8601?">
+<subsection name="What is ISO-8601?">
 <p>
 Historically, every country has found their own solution to measuring time.
 This has often been political and religious.
 To simplify the problem, especially in the realm of computer data transfer, the
-<a href="cal_iso.html">ISO8601</a> standard was founded.
+<a href="cal_iso.html">ISO-8601</a> standard was founded.
 </p>
 <p>
 The ISO standard defines a framework for passing dates and times between computer systems in a standard way.
@@ -111,7 +111,7 @@ In addition it defines the first week of the year as the first week to have most
 This can result in the first week of a year starting in the previous year and the last week ending in the following year.
 </p>
 <p>
-The key point about ISO8601 is that it is a framework for dates not an absolute single definition.
+The key point about ISO-8601 is that it is a framework for dates not an absolute single definition.
 The most common form is YYYY-MM-DDTHH:MM:SS.SSSZ, in other words year-month-day letter 'T' hour:minute:second and fractions.
 </p>
 </subsection>
diff --git a/JodaTime/xdocs/timezones.xml b/JodaTime/xdocs/timezones.xml
index a7a707a86..9bdd99a02 100644
--- a/JodaTime/xdocs/timezones.xml
+++ b/JodaTime/xdocs/timezones.xml
@@ -13,7 +13,7 @@
 <p>
 Time zone data is provided by the public <a href="http://www.twinsun.com/tz/tz-link.htm">tz</a>
 database, otherwise known as the Olson database. The following table shows all the time zones
-supported by Joda-Time, using version 2007k of the tz database.
+supported by Joda-Time, using version 2010k of the tz database.
 It is also possible to update to a <a href="tz_update.html">later version of the database</a>.
 This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</code>.
 </p>
@@ -43,6 +43,7 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">Pacific/Gambier</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Dawson</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Los_Angeles</td><td align="left" valign="top">US/Pacific, US/Pacific-New</td></tr>
+<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Santa_Isabel</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Tijuana</td><td align="left" valign="top">America/Ensenada, Mexico/BajaNorte</td></tr>
 <tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Vancouver</td><td align="left" valign="top">Canada/Pacific</td></tr>
 <tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Whitehorse</td><td align="left" valign="top">Canada/Yukon</td></tr>
@@ -58,11 +59,13 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Hermosillo</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Inuvik</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Mazatlan</td><td align="left" valign="top">Mexico/BajaSur</td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Ojinaga</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Phoenix</td><td align="left" valign="top">US/Arizona</td></tr>
 <tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Yellowknife</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">Etc/GMT+7</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">MST</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">MST7MDT</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Bahia_Banderas</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Belize</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Cancun</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Chicago</td><td align="left" valign="top">US/Central</td></tr>
@@ -72,6 +75,7 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Indiana/Knox</td><td align="left" valign="top">America/Knox_IN, US/Indiana-Starke</td></tr>
 <tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Indiana/Tell_City</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Managua</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Matamoros</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Menominee</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Merida</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Mexico_City</td><td align="left" valign="top">Mexico/General</td></tr>
@@ -92,7 +96,6 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Bogota</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Cayman</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Detroit</td><td align="left" valign="top">US/Michigan</td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Eirunepe</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Grand_Turk</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Guayaquil</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Havana</td><td align="left" valign="top">Cuba</td></tr>
@@ -115,7 +118,6 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Pangnirtung</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Port-au-Prince</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Resolute</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Rio_Branco</td><td align="left" valign="top">America/Porto_Acre, Brazil/Acre</td></tr>
 <tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Thunder_Bay</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Toronto</td><td align="left" valign="top">Canada/Eastern</td></tr>
 <tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">EST</td><td align="left" valign="top"></td></tr>
@@ -124,6 +126,7 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">-04:30</td><td align="left" valign="top">America/Caracas</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Anguilla</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Antigua</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/San_Luis</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Aruba</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Asuncion</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Barbados</td><td align="left" valign="top"></td></tr>
@@ -133,6 +136,7 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Cuiaba</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Curacao</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Dominica</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Eirunepe</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Glace_Bay</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Goose_Bay</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Grenada</td><td align="left" valign="top"></td></tr>
@@ -147,6 +151,7 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Port_of_Spain</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Porto_Velho</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Puerto_Rico</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Rio_Branco</td><td align="left" valign="top">America/Porto_Acre, Brazil/Acre</td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Santiago</td><td align="left" valign="top">Chile/Continental</td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Santo_Domingo</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/St_Kitts</td><td align="left" valign="top"></td></tr>
@@ -168,6 +173,7 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/La_Rioja</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Mendoza</td><td align="left" valign="top">America/Mendoza</td></tr>
 <tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Rio_Gallegos</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Salta</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/San_Juan</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Tucuman</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Ushuaia</td><td align="left" valign="top"></td></tr>
@@ -181,6 +187,7 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Montevideo</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Paramaribo</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Recife</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Santarem</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Sao_Paulo</td><td align="left" valign="top">Brazil/East</td></tr>
 <tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">Antarctica/Rothera</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">Etc/GMT+3</td><td align="left" valign="top"></td></tr>
@@ -313,6 +320,7 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Riyadh</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Etc/GMT-3</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Europe/Moscow</td><td align="left" valign="top">W-SU</td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Europe/Samara</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Europe/Volgograd</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Indian/Antananarivo</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Indian/Comoro</td><td align="left" valign="top"></td></tr>
@@ -324,11 +332,11 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Asia/Tbilisi</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Asia/Yerevan</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Etc/GMT-4</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Europe/Samara</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Indian/Mahe</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Indian/Mauritius</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Indian/Reunion</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+04:30</td><td align="left" valign="top">Asia/Kabul</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Antarctica/Mawson</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Aqtau</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Aqtobe</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Ashgabat</td><td align="left" valign="top">Asia/Ashkhabad</td></tr>
@@ -341,14 +349,14 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Etc/GMT-5</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Indian/Kerguelen</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Indian/Maldives</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:30</td><td align="left" valign="top">Asia/Calcutta</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+05:30</td><td align="left" valign="top">Asia/Colombo</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:45</td><td align="left" valign="top">Asia/Katmandu</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Antarctica/Mawson</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:30</td><td align="left" valign="top">Asia/Kolkata</td><td align="left" valign="top">Asia/Calcutta</td></tr>
+<tr><td align="left" valign="top">+05:45</td><td align="left" valign="top">Asia/Kathmandu</td><td align="left" valign="top">Asia/Katmandu</td></tr>
 <tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Antarctica/Vostok</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Almaty</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Bishkek</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Dhaka</td><td align="left" valign="top">Asia/Dacca</td></tr>
+<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Novokuznetsk</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Novosibirsk</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Omsk</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Qyzylorda</td><td align="left" valign="top"></td></tr>
@@ -359,17 +367,18 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">+06:30</td><td align="left" valign="top">Indian/Cocos</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Antarctica/Davis</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Bangkok</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Ho_Chi_Minh</td><td align="left" valign="top">Asia/Saigon</td></tr>
 <tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Hovd</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Jakarta</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Krasnoyarsk</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Phnom_Penh</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Pontianak</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Saigon</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Vientiane</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Etc/GMT-7</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Indian/Christmas</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Antarctica/Casey</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Brunei</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Choibalsan</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Chongqing</td><td align="left" valign="top">Asia/Chungking</td></tr>
 <tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Harbin</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Hong_Kong</td><td align="left" valign="top">Hongkong</td></tr>
@@ -388,7 +397,6 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Australia/Perth</td><td align="left" valign="top">Australia/West</td></tr>
 <tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Etc/GMT-8</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+08:45</td><td align="left" valign="top">Australia/Eucla</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Choibalsan</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Dili</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Jayapura</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Pyongyang</td><td align="left" valign="top"></td></tr>
@@ -410,22 +418,23 @@ This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</
 <tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Melbourne</td><td align="left" valign="top">Australia/Victoria</td></tr>
 <tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Sydney</td><td align="left" valign="top">Australia/ACT, Australia/Canberra, Australia/NSW</td></tr>
 <tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Etc/GMT-10</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Chuuk</td><td align="left" valign="top">Pacific/Truk, Pacific/Yap</td></tr>
 <tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Guam</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Port_Moresby</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Saipan</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Truk</td><td align="left" valign="top">Pacific/Yap</td></tr>
 <tr><td align="left" valign="top">+10:30</td><td align="left" valign="top">Australia/Lord_Howe</td><td align="left" valign="top">Australia/LHI</td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Antarctica/Macquarie</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Asia/Anadyr</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Asia/Kamchatka</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Asia/Magadan</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Etc/GMT-11</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Efate</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Guadalcanal</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Kosrae</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Noumea</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Ponape</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Pohnpei</td><td align="left" valign="top">Pacific/Ponape</td></tr>
 <tr><td align="left" valign="top">+11:30</td><td align="left" valign="top">Pacific/Norfolk</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Antarctica/McMurdo</td><td align="left" valign="top">Antarctica/South_Pole</td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Asia/Anadyr</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Asia/Kamchatka</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Etc/GMT-12</td><td align="left" valign="top"></td></tr>
 <tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Auckland</td><td align="left" valign="top">NZ</td></tr>
 <tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Fiji</td><td align="left" valign="top"></td></tr>

From 3976bda220b2a923c85a7599b44422be4d8faf55 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 11:21:35 +0000
Subject: [PATCH 22/36] Correct OSGI version of 1.6.1

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1516 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/src/conf/MANIFEST.MF | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/JodaTime/src/conf/MANIFEST.MF b/JodaTime/src/conf/MANIFEST.MF
index a74f8d811..f1b719755 100644
--- a/JodaTime/src/conf/MANIFEST.MF
+++ b/JodaTime/src/conf/MANIFEST.MF
@@ -5,20 +5,20 @@ Specification-Vendor: Joda.org
 Specification-Version: 1.6
 Implementation-Vendor: Joda.org
 Implementation-Title: org.joda.time
-Implementation-Version: 1.6
+Implementation-Version: 1.6.1
 Implementation-Vendor-Id: org.joda
 Bundle-ManifestVersion: 2
 Bundle-Vendor: Joda.org
 Bundle-Name: Joda-Time
 Bundle-SymbolicName: joda-time
-Bundle-Version: 1.6
-Export-Package: org.joda.time;version=1.6,
- org.joda.time.base;version=1.6,
- org.joda.time.chrono;version=1.6,
- org.joda.time.convert;version=1.6,
- org.joda.time.field;version=1.6,
- org.joda.time.format;version=1.6,
- org.joda.time.tz;version=1.6
+Bundle-Version: 1.6.1
+Export-Package: org.joda.time;version=1.6.1,
+ org.joda.time.base;version=1.6.1,
+ org.joda.time.chrono;version=1.6.1,
+ org.joda.time.convert;version=1.6.1,
+ org.joda.time.field;version=1.6.1,
+ org.joda.time.format;version=1.6.1,
+ org.joda.time.tz;version=1.6.1
 Bundle-License: Apache 2.0
 Bundle-RequiredExecutionEnvironment: J2SE-1.3
 Bundle-DocURL: http://joda-time.sourceforge.net/

From 2b7dd60f18b8be6cbacf0077ee82bb9386b08c15 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 11:59:30 +0000
Subject: [PATCH 23/36] Start conversion to Maven 2

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1517 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/pom.xml | 392 +++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 392 insertions(+)
 create mode 100644 JodaTime/pom.xml

diff --git a/JodaTime/pom.xml b/JodaTime/pom.xml
new file mode 100644
index 000000000..7142e8f3d
--- /dev/null
+++ b/JodaTime/pom.xml
@@ -0,0 +1,392 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project
+    xmlns="http://maven.apache.org/POM/4.0.0"
+    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+  <modelVersion>4.0.0</modelVersion>
+  <groupId>joda-time</groupId>
+  <artifactId>joda-time</artifactId>
+  <packaging>jar</packaging>
+  <name>Joda time</name>
+  <version>1.6.1</version>
+  <description>Date and time library to replace JDK date handling</description>
+  <url>http://joda-time.sourceforge.net</url>
+  <issueManagement>
+  	<system>Sourceforge</system>
+    <url>https://sourceforge.net/tracker/?group_id=97367&amp;atid=617889</url>
+  </issueManagement>
+  <inceptionYear>2002</inceptionYear>
+  <mailingLists>
+    <mailingList>
+      <name>Joda Interest list</name>
+      <subscribe>https://lists.sourceforge.net/lists/listinfo/joda-interest</subscribe>
+      <unsubscribe>https://lists.sourceforge.net/lists/listinfo/joda-interest</unsubscribe>
+      <archive>http://sourceforge.net/mailarchive/forum.php?forum_name=joda-interest</archive>
+    </mailingList>
+  </mailingLists>
+  <developers>
+    <developer>
+      <id>scolebourne</id>
+      <name>Stephen Colebourne</name>
+      <email></email>
+      <roles>
+        <role>Lead developer</role>
+      </roles>
+      <timezone>0</timezone>
+    </developer>
+    <developer>
+      <id>broneill</id>
+      <name>Brian S O'Neill</name>
+      <email></email>
+      <roles>
+        <role>Senior Developer</role>
+      </roles>
+    </developer>
+  </developers>
+  <contributors>
+    <contributor>
+      <name>Guy Allard</name>
+    </contributor>
+    <contributor>
+      <name>Fredrik Borgh</name>
+    </contributor>
+    <contributor>
+      <name>Jeroen van Erp</name>
+    </contributor>
+    <contributor>
+      <name>Gwyn Evans</name>
+    </contributor>
+    <contributor>
+      <name>Sean Geoghegan</name>
+    </contributor>
+    <contributor>
+      <name>Ashish Katyal</name>
+    </contributor>
+    <contributor>
+      <name>Antonio Leitao</name>
+    </contributor>
+    <contributor>
+      <name>Kostas Maistrelis</name>
+    </contributor>
+    <contributor>
+      <name>Al Major</name>
+    </contributor>
+    <contributor>
+      <name>Blair Martin</name>
+    </contributor>
+    <contributor>
+      <name>Julen Parra</name>
+    </contributor>
+    <contributor>
+      <name>Mike Schrag</name>
+    </contributor>
+    <contributor>
+      <name>Kandarp Shah</name>
+    </contributor>
+    <contributor>
+      <name>Francois Staes</name>
+    </contributor>
+    <contributor>
+      <name>Maxim Zhao</name>
+    </contributor>
+    <contributor>
+      <name>Ryan Propper</name>
+    </contributor>
+  </contributors>
+  <licenses>
+    <license>
+      <name>Apache 2</name>
+      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
+      <distribution>repo</distribution>
+    </license>
+  </licenses>
+  <scm>
+    <connection>scm:svn:http://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk/JodaTime/</connection>
+    <developerConnection>scm:svn:https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk/JodaTime/</developerConnection>
+    <url>http://joda-time.svn.sourceforge.net/viewvc/joda-time/trunk/JodaTime/</url>
+  </scm>
+  <organization>
+    <name>Joda.org</name>
+    <url>http://www.joda.org</url>
+  </organization>
+  <build>
+    <resources>
+      <resource>
+        <targetPath>META-INF</targetPath>
+        <directory>.</directory>
+        <includes>
+          <include>LICENSE.txt</include>
+          <include>NOTICE.txt</include>
+        </includes>
+      </resource>
+      <resource>
+        <targetPath>.</targetPath>
+        <directory>src/main/java</directory>
+        <includes>
+          <include>org/joda/time/tz/data/**</include>
+        </includes>
+      </resource>
+    </resources>
+    <plugins>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-compiler-plugin</artifactId>
+        <version>2.1</version>
+        <configuration>
+          <verbose>true</verbose>
+          <fork>true</fork>
+          <compilerVersion>1.4</compilerVersion>
+          <source>1.4</source>
+          <target>1.4</target>
+        </configuration>
+      </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-toolchains-plugin</artifactId>
+        <version>1.0</version>
+        <executions>
+          <execution>
+            <phase>validate</phase>
+            <goals>
+              <goal>toolchain</goal>
+            </goals>
+          </execution>
+        </executions>
+        <configuration>
+          <toolchains>
+            <jdk>
+              <version>1.4</version>
+              <vendor>sun</vendor>
+            </jdk>
+          </toolchains>
+        </configuration>
+      </plugin>
+      <plugin>
+        <artifactId>maven-antrun-plugin</artifactId>
+        <version>1.4</version>
+        <executions>
+          <execution>
+            <phase>compile</phase>
+            <configuration>
+              <tasks>
+                <echo message="=============================================" />
+                <echo message="${maven.build.dest}" />
+                <echo message="${pom.build.sourceDirectory}" />
+                <echo message="${maven.compile.classpath}" />
+                
+                <mkdir dir="${maven.build.dest}/org/joda/time/tz/data" />
+                <java classname="org.joda.time.tz.ZoneInfoCompiler" fork="true" failonerror="true">
+                  <classpath path="${maven.compile.classpath}" />
+                  <!-- Override default provider since data directory doesn't exist yet -->
+                  <sysproperty key="org.joda.time.DateTimeZone.Provider" value="org.joda.time.tz.UTCProvider" />
+                  <!-- Specify destination directory for compiled data files -->
+                  <arg line="-src ${pom.build.sourceDirectory}/org/joda/time/tz/src -dst ${maven.build.dest}/org/joda/time/tz/data" />
+                  <!-- Specify all the data files to compile -->
+                  <arg value="africa" />
+                  <arg value="antarctica" />
+                  <arg value="asia" />
+                  <arg value="australasia" />
+                  <arg value="europe" />
+                  <arg value="northamerica" />
+                  <arg value="southamerica" />
+                  <arg value="pacificnew" />
+                  <arg value="etcetera" />
+                  <arg value="backward" />
+                  <arg value="systemv" />
+                </java>
+              </tasks>
+            </configuration>
+            <goals>
+              <goal>run</goal>
+            </goals>
+          </execution>
+        </executions>
+      </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-surefire-plugin</artifactId>
+        <version>2.4.2</version>
+        <configuration>
+          <includes>
+            <include>**/Test*.java</include>
+          </includes>
+          <excludes>
+            <exclude>**/TestAll*.java</exclude>
+          </excludes>
+          <additionalClasspathElements>
+            <additionalClasspathElement>src/testdata</additionalClasspathElement>
+          </additionalClasspathElements>
+        </configuration>
+      </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-javadoc-plugin</artifactId>
+        <version>2.6.1</version>
+        <configuration>
+          <linksource>true</linksource>
+          <links>
+            <link>http://java.sun.com/j2se/1.4.2/docs/api/</link>
+          </links>
+          <encoding>UTF-8</encoding>
+          <groups>
+            <group>
+              <title>User packages</title>
+              <packages>org.joda.time:org.joda.time.format:org.joda.time.chrono</packages>
+            </group>
+            <group>
+              <title>Implementation packages</title>
+              <packages>org.joda.time.base:org.joda.time.convert:org.joda.time.field:org.joda.time.tz</packages>
+            </group>
+          </groups>
+        </configuration>
+        <executions>
+          <execution>
+            <id>attach-javadocs</id>
+            <phase>package</phase>
+            <goals>
+              <goal>jar</goal>
+            </goals>
+          </execution>
+        </executions>
+      </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-source-plugin</artifactId>
+        <version>2.1.2</version>
+        <executions>
+          <execution>
+            <id>attach-sources</id>
+            <phase>package</phase>
+            <goals>
+              <goal>jar-no-fork</goal>
+            </goals>
+          </execution>
+        </executions>
+      </plugin>
+      <!--plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-gpg-plugin</artifactId>
+        <version>1.1</version>
+        <executions>
+          <execution>
+            <id>sign-artifacts</id>
+            <phase>verify</phase>
+            <goals>
+              <goal>sign</goal>
+            </goals>
+          </execution>
+        </executions>
+      </plugin-->
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-repository-plugin</artifactId>
+        <version>2.3.1</version>
+      </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-assembly-plugin</artifactId>
+        <configuration>
+          <descriptors>
+            <descriptor>src/main/assembly/src.xml</descriptor>
+            <descriptor>src/main/assembly/bin.xml</descriptor>
+          </descriptors>
+          <tarLongFileMode>gnu</tarLongFileMode>
+        </configuration>
+        <executions>
+          <execution>
+            <id>make-assembly</id>
+            <phase>deploy</phase>
+            <goals>
+              <goal>single</goal>
+            </goals>
+          </execution>
+        </executions>
+      </plugin>
+    </plugins>
+  </build>
+  <dependencies>
+  	<dependency>
+      <groupId>junit</groupId>
+      <artifactId>junit</artifactId>
+      <version>3.8.1</version>
+      <scope>test</scope>
+    </dependency>
+  </dependencies>
+  <reporting>
+  	<plugins>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-project-info-reports-plugin</artifactId>
+        <reportSets>
+          <reportSet>
+            <reports>
+              <report>index</report>
+              <report>dependencies</report>
+              <report>project-team</report>
+              <report>mailing-list</report>
+              <report>issue-tracking</report>
+              <report>license</report>
+              <report>scm</report>
+              <report>summary</report>
+            </reports>
+          </reportSet>
+        </reportSets>
+      </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-checkstyle-plugin</artifactId>
+        <version>2.3</version>
+        <configuration>
+          <configLocation>${basedir}/checkstyle.xml</configLocation>
+          <enableRulesSummary>false</enableRulesSummary>
+        </configuration>
+      </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-javadoc-plugin</artifactId>
+        <version>2.7</version>
+        <configuration>
+          <linksource>true</linksource>
+          <links>
+            <link>http://java.sun.com/j2se/1.5.0/docs/api/</link>
+          </links>
+          <encoding>UTF-8</encoding>
+        </configuration>
+      </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-surefire-report-plugin</artifactId>
+        <version>2.5</version>
+        <configuration>
+           <showSuccess>true</showSuccess>
+        </configuration>
+      </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-jxr-plugin</artifactId>
+        <version>2.2</version>
+      </plugin>
+  	</plugins>
+  </reporting>
+  <distributionManagement>
+    <repository>
+      <id>sonatype-joda-staging</id>
+      <name>Sonatype OSS staging repository</name>
+      <url>http://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
+      <layout>default</layout>
+    </repository>
+    <snapshotRepository>
+      <uniqueVersion>false</uniqueVersion>
+      <id>sonatype-joda-snapshot</id>
+      <name>Sonatype OSS snapshot repository</name>
+      <url>http://oss.sonatype.org/content/repositories/joda-snapshots</url>
+      <layout>default</layout>
+    </snapshotRepository>
+    <site>
+      <id>sf-web-joda-time</id>
+      <name>Sourceforge Site</name>
+      <url>scp://shell.sourceforge.net/home/groups/j/jo/joda-time/htdocs</url>
+    </site>
+    <downloadUrl>http://oss.sonatype.org/content/repositories/joda-releases</downloadUrl>
+  </distributionManagement>
+</project>

From e956488298ee1ef91715e9d3abb356f7eec23f85 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 12:09:09 +0000
Subject: [PATCH 24/36] Start conversion to Maven 2

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1518 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/src/main/assembly/bin.xml            |  25 +
 JodaTime/src/main/assembly/src.xml            |  33 +
 JodaTime/src/site/resources/css/site.css      | 122 +++
 JodaTime/src/site/resources/images/joda.png   | Bin 0 -> 2919 bytes
 .../src/site/resources/images/jodatime.png    | Bin 0 -> 2850 bytes
 JodaTime/src/site/site.xml                    |  83 ++
 JodaTime/src/site/xdoc/cal_buddhist.xml       |  57 +
 JodaTime/src/site/xdoc/cal_coptic.xml         |  61 ++
 JodaTime/src/site/xdoc/cal_ethiopic.xml       |  60 ++
 JodaTime/src/site/xdoc/cal_gj.xml             |  66 ++
 JodaTime/src/site/xdoc/cal_gregorian.xml      |  58 +
 JodaTime/src/site/xdoc/cal_islamic.xml        | 104 ++
 JodaTime/src/site/xdoc/cal_iso.xml            | 128 +++
 JodaTime/src/site/xdoc/cal_julian.xml         |  52 +
 JodaTime/src/site/xdoc/faq.xml                | 289 +++++
 JodaTime/src/site/xdoc/field.xml              | 488 +++++++++
 JodaTime/src/site/xdoc/index.xml              | 172 +++
 JodaTime/src/site/xdoc/installation.xml       |  51 +
 JodaTime/src/site/xdoc/key_chronology.xml     |  81 ++
 JodaTime/src/site/xdoc/key_duration.xml       |  77 ++
 JodaTime/src/site/xdoc/key_instant.xml        | 105 ++
 JodaTime/src/site/xdoc/key_interval.xml       |  83 ++
 JodaTime/src/site/xdoc/key_partial.xml        | 118 +++
 JodaTime/src/site/xdoc/key_period.xml         | 182 ++++
 JodaTime/src/site/xdoc/navigation.xml         |  72 ++
 JodaTime/src/site/xdoc/privacy.xml            |  49 +
 JodaTime/src/site/xdoc/quickstart.xml         | 155 +++
 JodaTime/src/site/xdoc/related.xml            |  40 +
 JodaTime/src/site/xdoc/tasks.xml              |  39 +
 JodaTime/src/site/xdoc/timezones.xml          | 459 ++++++++
 JodaTime/src/site/xdoc/tz_update.xml          |  54 +
 JodaTime/src/site/xdoc/upgradeto099.xml       | 186 ++++
 JodaTime/src/site/xdoc/upgradeto100.xml       |  61 ++
 JodaTime/src/site/xdoc/upgradeto110.xml       | 199 ++++
 JodaTime/src/site/xdoc/upgradeto120.xml       | 142 +++
 JodaTime/src/site/xdoc/upgradeto121.xml       |  76 ++
 JodaTime/src/site/xdoc/upgradeto130.xml       | 152 +++
 JodaTime/src/site/xdoc/upgradeto140.xml       |  88 ++
 JodaTime/src/site/xdoc/upgradeto150.xml       | 198 ++++
 JodaTime/src/site/xdoc/upgradeto151.xml       |  68 ++
 JodaTime/src/site/xdoc/upgradeto152.xml       |  77 ++
 JodaTime/src/site/xdoc/upgradeto160.xml       | 132 +++
 JodaTime/src/site/xdoc/upgradeto161.xml       |  91 ++
 JodaTime/src/site/xdoc/userguide.xml          | 989 ++++++++++++++++++
 44 files changed, 5822 insertions(+)
 create mode 100644 JodaTime/src/main/assembly/bin.xml
 create mode 100644 JodaTime/src/main/assembly/src.xml
 create mode 100644 JodaTime/src/site/resources/css/site.css
 create mode 100644 JodaTime/src/site/resources/images/joda.png
 create mode 100644 JodaTime/src/site/resources/images/jodatime.png
 create mode 100644 JodaTime/src/site/site.xml
 create mode 100644 JodaTime/src/site/xdoc/cal_buddhist.xml
 create mode 100644 JodaTime/src/site/xdoc/cal_coptic.xml
 create mode 100644 JodaTime/src/site/xdoc/cal_ethiopic.xml
 create mode 100644 JodaTime/src/site/xdoc/cal_gj.xml
 create mode 100644 JodaTime/src/site/xdoc/cal_gregorian.xml
 create mode 100644 JodaTime/src/site/xdoc/cal_islamic.xml
 create mode 100644 JodaTime/src/site/xdoc/cal_iso.xml
 create mode 100644 JodaTime/src/site/xdoc/cal_julian.xml
 create mode 100644 JodaTime/src/site/xdoc/faq.xml
 create mode 100644 JodaTime/src/site/xdoc/field.xml
 create mode 100644 JodaTime/src/site/xdoc/index.xml
 create mode 100644 JodaTime/src/site/xdoc/installation.xml
 create mode 100644 JodaTime/src/site/xdoc/key_chronology.xml
 create mode 100644 JodaTime/src/site/xdoc/key_duration.xml
 create mode 100644 JodaTime/src/site/xdoc/key_instant.xml
 create mode 100644 JodaTime/src/site/xdoc/key_interval.xml
 create mode 100644 JodaTime/src/site/xdoc/key_partial.xml
 create mode 100644 JodaTime/src/site/xdoc/key_period.xml
 create mode 100644 JodaTime/src/site/xdoc/navigation.xml
 create mode 100644 JodaTime/src/site/xdoc/privacy.xml
 create mode 100644 JodaTime/src/site/xdoc/quickstart.xml
 create mode 100644 JodaTime/src/site/xdoc/related.xml
 create mode 100644 JodaTime/src/site/xdoc/tasks.xml
 create mode 100644 JodaTime/src/site/xdoc/timezones.xml
 create mode 100644 JodaTime/src/site/xdoc/tz_update.xml
 create mode 100644 JodaTime/src/site/xdoc/upgradeto099.xml
 create mode 100644 JodaTime/src/site/xdoc/upgradeto100.xml
 create mode 100644 JodaTime/src/site/xdoc/upgradeto110.xml
 create mode 100644 JodaTime/src/site/xdoc/upgradeto120.xml
 create mode 100644 JodaTime/src/site/xdoc/upgradeto121.xml
 create mode 100644 JodaTime/src/site/xdoc/upgradeto130.xml
 create mode 100644 JodaTime/src/site/xdoc/upgradeto140.xml
 create mode 100644 JodaTime/src/site/xdoc/upgradeto150.xml
 create mode 100644 JodaTime/src/site/xdoc/upgradeto151.xml
 create mode 100644 JodaTime/src/site/xdoc/upgradeto152.xml
 create mode 100644 JodaTime/src/site/xdoc/upgradeto160.xml
 create mode 100644 JodaTime/src/site/xdoc/upgradeto161.xml
 create mode 100644 JodaTime/src/site/xdoc/userguide.xml

diff --git a/JodaTime/src/main/assembly/bin.xml b/JodaTime/src/main/assembly/bin.xml
new file mode 100644
index 000000000..4d7fb2c3c
--- /dev/null
+++ b/JodaTime/src/main/assembly/bin.xml
@@ -0,0 +1,25 @@
+<assembly>
+    <id>bin</id>
+    <formats>
+        <format>tar.gz</format>
+        <format>zip</format>
+    </formats>
+    <baseDirectory>${artifactId}-${version}</baseDirectory>
+    <fileSets>
+        <fileSet>
+            <includes>
+                <include>LICENSE.txt</include>
+                <include>NOTICE.txt</include>
+                <include>pom.xml</include>
+                <include>RELEASE-NOTES.txt</include>
+            </includes>
+        </fileSet>
+        <fileSet>
+            <directory>target</directory>
+            <outputDirectory></outputDirectory>
+            <includes>
+                <include>*.jar</include>
+            </includes>
+        </fileSet>
+    </fileSets>
+</assembly>
diff --git a/JodaTime/src/main/assembly/src.xml b/JodaTime/src/main/assembly/src.xml
new file mode 100644
index 000000000..d3e266f8b
--- /dev/null
+++ b/JodaTime/src/main/assembly/src.xml
@@ -0,0 +1,33 @@
+<assembly>
+    <id>src</id>
+    <formats>
+        <format>tar.gz</format>
+        <format>zip</format>
+    </formats>
+    <baseDirectory>${artifactId}-${version}-src</baseDirectory>
+    <fileSets>
+        <fileSet>
+            <includes>
+                <include>checkstyle.xml</include>
+                <include>LICENSE.txt</include>
+                <include>NOTICE.txt</include>
+                <include>pom.xml</include>
+                <include>RELEASE-NOTES.txt</include>
+            </includes>
+        </fileSet>
+        <fileSet>
+            <directory>src</directory>
+        </fileSet>
+        <fileSet>
+            <directory>target</directory>
+            <outputDirectory></outputDirectory>
+            <includes>
+                <include>*.jar</include>
+            </includes>
+            <excludes>
+                <exclude>*-sources.jar</exclude>
+                <exclude>*-javadoc.jar</exclude>
+            </excludes>
+        </fileSet>
+    </fileSets>
+</assembly>
diff --git a/JodaTime/src/site/resources/css/site.css b/JodaTime/src/site/resources/css/site.css
new file mode 100644
index 000000000..824320af8
--- /dev/null
+++ b/JodaTime/src/site/resources/css/site.css
@@ -0,0 +1,122 @@
+body, td, select, input, li{
+  font-family: Helvetica, Arial, sans-serif;
+  font-size: 13px;
+  background-color: #fff;
+}
+a {
+  text-decoration: none;
+}
+a:link {
+  color:#009;
+}
+a:visited  {
+  color:#009;
+}
+a:active, a:hover {
+  text-decoration: underline;
+}
+a.externalLink, a.externalLink:link, a.externalLink:visited, a.externalLink:active, a.externalLink:hover {
+  background: url(../images/external.png) right center no-repeat;
+  padding-right: 15px;
+}
+a.newWindow, a.newWindow:link, a.newWindow:visited, a.newWindow:active, a.newWindow:hover {
+  background: url(../images/newwindow.png) right center no-repeat;
+  padding-right: 18px;
+}
+h2 {
+  font-family: Verdana, Helvetica, Arial, sans-serif;
+  padding: 4px 4px 4px 6px;
+  border: 1px solid #999;
+  color: #006;
+  background-color: #eef;
+  font-weight:bold;
+  font-size: 16px;
+  margin-top: 4px;
+  margin-bottom: 6px;
+}
+h3 {
+  padding: 4px 4px 4px 6px;
+  border: 1px solid #aaa;
+  color: #006;
+  background-color: #eee;
+  font-weight: normal;
+  font-size: 14px;
+  margin-top: 4px;
+  margin-bottom: 6px;
+}
+p, ul {
+  font-size: 13px;
+  margin-top: 4px;
+  margin-bottom: 6px;
+}
+#banner {
+  background-color: #eef;
+  border-bottom: 1px solid #aaa;
+}
+#bannerLeft img, #bannerRight img {
+  margin:8px;
+  border: 1px solid #999;
+}
+#breadcrumbs {
+  padding-top: 1px;
+  padding-bottom: 2px;
+  border-bottom: 1px solid #aaa;
+  background-color: #ddf;
+}
+#leftColumn {
+  margin: 8px 0 8px 4px;
+  border: 1px solid #999;
+  background-color: #eef;
+}
+#navcolumn {
+  padding: 6px 4px 0 6px;
+}
+#navcolumn h5 {
+  font-size: 12px;
+  border-bottom: 1px solid #aaaaaa;
+  padding-top: 2px;
+  font-weight: normal;
+}
+#navcolumn li {
+  font-size: 12px;
+  padding-left: 12px;
+  background-color: #eef;
+}
+#navcolumn a:active, #navcolumn a:hover {
+  text-decoration: none;
+}
+#lastPublished {
+  font-size: 10px;
+}
+table.bodyTable th {
+  color: white;
+  background-color: #bbb;
+  text-align: left;
+  font-weight: bold;
+  font-size: 13px;
+}
+
+table.bodyTable th, table.bodyTable td {
+  font-size: 13px;
+}
+
+table.bodyTable tr.a {
+  background-color: #ddd;
+}
+
+table.bodyTable tr.b {
+  background-color: #eee;
+}
+
+.source {
+  border: 1px solid #999;
+  padding: 8px;
+  margin: 6px;
+}
+#footer {
+  background-color: #eef;
+  border-top: 1px solid #999;
+}
+body {
+  padding-bottom: 0px;
+}
diff --git a/JodaTime/src/site/resources/images/joda.png b/JodaTime/src/site/resources/images/joda.png
new file mode 100644
index 0000000000000000000000000000000000000000..435df26a39732551d2f7ed9b1fdf288be1c83875
GIT binary patch
literal 2919
zcmY*bc{EgSAHT9>C)v0BESbp~S(CBGl$e?^_B~6ojwNKGWSNNUMkJ&mhRl>=EM>`7
zw&BN^Y$4f83=+Nf?T`1I_n!0I=bn4c{XEZozMtibLs(nzaEfyR0KfycG`j}QVc>wU
z9|P|ue%BJgi6g|);lD4L{tg?3&VRv&<Kgft=Eterg8UphIyI<i0N`SSn;D~`iq;(h
zt&rmqaY478CQY0sFSAysyvuRKb8CC3E1D8gl&uN|0<L~w7;mSh;`{CMyf15?_PMm@
zev$O4Gq6zXT!PpL?{n*rgh-9p#P4OVI2kQDc_X{@BUsVG*O+LrAHje6<CZt6%X)2L
z8)0{r^ai5`pu#vanIuU3j*Z0kI&&+U-#^a-UhyNf9aEqZDxEnGg+2Q&a-H=qPb?q}
zx0mHik$r6(9SfaRXPTqQ!+x<OVM*8>gY)N|RP*g@ZEu__R6M^2V~;&6|M-)S2L9Mx
zz?feiZs@?}teW3@okU-cq+H-<H=w=$W87J0{J(XS&kU%hZES30E80xI4fVocvbsE>
zxqT}uD<l%Bv(t=?x`-(@#Qyq-*W{BnnEkn5QBiT6SF&JJjOtlm1dD5Z{W>Bb;A4Px
zSfg{rHHWKL>%*1?($dnpM18a$(<dhfiq8|qS6f`wjQJH56mIWsU^g0<AnEk=)|efC
zCnt&Y`J3alDr#!Metw856dVqxM6T<{?y0BG-!+>3@KB;VU21iGy({#0mxx;pk?8U!
z$OVa{c6PF4bXOCJwr6rb4q6D`9T~Z%n$HE$XteqHdDP+d_BK7ZO+}E?ckl&?gz@u(
zNb({Va5$U`CGtm<fqvjrQ^fxMz5tE|&<^@MF*cUiqZ2$`Q&ZC!`nBCl6pcpzOQ%y_
zzAr^olF4C*zjnwxP7MJLrlzJc{6<#QV~%cae1Nm64!G@^R&0u}h=`r5Yx>u{PdYQ5
zU0uV+GcQ%_?CjXU4$lE8W@T=7_PrZ;{^XJlb~j6q==(a;QC{KUf@iUY;Kv670s@GW
z>GRjBat4>E`#B`(jHRJcQ$G#Sq!TQed3mP=aF9^&<iCaJ3ah`RP;Pf5@%$9aD=eIx
znCL;|ee&UAImVlupxfKq+nsT0_u#O&xcJA9AC+Jkab~jh_Gx>5`ahuud!dZJTqXb4
zF)=aX0J_c<`)hl-zP`S;w)UZfPMNpvZN}PIwVkhz4=_7YaasJ~hxJHiqdRw69f{g_
zt6Q7X*rnoI5DL_p5=m@po7vp`x&NEbaL+v?1W`9$je4Qt)BqUC3!D{y$d=$?*b$&j
zuWLK{b+FmS43rGc)O%S32XB7=9^&OSPx9^u++$;#D=HQl>-23`d3cP0^gWsB+nX)r
z78x6#8_Ca}bp~k1?Tp#^ak3Z}>4vt?g@|$|ef{bq**zTowae>ZZDWd(N##gvPfzD<
zo5@(&oTAtv5br$efv3&QvF`3N0=U?{xnz(_z@vhKC=k<KJ*9`4nc3-0ka^w^Hqy`U
z+Zv5LgWa9#>0$R|J9f9JNx$=RE0%(;E*_jr6;Ug*?DMRTT$?Z!Tl*1ZU96udtf8m3
zPql$n94G_w^75mjqeIC}(LYZYmK(`TkbU`VVOm-d-)D_SS2+%9#{66E95#)wvc`|Q
z-VR)!d~F#6^z`&Vl$1>M84QLa5e<lniG}J)0tggpdlYGNl?hdaIwQz=(H_*7gM$O*
z)+SgO*Vq0+@GSk}jnOKkU9Gc2S|HykLrF<VmUtm0bo1}6{{DP5Lei)HetL7XCaJBi
zPEC}1<oxqz&rr6uS7BJg5^I8Km|$vGZf-6r+eoIeveJGct@|SnHyg7z+S;1e%Yr~4
zlo$5)!U<G8P0jg8%J8BJ6bhH&AL?Z>?(FU^=NR%hCvJOYERjp(ocO~oPlsn7(iz>J
z^-%`Wz#~ifoEmnM(vYqPLI6K+GKdwZEg@vj6yH7HyNFrwg$RP4Q<*le+k*S#Q~r(w
zNF!;>%QsdEm2xjFGnnG-m7n_?NN4mfaweMOToFwg?v>3<nIi*3las&pmr8bbcad69
zC^XX&WCJshKA)yGz`>i`Vc+%kt?o(>4_iXe8;J@9!ICG?qz;dg!Q?&=;-nCFhbXN*
zz(9bf@bTlYu&|12H-ds{`xhObN*MEx<_~2bYZ>!@{p;`!3iRH~dCH}0A-a+|jVK<>
zSx!e{Lt~>@?+XM3G{0AlL~BC%HCgElo!e*mCjzt;ng*A`^ozIAb>lb5Gz7kXu?+d-
zn5hGAvRrmALQjyh^ktG!*1}Ay)rB&U0aBu(AaYF0lPwKEU6lJ9!CBSfo~m1Gkw7(p
zkX+B*(a{0%wY+jgD77m<+v#-nKPnqDZ8jw;@GKv)SSHl(oVXw)41-CRz7Vs}lll91
z>_u6FQ(wM(xvqgnonZwiQ?=CPZ$u;#>E-1GyqgQj%F2SweU&()r6rVmLE6T~hHq@)
z=YA7~BGRyM!dr-wRi8?D{(RJ5Ys-v?zIjf(V@@4-Mj*&#@N*_cM@ReBRiR$Mj`o-<
zP6I<!YB{=EQBjd;Hc`aYo^+i9sBs{(ty9k5+TiBqMl1{r41nTJo!b&l_4fDY1oBi}
zE?qgA>qsVRs<h3(baf}D|6VgQ8TTSE7>tk4>6J2cb)8#VdQWzCwuqYR+RBPaQG2_|
zMQ6`T9iCu1`IcaXfg<ar4A@cB>c1)gJ6l5B(f(4VoP{u&ky+F4S&yJIRVZs|X|Wh1
zgu&REUfq%13T`{h%gakzF_#^tY_`%zMn;B)9^vu0JPU|mLqkJZz}n>No2;y?Dax6a
z({X<eLBW(5L}Nfd573qvLps<Yktg*}naK`|xW&$e>+`Ugy0}Og^QXYQT~22&gDzaT
zwKMM47Wc>S(lf)OJug(R4;dttgoMOkksf&V2@Iapu1V0*z&Mgy?He3?LkkEu27d#0
zQW2q)<N*fGW9`7nmmbU!i+8(b-ZM65U^8<sBUaJby=IDW+rt*yC*$j9!Kgr2=gP)y
z^(ywniP<-WLm%AAAxTL|B_<|T=Jqc>Fq0MJROdFm>Fn$ryT7%#pJUF|h&^EF@i501
z6%~Ol*y(Ifvy?9zUv-OFR`|ev>~4JDpm22!b-AXpvH<I$rlL|@Q1G;kStj<+;jWTh
z?ezd9oY~0e==C@BWvjaJ1DbEiaF_^hG8uIGj$}SxZ|~t;P+?&9mTNN2;(eb~5sBsx
z>YN+5z*u!L0@u>e*N>Tf$Mk_?U@qiAYHHOut_yNGYhhwy;&E^*PLj7n9dE^0%y(n#
z?5NZz3*%R-mcd*J3=9PGc`n4h3Kc|eAXZkUG;yiBYv3p8bS-h7zN05#(fj)P!1jUG
z&kSI(SQQnO^73*H4vueZ%b3QE>6X<<3dg;kzCM#=K6sWRk<p&WmC|^F`aF={z`=5F
zc=)Pdpr)p#5U05e|Jz%e()u|InEgVno8R;j2A3$<gN92L;?mMj@OUsBpddIDTDnO#
zlKDRSKB2VqAHdSeN*Mwv2<vA{Fm7>$85n$A#E{8kkhH;5O}Y8`#{tj!y`_>kRaI4=
zaJ&;ulwVo6f7~rjik)SIO0}zVbwMEFKPw1wf+a2Gk<YYz<+%RBwz{C$mlDb?7_KiR
zbbS${CsZ7$?GzEA1-Ogmfjh}sSZlSJT|970yMO;aD2i=Y4|P#j?2c`s$qAfU+C{mh
zke^Y_FJ7F<;X3;RwsZH7&LjEgrGa9w^m-B9q0KK}hP38?u`fE5Fq1t&nL6s=gZ<v7
z+Q`Yt38%7lyxiN{D=RCrbB$gkzL_q2vLN=iyF8-&e|s4RJf;x@X*Ewdz$O`hn_HXJ
Inz-Nl59h<Bq5uE@

literal 0
HcmV?d00001

diff --git a/JodaTime/src/site/resources/images/jodatime.png b/JodaTime/src/site/resources/images/jodatime.png
new file mode 100644
index 0000000000000000000000000000000000000000..4d5d609868c392a2871e8f15100f4ba54b7e92b6
GIT binary patch
literal 2850
zcmai$c{Ei28^^DVeMuoZ6GADZX}&_k*dh$3F_xskSY|?&2rZUx$d)V_YZwwqizRC)
z2GJN|EJNZuA|~rlWc%Ik@9*C^zkAN}JolV?&b^<{b6?N<{YkJzT@vD#<_7>k$imzN
z4b}uO)OZhp*_0ba2Mb?-xl=G$IsO|qCpt&K8=hMh)}}l|f?^`V0uC{)PXU1cgM|qa
z6PCZ^>|`Z+O$Kq!FXzjbL*gefr_U%sAI3z9NSJh{nAG}<48sy*e3UO|3V2MqTe)b!
zx@eLqE>JTI7jmbht&$qi)(&$1^ph9n<6?x9brZK*lh}8(v#?eFcpsF~V#9a(gQvo2
z;r;7Rk;!F*>FBG64kq}*rp4s_CMEt~_&Uhs>xK}0e0TxF^irc@$q$%_h=|_a-lA)^
zw(axmNCPh?Cnp;l8cl0P=H}NX`q&unzTwJ!uG%E1MLKPsy}c{0j%{H4+6nvhQ|dsy
zsj10Kc`jM%+?D~)R@cXm9}R|^uSfN<x^P<UAs#U4OQBg~zHmvY{_G<O3DtYYr)8{F
zh7=aRYPNg&?YF%l(q9Y@V>Z~omL{yNtpPwjwcf3RTSe5rI505KGV3%4psb>@U!S8J
zl}9{>W|>uBoKGLysCoVRFp<e*UU6~xj5qQV<EOlIs)4$h9Nm&jE`?(&>#D1(!G%44
z-t7wyZk#MFE&bj{;^F2NR;{nC&CJSb4QF%zyM1&89zoIitl?{KZyy=ihOMLo>Vp>o
zaeutp)791Wo6SimG-^Aen~D6J;?Bjxb9lb({+@KADygsgk(@vQnEp0%b)6a*7@#Cc
z6e8{s;d!3g<7L));H#-#>YAEuA*`$qxK%dW(%PEZ-`}-%lZeZsV(slim|ZEYtq35>
zTsilgcR$%QY0P*2XhVcyv4*FYm-gPu)cd~PUVZ@qQT|v6GC)UGgCrv>s~@sBytqhg
zhB~}*Nk~cAWV4yzBjIiuO%o3P)gH~MR@vW=>Vf50adC0Exw#<_2ncdo=Ml5PRxR`L
zv+(e6m5fi%X4!1E+wSx<F8+bv#JdEF`&-ABh)v?GSR`d{=eIXC_r$RzH=cX<?p;Bn
zb#-+U6BA3(CrN$Z19bG|ZB9Lr*AIIvHG<a`7Z*=cUSKjgn?KL9J++<u{g<bwi)wtM
zsis<WNL0orSmgfQ7--y$RJUvwjn}VVUz%kw7-v1YpfQF}5nf1Wa7#^%X!^nSyaL8b
z0CFf@dC+-gEzHx?Q{zM-i4<SEjffuC%cPfDWH_GAGFLWY9qwM++6s#{Z1<`$RXpOJ
zXhN3IbS>iD`MnZ<4*~=<y5R5Jxg#MiexWZEKSE6qRRw#qK`YSv-IXHqd-?0cTMr&a
zE*gziON^O~6_8LIe<XjAF*WrHT@ku6Ma5uB1_xl)c9^g*osE~*nz7H&?;{WP_xE<x
z;`8%mN$CeOO-P8>iY->>k%I0m^D1mx#O5gt4dG2AsK{hX_?0Sb;l(@0(oz)+g!3vf
zrwj}Xeqc^L@$>UrT3Y&1%Vcj;sZ`+%DGooi#KeaWqx#Fs%a@n^YsP)+oHrx(rrzHv
zE~L2IW3gXgRimuIb?3JG??2#*2n??pAt51<3gOYYHD<SWe?Ca3<?Y+`RId^OgIMR~
z>4|i9cPCqZIw*tJc+<@I6cBeMw{NdZ`N8uDxo~L^wAO*faJJXjUDim|fauYq>kC7w
zV*>A84T9&ah9}*$m23s{BllaXs)QKLp-cRNf)Dy)Y4Z{i5(;{uzBpVIxm?}h)#tpw
zR>1G8Wbmbf_$@3g2?6a|$=%E|*P3d{<QOTbjyDe;JZNapsTogZHhjPh_`txqvMEHw
zLTYDxV7WujZ6;1+<>cf%e!RLPXVTNtW5{Ru3_VNh?Twk>Mv4SAwiFk0062Kw%#hyg
zWkaQl7Ym>dHLtg}^AZRI@c(fF?UC`!(K@8);?hKY56arwGs|&mYAP))EhHoah|0=3
z21J>aAZ?VClyW#!t+H_vvK?BLbjILd;LOKZ5WY*P@`O5P!H(?LQ9l+J8TB^{3$7@p
zjS-9w%3+rv@m4ujalW@^0bn-hLbY9ZoMKDlfxI+H<62WVTg9EsI+Hsd8t@_oTS;HI
z1*X2fr0`oxMI73af;|avZ08aF*ntt&=Jdo4oSn_}ZG<{dMgV0ff|`3?I)yvS+oLO4
z>S9FgppUP=KlgRb69%a>WL+g4d{CoHd~vp}kgA}tuu;dW>eco2nD2*^C_&lDSNtwt
zzKnXRUoq%IE-5M0504?2RLbh^o;b=!q<{IM9lnm=$RMl1ZWtLE0l??0v1TRFDBc2;
zH>sn&y}c=fHI24Jq5404vaqyFdh}?jAy8?U+nOr|YD<rbDx-XhHBsDNo#6y<zkZJ2
z7<sw99fztrE1h!c2|rMTu0TZY|6Ex)4E$JH+S^zVRelf`XQZUBpAY2?OUxvZx;s0e
z<F2iDx0k=_`KYR@asuY*__vN?rW^o~NK8*ppT3eu4gI}*tyxwcad&KRkOKtfWlM|f
zHSR$x6Uo2)CpTH6OZiA7(%=Grq!=F`pRG)8nK(aJi|-fM*MR{;JF(Pm8L(p=;HnZ*
zQ@gd2%NC-eqd}0o@pznM=;oq*Z3?-{<<t{Yj`p*6?~VZhbDwiEGc(7=9EIbD==8ea
zc~nC}iu8H@EH`C~xcK-Er^w~W#tXr7J$UWhvIz#GztG?&$v86d;Gh~`Gt+Njhq-Y>
zUB4ahh@TB=WOk?C4j<bWJ?+}E^=Fd>vmPBD)(>07t<QdfAj|2Cpy<n_nB`c#17-B*
z&!00w1;mW}{L`eqiHQjg0Gy;3<>k1yjy|@aFMb&sI@0*&&6~Qqy88P1wzkN<Kb!oq
zMrvXs!^4IMqzEY3tL5G`<1%1dTJJSe+zCWtFOBA)CWfutWYpbQ_23o_-~-(+iBj!N
zlYfS;7+Sb&X-OxZSJqM&Agy+gr%7k^*FVMzfb{3(<;BOvf$s6-^0T(KgSs1|(^-Z?
zFh;a&XHcA|DoSVf2h4x6AwB)5%8)M{6tkXJ%Q3vXyggJZomltqC7nppye^z%2Pw9F
zxI8<}+UxRxX*j+C>=B@pNXD&g--VqqQA|TU-$6<IT+REPmzc;ui_hBm%)7R>Hjq<T
zn3@mDxUz+?LOzJ$#XG->t~ScGIvCH-&7sBYot!GLl|tN{ac&$O96^nD2g#<Oyx_Gj
z$o7Nh0ApigaOQXCs4`*2YwPRaCM+#2`)D+8`97oK)t)q^<HwJu%3oYuUgieOmD4vi
zHezB9HE41I(|eiFhnzgZ5C{YYhksnWprPT<s3nY#kArIR;JnSvo0@+h>&Bg(op?MR
z0J6V1$R5q6{I$_uj2Bj4KX=xT0ekBxXnfoog%UQk1Kq8vs>-?Q7yx=z*CV;Sr%zi6
zLn_U$$-I(#CG@Y8le_EREelZb%mx$19GyUN2L&=nr_%=pR@a!9k|_TyEy;<Bo^$&M
ziC=+B3W5R^a9hzL=+DN2FMJ2&ewAQi0{LSIl5*9-VRUpfo*9P0VBFmmlPE+2A)3q7
z*7k8tbZGX}Jgtxe@P*6V>kBZC^57{@Q?I}z?uQnQvh4Vz<>XQnYwPPft_*zp_RYUY
zS5J?{Vj0}u<po3%OpY8m@-M+Ef?HC4`de35cMW8I$6os1!8H-w7I<}6;7zqmuJI&B
R4?N!j7N#hZS4Oy){{UxZaMAz(

literal 0
HcmV?d00001

diff --git a/JodaTime/src/site/site.xml b/JodaTime/src/site/site.xml
new file mode 100644
index 000000000..28fb7725c
--- /dev/null
+++ b/JodaTime/src/site/site.xml
@@ -0,0 +1,83 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+<project name="Joda-Time">
+  <publishDate position="navigation-bottom" format="yyyy-MM-dd"/>
+  <bannerLeft>
+    <name>Joda.org</name>
+    <src>http://joda-time.sourceforge.net/images/joda.png</src>
+    <href>http://joda.sourceforge.net/</href>
+  </bannerLeft>
+  <bannerRight>
+    <name>Joda Time</name>
+    <src>http://joda-time.sourceforge.net/images/jodatime.png</src>
+    <href>http://joda-time.sourceforge.net/</href>
+  </bannerRight>
+
+  <body>
+    <links>
+      <item name="Joda-Time" href="/index.html"/>
+      <item name="JSP tags" href="/contrib/jsptags/index.html"/>
+      <item name="Hibernate" href="/contrib/hibernate/index.html"/>
+      <item name="I18N" href="/contrib/i18n/index.html"/>
+    </links>
+
+    <menu name="Joda Time">
+      <item name="Overview" href="index.html"/>
+      <item name="Quick start guide" href="quickstart.html"/>
+      <item name="User guide" href="userguide.html"/>
+      <item name="FAQ" href="faq.html"/>
+      <item name="Related projects" href="related.html"/>
+      <item name="Javadoc (Release)" href="api-release/index.html"/>
+      <item name="License" href="license.html"/>
+      <item name="Download" href="http://sourceforge.net/projects/joda-time/files/joda-time/"/>
+    </menu>
+
+    <menu name="Key concepts">
+      <item name="Instant" href="key_instant.html"/>
+      <item name="Partial" href="key_partial.html"/>
+      <item name="Interval" href="key_interval.html"/>
+      <item name="Duration" href="key_duration.html"/>
+      <item name="Period" href="key_period.html"/>
+      <item name="Chronology" href="key_chronology.html"/>
+    </menu>
+    
+    <menu name="Chronologies">
+      <item name="ISO8601" href="cal_iso.html"/>
+      <item name="Buddhist" href="cal_buddhist.html"/>
+      <item name="Coptic" href="cal_coptic.html"/>
+      <item name="Ethiopic" href="cal_ethiopic.html"/>
+      <item name="Gregorian" href="cal_gregorian.html"/>
+      <item name="GregorianJulian" href="cal_gj.html"/>
+      <item name="Islamic" href="cal_islamic.html"/>
+      <item name="Julian" href="cal_julian.html"/>
+    </menu>
+    
+    <menu name="Development">
+      <item name="Sourceforge" href="http://sourceforge.net/projects/joda-time/"/>
+      <item name="Test results" href="surefire-report.html"/>
+      <item name="Test coverage" href="coverage/index.html"/>
+      <item name="Mailing lists" href="mail-lists.html"/>
+      <item name="Tasks" href="tasks.html"/>
+      <item name="Subversion" href="http://joda-time.svn.sourceforge.net/viewvc/joda-time/trunk/JodaTime/"/>
+      <item name="Javadoc (Development)" href="apidocs/index.html"/>
+    </menu>
+    
+    <menu name="Joda">
+      <item name="Joda home" href="http://joda.sourceforge.net"/>
+      <item name="Beans" href="http://joda-beans.sourceforge.net/index.html"/>
+      <item name="Money" href="http://joda-money.sourceforge.net/index.html"/>
+      <item name="Primitives" href="http://joda-primitives.sourceforge.net/index.html"/>
+    </menu>
+    
+    <menu ref="reports"/>
+    
+    <menu name="Website">
+      <item name="Privacy" href="privacy.html"/>
+    </menu>
+    
+  </body>
+
+  <poweredBy>
+    <logo name="Sourceforge" href="http://sourceforge.net/projects/joda-time/"
+        img="http://sourceforge.net/sflogo.php?group_id=274452&amp;type=2" width="125" height="37" />
+  </poweredBy>
+</project>
diff --git a/JodaTime/src/site/xdoc/cal_buddhist.xml b/JodaTime/src/site/xdoc/cal_buddhist.xml
new file mode 100644
index 000000000..d7e63237d
--- /dev/null
+++ b/JodaTime/src/site/xdoc/cal_buddhist.xml
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Buddhist calendar system</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Buddhist calendar system">
+<p>
+The Buddhist calendar system implemented in Joda-Time is based on that supplied
+in the private Sun packages of a typical JDK.
+It differs from the <a href="cal_gj.html">GregorianJulian</a> calendar only in the
+year and era.
+The Buddhist calendar has one era (the current era), and has a year offset by 543
+from the current Gregorian year.
+</p>
+<p>
+It appears that Sun developed the Buddhist Calendar system to meet the needs of Thailand.
+However, the calendar is only accurate from 1941-01-01 (ISO).
+Before that date Thailand used three other calendar systems.
+The BuddhistChronology follows the design of the BuddhistCalendar.
+It is hoped that in the future an accurate Thai chronology can be developed.
+</p>
+<p>
+References
+<ul>
+<li><a href="http://en.wikipedia.org/wiki/Thai_solar_calendar">Wikipedia - Thai Solar Calendar</a></li>
+<li><a href="http://en.wikipedia.org/wiki/Thai_lunar_calendar">Wikipedia - Thai Lunar Calendar</a></li>
+<li><a href="http://www.faqs.org/faqs/thai/culture/section-5.html">Thai Calendar FAQs</a></li>
+</ul>
+</p>
+</section>
+
+<section name="Using Buddhist chronology in Joda-Time">
+<p>
+Within Joda-Time the Buddhist calendar system can be used by obtaining an
+instance of <a href="apidocs/org/joda/time/chrono/BuddhistChronology.html">BuddhistChronology</a>.
+This is normally created using the factory method
+<a href="apidocs/org/joda/time/chrono/BuddhistChronology.html#getInstance()">BuddhistChronology.getInstance()</a>.
+This is then passed into the constructors of the main date and time classes.
+</p>
+<source>
+// setup date object for midday on May Day 2004 (ISO year 2004)
+DateTime dtISO = new DateTime(2004, 5, 1, 12, 0, 0, 0);
+
+// find out what the same instant is using the Buddhist Chronology
+DateTime dtBudd = dtISO.withChronology(BuddhistChronology.getInstance());
+</source>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/cal_coptic.xml b/JodaTime/src/site/xdoc/cal_coptic.xml
new file mode 100644
index 000000000..857a561e6
--- /dev/null
+++ b/JodaTime/src/site/xdoc/cal_coptic.xml
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Coptic calendar system</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Coptic calendar system">
+<p>
+The Coptic calendar system is based on that used in ancient Egypt.
+It is sometimes referred to as the Alexandrian Calendar.
+The calendar system is in use today by the Coptic Orthodox Church and by farmers
+tracking the seasons in Egypt.
+</p>
+<p>
+The Coptic calendar system consists of 12 months of exactly 30 days, followed by
+a 5 or 6 day intercalary month making a year of 365 or 366 days.
+Leap years (6 day intercalary month) occur every 4 years without exception (as per the Julian calendar).
+They occur when the remainder left after dividing the Coptic year by four is 3.
+The Coptic year starts on Septamber 11th/12th depending on leap years.
+The epoch date for the calendar is 0284-08-29 (Julian), which therefore is 0001-01-01 (Coptic).
+The current era is 'AM' (Anno Martyrum or Year of the Martyrs).
+</p>
+<p>
+Joda-Time implements the rules described above.
+We model the 5 or 6 day intercalary month as month 13.
+We also prevent the entry of dates before year 1.
+</p>
+<p>
+References
+<ul>
+<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
+<li><a href="http://en.wikipedia.org/wiki/Coptic_calendar">Wikipedia - Coptic Calendar</a></li>
+</ul>
+</p>
+</section>
+
+<section name="Using Coptic chronology in Joda-Time">
+<p>
+Within Joda-Time the Coptic calendar system can be used by obtaining an
+instance of <a href="apidocs/org/joda/time/chrono/CopticChronology.html">CopticChronology</a>.
+This is normally created using the factory method
+<a href="apidocs/org/joda/time/chrono/CopticChronology.html#getInstance()">CopticChronology.getInstance()</a>.
+This is then passed into the constructors of the main date and time classes.
+</p>
+<source>
+// setup date object for midday on May Day 2004 (ISO year 2004)
+DateTime dtISO = new DateTime(2004, 5, 1, 12, 0, 0, 0);
+
+// find out what the same instant is using the Coptic Chronology
+DateTime dtCopt = dtISO.withChronology(CopticChronology.getInstance());
+</source>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/cal_ethiopic.xml b/JodaTime/src/site/xdoc/cal_ethiopic.xml
new file mode 100644
index 000000000..400595fc4
--- /dev/null
+++ b/JodaTime/src/site/xdoc/cal_ethiopic.xml
@@ -0,0 +1,60 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Coptic calendar system</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Ethiopic calendar system">
+<p>
+The Ethiopic calendar system is similiar to the
+<a href="cal_coptic.html">Coptic</a> calendar and based on that used in ancient Egypt.
+The calendar system is in use today in Ethiopia.
+</p>
+<p>
+The Ethiopic calendar system consists of 12 months of exactly 30 days, followed by
+a 5 or 6 day intercalary month making a year of 365 or 366 days.
+Leap years (6 day intercalary month) occur every 4 years without exception (as per the Julian calendar).
+They occur when the remainder left after dividing the Ethiopic year by four is 3.
+The Ethiopic year starts on Septamber 11th/12th depending on leap years.
+The epoch date for the calendar is 0008-08-29 (Julian), which therefore is 0001-01-01 (Ethiopic).
+The current era is 'EE' (Ethiopian Era).
+</p>
+<p>
+Joda-Time implements the rules described above.
+We model the 5 or 6 day intercalary month as month 13.
+We also prevent the entry of dates before year 1.
+</p>
+<p>
+References
+<ul>
+<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
+<li><a href="http://en.wikipedia.org/wiki/Ethiopian_calendar">Wikipedia - Ethiopic Calendar</a></li>
+</ul>
+</p>
+</section>
+
+<section name="Using Ethiopic chronology in Joda-Time">
+<p>
+Within Joda-Time the Ethiopic calendar system can be used by obtaining an
+instance of <a href="apidocs/org/joda/time/chrono/EthiopicChronology.html">EthiopicChronology</a>.
+This is normally created via the
+<a href="apidocs/org/joda/time/chrono/EthiopicChronology.html#getInstance()">EthiopicChronology.getInstance()</a> factory.
+The chronology is then passed into the constructors of the main date and time classes.
+</p>
+<source>
+// setup date object for midday on May Day 2004 (ISO year 2004)
+DateTime dtISO = new DateTime(2004, 5, 1, 12, 0, 0, 0);
+
+// find out what the same instant is using the Ethiopic Chronology
+DateTime dtEthiopic = dtISO.withChronology(EthiopicChronology.getInstance());
+</source>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/cal_gj.xml b/JodaTime/src/site/xdoc/cal_gj.xml
new file mode 100644
index 000000000..95070d783
--- /dev/null
+++ b/JodaTime/src/site/xdoc/cal_gj.xml
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - GregorianJulian (GJ) calendar system</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="GregorianJulian (GJ) calendar system">
+<p>
+The GregorianJulian calendar system is the fusion of the two calendar systems
+in the Christian or Roman tradition.
+This calendar system is widely used today throughout the world, and is
+especially useful for historical work.
+</p>
+<p>
+The GregorianJulian calendar is a combination of two separate calendar systems,
+the <a href="cal_gregorian.html">Gregorian</a> and the <a href="cal_julian.html">Julian</a>.
+The switch from one to the other occurs at a configurable date.
+The default date is 1582-10-15, as defined by Pope Gregory XIII.
+</p>	
+<p>
+The two calendar systems differ mainly in their accuracy of recording leap years.
+The Julian calendar defines a leap year as being once every four years.
+The Gregorian calendar adds two extra rules to state that years divisible by 100 are not leap, but those divisible by 400 are.
+</p>
+<p>
+Joda-Time defines this calendar system using the GJChronology.
+This is a replacement for the JDK GregorianCalendar.
+If you intend to only refer to modern dates (after 1583) then you should use the
+Joda-Time default of <a href="cal_iso.html">ISO</a> chronology.
+</p>
+<p>
+References
+<ul>
+<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
+<li><a href="http://en.wikipedia.org/wiki/Gregorian_calendar">Wikipedia - Gregorian Calendar</a></li>
+</ul>
+</p>
+</section>
+
+<section name="Using GregorianJulian in Joda-Time">
+<p>
+Within Joda-Time the GregorianJulian calendar system can be used by obtaining an
+instance of <a href="apidocs/org/joda/time/chrono/GJChronology.html">GJChronology</a>.
+This is normally created using the factory method
+<a href="apidocs/org/joda/time/chrono/GJChronology.html#getInstance()">GJChronology.getInstance()</a>.
+This is then passed into the constructors of the main date and time classes.
+</p>
+<source>
+// setup date object for the Battle of Hastings in 1066
+Chronology chrono = GJChronology.getInstance();
+DateTime dt = new DateTime(1066, 10, 14, 10, 0, 0, 0, chrono);
+</source>
+<p>
+If you want to change the cutover date between Julian and Gregorian, you will need
+to use the other factory methods on GJChronology.
+</p>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/cal_gregorian.xml b/JodaTime/src/site/xdoc/cal_gregorian.xml
new file mode 100644
index 000000000..d1d203699
--- /dev/null
+++ b/JodaTime/src/site/xdoc/cal_gregorian.xml
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Gregorian calendar system</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Gregorian calendar system">
+<p>
+The Gregorian calendar system is calendar system used by most of the modern business world.
+It was first introduced on 1582-10-15 replacing the <a href="cal_julian.html">Julian</a> calendar.
+Gregorian rules define a leap year as once every four years, except every 100, but including every 400.
+</p>
+<p>
+The Gregorian chronology in Joda-Time is equivalent* to the ISO chronology, and uses
+Gregorian rules for all time. Thus it is not historically accurate before 1583.
+This also means that the Gregorian chronology does not correspond to the java class
+<code>GregorianCalendar</code>. See <a href="cal_gj.html">GregorianJulian</a> for a
+suitable replacement.
+</p>
+<p>
+* The Gregorian and ISO chronologies do in fact differ slightly.
+The Gregorian chronology defines a century as it is spoken,
+thus 2005 is in the 21st century.
+The ISO chronology defines a century as the first two digits of the year,
+thus 2005 has a century field of 20.
+</p>
+<p>
+References
+<ul>
+<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
+<li><a href="http://en.wikipedia.org/wiki/Gregorian_calendar">Wikipedia - Gregorian Calendar</a></li>
+</ul>
+</p>
+</section>
+
+<section name="Using Gregorian chronology in Joda-Time">
+<p>
+Within Joda-Time the Gregorian calendar system can be used by obtaining an
+instance of <a href="apidocs/org/joda/time/chrono/GregorianChronology.html">GregorianChronology</a>.
+This is normally created using the factory method
+<a href="apidocs/org/joda/time/chrono/GregorianChronology.html#getInstance()">GregorianChronology.getInstance()</a>.
+This is then passed into the constructors of the main date and time classes.
+</p>
+<source>
+// setup date object for midday on Christmas 2004
+Chronology chrono = GregorianChronology.getInstance();
+DateTime dt = new DateTime(2004, 12, 25, 12, 0, 0, 0, chrono);
+</source>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/cal_islamic.xml b/JodaTime/src/site/xdoc/cal_islamic.xml
new file mode 100644
index 000000000..a1ee8e566
--- /dev/null
+++ b/JodaTime/src/site/xdoc/cal_islamic.xml
@@ -0,0 +1,104 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Islamic calendar system</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Islamic calendar system">
+<p>
+The Islamic, or Hijri, calendar system is a Lunar calendar used
+in many Muslim countries.
+</p>
+<p>
+The Islamic calendar system is a lunar calendar based on observation.
+The observation aspect of the calendar means that a new month can only
+be declared based on human observations of the moon, something
+which can obviously vary and is unsuited to computer calculation.
+</p>
+<p>
+Joda-Time implements the arithmetic Islamic calendar, which is an 
+approximation of the actual calendar.
+There are 12 months, each of 29 or 30 days, making a year of 354 days, or 355 in a leap year.
+The days in the month alternate, with the first month having 30 days,
+the second 29 days and so on.
+In a leap year, the twelfth month has 30 days instead of the normal 29.
+</p>
+<p>
+The definition of a leap year in the Islamic calendar varies.
+All agree on a 30 year cycle, however which years within the 30 are leap
+varies by the leap year pattern:
+</p>
+<table>
+<tr>
+<td>15-based</td>
+<td>2, 5, 7, 10, 13, 15, 18, 21, 24, 26, 29</td>
+</tr>
+<tr>
+<td>16-based</td>
+<td>2, 5, 7, 10, 13, 16, 18, 21, 24, 26, 29</td>
+</tr>
+<tr>
+<td>Indian</td>
+<td>2, 5, 8, 10, 13, 16, 19, 21, 24, 27, 29</td>
+</tr>
+<tr>
+<td>Habash al-Hasib</td>
+<td>2, 5, 8, 11, 13, 16, 19, 21, 24, 27, 30</td>
+</tr>
+</table>
+<p>
+Joda-Time allows you to choose between these leap year patterns.
+The 16-based algorithm is the most commonly used, and is the default.
+Note that Microsoft uses the 15-based pattern, and calls it the 'Kuwaiti algorithm'.
+</p>
+<p>
+The epoch of the calendar system is 0622-07-16 (Julian) which is therefore 0001-01-01 (Islamic).
+The current (and only implemented) era is 'AH' (Anno Hegirae).
+</p>
+<p>
+Days of the week are named 'the first day', 'the second day' and so on, where
+Sunday is the first day.
+The day of the week value (numeric) returned by Joda-Time however, is the same
+as the ISO day of week definition.
+Thus Sunday will return the numeric value 7, and Monday will return the numeric value 1.
+</p>
+<p>
+A day in the Islamic calendar begins at sunset on the previous 'day'.
+Joda-Time does not model this, thus times and date rollover follow standard
+ISO definitions, in other words starting at midnight.
+</p>
+<p>
+References
+<ul>
+<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
+<li><a href="http://en.wikipedia.org/wiki/Islamic_calendar">Wikipedia - Islamic Calendar</a></li>
+<li><a href="http://www.phys.uu.nl/~vgent/islam/islamyear_en.htm">Islamic calendar converter</a></li>
+</ul>
+</p>
+</section>
+
+<section name="Using Islamic chronology in Joda-Time">
+<p>
+Within Joda-Time the Islamic calendar system can be used by obtaining an
+instance of <a href="apidocs/org/joda/time/chrono/IslamicChronology.html">IslamicChronology</a>.
+This is normally created via the
+<a href="apidocs/org/joda/time/chrono/IslamicChronology.html#getInstance()">IslamicChronology.getInstance()</a> factory.
+The chronology is then passed into the constructors of the main date and time classes.
+</p>
+<source>
+// setup date object for midday on May Day 2004 (ISO year 2004)
+DateTime dtISO = new DateTime(2004, 5, 1, 12, 0, 0, 0);
+
+// find out what the same instant is using the Islamic Chronology
+DateTime dtIslamic = dtISO.withChronology(IslamicChronology.getInstance());
+</source>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/cal_iso.xml b/JodaTime/src/site/xdoc/cal_iso.xml
new file mode 100644
index 000000000..4290aa43a
--- /dev/null
+++ b/JodaTime/src/site/xdoc/cal_iso.xml
@@ -0,0 +1,128 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - ISO8601 calendar system</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="ISO8601 Java calendar system">
+<p>
+The ISO 8601 calendar system is the default implementation within Joda-Time.
+The standard formalises the <a href="cal_gregorian.html">Gregorian</a> calendar
+system used by the modern business world.
+</p>
+<p>
+The ISO8601 standard was created by the International Organization for Standards based in Geneva.
+It aims to eliminate the risk of misinterpretting dates and times when representations
+are passed between systems and across national boundaries.
+We are unable to provide a direct link to the standard as it is a paid-for document.
+However some <a href="http://www.exit109.com/~ghealton/.dates.html#@Standards.ISO.8601.Commentary.Links">ISO8601 links</a> may be useful.
+</p>
+<p>
+The ISO8601 standard is based on the <i>proleptic Gregorian calendar</i>.
+This makes it fully compatible with the calendar system used in most countries today.
+The <i>proleptic</i> means that the Gregorian rules for leap years are applied for all time,
+thus the ISO8601 standard gives different results for dates before the year 1583 when
+the historic cutover from the Julian calendar occurred.
+</p>
+<p>
+The standard sets out a framework within which dates and times can be represented.
+It offers many choices, however in reality there are three main date representations,
+year month day, year dayOfYear and year week dayOfWeek.
+</p>
+<p>
+References
+<ul>
+<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
+<li><a href="http://www.exit109.com/~ghealton/.dates.html#@Standards.ISO.8601.Commentary.Links">ISO8601 links</a></li>
+<li><a href="http://en.wikipedia.org/wiki/ISO8601">Wikipedia - ISO Calendar</a></li>
+</ul>
+</p>
+
+<subsection name="Month based">
+<p>
+yyyy-mm-dd<b>T</b>HH:MM:SS.SSS<br />
+This is the most common format of ISO8601 and separates the fields by dashes.
+The fields are:
+<ul>
+<li>four digit year</li>
+<li>two digit month, where 01 is Janurary and 12 is December</li>
+<li>two digit day of month, from 01 to 31</li>
+<li>two digit hour, from 00 to 23</li>
+<li>two digit minute, from 00 to 59</li>
+<li>two digit second, from 00 to 59</li>
+<li>three decimal places for milliseconds if required</li>
+</ul>
+This format is used in XML standards for passing dates and times.
+</p>
+</subsection>
+
+<subsection name="Day of Year based">
+<p>
+yyyy-ddd<b>T</b>HH:MM:SS.SSS<br />
+This format of ISO8601 has the following fields:
+<ul>
+<li>four digit year</li>
+<li>three digit day of year, from 001 to 366</li>
+<li>two digit hour, from 00 to 23</li>
+<li>two digit minute, from 00 to 59</li>
+<li>two digit second, from 00 to 59</li>
+<li>three decimal places for milliseconds if required</li>
+</ul>
+</p>
+</subsection>
+
+<subsection name="Week based">
+<p>
+yyyy-<b>W</b>ww-d<b>T</b>HH:MM:SS.SSS<br />
+This format of ISO8601 has the following fields:
+<ul>
+<li>four digit weekyear, see rules below</li>
+<li>two digit week of year, from 01 to 53</li>
+<li>one digit day of week, from 1 to 7 where 1 is Monday and 7 is Sunday</li>
+<li>two digit hour, from 00 to 23</li>
+<li>two digit minute, from 00 to 59</li>
+<li>two digit second, from 00 to 59</li>
+<li>three decimal places for milliseconds if required</li>
+</ul>
+Weeks are always complete, and the first week of a year is the one that includes the first Thursday of the year.
+This definition can mean that the first week of a year starts in the previous year, and the last week finishes in the next year.
+The weekyear field is defined to refer to the year that owns the week, which may differ from the actual year.
+</p>
+</subsection>
+
+</section>
+
+<section name="Using ISO8601 in Joda-Time">
+<p>
+Within Joda-Time the ISO8601 calendar system is the default. As such, all methods
+that take a chronology as a parameter will use the ISO chronology if null is passed in.
+There is almost always a version of the method without the chronology parameter, and this
+will default to ISO chronology.
+</p>
+<p>
+The actual chronology class is
+<a href="apidocs/org/joda/time/chrono/ISOChronology.html">ISOChronology</a>.
+This is normally created if required using the factory method
+<a href="apidocs/org/joda/time/chrono/ISOChronology.html#getInstance()">ISOChronology.getInstance()</a>.
+</p>
+<source>
+// setup date object for midday on Christmas 2004 (default time zone)
+DateTime dt = new DateTime(2004, 12, 25, 12, 0, 0, 0);
+
+// or specify the chronology explicitly
+Chronology chrono = ISOChronology.getInstance();
+DateTime dt = new DateTime(2004, 12, 25, 12, 0, 0, 0, chrono);
+
+// or use the default null handling behaviour
+DateTime dt = new DateTime(2004, 12, 25, 12, 0, 0, 0, (Chronology) null);
+</source>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/cal_julian.xml b/JodaTime/src/site/xdoc/cal_julian.xml
new file mode 100644
index 000000000..8846953a2
--- /dev/null
+++ b/JodaTime/src/site/xdoc/cal_julian.xml
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Julian calendar system</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Julian calendar system">
+<p>
+The Julian calendar system is calendar system that was widely used from about 4CE to 1582CE.
+It was replaced by the <a href="cal_gregorian.html">Gregorian</a> calendar on 1582-10-15.
+The Julian calendar defines a leap year as once every four years.
+This becomes inaccurate over time, to such an extent that by 1582, 10 days had to be
+'lost' to correct the calendar.
+</p>
+<p>
+The Julian calendar is represented in Joda-Time by the Julian chronology.
+This chronology applies Julian rules for all time.
+Normally, a more accurate historic calendar is found by using the
+<a href="cal_gj.html">GregorianJulian</a> chronology instead.
+</p>
+<p>
+References
+<ul>
+<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
+<li><a href="http://en.wikipedia.org/wiki/Julian_calendar">Wikipedia - Julian Calendar</a></li>
+</ul>
+</p>
+</section>
+
+<section name="Using Julian chronology in Joda-Time">
+<p>
+Within Joda-Time the Julian calendar system can be used by obtaining an
+instance of <a href="apidocs/org/joda/time/chrono/JulianChronology.html">JulianChronology</a>.
+This is normally created using the factory method
+<a href="apidocs/org/joda/time/chrono/JulianChronology.html#getInstance()">JulianChronology.getInstance()</a>.
+This is then passed into the constructors of the main date and time classes.
+</p>
+<source>
+// setup date object for the Battle of Hastings in 1066
+Chronology chrono = JulianChronology.getInstance();
+DateTime dt = new DateTime(1066, 10, 14, 10, 0, 0, 0, chrono);
+</source>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/faq.xml b/JodaTime/src/site/xdoc/faq.xml
new file mode 100644
index 000000000..93493ac28
--- /dev/null
+++ b/JodaTime/src/site/xdoc/faq.xml
@@ -0,0 +1,289 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - FAQ</title>
+  <author>Stephen Colebourne</author>
+  <author>Brian S O'Neill</author>
+ </properties>
+
+ <body>
+
+<section name="Frequently Asked Questions">
+<p>
+Some common questions about Joda-Time are answered here.
+<ul>
+<li><a href="#newzonerules">Does Joda-Time support the 2007 US and Canada time zone rules?</a></li>
+<li><a href="#datediff">How do I calculate the difference between two dates?</a></li>
+<li><a href="#iso">What is ISO8601?</a></li>
+<li><a href="#default">Why is ISO8601 the default?</a></li>
+<li><a href="#internalstorage">How are times calculated internally?</a></li>
+<li><a href="#long">Why limit to the number of milliseconds in a long?</a></li>
+<li><a href="#range">What date range is supported?</a></li>
+<li><a href="#submilli">What about sub-millisecond accuracy?</a></li>
+<li><a href="#performance">How well does it perform?</a></li>
+<li><a href="#threading">Does it support multi-threading?</a></li>
+<li><a href="#leapseconds">Are leap seconds supported?</a></li>
+<li><a href="#numberclasses">There are lots of classes, do I need to learn them all?</a></li>
+<li><a href="#tzreimplement">Why reimplement TimeZone?</a></li>
+<li><a href="#joda">What is with the name 'joda'?</a></li>
+</ul>
+Question not answered? Suggest one via the <a href="mail-lists.html">mailing list</a>.<br></br>
+</p>
+
+
+<a name="newzonerules" />
+<subsection name="Does Joda-Time support the 2007 US and Canada time zone rules?">
+<p>
+The time zone rules occur in three key places, your operating system, the JDK and Joda-Time.
+To be sure of hitting no issues, you should ensure that all three of these have been updated.
+</p>
+<p>
+Version 1.5 of Joda-Time contains all the daylight savings rule updates for the 2007 US change.
+For earlier versions of Joda-Time the situation is more complex:
+</p>
+<p>
+If your application only uses the major time zones of the US, then you need Joda-Time 1.2 or later.
+If your application also uses the major time zones of the Canada, then you need Joda-Time 1.2.1 or later.
+If your application uses the minor time zones of the US or Canada, then you need Joda-Time 1.4 or later.
+For Bermuda (Atlantic/Bermuda) you need Joda-Time 1.4 or later.
+For the Bahamas (America/Nassau) you need Joda-Time 1.5.
+</p>
+<p>
+For any future, or similar time zone change, you can upgrade your Joda-Time jar by following <a href="tz_update.html">these instructions</a>.
+</p>
+</subsection>
+
+<a name="datediff" />
+<subsection name="How do I calculate the difference between two dates?">
+<p>
+This question has more than one answer!
+If you just want the number of whole days between two dates, then you can use the
+new <a href="api-release/index.html?org/joda/time/Days.html">Days</a> class
+in version 1.4 of Joda-Time.
+<source>
+  Days d = Days.daysBetween(startDate, endDate);
+  int days = d.getDays();
+</source>
+This method, and other static methods on the <code>Days</code> class have been
+designed to operate well with the JDK5 static import facility.
+</p>
+<p>
+If however you want to calculate the number of days, weeks, months and years between
+the two dates, then you need a <a href="api-release/index.html?org/joda/time/Period.html">Period</a>
+By default, this will split the difference between the two datetimes into parts,
+such as "1 month, 2 weeks, 4 days and 7 hours".
+<source>
+  Period p = new Period(startDate, endDate);
+</source>
+You can control which fields get extracted using a
+<a href="api-release/index.html?org/joda/time/PeriodType.html">PeriodType</a>.
+<source>
+  Period p = new Period(startDate, endDate, PeriodType.yearMonthDay());
+</source>
+This example will return not return any weeks or time fields, thus the previous
+example becomes "1 month and 18 days".
+</p>
+<p>
+For more info, consult the <a href="key_period.html">period guide</a>.
+</p>
+</subsection>
+
+<a name="iso" />
+<subsection name="What is ISO-8601?">
+<p>
+Historically, every country has found their own solution to measuring time.
+This has often been political and religious.
+To simplify the problem, especially in the realm of computer data transfer, the
+<a href="cal_iso.html">ISO-8601</a> standard was founded.
+</p>
+<p>
+The ISO standard defines a framework for passing dates and times between computer systems in a standard way.
+The standard uses the proleptic Gregorian calendar.
+This makes it fully compatible with the calendar system used in most of the world after 1582.
+The standard warns that it may only be used to represent dates before 1582 'by mutual agreement'.
+</p>
+<p>
+The standard defines twelve months January to December numbered 1 to 12 and
+seven days Monday to Sunday, numbered 1 to 7.
+In addition it defines the first week of the year as the first week to have most of its days in the new year.
+This can result in the first week of a year starting in the previous year and the last week ending in the following year.
+</p>
+<p>
+The key point about ISO-8601 is that it is a framework for dates not an absolute single definition.
+The most common form is YYYY-MM-DDTHH:MM:SS.SSSZ, in other words year-month-day letter 'T' hour:minute:second and fractions.
+</p>
+</subsection>
+
+
+<a name="default" />
+<subsection name="Why is ISO8601 the default?">
+<p>
+Dates and times can be a localization nightmare (or should that be localisation...).
+Often political, geographic and religious factors have come into play.
+We wanted to avoid these factors if possible.
+</p>
+<p>
+The ISO8601 standard is a good choice because it is a standard designed for computer
+data transfer and developed by a standards body. It is also a good choice because it
+is compatible with the calendar system used by most businesses worldwide today.
+Finally, it is a good choice as it forces API users to think about the decision they
+make if they require non-ISO or historically accurate calendar systems.
+</p>
+</subsection>
+
+
+<a name="internalstorage" />
+<subsection name="How are times calculated internally?">
+<p>
+The main time interface is <a href="apidocs/org/joda/time/ReadableInstant.html">ReadableInstant</a>.
+All classes that implement this interface, such as <code>DateTime</code>,
+store time as a single long value representing milliseconds.
+The epoch of the definition is 1970-01-01T00:00:00Z, which is the same as the JDK time definition and usage.
+Querying a field, such as year or hour, will calculate the value from the millisecond instant.
+</p>
+<p>
+A secondary time interface is  <a href="apidocs/org/joda/time/ReadablePartial.html">ReadablePartial</a>.
+Classes implementing this interface store data in two ways. The 'local' classes, such as <code>LocalDate</code>
+and <code>LocalTime</code> store the number of milliseconds from 1970 without a time zone.
+All other implementations, such as <code>YearMonthDay</code> and <code>TimeOfDay</code>,
+store time as a one int value for each field.
+</p>
+</subsection>
+
+
+<a name="long" />
+<subsection name="Why limit to the number of milliseconds in a long?">
+<p>
+There are three main reasons for using a single long value to store the time.
+<ol>
+<li>Compatibility - being compatible with the JDK makes conversion simpler</li>
+<li>Performance - a primitive value enables fast calculations,
+whereas alternatives generally involve lots of expensive object creation</li>
+<li>Big enough - the range provided by a millisecond based solution is big enough for most needs</li>
+</ol>
+</p>
+</subsection>
+
+
+<a name="range" />
+<subsection name="What date range is supported?">
+<p>
+The range supported is -292,269,054 to 292,277,023.
+In other words, roughly +/- 290 million years to millisecond precision.
+</p>
+<p>
+If you want a date outside this range, ask yourself if you really want millisecond precision.
+In reality, dates this far in the past or future should only be stored as years - 
+anything else is meaningless.
+</p>
+</subsection>
+
+
+<a name="submilli" />
+<subsection name="What about sub-millisecond accuracy?">
+<p>
+Joda-Time does not support accuracy of times below millisecond.
+Physics defines time scales down to 5E-44 secs.
+The only way to accurately record these sorts of times is using the BigInteger class.
+This would severely compromise the performance of the whole API for a very limited use.
+</p>
+</subsection>
+
+
+<a name="performance" />
+<subsection name="How well does it perform?">
+<p>
+Joda-Time is designed for performance. Compared to java.util.Calendar,
+java.text.SimpleDateFormat, and java.util.TimeZone, nearly all equivalent
+operations in Joda-Time are faster. The significant exceptions are operations
+to get or set an individual field.
+</p>
+<p>
+Calling "get" on java.util.Calendar is very fast because it doesn't do any
+work. Calendar calculates all fields in advance, even if many of those fields
+you won't need. Calendar's set method is fast because it defers calculations
+until later. Calling Calendar.get after calling Calendar.set forces all the
+field values to be re-calculated. Calling Joda's DateTime.get method after
+calling DateTime.set only performs the minimum amount of calculations, and the
+pair is faster than Calendar.
+</p>
+<p>
+Joda-Time also allocates very few temporary objects during operations, and
+performs almost no thread synchronization. In systems that are heavily
+multi-threaded or use a lot of memory, Calendar, SimpleDateFormat, and TimeZone
+can become bottlenecks. When the Joda-Time classes are used instead, the
+bottlenecks go away.
+</p>
+</subsection>
+
+
+<a name="threading" />
+<subsection name="Does it support multi-threading?">
+<p>
+Every public class in Joda-Time is documented as being thread-safe or not.
+Joda-Time makes heavy use of the immutability design pattern, and all immutable
+classes in Joda-Time are thread-safe. Many mutable classes whose instances are
+not likely to be shared are not thread-safe, and are documented as such.
+</p>
+<p>
+The most common multi-threading mistake made by Java programmers is in the use
+of SimpleDateFormat. Calling its format method on a shared instance by
+concurrent threads can produce bizarre results. All of Joda-Time's formatting
+classes are thread-safe and immutable.
+</p>
+</subsection>
+
+
+<a name="leapseconds" />
+<subsection name="Are leap seconds supported?">
+<p>
+Joda-Time does not support leap seconds. Leap seconds can be supported by
+writing a new, specialized chronology, or by making a few enhancements to the
+existing ZonedChronology class. In either case, future versions of Joda-Time
+will not enable leap seconds by default. Most applications have no need for it,
+and it might have additional performance costs.
+</p>
+</subsection>
+
+
+<a name="numberclasses" />
+<subsection name="There are lots of classes, do I need to learn them all?">
+<p>
+No, you only need to learn a small subset of the classes in the API.
+The javadoc clearly indicates which packages contain user classes, and which contain
+implementation classes.
+In addition, there are a large number of package scoped classes, which are hidden
+in the javadoc view anyway.
+Most applications will not need to directly import, extend or implement classes in
+the implementation packages.
+Basically, the API consists of the main package, plus the formatting package.
+</p>
+</subsection>
+
+
+<a name="tzreimplement" />
+<subsection name="Why reimplement TimeZone?">
+<p>
+The JDK TimeZone class varies in the support it can provide from one JDK release to another.
+The rules for determining Daylight Saving Time also change frequently.
+The Joda solution uses the international standard format for time zone rule data,
+and allows it to be updated independently of the timing of JDK releases.
+With perhaps 8 releases of the time zone rules per year this can be quite significant.
+</p>
+</subsection>
+
+
+<a name="joda" />
+<subsection name="What is with the name 'joda'?">
+<p>
+'Joda' is a short, four letter name, beginning with 'j' whose domain name was free.
+It is not an acronym.
+</p>
+</subsection>
+
+
+</section>
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/field.xml b/JodaTime/src/site/xdoc/field.xml
new file mode 100644
index 000000000..adc19dfc9
--- /dev/null
+++ b/JodaTime/src/site/xdoc/field.xml
@@ -0,0 +1,488 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Fields</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Date and Time fields">
+<p>
+The library breaks up the date and time into a number of fields. This document
+defines what those fields mean.
+</p>
+<p>
+A naming convention is used to define the fields. These correspond to the common 
+names given to date and time concepts in the Gregorian calendar.
+</p>
+<p>Most fields are a view over part of the total time.
+These fields are expressed as <code>XxxOfYyy</code> where <code>Xxx</code> and <code>Yyy</code> are two date time units.
+<code>Yyy</code> will always be larger than <code>Xxx</code>.
+For example, <code>DayOfWeek</code> or <code>SecondOfMinute</code>.
+A side effect of this is that these field values cannot be negative.
+</p>
+<p>
+Certain fields extend over all time, and do not include the word 'Of' in their names.
+For example, <code>year</code> and <code>weekyear</code>.
+These fields can have negative values (see the table for details).
+</p>
+<p>
+The fields are explained in more detail below (for the GJChronology):
+</p>
+<table cols="3" border="1">
+<tr>
+<th>Name</th>
+<th>Min value (GJ)</th>
+<th>Max value (GJ)</th>
+<th>Notes</th>
+</tr><tr>
+<td><a href="#millisOfSecond">millisOfSecond</a></td>
+<td align="center">0</td>
+<td align="center">999</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#millisOfDay">millisOfDay</a></td>
+<td align="center">0</td>
+<td align="center">86 399 999</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#secondOfMinute">secondOfMinute</a></td>
+<td align="center">0</td>
+<td align="center">59</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#secondOfDay">secondOfDay</a></td>
+<td align="center">0</td>
+<td align="center">86 399</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#minuteOfHour">minuteOfHour</a></td>
+<td align="center">0</td>
+<td align="center">59</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#minuteOfDay">minuteOfDay</a></td>
+<td align="center">0</td>
+<td align="center">1439</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#hourOfDay">hourOfDay</a></td>
+<td align="center">0</td>
+<td align="center">23</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#hourOfHalfday">hourOfHalfday</a></td>
+<td align="center">0</td>
+<td align="center">11</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#hourOfDay">clockhourOfDay</a></td>
+<td align="center">1</td>
+<td align="center">24</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#hourOfHalfday">clockhourOfHalfday</a></td>
+<td align="center">1</td>
+<td align="center">12</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#halfdayOfDay">halfdayOfDay</a></td>
+<td align="center">0 (AM)</td>
+<td align="center">1 (PM)</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#dayOfWeek">dayOfWeek</a></td>
+<td align="center">1 (Monday)</td>
+<td align="center">7 (Sunday)</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#weekOfWeekyear">weekOfWeekyear</a></td>
+<td align="center">1</td>
+<td align="center">53</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#weekyear">weekyear</a></td>
+<td align="center">-292 000 000</td>
+<td align="center">292 000 000</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#dayOfMonth">dayOfMonth</a></td>
+<td align="center">1</td>
+<td align="center">31</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#dayOfYear">dayOfYear</a></td>
+<td align="center">1</td>
+<td align="center">366</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#monthOfYear">monthOfYear</a></td>
+<td align="center">1 (January)</td>
+<td align="center">12 (December)</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#year">year</a></td>
+<td align="center">-292 000 000</td>
+<td align="center">292 000 000</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#yearOfCentury">yearOfCentury</a></td>
+<td align="center">1</td>
+<td align="center">100</td>
+<td align="center">[1]</td>
+</tr><tr>
+<td><a href="#yearOfEra">yearOfEra</a></td>
+<td align="center">1</td>
+<td align="center">292 000 000</td>
+<td><span></span></td>
+</tr><tr>
+<td><a href="#centuryOfEra">centuryOfEra</a></td>
+<td align="center">1</td>
+<td align="center">2 920 000</td>
+<td align="center">[2]</td>
+</tr><tr>
+<td><a href="#era">era</a></td>
+<td align="center">0 (BC/BCE)</td>
+<td align="center">1 (AD/CE)</td>
+<td><span></span></td>
+</tr>
+</table>
+<p>
+[1] For the ISOChronology, the year of century range is from 0 to 99.<br />
+[2] For the ISOChronology, the century of era range is from 0.<br />
+</p>
+
+<a name="millisOfSecond" />
+<subsection name="MillisOfSecond">
+<p>
+The number of milliseconds in the specified time once the second and larger parts are removed.
+</p>
+</subsection>
+
+
+<a name="millisOfDay" />
+<subsection name="MillisOfDay">
+<p>
+The number of milliseconds in the specified time once the day and larger parts are removed.
+</p>
+</subsection>
+
+
+<a name="secondOfMinute" />
+<subsection name="SecondOfMinute">
+<p>
+The number of seconds in the specified time once the minute and larger parts are removed.
+</p>
+</subsection>
+
+
+<a name="secondOfDay" />
+<subsection name="SecondOfDay">
+<p>
+The number of seconds in the specified time once the day and larger parts are removed.
+</p>
+</subsection>
+
+
+<a name="minuteOfHour" />
+<subsection name="MinuteOfHour">
+<p>
+The number of minutes in the specified time once the hour and larger parts are removed.
+</p>
+</subsection>
+
+
+<a name="minuteOfDay" />
+<subsection name="MinuteOfDay">
+<p>
+The number of minutes in the specified time once the day and larger parts are removed.
+</p>
+</subsection>
+
+
+<a name="hourOfDay" />
+<subsection name="HourOfDay">
+<p>
+The number of hours in the specified time once the day and larger parts are
+removed. The clockhour value represents midnight of the current day as 24
+instead of 0.
+</p>
+</subsection>
+
+<a name="hourOfHalfday" />
+<subsection name="HourOfHalfday">
+<p>
+The number of hours within the half day. The clockhour value represents
+midnight or noon of the current day as 12 instead of 0.
+</p>
+</subsection>
+
+<a name="halfdayOfDay" />
+<subsection name="HalfdayOfDay">
+<p>
+The AM/PM value of the day.
+</p>
+</subsection>
+
+<a name="dayOfWeek" />
+<subsection name="DayOfWeek">
+<p>
+The day of week is defined by constants in <code>DateTimeConstants</code>.
+The values used are from the ISO8601 standard.
+Monday is defined as 1, through to Sunday as 7.
+</p>
+</subsection>
+
+
+<a name="weekOfWeekyear" />
+<a name="weekyear" />
+<subsection name="WeekOfWeekyear and Weekyear">
+<p>
+A week based year is one where dates are expressed as a day of week, week number and year (week based).
+The following description is of the ISO8601 standard used by implementations of this method in this library.
+</p>
+<p>
+Weeks run from 1 to 52-53 in a week based year.
+The first day of the week is defined as Monday and given the value 1. 
+</p>
+<p>
+The first week of a year is defined as the first week that has at least four days in the year.
+As a result of this definition, week 1 may extend into the previous year, and week 52/53 may extend into the following year.
+Hence the need for the year of weekyear field.
+</p>
+<p>
+For example, 2003-01-01 was a Wednesday.
+This means that five days, Wednesday to Sunday, of that week are in 2003.
+Thus the whole week is considered to be the first week of 2003.
+Since all weeks start on Monday, the first week of 2003 started on 2002-12-30, ie. in 2002.
+</p>
+<p>
+The week based year has a specific text format.<br />
+2002-12-30 (Monday 30th December 2002) would be represented as 2003-W01-1.<br />
+2003-01-01 (Wednesday 1st January 2003) would be represented as 2003-W01-3.
+</p>
+</subsection>
+
+
+<a name="dayOfMonth" />
+<subsection name="DayOfMonth">
+<p>
+The day of the month. For the GJ and ISO chronologies, this will run from 1 through to 
+28 or 29 in February, 30 in April, June, September and November and 31 otherwise.
+</p>
+</subsection>
+
+
+<a name="dayOfYear" />
+<subsection name="DayOfYear">
+<p>
+The day of the year. This runs from 1 to 365, or 366 in leap years. 
+The exception is when a Julian to Gregorian cutover has occurred.
+In that case, the count is from 1 to 355 (typically) and is unbroken.
+</p>
+</subsection>
+
+
+<a name="monthOfYear" />
+<subsection name="MonthOfYear">
+<p>
+The month of year defined by constants in <code>DateTimeConstants</code>.
+The values used are from the ISO8601 standard.
+January is defined as 1, through to December as 12.
+</p>
+</subsection>
+
+
+<a name="year" />
+<subsection name="Year">
+<p>
+The year, using negative values to represent years in the previous era. For the
+GJ chronology, year zero is not included, unless the cutover to Gregorian is
+specified at or before 1 BCE. The ISO chronology always includes the year
+zero.
+</p>
+</subsection>
+
+<a name="centuryOfEra" />
+<a name="yearOfCentury" />
+<subsection name="CenturyOfEra and YearOfCentury">
+<p>
+The definition of these varies by chronology:
+</p>
+<table border="1">
+<tr>
+<th></th>
+<th colspan="3">GJ</th>
+<th colspan="3">ISO</th>
+</tr><tr>
+<th>year of era</th>
+<th>year</th>
+<th>century of era</th>
+<th>year of century</th>
+<th>year</th>
+<th>century of era</th>
+<th>year of century</th>
+</tr><tr>
+<td align="center">101 BCE</td>
+<td align="center">-101</td>
+<td align="center">2</td>
+<td align="center">1</td>
+<td align="center">-100</td>
+<td align="center">1</td>
+<td align="center">0</td>
+</tr><tr>
+<td align="center">100 BCE</td>
+<td align="center">-100</td>
+<td align="center">1</td>
+<td align="center">100</td>
+<td align="center">-99</td>
+<td align="center">0</td>
+<td align="center">99</td>
+</tr><tr>
+<td align="center">99 BCE</td>
+<td align="center">-99</td>
+<td align="center">1</td>
+<td align="center">99</td>
+<td align="center">-98</td>
+<td align="center">0</td>
+<td align="center">98</td>
+</tr><tr>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+</tr><tr>
+<td align="center">2 BCE</td>
+<td align="center">-2</td>
+<td align="center">1</td>
+<td align="center">2</td>
+<td align="center">-1</td>
+<td align="center">0</td>
+<td align="center">1</td>
+</tr><tr>
+<td align="center">1 BCE</td>
+<td align="center">-1</td>
+<td align="center">1</td>
+<td align="center">1</td>
+<td align="center">0</td>
+<td align="center">0</td>
+<td align="center">0</td>
+</tr><tr>
+<td align="center">1 CE</td>
+<td align="center">1</td>
+<td align="center">1</td>
+<td align="center">1</td>
+<td align="center">1</td>
+<td align="center">0</td>
+<td align="center">1</td>
+</tr><tr>
+<td align="center">2 CE</td>
+<td align="center">2</td>
+<td align="center">1</td>
+<td align="center">2</td>
+<td align="center">2</td>
+<td align="center">0</td>
+<td align="center">2</td>
+</tr><tr>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+</tr><tr>
+<td align="center">99 CE</td>
+<td align="center">99</td>
+<td align="center">1</td>
+<td align="center">99</td>
+<td align="center">99</td>
+<td align="center">0</td>
+<td align="center">99</td>
+</tr><tr>
+<td align="center">100 CE</td>
+<td align="center">100</td>
+<td align="center">1</td>
+<td align="center">100</td>
+<td align="center">100</td>
+<td align="center">1</td>
+<td align="center">0</td>
+</tr><tr>
+<td align="center">101 CE</td>
+<td align="center">101</td>
+<td align="center">2</td>
+<td align="center">1</td>
+<td align="center">101</td>
+<td align="center">1</td>
+<td align="center">1</td>
+</tr><tr>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+<td align="center">...</td>
+</tr><tr>
+<td align="center">1999 CE</td>
+<td align="center">1999</td>
+<td align="center">20</td>
+<td align="center">99</td>
+<td align="center">1999</td>
+<td align="center">19</td>
+<td align="center">99</td>
+</tr><tr>
+<td align="center">2000 CE</td>
+<td align="center">2000</td>
+<td align="center">20</td>
+<td align="center">100</td>
+<td align="center">2000</td>
+<td align="center">20</td>
+<td align="center">0</td>
+</tr><tr>
+<td align="center">2001 CE</td>
+<td align="center">2001</td>
+<td align="center">21</td>
+<td align="center">1</td>
+<td align="center">2001</td>
+<td align="center">20</td>
+<td align="center">1</td>
+</tr>
+</table>
+<p>
+For GJ this is consistent with phrases such '2003 is in the 21st century'.<br />
+For ISO this represents a straight split of a textual ISO8601 year.
+</p>
+</subsection>
+
+
+<a name="yearOfEra" />
+<subsection name="YearOfEra">
+<p>
+The year as generally known (always positive).
+Both the GJ and ISO chronologies return 1 for 1BC/BCE, 2 for 2BC/BCE etc.
+In other words there is no year zero and no negative value for this field.
+</p>
+</subsection>
+
+<a name="era" />
+<subsection name="Era">
+<p>
+The era expressed as a constant, zero for BC/BCE, one for AD/CE.
+</p>
+<p>
+Other chronologies should respect the convention that one is the current era and
+zero is the previous era.
+If more eras are required the values should increase numerically over time.
+</p>
+</subsection>
+
+</section>
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/index.xml b/JodaTime/src/site/xdoc/index.xml
new file mode 100644
index 000000000..2e0d9965d
--- /dev/null
+++ b/JodaTime/src/site/xdoc/index.xml
@@ -0,0 +1,172 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Home</title>
+  <author>Stephen Colebourne</author>
+  <author>Al Major</author>
+ </properties>
+
+ <body>
+
+<section name="Joda Time - Java date and time API">
+<p>
+Joda-Time provides a quality replacement for the Java <em>date</em>
+and <em>time</em> classes. The design allows for multiple <em>calendar</em>
+systems, while still providing a simple API.
+The 'default' calendar is the <a href="cal_iso.html">ISO8601</a> standard which
+is used by XML. The Gregorian, Julian, Buddhist, Coptic, Ethiopic and Islamic systems
+are also included, and we welcome further additions. Supporting classes include
+time zone, duration, format and parsing.
+</p>
+<!--p style="color:red; margin-left:20px;">
+JSR 310 has now been launched. It aims to build upon Joda-Time and include it in the JDK.
+<a href="https://jsr-310.dev.java.net/" class="externalLink" title="External Link">More information</a>.
+</p-->
+<p>
+As a flavour of Joda-Time, here's some example code:
+<source>
+public boolean isAfterPayDay(<a href="api-release/index.html?org/joda/time/DateTime.html"><b>DateTime</b></a> datetime) {
+  if (datetime.getMonthOfYear() == 2) {   // February is month 2!!
+    return datetime.getDayOfMonth() > 26;
+  }
+  return datetime.getDayOfMonth() > 28;
+}
+
+public <a href="api-release/index.html?org/joda/time/Days.html"><b>Days</b></a> daysToNewYear(<a href="api-release/index.html?org/joda/time/LocalDate.html"><b>LocalDate</b></a> fromDate) {
+  <a href="api-release/index.html?org/joda/time/LocalDate.html"><b>LocalDate</b></a> newYear = fromDate.plusYears(1).withDayOfYear(1);
+  return <a href="api-release/index.html?org/joda/time/Days.html"><b>Days</b></a>.daysBetween(fromDate, newYear);
+}
+
+public boolean isRentalOverdue(<a href="api-release/index.html?org/joda/time/DateTime.html"><b>DateTime</b></a> datetimeRented) {
+  <a href="api-release/index.html?org/joda/time/Period.html"><b>Period</b></a> rentalPeriod = new <a href="api-release/index.html?org/joda/time/Period.html"><b>Period</b></a>().withDays(2).withHours(12);
+  return datetimeRented.plus(rentalPeriod).isBeforeNow();
+}
+
+public String getBirthMonthText(<a href="api-release/index.html?org/joda/time/LocalDate.html"><b>LocalDate</b></a> dateOfBirth) {
+  return dateOfBirth.monthOfYear().getAsText(Locale.ENGLISH);
+}
+</source>
+<!--
+public boolean isDoubleShift(<a href="api-release/index.html?org/joda/time/LocalTime.html"><b>LocalTime</b></a> startTime, <a href="api-release/index.html?org/joda/time/LocalTime.html"><b>LocalTime</b></a> endTime) {
+  <a href="api-release/index.html?org/joda/time/Hours.html"><b>Hours</b></a> hoursBetween = <a href="api-release/index.html?org/joda/time/Hours.html"><b>Hours</b></a>.hoursBetween(time1, time2);
+  return hoursBetween.isGreaterThan(<a href="api-release/index.html?org/joda/time/Hours.html"><b>Hours</b></a>.EIGHT);
+}
+public boolean isJoinedInLastThreeMonths(<a href="api-release/index.html?org/joda/time/DateTime.html"><b>DateTime</b></a> datetimeJoined) {
+  <a href="api-release/index.html?org/joda/time/Interval.html"><b>Interval</b></a> last3Months = new <a href="api-release/index.html?org/joda/time/Interval.html"><b>Interval</b></a>(<a href="api-release/index.html?org/joda/time/Months.html"><b>Months</b></a>.THREE, new <a href="api-release/index.html?org/joda/time/DateTime.html"><b>DateTime</b></a>());
+  return last3Months.contains(datetimeJoined);
+}
+-->
+Version 1.6.1 was released on 2010-08-08 -
+<a href="http://sourceforge.net/projects/joda-time/files/joda-time/">Download now</a>
+</p>
+</section>
+
+
+<section name="Why Joda Time?">
+<p>
+Joda-Time has been created to radically change date and time handling in Java.
+The JDK classes Date and Calendar are very badly designed, have had numerous bugs
+and have odd performance effects.
+Here are some of our reasons for developing and using Joda-Time:
+<ul>
+<li><b>Easy to Use</b>.
+Calendar makes accessing 'normal' dates difficult, due to the lack of simple methods.
+Joda-Time has straightforward <a href="field.html">field accessors</a> such as
+<code>getYear()</code> or <code>getDayOfWeek()</code>.</li>
+
+<li><b>Easy to Extend</b>.
+The JDK supports multiple calendar systems via subclasses of <code>Calendar</code>.
+This is clunky, and in practice it is very difficult to write another calendar system.
+Joda-Time supports multiple calendar systems via a pluggable system based on the
+<code>Chronology</code> class.</li>
+
+<li><b>Comprehensive Feature Set</b>.
+The library is intended to provide all the functionality that is required for date-time
+calculations. It already provides out-of-the-box features, such as support for oddball
+date formats, which are difficult to replicate with the JDK.</li>
+
+<li><b>Up-to-date Time Zone calculations</b>.
+The <a href="timezones.html">time zone implementation</a> is based on
+the public <a href="http://www.twinsun.com/tz/tz-link.htm">tz database</a>, which is
+updated several times a year. New Joda-Time releases incorporate all changes
+made to this database. Should the changes be needed earlier,
+<a href="tz_update.html">manually updating the zone data</a> is easy.</li>
+
+<li><b>Calendar support</b>.
+The library currently provides 8 calendar systems. More will be added in the future.</li>
+
+<li><b>Easy interoperability</b>.
+The library internally uses a millisecond instant which is identical to the JDK and similar
+to other common time representations. This makes interoperability easy, and Joda-Time comes
+with out-of-the-box JDK interoperability.</li>
+
+<li><b>Better Performance Characteristics</b>.
+Calendar has strange performance characteristics as it recalculates fields at unexpected moments.
+Joda-Time does only the minimal calculation for the field that is being accessed.</li>
+
+<li><b>Good Test Coverage</b>.
+Joda-Time has a comprehensive set of developer tests, providing assurance of the library's quality.</li>
+
+<li><b>Complete Documentation</b>.
+There is a full <a href="userguide.html">User Guide</a> which provides an overview and covers
+common usage scenarios. The <a href="api-release/index.html">javadoc</a>
+is extremely detailed and covers the rest of the API.</li>
+
+<li><b>Maturity</b>.
+The library has been under active development since 2002.
+Although it continues to be improved with the addition of new features and
+bug-fixes, it is a mature and reliable code base.
+A number of <a href="related.html">related projects</a> are now available.</li>
+
+<li><b>Open Source</b>.
+Joda-Time is licenced under the business friendly <a href="license.html">Apache License Version 2.0</a>.</li>
+</ul>
+</p>
+</section>
+
+<section name="Documentation">
+<p>
+Various documentation is available:
+<ul>
+<li>Two user guides - <a href="quickstart.html">quick</a> and <a href="userguide.html">full</a></li>
+<li>The key concepts and chronology documents in the left navigation area</li>
+<li>The javadoc for the <a href="api-release/index.html">current release</a></li>
+<li>The javadoc for the <a href="apidocs/index.html">latest code in development</a></li>
+<li>A <a href="faq.html">FAQ</a> list</li>
+<li>Information on <a href="installation.html">downloading and installing</a> Joda-Time</li>
+<li>The <a href="http://joda-time.svn.sourceforge.net/viewvc/joda-time/trunk/JodaTime/">Subversion repository</a></li>
+</ul>
+</p>
+</section>
+
+<section name="Releases">
+<p>
+<a href="http://sourceforge.net/projects/joda-time/files/joda-time/">Release 1.6.1</a>
+is the current latest release.
+This release is considered stable and worthy of the 1.x tag.
+It has extensive testing suites and has been used in production.
+We now recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
+</p>
+<p>
+We will support the 1.x product line using standard Java mechanisms.
+The main public API will remain backwards compatible for both source and binary.
+The version number will change to 2.0 to indicate a change in compatibility.
+</p>
+</section>
+
+<section name="Support">
+<p>
+Support on bugs, library usage or enhancement requests is available via:
+</p>
+<ul>
+<li>the joda-interest <a href="mail-lists.html">mailing list</a>. Due to spam, you must be subscribed to post to the mailing list.</li>
+<li>the joda-time sourceforge <a href="http://sourceforge.net/projects/joda-time/forums/forum/337835">forum</a>.</li>
+</ul>
+<p>
+Alternatively, you can contact the project lead, Stephen Colebourne via scolebourne.at.users.sourceforge.net.
+</p>
+</section>
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/installation.xml b/JodaTime/src/site/xdoc/installation.xml
new file mode 100644
index 000000000..47d61de9f
--- /dev/null
+++ b/JodaTime/src/site/xdoc/installation.xml
@@ -0,0 +1,51 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Download and Installation</title>
+  <author>Al Major</author>
+ </properties>
+
+<body>
+
+<section name="Download and Installation">
+<p>
+To use Joda-Time you need to
+<a href="http://sourceforge.net/projects/joda-time/files/joda-time/">download the latest version</a>.
+The download will contain the joda-time-1.6.1.jar.
+Once you add this to your classpath you will be able to use Joda-Time.
+</p>
+<p>
+The binary download also includes joda-time-1.6.1-sources.jar, which is a jar file
+of the source code suitable for linking to the jar file in IDEs such as Eclipse.
+</p>
+<p>
+The release notes for upgraders can be found here:
+<ul>
+<li><a href="upgradeto161.html">Version 1.6 to Version 1.6.1</a></li>
+<li><a href="upgradeto160.html">Version 1.5 to Version 1.6</a></li>
+<li><a href="upgradeto152.html">Version 1.5.1 to Version 1.5.2</a></li>
+<li><a href="upgradeto151.html">Version 1.5 to Version 1.5.1</a></li>
+<li><a href="upgradeto150.html">Version 1.4 to Version 1.5</a></li>
+<li><a href="upgradeto140.html">Version 1.3 to Version 1.4</a></li>
+<li><a href="upgradeto130.html">Version 1.2 to Version 1.3</a></li>
+<li><a href="upgradeto120.html">Version 1.1 to Version 1.2</a></li>
+<li><a href="upgradeto110.html">Version 1.0 to Version 1.1</a></li>
+<li><a href="upgradeto100.html">Version 0.99 to Version 1.0</a></li>
+<li><a href="upgradeto099.html">Version 0.98 to Version 0.99</a></li>
+</ul>
+</p>
+<p>
+If you want to build Joda-Time from source you will need
+<a href="http://ant.apache.org">Apache Ant</a>.
+Simply call <code>ant jar</code> to compile and create a jar file.
+</p>
+<p>
+Compilation is also available using
+<a href="http://maven.apache.org">Apache Maven</a>.
+Maven is intended to be used primarily as a website generation tool.
+Ant is our preferred build tool.
+</p>
+</section>
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/key_chronology.xml b/JodaTime/src/site/xdoc/key_chronology.xml
new file mode 100644
index 000000000..fe3c8e534
--- /dev/null
+++ b/JodaTime/src/site/xdoc/key_chronology.xml
@@ -0,0 +1,81 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Chronology</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Chronology">
+
+<p>
+A <i>chronology</i> in Joda-Time is a pluggable calendar system.
+The JDK supports multiple calendar systems via subclasses of <code>Calendar</code>.
+This is clunky, and in practice it is very difficult to write another calendar system.
+Joda-Time supports multiple calendar systems by designing a pluggable system.
+</p>
+<p>
+The default chronology in Joda-Time is <a href="cal_iso.html">ISO</a>.
+This calendar system is the same as that used by business in the majority of the world today.
+The ISO system is unsuitable for historical work before 1583 as it applies the leap year rules
+from today back in time (it is a proleptic calendar).
+As a result, users requiring a more historically accurate calendar system are forced to
+think about their actual requirements, which we believe is a Good Thing.
+</p>
+<p>
+The actual calculations of the chronology are split between the
+<a href="api-release/index.html?org/joda/time/Chronology.html">Chronology</a> class itself
+and the field classes -
+<a href="api-release/index.html?org/joda/time/DateTimeField.html">DateTimeField</a> and
+<a href="api-release/index.html?org/joda/time/DurationField.html">DurationField</a>.
+Together, the subclasses of these three classes form the bulk of the code in the library.
+However, most users will never need to use or refer directly to the subclasses.
+Instead, most applications will simply obtain the chronology and use it as a singleton.
+</p>
+<p>
+The chronology class also supports the time zone functionality.
+This is applied to the underlying chronology via the decorator design pattern.
+The <a href="api-release/index.html?org/joda/time/DateTimeZone.html">DateTimeZone</a> class provides
+access to the zones via factories, and also supports a default zone concept.
+A full list of time zones can be found <a href="timezones.html">here</a>.
+It is also possible to <a href="tz_update.html">update the zone data</a> yourself.
+</p>
+<p>
+Internally, all the chronology, field and time zone classes are maintained as singletons.
+Thus there is an initial setup cost when using Joda-Time, but after that only
+the main API instance classes (DateTime, Interval, Period, etc.) have creation and
+garbage collector costs.
+</p>
+
+</section>
+
+<section name="Using Chronology in Joda-Time">
+<p>
+A Chronology is obtained and used in Joda-Time as a singleton:
+<source>
+DateTimeZone zone = DateTimeZone.forID("Europe/London");
+Chronology coptic = CopticChronology.getInstance(zone);
+
+// current time with coptic chronology
+DateTime dt = new DateTime(coptic);
+
+int year = dt.getYear();   // gets the current coptic year
+int month = dt.getMonthOfYear(); // gets the current coptic month
+</source>
+</p>
+
+<subsection name="Nulls">
+<p>
+A null chronology always refers to ISO chronology in the default zone.
+Thus, when a method is defined as taking a <code>Chronology</code>, passing null in
+will be the same as passing in the ISO chronology in the default time zone.
+</p>
+</subsection>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/key_duration.xml b/JodaTime/src/site/xdoc/key_duration.xml
new file mode 100644
index 000000000..295fd06f2
--- /dev/null
+++ b/JodaTime/src/site/xdoc/key_duration.xml
@@ -0,0 +1,77 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Duration</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Duration">
+
+<p>
+A <i>duration</i> in Joda-Time represents a duration of time measured in milliseconds.
+The duration is often obtained from an <a href="key_interval.html">interval</a>.
+</p>
+<p>
+Durations are a very simple concept, and the implementation is also simple.
+They have no <a href="key_chronology.html">chronology</a> or time zone, and consist
+solely of the millisecond duration.
+</p>
+<p>
+Durations can be added to an <a href="key_instant.html">instant</a>, or to either
+end of an interval to change those objects.
+In datetime maths you could say:
+<source>
+      instant  +  duration  =  instant
+</source>
+</p>
+<p>
+Durations implement <code>Comparable</code> which compares the lengths of the two durations.
+</p>
+
+</section>
+
+<section name="Using Durations in Joda-Time">
+<p>
+Within Joda-Time a duration is represented by the
+<a href="api-release/index.html?org/joda/time/ReadableDuration.html">ReadableDuration</a> interface.
+There is one implementation of the interface provided:
+<ul>
+<li><a href="api-release/index.html?org/joda/time/Duration.html">Duration</a> -
+An immutable implementation</li>
+</ul>
+</p>
+<p>
+The code can be used in various ways:
+<source>
+DateTime start = new DateTime(2004, 12, 25, 0, 0, 0, 0);
+DateTime end = new DateTime(2005, 1, 1, 0, 0, 0, 0);
+
+// duration in ms between two instants
+Duration dur = new Duration(start, end);
+
+// calc will be the same as end
+DateTime calc = start.plus(dur);
+</source>
+</p>
+<p>
+Note that the interface <code>ReadableDuration</code> should not be used like the collections API.
+The interface only contains the core subset of the operations.
+Instead, you should usually refer directly to the implementation class in your APIs.
+</p>
+
+<subsection name="Nulls">
+<p>
+Joda-Time defines a null duration as zero length.
+Thus, when a method is defined as taking a <code>ReadableDuration</code>, passing null in
+will be the same as passing in a zero length duration.
+</p>
+</subsection>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/key_instant.xml b/JodaTime/src/site/xdoc/key_instant.xml
new file mode 100644
index 000000000..686e3da9f
--- /dev/null
+++ b/JodaTime/src/site/xdoc/key_instant.xml
@@ -0,0 +1,105 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Instant</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Instant">
+
+<p>
+The most frequently used concept in Joda-Time is that of the <i>instant</i>.
+An Instant is defined as <i>an instant in the datetime continuum specified as a
+number of milliseconds from 1970-01-01T00:00Z</i>.
+This definition of milliseconds is consistent with that of the JDK in <code>Date</code>
+or <code>Calendar</code>. Interoperating between the two APIs is thus simple.
+</p>
+<p>
+The millisecond instant can be converted to any date time field using a
+<a href="key_chronology.html">Chronology</a>.
+To assist with this, methods are provided on <code>DateTime</code> that act as getters for
+the most common date and time fields.
+More powerful access to the field can be obtained via its property.
+<source>
+DateTime dt = new DateTime();  // current time
+int month = dt.getMonth();     // gets the current month
+int month = dt.month().get();  // alternative way to get value
+String monthStr = dt.month().getAsText();  // gets the month name
+</source>
+</p>
+<p>
+To deal with local times (no time zone), or with date only or time only concepts,
+you should use the <a href="key_partial.html">partial</a> classes.
+</p>
+
+</section>
+
+<section name="Using Instants in Joda-Time">
+<p>
+Within Joda-Time an instant is represented by the
+<a href="api-release/index.html?org/joda/time/ReadableInstant.html">ReadableInstant</a> interface.
+There are four implementations of the interface provided:
+<ul>
+<li><a href="api-release/index.html?org/joda/time/Instant.html">Instant</a> -
+A simple immutable implementation which is restricted to the UTC time zone
+and is intended for time zone and calendar neutral data transfer</li>
+<li><a href="api-release/index.html?org/joda/time/DateTime.html">DateTime</a> -
+The most commonly used class in the library, and an immutable representation of a
+date and time with calendar and time zone</li>
+<li><a href="api-release/index.html?org/joda/time/DateMidnight.html">DateMidnight</a> -
+Similar to <code>DateTime</code> and also immutable but with the time component
+forced to be midnight (at the start of a day)</li>
+<li><a href="api-release/index.html?org/joda/time/MutableDateTime.html">MutableDateTime</a> -
+A mutable representation of date and time with calendar and time zone</li>
+</ul>
+We recommend the immutable implementations for general usage.
+</p>
+<p>
+The code can be used in various ways:
+<source>
+// setup date object for midday on Christmas 2004 (ISO year 2004)
+DateTime dt = new DateTime(2004, 12, 25, 12, 0, 0, 0);
+// get the year, 2004
+int year = dt.getYear();
+// get the day of week index 1 (Monday) to 7 (Sunday)
+int dow = dt.getDayOfWeek();
+// get the text, such as 'Tuesday'
+String dowStr = dt.dayOfWeek().getAsText();
+</source>
+Compared to <code>GregorianCalendar</code> Joda-Time classes use 1-12 for months, and are
+immutable in the standard implementations.
+It is also easy to convert to and from the JDK classes.
+<source>
+// construct DateTime from JDK Date
+Date jdkDate = new Date();
+DateTime dt = new DateTime(jdkDate);
+
+// construct Calendar from DateTime (could also construct a Date)
+GregorianCalendar cal = dt.toGregorianCalendar();
+</source>
+</p>
+<p>
+Note that the interface <code>ReadableInstant</code> should not be used like the collections API.
+The interface only contains the core subset of the operations of <code>DateTime</code>.
+You should use the interface only when you feel the need to be flexible about future changes
+to the object passed into a method.
+You might also want to consider the <a href="api-release/index.html?org/joda/time/ReadableDateTime.html">ReadableDateTime</a>
+interface which extends <code>ReadableInstant</code> to provide additional methods.
+</p>
+
+<subsection name="Nulls">
+<p>
+Joda-Time defines a null instant as the current time.
+Thus, when a method is defined as taking a <code>ReadableInstant</code>, passing null in
+will be the same as passing in an instant set to the current time.
+</p>
+</subsection>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/key_interval.xml b/JodaTime/src/site/xdoc/key_interval.xml
new file mode 100644
index 000000000..8975436fe
--- /dev/null
+++ b/JodaTime/src/site/xdoc/key_interval.xml
@@ -0,0 +1,83 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Interval</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Interval">
+
+<p>
+An <i>interval</i> in Joda-Time represents an interval of time from one millisecond
+<a href="key_instant.html">instant</a> to another instant.
+Both instants are fully specified instants in the datetime continuum, complete with time zone.
+</p>
+<p>
+Intervals are implemented as <i>half-open</i>, which is to say that the start instant is
+inclusive but the end instant is exclusive.
+The end is always greater than or equal to the start.
+The interval is also restricted to just one <a href="key_chronology.html">chronology</a> and time zone.
+</p>
+<p>
+Methods exist on intervals to obtain the start and end instants plus the chronology and time zone.
+There are also methods to obtain the <a href="key_duration.html">duration</a> and
+<a href="key_period.html">period</a> of the interval.
+</p>
+<p>
+You cannot compare intervals for order (ie. they do not implement <code>Comparable</code>.
+If you want to compare the length of intervals you must obtain the duration of each and compare those.
+</p>
+
+</section>
+
+<section name="Using Intervals in Joda-Time">
+<p>
+Within Joda-Time an interval is represented by the
+<a href="api-release/index.html?org/joda/time/ReadableInterval.html">ReadableInterval</a> interface.
+There are two implementations of the interface provided:
+<ul>
+<li><a href="api-release/index.html?org/joda/time/Interval.html">Interval</a> - An immutable implementation</li>
+<li><a href="api-release/index.html?org/joda/time/MutableInterval.html">MutableInterval</a> - A mutable implementation</li>
+</ul>
+We recommend the immutable implementation for general usage.
+</p>
+<p>
+The code can be used in various ways:
+<source>
+// interval from start to end
+DateTime start = new DateTime(2004, 12, 25, 0, 0, 0, 0);
+DateTime end = new DateTime(2005, 1, 1, 0, 0, 0, 0);
+Interval interval = new Interval(start, end);
+</source>
+Accessing other objects is easy:
+<source>
+Interval interval = ...
+DateTime start = interval.getStart();
+DateTime end = interval.getEnd();
+Chronology chrono = interval.getChronology();
+Duration duration = interval.toDuration();
+Period period = interval.toPeriod();
+</source>
+</p>
+<p>
+Note that the interface <code>ReadableInterval</code> should not be used like the collections API.
+The interface only contains the core subset of the operations.
+Instead, you should usually refer directly to the implementation classes in your APIs.
+</p>
+
+<subsection name="Nulls">
+<p>
+Joda-Time defines a null interval as a zero length interval from now to now.
+Thus, when a method is defined as taking a <code>ReadableInterval</code>, passing null in
+will be the same as passing in a zero length interval at the current time.
+</p>
+</subsection>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/key_partial.xml b/JodaTime/src/site/xdoc/key_partial.xml
new file mode 100644
index 000000000..b26bbc0d4
--- /dev/null
+++ b/JodaTime/src/site/xdoc/key_partial.xml
@@ -0,0 +1,118 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Partial</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Partial">
+
+<p>
+A <i>partial</i> in Joda-Time is a partial date and time representation.
+All implementations represent local dates and times, and do not reference a time zone.
+As such, they only <i>partially</i> represent a date or time in the datetime continuum.
+</p>
+<p>
+The main implementations changed in version 1.3.
+This was to address implementation issues with the original design.
+The previous classes - <code>TimeofDay</code> and <code>YearMonthDay</code> - are now effectively deprecated.
+The new implementations are <code>LocalDate</code>, <code>LocalTime</code> and <code>LocalDateTime</code>.
+</p>
+<p>
+It is not possible to directly interoperate between a partial and an <a href="key_instant.html">instant</a>.
+A partial does not fully specify a single point in the datetime continuum, but instead may match
+multiple points. For example, a <code>LocalTime</code> occurs one per day on the datetime continuum.
+</p>
+<p>
+A partial can be converted to a full instant by specifying the missing values.
+At a minimum the time zone must be specified. It may be necessary to specify other missing fields.
+For example, to convert a <code>LocalDate</code> to a <code>DateTime</code> requires
+filling in the time fields and the time zone.
+</p>
+<p>
+In terms of datetime maths, you could write:
+<source>
+      partial  +  missing fields  +  time zone  =  instant
+</source>
+</p>
+
+<subsection name="Date representations">
+<p>
+Two classes represent a date in Joda-Time - <code>DateMidnight</code> and <code>LocalDate</code>.
+These have different meanings.
+<code>DateMidnight</code> is a fully specified instant, with a time zone.
+It is defined as the milliseond instant at exactly mignight (00:00) at the start of a day.
+<code>LocalDate</code> defines a day using the year, monthOfYear and dayOfMonth fields and no time zone.
+It can be thought of as a local date that covers the whole of the day from 00:00 to 23:59.
+</p>
+</subsection>
+
+</section>
+
+<section name="Using Partials in Joda-Time">
+<p>
+Within Joda-Time a partial is represented by the
+<a href="api-release/index.html?org/joda/time/ReadablePartial.html">ReadablePartial</a> interface.
+There are six implementations of the interface provided:
+<ul>
+<li><a href="api-release/index.html?org/joda/time/LocalDate.html">LocalDate</a> -
+An immutable implementation that represents a date without a time or time zone.</li>
+<li><a href="api-release/index.html?org/joda/time/LocalTime.html">LocalTime</a> -
+An immutable implementation that represents a time without a date or time zone.</li>
+<li><a href="api-release/index.html?org/joda/time/LocalDateTime.html">LocalDateTime</a> -
+An immutable implementation that represents a datetime without a time zone.</li>
+<li><a href="api-release/index.html?org/joda/time/Partial.html">Partial</a> -
+An immutable implementation that can store any combination of datetime fields.
+For example, using this class you could create a YearMonth or DayOfWeekDayOfMonth partial.</li>
+<li><a href="api-release/index.html?org/joda/time/YearMonthDay.html">YearMonthDay</a> -
+Effectively deprecated - only supports the year, monthOfYear and dayOfMonth fields.</li>
+<li><a href="api-release/index.html?org/joda/time/TimeOfDay.html">TimeOfDay</a> -
+Effectively deprecated - only supports the hour, minute, second and millisecond fields.</li>
+</ul>
+</p>
+<p>
+The code can be used in various ways:
+<source>
+// setup objects
+LocalDate date = new LocalDate(2004, 12, 25);
+LocalTime time = new LocalTime(12, 20);
+
+int year = date.getYear();  // returns 2004
+int hour = time.getHour();  // returns 12
+String monthStr = date.month().getAsText();  // returns 'December'
+</source>
+Conversion to and from instants is easy:
+<source>
+LocalDate date = new LocalDate(2004, 12, 25);
+LocalTime time = new LocalTime(12, 20);
+
+// merge, resulting in 2004-25-12T12:20 (default time zone)
+DateTime dt = date.toDateTime(time);
+
+// extract the date fields from someDT
+DateTime someDT = ...
+LocalDate date = new LocalDate(someDT);
+</source>
+</p>
+<p>
+Note that the interface <code>ReadablePartial</code> should not be used like the collections API.
+The interface only contains the core subset of the operations.
+Instead, you should refer directly to the implementation classes in your APIs.
+</p>
+
+<subsection name="Nulls">
+<p>
+Joda-Time defines a null partial as the current time.
+Thus, when a method is defined as taking a <code>ReadablePartial</code>, passing null in
+will be the same as passing in a partial set to the current time.
+</p>
+</subsection>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/key_period.xml b/JodaTime/src/site/xdoc/key_period.xml
new file mode 100644
index 000000000..d9fad9450
--- /dev/null
+++ b/JodaTime/src/site/xdoc/key_period.xml
@@ -0,0 +1,182 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Period</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Period">
+
+<p>
+A <i>period</i> in Joda-Time represents a period of time defined in terms of fields,
+for example, 3 years 5 months 2 days and 7 hours.
+This differs from a <a href="key_duration.html">duration</a> in that it is inexact in terms of milliseconds.
+A period can only be resolved to an exact number of milliseconds by specifying the
+<a href="key_instant.html">instant</a> (including chronology and time zone) it is relative to.
+</p>
+<p>
+Periods do not have a <a href="key_chronology.html">chronology</a> or time zone.
+They can be added to an <a href="key_instant.html">instant</a>, or to either
+end of an interval to change those objects.
+In datetime maths you could say:
+<source>
+      instant  +  period  =  instant
+</source>
+</p>
+<p>
+For example, consider a period of 1 month.
+If you add this period to the 1st February (ISO) then you will get the 1st March.
+If you add the same period to the 1st March you will get the 1st April.
+But the duration added (in milliseconds) in these two cases is very different.
+</p>
+<p>
+As a second example, consider adding 1 day at the daylight savings boundary.
+If you use a period to do the addition then either 23 or 25 hours will be added as appropriate.
+If you had created a duration equal to 24 hours, then you would end up with the wrong result.
+</p>
+<p>
+The Joda-Time library defines two types of implementation of the period concept.
+The first type can only store a single-field, such as days or hours, but not both.
+The second type can store any-field, expressing a value such as 5 months 8 days and 7 hours.
+</p>
+
+<subsection name="Single field Periods">
+<p>
+The first type, single-field periods, is new to version 1.4 of Joda-Time.
+These classes - <code>Years</code>, <code>Months</code>, <code>Weeks</code>,
+<code>Days</code>, <code>Hours</code>, <code>Minutes</code>, <code>Seconds</code> -
+all follow a very similar design, and only store the single field as implied by
+their name. Thus a <code>Days</code> object can only store a number of days.
+</p>
+<p>
+These classes can be useful when you want to write an API that must specifically take
+in a period measured in a particular unit. For example, a travel website where you are
+given the option of travelling &#177;1 days or &#177;3 days could store this
+information in a <code>Days</code> object.
+</p>
+<p>
+These classes provide static factory methods rather than constructors.
+For <code>Days</code> these include <code>daysBetween(startDate, endDate)</code> to
+obtain the number of whole days between two dates or datetimes, and 
+<code>daysIn(interval)</code> to obtain the number of whole days in an interval.
+In addition, there are a range of constants, such as <code>Days.ZERO</code> and
+<code>Days.ONE</code>. The factory method <code>days(int)</code> either returns
+a constant, or creates a new instance as appropriate.
+</p>
+<p>
+The single-field classes include basic mathemaical operator support.
+For <code>Days</code> this includes <code>plus(int)</code>, <code>plus(Days)</code>,
+<code>multipliedBy(int)</code>, <code>dividedBy(int)</code> and <code>negated()</code>.
+All operations return a new instance, as <code>Days</code> is immutable.
+The single-field classes are also comparable.
+</p>
+<p>
+Converting between different types of period is a difficult problem.
+One day is not always equal to 24 hours. (It might be 23 or 25 at daylight savings time change.)
+However, many applications have business rules that assume a 24 hour day and so on.
+To support this, <code>Days</code> has methods named <code>toStandardHours()</code> and
+so on which convert the number of days to a number of hours assuming a 24 hour day.
+The word 'standard' is being specifically used in the method name to remind users of the assumption.
+</p>
+</subsection>
+
+<subsection name="Any field Periods">
+<p>
+The second type of period is the any-field period.
+These are implemented by the <code>Period</code> and <code>MutablePeriod</code> classes.
+Internally, they store a set of <code>int</code> fields, one for each field.
+The standard set of fields in a period are years, months, weeks, days, hours, minutes, seconds and millis.
+The <a href="api-release/index.html?org/joda/time/PeriodType.html">PeriodType</a> class allows this set
+of fields to be restricted, for example to elimate weeks.
+This is significant when converting a duration or interval to a period, as the calculation
+needs to know which period fields it should populate.
+</p>
+<p>
+The <code>Period</code> class is useful when you want to write an API that can take
+a period that probably contains more than one field. However, to be even more general,
+your API could define itself to accept a <code>ReadablePeriod</code>, and then the
+calling code could pass in either a <code>Period</code> or a single field period like
+<code>Days</code>.
+</p>
+<p>
+Methods exist on <code>Period</code> to obtain each field value.
+There are also methods to change a field value, such as <code>withDays(int)</code>.
+They are named 'with' as they return a new <code>Period</code> object, due to immutability.
+</p>
+<p>
+You cannot compare any-field periods for order, as there is no sensible comparison strategy.
+Instead, you need to convert the period to a <code>Duration</code> based on a specific date
+and then compare the duration.
+</p>
+</subsection>
+
+</section>
+
+<section name="Using Periods in Joda-Time">
+<p>
+Within Joda-Time a period is represented by the
+<a href="api-release/index.html?org/joda/time/ReadablePeriod.html">ReadablePeriod</a> interface.
+There are nine implementations of the interface provided:
+<ul>
+<li><a href="api-release/index.html?org/joda/time/Period.html">Period</a> -
+An immutable implementation</li>
+<li><a href="api-release/index.html?org/joda/time/MutablePeriod.html">MutablePeriod</a> -
+A mutable implementation</li>
+<li><a href="api-release/index.html?org/joda/time/Years.html">Years</a> -
+An immutable years-only implementation</li>
+<li><a href="api-release/index.html?org/joda/time/Months.html">Months</a> -
+An immutable months-only implementation</li>
+<li><a href="api-release/index.html?org/joda/time/Weeks.html">Weeks</a> -
+An immutable weeks-only implementation</li>
+<li><a href="api-release/index.html?org/joda/time/Days.html">Days</a> -
+An immutable days-only implementation</li>
+<li><a href="api-release/index.html?org/joda/time/Hours.html">Hours</a> -
+An immutable hours-only implementation</li>
+<li><a href="api-release/index.html?org/joda/time/Minutes.html">Minutes</a> -
+An immutable minutes-only implementation</li>
+<li><a href="api-release/index.html?org/joda/time/Seconds.html">Seconds</a> -
+An immutable seconds-only implementation</li>
+</ul>
+We recommend the immutable implementation for general usage.
+</p>
+<p>
+The code can be used in various ways:
+<source>
+DateTime start = new DateTime(2004, 12, 25, 0, 0, 0, 0);
+DateTime end = new DateTime(2006, 1, 1, 0, 0, 0, 0);
+
+// period of 1 year and 7 days
+Period period = new Period(start, end);
+
+// calc will equal end
+DateTime calc = start.plus(period);
+
+// able to calculate whole days between two dates easily
+Days days = Days.daysBetween(start, end);
+
+// able to calculate whole months between two dates easily
+Months months = Months.monthsBetween(start, end);
+</source>
+</p>
+<p>
+Note that the interface <code>ReadablePeriod</code> should not be used like the collections API.
+The interface only contains the core subset of the operations.
+Instead, you should usually refer directly to the implementation classes in your APIs.
+</p>
+
+<subsection name="Nulls">
+<p>
+Joda-Time defines a null period as a zero length period.
+Thus, when a method is defined as taking a <code>ReadablePeriod</code>, passing null in
+will be the same as passing in a zero length period.
+</p>
+</subsection>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/navigation.xml b/JodaTime/src/site/xdoc/navigation.xml
new file mode 100644
index 000000000..c7992ef16
--- /dev/null
+++ b/JodaTime/src/site/xdoc/navigation.xml
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<project name="Joda Time">
+
+  <title>Joda Time</title>
+  <organizationLogo href="">Joda.org</organizationLogo>
+
+  <body>
+    <links>
+      <item name="Joda-Time" href="/index.html"/>
+      <item name="JSP tags" href="/contrib/jsptags/index.html"/>
+      <item name="Hibernate" href="/contrib/hibernate/index.html"/>
+      <item name="I18N" href="/contrib/i18n/index.html"/>
+    </links>
+
+    <menu name="Joda Time">
+      <item name="Overview" href="/index.html"/>
+      <item name="Quick start guide" href="/quickstart.html"/>
+      <item name="User guide" href="/userguide.html"/>
+      <item name="FAQ" href="/faq.html"/>
+      <item name="Related projects" href="/related.html"/>
+      <item name="Javadoc (Release)" href="/api-release/index.html"/>
+      <item name="License" href="/license.html"/>
+      <item name="Download" href="http://sourceforge.net/projects/joda-time/files/joda-time/"/>
+    </menu>
+    
+    <menu name="Key concepts">
+      <item name="Instant" href="/key_instant.html"/>
+      <item name="Partial" href="/key_partial.html"/>
+      <item name="Interval" href="/key_interval.html"/>
+      <item name="Duration" href="/key_duration.html"/>
+      <item name="Period" href="/key_period.html"/>
+      <item name="Chronology" href="/key_chronology.html"/>
+    </menu>
+    
+    <menu name="Chronologies">
+      <item name="ISO8601" href="/cal_iso.html"/>
+      <item name="Buddhist" href="/cal_buddhist.html"/>
+      <item name="Coptic" href="/cal_coptic.html"/>
+      <item name="Ethiopic" href="/cal_ethiopic.html"/>
+      <item name="Gregorian" href="/cal_gregorian.html"/>
+      <item name="GregorianJulian" href="/cal_gj.html"/>
+      <item name="Islamic" href="/cal_islamic.html"/>
+      <item name="Julian" href="/cal_julian.html"/>
+    </menu>
+    
+    <menu name="Development">
+      <item name="Sourceforge" href="http://sourceforge.net/projects/joda-time/"/>
+      <item name="Test results" href="/junit-report.html"/>
+      <item name="Test coverage" href="/coverage/index.html"/>
+      <item name="Mailing lists" href="/mail-lists.html"/>
+      <item name="Tasks" href="/tasks.html"/>
+      <item name="Subversion" href="http://joda-time.svn.sourceforge.net/viewvc/joda-time/trunk/JodaTime/"/>
+      <item name="Javadoc (Development)" href="/apidocs/index.html"/>
+    </menu>
+    
+    <menu name="Joda">
+      <item name="Joda home" href="http://joda.sourceforge.net"/>
+      <item name="Money" href="http://joda-money.sourceforge.net/index.html"/>
+      <item name="Primitives" href="http://joda-primitives.sourceforge.net/index.html"/>
+      <item name="Beans" href="http://joda-beans.sourceforge.net/index.html"/>
+    </menu>
+    
+    <footer>
+      <a href="http://sourceforge.net">
+        <img src="http://sourceforge.net/sflogo.php?group_id=97367&amp;type=2" width="125" height="37" border="0" alt="SourceForge.net Logo" />
+      </a>
+      <br />
+      <a href="privacy.html">Privacy</a>
+    </footer>
+  </body>
+</project>
diff --git a/JodaTime/src/site/xdoc/privacy.xml b/JodaTime/src/site/xdoc/privacy.xml
new file mode 100644
index 000000000..4cb646fb4
--- /dev/null
+++ b/JodaTime/src/site/xdoc/privacy.xml
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Privacy</title>
+ </properties>
+<body>
+
+<!-- ========================================================================= -->
+
+<section name="Privacy">
+<p>
+Information about your use of this website is collected using cookies.
+The collected information consists of the following:
+<br />
+   1. The IP address from which you access the website;<br />
+   2. The type of browser and operating system you use to access our site;<br />
+   3. The date and time you access our site;<br />
+   4. The pages you visit; and<br />
+   5. The addresses of pages from where you followed a link to our site.<br />
+</p>
+<p>
+Part of this information is gathered using a tracking cookie set by the 
+<a href="http://www.google.com/analytics/">Google Analytics</a> service
+and handled by Google as described in their 
+<a href="http://www.google.com/privacy.html">privacy policy</a>. See your browser documentation for
+instructions on how to disable the cookie if you prefer not to share this data with Google.
+</p>
+<p>
+We use the gathered information to help us make our site more useful to visitors and to better
+understand how and when our site is used. We do not track or collect personally identifiable information
+or associate gathered data with any personally identifying information from other sources.
+</p>
+<p>
+By using this website, you consent to the collection of this data in the manner and for the purpose described above.
+<br />
+</p>
+<!-- <p>
+This website also makes use of targetted adverts supplied by
+<a href="https://www.google.com/adsense">Google Adsense</a>.
+To achieve this targetting, Google utilises cookies which collect the same information described above.
+The cookies identfy your usage of many different internet websites, not just this one, and may be used
+in conjunction with other advertising networks.
+For more details on the Adsense program, and to find out your options to control how the data
+is used please <a href="http://www.google.com/privacy_ads.html">click here</a>.
+</p>-->
+</section>
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/quickstart.xml b/JodaTime/src/site/xdoc/quickstart.xml
new file mode 100644
index 000000000..2799b1de7
--- /dev/null
+++ b/JodaTime/src/site/xdoc/quickstart.xml
@@ -0,0 +1,155 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Quick start guide</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+<body>
+
+<!-- ========================================================================= -->
+
+<section name="Quick start guide">
+<p>
+This is the quick introduction guide to Joda-Time and the features on offer.
+Its designed for those of you who are too impatient to read the full
+<a href="userguide.html">user guide</a>.
+</p>
+
+<subsection name="Date and Time">
+<p>
+Joda-Time includes these key datetime classes:
+<ul>
+<li><a href="api-release/org/joda/time/DateTime.html"><code>DateTime</code></a> - Immutable replacement for JDK <code>Calendar</code></li>
+<li><a href="api-release/org/joda/time/DateMidnight.html"><code>DateMidnight</code></a> - Immutable class representing a date where the time is forced to midnight</li>
+<li><a href="api-release/org/joda/time/LocalDate.html"><code>LocalDate</code></a> - Immutable class representing a local date without a time (no time zone)</li>
+<li><a href="api-release/org/joda/time/LocalTime.html"><code>LocalTime</code></a> - Immutable class representing a time without a date (no time zone)</li>
+<li><a href="api-release/org/joda/time/LocalDateTime.html"><code>LocalDateTime</code></a> - Immutable class representing a local date and time (no time zone)</li>
+</ul>
+</p>
+
+<p>
+Each datetime class provides a variety of constructors.
+These include the <code>Object</code> constructor.
+This allows you to construct, for example, <code>DateTime</code> from
+the following objects:
+<ul>
+<li><code>Date</code> - a JDK instant</li>
+<li><code>Calendar</code> - a JDK calendar</li>
+<li><code>String</code> - in ISO8601 format</li>
+<li><code>Long</code> - in milliseconds</li>
+<li>any Joda-Time datetime class</li>
+</ul>
+This list is extensible. In other words Joda-Time sacrifices a little type-safety
+for extensibility. It does mean however, that converting from a JDK <code>Date</code>
+or <code>Calendar</code> to a Joda-Time class is easy - simply pass the JDK class
+into the constructor.
+</p>
+
+<p>
+Each datetime class provides simple easy methods
+to access the datetime <a href="field.html">fields</a>. For example, to access
+the month you can use:
+<source>
+  DateTime dt = new DateTime();
+  int month = dt.getMonthOfYear();
+</source>
+</p>
+
+<p>
+All the main datetime classes are immutable (like String) and cannot be changed
+after creation. However, simple methods have been provided to alter field values
+in a newly created object. For example, to set the year, or add 2 hours you can use:
+<source>
+  DateTime dt = new DateTime();
+  DateTime year2000 = dt.withYear(2000);
+  DateTime twoHoursLater = dt.plusHours(2);
+</source>
+</p>
+
+<p>
+In addition to the basic get methods, each datetime class provides property
+methods for each field. These provide access to the full wealth of Joda-Time
+functionality. For example, to access details about a month or year:
+<source>
+  DateTime dt = new DateTime();
+  String monthName = dt.monthOfYear().getAsText();
+  String frenchShortName = dt.monthOfYear().getAsShortText(Locale.FRENCH);
+  boolean isLeapYear = dt.year().isLeap();
+  DateTime rounded = dt.dayOfMonth().roundFloorCopy();
+</source>
+</p>
+</subsection>
+
+<subsection name="Calendar systems and time zones">
+<p>
+Joda-Time provides support for multiple calendar systems and the full range
+of time zones.
+The <a href="api-release/org/joda/time/Chronology.html"><code>Chronology</code></a>
+and <a href="api-release/org/joda/time/DateTimeZone.html"><code>DateTimeZone</code></a>
+classes provide this support.
+</p>
+<p>
+Joda-Time defaults to using the ISO calendar system (the calendar used by most
+of the business world) and the default time zone of your machine.
+These default values can be overridden whenever necessary.
+Please note that the ISO calendar system is historically inaccurate before 1583.
+</p>
+<p>
+Joda-Time uses a pluggable mechanism for calendars. (The JDK uses subclasses
+such as <code>GregorianCalendar</code>.)
+To obtain a Joda-Time calendar, use one of the factory methods on <code>Chronology</code>.
+<source>
+  Chronology coptic = CopticChronology.getInstance();
+</source>
+</p>
+<p>
+Time zones are implemented as part of the chronology.
+To obtain a Joda-Time chronology in the Tokyo time zone, you can use.
+<source>
+  DateTimeZone zone = DateTimeZone.forID("Asia/Tokyo");
+  Chronology gregorianJuian = GJChronology.getInstance(zone);
+</source>
+</p>
+</subsection>
+
+<subsection name="Intervals and time periods">
+<p>
+Joda-Time provides support for intervals and time periods.
+</p>
+<p>
+An interval is represented by the
+<a href="api-release/org/joda/time/Interval.html"><code>Interval</code></a> class.
+It holds a start and end datetime, and allows operations based around that
+range of time.
+</p>
+<p>
+A time period is represented by the
+<a href="api-release/org/joda/time/Period.html"><code>Period</code></a> class.
+This holds a period such as 6 months, 3 days and 7 hours.
+You can create a <code>Period</code> directly, or derive it from an interval.
+</p>
+<p>
+A time duration is represented by the
+<a href="api-release/org/joda/time/Duration.html"><code>Duration</code></a> class.
+This holds an exact duration in milliseconds.
+You can create a <code>Duration</code> directly, or derive it from an interval.
+</p>
+<p>
+Although a period and a duration may seem similar, they operate differently.
+For example, consider adding one day to a <code>DateTime</code> at the daylight
+savings cutover.
+<source>
+  DateTime dt = new DateTime(2005, 3, 26, 12, 0, 0, 0);
+  DateTime plusPeriod = dt.plus(Period.days(1));
+  DateTime plusDuration = dt.plus(new Duration(24L*60L*60L*1000L));
+</source>
+Adding a period will add 23 hours in this case, not 24 because of the daylight
+savings change, thus the time of the result will still be midday.
+Adding a duration will add 24 hours no matter what, thus the time of the result
+will change to 13:00.
+</p>
+</subsection>
+</section>
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/related.xml b/JodaTime/src/site/xdoc/related.xml
new file mode 100644
index 000000000..ac4f95c21
--- /dev/null
+++ b/JodaTime/src/site/xdoc/related.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Related projects</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Related projects">
+<p>
+A number of libraries and applications are now built using Joda-Time.
+</p>
+<ul>
+
+<li><a href="http://usertype.sourceforge.net/">Extended Hibernate support</a>
+A set of classes to link Joda-Time to databases using Hibernate.</li>
+<li><a href="http://joda-time.sourceforge.net/contrib/hibernate/index.html">Original Hibernate support</a>
+The original set of classes to link Joda-Time to databases using Hibernate (UserType project is newer and better maintained).</li>
+<li><a href="http://joda-time.sourceforge.net/contrib/jsptags/index.html">JSP tag support</a>
+A tag library in the style of JSTL to allow Joda-Time classes to be used in JSP.</li>
+<li><a href="http://joda-time.sourceforge.net/contrib/i18n/index.html">I18N support</a>
+A simple library that provides additional internationalization data for Joda-Time.</li>
+<li><a href="http://objectlabkit.sourceforge.net/">Holiday calculation</a>
+Support for working and non-working days, plus how to calculate and resolve holidays.</li>
+<li><a href="http://code.google.com/p/google-rfc-2445/">Recurrance (RFC 2445)</a>
+Support for the RFC2445 recurrence specification, as found in iCal.</li>
+<li><a href="http://www.datanucleus.org/plugins/store.types.jodatime.html">DataNucleus support</a>
+A library providing persistence via the DataNucleus platform.</li>
+</ul>
+<p>
+If your open source library provides a value added feature on top of Joda-Time, then let us know!
+</p>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/tasks.xml b/JodaTime/src/site/xdoc/tasks.xml
new file mode 100644
index 000000000..41ec32467
--- /dev/null
+++ b/JodaTime/src/site/xdoc/tasks.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Tasks outstanding</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Tasks outstanding">
+
+<p>
+The following tasks are on the possible TODO list - contact the mailing lists for more details:
+</p>
+
+<ul>
+<li>Add more chronologies - Hebrew, Persian, Hindu, Thai, Chinese, Japanese,...</li>
+<li>Consider formatting ordinal numbers, like 1st, 2nd, 3rd</li>
+<li>Consider allowing the text output to be altered</li>
+<li>Formatter switching by locale</li>
+<li>Date matching methods to find next date matching search criteria</li>
+</ul>
+
+<p>
+Would you like to volunteer?
+Please contact scolebourne.at.users.sourceforge.net or the <a href="mail-lists.html">mailing list</a>.
+</p>
+</section>
+
+</body>
+</document>
+
+
+
+
+
+
diff --git a/JodaTime/src/site/xdoc/timezones.xml b/JodaTime/src/site/xdoc/timezones.xml
new file mode 100644
index 000000000..9f618edb6
--- /dev/null
+++ b/JodaTime/src/site/xdoc/timezones.xml
@@ -0,0 +1,459 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Time Zones</title>
+  <author>Brian S O'Neill</author>
+ </properties>
+
+ <body>
+
+<section name="Available Time Zones">
+<p>
+Time zone data is provided by the public <a href="http://www.twinsun.com/tz/tz-link.htm">tz</a>
+database, otherwise known as the Olson database. The following table shows all the time zones
+supported by Joda-Time, using version 2010k of the tz database.
+It is also possible to update to a <a href="tz_update.html">later version of the database</a>.
+This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</code>.
+</p>
+<p>
+<table>
+<tr><th align="left">Standard Offset</th><th align="left">Canonical ID</th><th align="left">Aliases</th></tr>
+<tr><td align="left" valign="top">-12:00</td><td align="left" valign="top">Etc/GMT+12</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-11:00</td><td align="left" valign="top">Etc/GMT+11</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-11:00</td><td align="left" valign="top">Pacific/Apia</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-11:00</td><td align="left" valign="top">Pacific/Midway</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-11:00</td><td align="left" valign="top">Pacific/Niue</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-11:00</td><td align="left" valign="top">Pacific/Pago_Pago</td><td align="left" valign="top">Pacific/Samoa, US/Samoa</td></tr>
+<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">America/Adak</td><td align="left" valign="top">America/Atka, US/Aleutian</td></tr>
+<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">Etc/GMT+10</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">HST</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">Pacific/Fakaofo</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">Pacific/Honolulu</td><td align="left" valign="top">US/Hawaii</td></tr>
+<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">Pacific/Johnston</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">Pacific/Rarotonga</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">Pacific/Tahiti</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-09:30</td><td align="left" valign="top">Pacific/Marquesas</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">America/Anchorage</td><td align="left" valign="top">US/Alaska</td></tr>
+<tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">America/Juneau</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">America/Nome</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">America/Yakutat</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">Etc/GMT+9</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">Pacific/Gambier</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Dawson</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Los_Angeles</td><td align="left" valign="top">US/Pacific, US/Pacific-New</td></tr>
+<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Santa_Isabel</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Tijuana</td><td align="left" valign="top">America/Ensenada, Mexico/BajaNorte</td></tr>
+<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Vancouver</td><td align="left" valign="top">Canada/Pacific</td></tr>
+<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Whitehorse</td><td align="left" valign="top">Canada/Yukon</td></tr>
+<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">Etc/GMT+8</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">PST8PDT</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">Pacific/Pitcairn</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Boise</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Cambridge_Bay</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Chihuahua</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Dawson_Creek</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Denver</td><td align="left" valign="top">America/Shiprock, Navajo, US/Mountain</td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Edmonton</td><td align="left" valign="top">Canada/Mountain</td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Hermosillo</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Inuvik</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Mazatlan</td><td align="left" valign="top">Mexico/BajaSur</td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Ojinaga</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Phoenix</td><td align="left" valign="top">US/Arizona</td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Yellowknife</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">Etc/GMT+7</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">MST</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">MST7MDT</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Bahia_Banderas</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Belize</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Cancun</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Chicago</td><td align="left" valign="top">US/Central</td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Costa_Rica</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/El_Salvador</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Guatemala</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Indiana/Knox</td><td align="left" valign="top">America/Knox_IN, US/Indiana-Starke</td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Indiana/Tell_City</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Managua</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Matamoros</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Menominee</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Merida</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Mexico_City</td><td align="left" valign="top">Mexico/General</td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Monterrey</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/North_Dakota/Center</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/North_Dakota/New_Salem</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Rainy_River</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Rankin_Inlet</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Regina</td><td align="left" valign="top">Canada/East-Saskatchewan, Canada/Saskatchewan</td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Swift_Current</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Tegucigalpa</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Winnipeg</td><td align="left" valign="top">Canada/Central</td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">CST6CDT</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">Etc/GMT+6</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">Pacific/Easter</td><td align="left" valign="top">Chile/EasterIsland</td></tr>
+<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">Pacific/Galapagos</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Atikokan</td><td align="left" valign="top">America/Coral_Harbour</td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Bogota</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Cayman</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Detroit</td><td align="left" valign="top">US/Michigan</td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Grand_Turk</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Guayaquil</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Havana</td><td align="left" valign="top">Cuba</td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Indiana/Indianapolis</td><td align="left" valign="top">America/Fort_Wayne, America/Indianapolis, US/East-Indiana</td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Indiana/Marengo</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Indiana/Petersburg</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Indiana/Vevay</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Indiana/Vincennes</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Indiana/Winamac</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Iqaluit</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Jamaica</td><td align="left" valign="top">Jamaica</td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Kentucky/Louisville</td><td align="left" valign="top">America/Louisville</td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Kentucky/Monticello</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Lima</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Montreal</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Nassau</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/New_York</td><td align="left" valign="top">US/Eastern</td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Nipigon</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Panama</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Pangnirtung</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Port-au-Prince</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Resolute</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Thunder_Bay</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Toronto</td><td align="left" valign="top">Canada/Eastern</td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">EST</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">EST5EDT</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">Etc/GMT+5</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:30</td><td align="left" valign="top">America/Caracas</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Anguilla</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Antigua</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/San_Luis</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Aruba</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Asuncion</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Barbados</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Blanc-Sablon</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Boa_Vista</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Campo_Grande</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Cuiaba</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Curacao</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Dominica</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Eirunepe</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Glace_Bay</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Goose_Bay</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Grenada</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Guadeloupe</td><td align="left" valign="top">America/Marigot, America/St_Barthelemy</td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Guyana</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Halifax</td><td align="left" valign="top">Canada/Atlantic</td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/La_Paz</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Manaus</td><td align="left" valign="top">Brazil/West</td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Martinique</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Moncton</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Montserrat</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Port_of_Spain</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Porto_Velho</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Puerto_Rico</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Rio_Branco</td><td align="left" valign="top">America/Porto_Acre, Brazil/Acre</td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Santiago</td><td align="left" valign="top">Chile/Continental</td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Santo_Domingo</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/St_Kitts</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/St_Lucia</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/St_Thomas</td><td align="left" valign="top">America/Virgin</td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/St_Vincent</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Thule</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Tortola</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">Antarctica/Palmer</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">Atlantic/Bermuda</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">Atlantic/Stanley</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">Etc/GMT+4</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:30</td><td align="left" valign="top">America/St_Johns</td><td align="left" valign="top">Canada/Newfoundland</td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Araguaina</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Buenos_Aires</td><td align="left" valign="top">America/Buenos_Aires</td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Catamarca</td><td align="left" valign="top">America/Argentina/ComodRivadavia, America/Catamarca</td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Cordoba</td><td align="left" valign="top">America/Cordoba, America/Rosario</td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Jujuy</td><td align="left" valign="top">America/Jujuy</td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/La_Rioja</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Mendoza</td><td align="left" valign="top">America/Mendoza</td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Rio_Gallegos</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Salta</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/San_Juan</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Tucuman</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Ushuaia</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Bahia</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Belem</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Cayenne</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Fortaleza</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Godthab</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Maceio</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Miquelon</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Montevideo</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Paramaribo</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Recife</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Santarem</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Sao_Paulo</td><td align="left" valign="top">Brazil/East</td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">Antarctica/Rothera</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">Etc/GMT+3</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-02:00</td><td align="left" valign="top">America/Noronha</td><td align="left" valign="top">Brazil/DeNoronha</td></tr>
+<tr><td align="left" valign="top">-02:00</td><td align="left" valign="top">Atlantic/South_Georgia</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-02:00</td><td align="left" valign="top">Etc/GMT+2</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-01:00</td><td align="left" valign="top">America/Scoresbysund</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-01:00</td><td align="left" valign="top">Atlantic/Azores</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-01:00</td><td align="left" valign="top">Atlantic/Cape_Verde</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">-01:00</td><td align="left" valign="top">Etc/GMT+1</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Abidjan</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Accra</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Bamako</td><td align="left" valign="top">Africa/Timbuktu</td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Banjul</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Bissau</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Casablanca</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Conakry</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Dakar</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/El_Aaiun</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Freetown</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Lome</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Monrovia</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Nouakchott</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Ouagadougou</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Sao_Tome</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">America/Danmarkshavn</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Atlantic/Canary</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Atlantic/Faroe</td><td align="left" valign="top">Atlantic/Faeroe</td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Atlantic/Madeira</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Atlantic/Reykjavik</td><td align="left" valign="top">Iceland</td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Atlantic/St_Helena</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Etc/GMT</td><td align="left" valign="top">Etc/GMT+0, Etc/GMT-0, Etc/GMT0, Etc/Greenwich, GMT, GMT+0, GMT-0, GMT0, Greenwich</td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Etc/UCT</td><td align="left" valign="top">UCT</td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Etc/UTC</td><td align="left" valign="top">Etc/Universal, Etc/Zulu, Universal, Zulu</td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Europe/Dublin</td><td align="left" valign="top">Eire</td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Europe/Lisbon</td><td align="left" valign="top">Portugal</td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Europe/London</td><td align="left" valign="top">Europe/Belfast, Europe/Guernsey, Europe/Isle_of_Man, Europe/Jersey, GB, GB-Eire</td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">UTC</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">WET</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Algiers</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Bangui</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Brazzaville</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Ceuta</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Douala</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Kinshasa</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Lagos</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Libreville</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Luanda</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Malabo</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Ndjamena</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Niamey</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Porto-Novo</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Tunis</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Windhoek</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">CET</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Etc/GMT-1</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Amsterdam</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Andorra</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Belgrade</td><td align="left" valign="top">Europe/Ljubljana, Europe/Podgorica, Europe/Sarajevo, Europe/Skopje, Europe/Zagreb</td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Berlin</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Brussels</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Budapest</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Copenhagen</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Gibraltar</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Luxembourg</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Madrid</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Malta</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Monaco</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Oslo</td><td align="left" valign="top">Arctic/Longyearbyen, Atlantic/Jan_Mayen</td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Paris</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Prague</td><td align="left" valign="top">Europe/Bratislava</td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Rome</td><td align="left" valign="top">Europe/San_Marino, Europe/Vatican</td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Stockholm</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Tirane</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Vaduz</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Vienna</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Warsaw</td><td align="left" valign="top">Poland</td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Zurich</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">MET</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Blantyre</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Bujumbura</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Cairo</td><td align="left" valign="top">Egypt</td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Gaborone</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Harare</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Johannesburg</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Kigali</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Lubumbashi</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Lusaka</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Maputo</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Maseru</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Mbabane</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Tripoli</td><td align="left" valign="top">Libya</td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Asia/Amman</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Asia/Beirut</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Asia/Damascus</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Asia/Gaza</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Asia/Jerusalem</td><td align="left" valign="top">Asia/Tel_Aviv, Israel</td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Asia/Nicosia</td><td align="left" valign="top">Europe/Nicosia</td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">EET</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Etc/GMT-2</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Athens</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Bucharest</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Chisinau</td><td align="left" valign="top">Europe/Tiraspol</td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Helsinki</td><td align="left" valign="top">Europe/Mariehamn</td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Istanbul</td><td align="left" valign="top">Asia/Istanbul, Turkey</td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Kaliningrad</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Kiev</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Minsk</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Riga</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Simferopol</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Sofia</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Tallinn</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Uzhgorod</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Vilnius</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Zaporozhye</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Addis_Ababa</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Asmara</td><td align="left" valign="top">Africa/Asmera</td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Dar_es_Salaam</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Djibouti</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Kampala</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Khartoum</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Mogadishu</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Nairobi</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Antarctica/Syowa</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Aden</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Baghdad</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Bahrain</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Kuwait</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Qatar</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Riyadh</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Etc/GMT-3</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Europe/Moscow</td><td align="left" valign="top">W-SU</td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Europe/Samara</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Europe/Volgograd</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Indian/Antananarivo</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Indian/Comoro</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Indian/Mayotte</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+03:30</td><td align="left" valign="top">Asia/Tehran</td><td align="left" valign="top">Iran</td></tr>
+<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Asia/Baku</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Asia/Dubai</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Asia/Muscat</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Asia/Tbilisi</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Asia/Yerevan</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Etc/GMT-4</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Indian/Mahe</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Indian/Mauritius</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Indian/Reunion</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+04:30</td><td align="left" valign="top">Asia/Kabul</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Antarctica/Mawson</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Aqtau</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Aqtobe</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Ashgabat</td><td align="left" valign="top">Asia/Ashkhabad</td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Dushanbe</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Karachi</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Oral</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Samarkand</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Tashkent</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Yekaterinburg</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Etc/GMT-5</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Indian/Kerguelen</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Indian/Maldives</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:30</td><td align="left" valign="top">Asia/Colombo</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+05:30</td><td align="left" valign="top">Asia/Kolkata</td><td align="left" valign="top">Asia/Calcutta</td></tr>
+<tr><td align="left" valign="top">+05:45</td><td align="left" valign="top">Asia/Kathmandu</td><td align="left" valign="top">Asia/Katmandu</td></tr>
+<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Antarctica/Vostok</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Almaty</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Bishkek</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Dhaka</td><td align="left" valign="top">Asia/Dacca</td></tr>
+<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Novokuznetsk</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Novosibirsk</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Omsk</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Qyzylorda</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Thimphu</td><td align="left" valign="top">Asia/Thimbu</td></tr>
+<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Etc/GMT-6</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Indian/Chagos</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+06:30</td><td align="left" valign="top">Asia/Rangoon</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+06:30</td><td align="left" valign="top">Indian/Cocos</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Antarctica/Davis</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Bangkok</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Ho_Chi_Minh</td><td align="left" valign="top">Asia/Saigon</td></tr>
+<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Hovd</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Jakarta</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Krasnoyarsk</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Phnom_Penh</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Pontianak</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Vientiane</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Etc/GMT-7</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Indian/Christmas</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Antarctica/Casey</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Brunei</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Choibalsan</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Chongqing</td><td align="left" valign="top">Asia/Chungking</td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Harbin</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Hong_Kong</td><td align="left" valign="top">Hongkong</td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Irkutsk</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Kashgar</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Kuala_Lumpur</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Kuching</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Macau</td><td align="left" valign="top">Asia/Macao</td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Makassar</td><td align="left" valign="top">Asia/Ujung_Pandang</td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Manila</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Shanghai</td><td align="left" valign="top">PRC</td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Singapore</td><td align="left" valign="top">Singapore</td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Taipei</td><td align="left" valign="top">ROC</td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Ulaanbaatar</td><td align="left" valign="top">Asia/Ulan_Bator</td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Urumqi</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Australia/Perth</td><td align="left" valign="top">Australia/West</td></tr>
+<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Etc/GMT-8</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+08:45</td><td align="left" valign="top">Australia/Eucla</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Dili</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Jayapura</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Pyongyang</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Seoul</td><td align="left" valign="top">ROK</td></tr>
+<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Tokyo</td><td align="left" valign="top">Japan</td></tr>
+<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Yakutsk</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Etc/GMT-9</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Pacific/Palau</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+09:30</td><td align="left" valign="top">Australia/Adelaide</td><td align="left" valign="top">Australia/South</td></tr>
+<tr><td align="left" valign="top">+09:30</td><td align="left" valign="top">Australia/Broken_Hill</td><td align="left" valign="top">Australia/Yancowinna</td></tr>
+<tr><td align="left" valign="top">+09:30</td><td align="left" valign="top">Australia/Darwin</td><td align="left" valign="top">Australia/North</td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Antarctica/DumontDUrville</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Asia/Sakhalin</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Asia/Vladivostok</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Brisbane</td><td align="left" valign="top">Australia/Queensland</td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Currie</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Hobart</td><td align="left" valign="top">Australia/Tasmania</td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Lindeman</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Melbourne</td><td align="left" valign="top">Australia/Victoria</td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Sydney</td><td align="left" valign="top">Australia/ACT, Australia/Canberra, Australia/NSW</td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Etc/GMT-10</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Chuuk</td><td align="left" valign="top">Pacific/Truk, Pacific/Yap</td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Guam</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Port_Moresby</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Saipan</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+10:30</td><td align="left" valign="top">Australia/Lord_Howe</td><td align="left" valign="top">Australia/LHI</td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Antarctica/Macquarie</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Asia/Anadyr</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Asia/Kamchatka</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Asia/Magadan</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Etc/GMT-11</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Efate</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Guadalcanal</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Kosrae</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Noumea</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Pohnpei</td><td align="left" valign="top">Pacific/Ponape</td></tr>
+<tr><td align="left" valign="top">+11:30</td><td align="left" valign="top">Pacific/Norfolk</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Antarctica/McMurdo</td><td align="left" valign="top">Antarctica/South_Pole</td></tr>
+<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Etc/GMT-12</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Auckland</td><td align="left" valign="top">NZ</td></tr>
+<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Fiji</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Funafuti</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Kwajalein</td><td align="left" valign="top">Kwajalein</td></tr>
+<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Majuro</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Nauru</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Tarawa</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Wake</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Wallis</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+12:45</td><td align="left" valign="top">Pacific/Chatham</td><td align="left" valign="top">NZ-CHAT</td></tr>
+<tr><td align="left" valign="top">+13:00</td><td align="left" valign="top">Etc/GMT-13</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+13:00</td><td align="left" valign="top">Pacific/Enderbury</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+13:00</td><td align="left" valign="top">Pacific/Tongatapu</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+14:00</td><td align="left" valign="top">Etc/GMT-14</td><td align="left" valign="top"></td></tr>
+<tr><td align="left" valign="top">+14:00</td><td align="left" valign="top">Pacific/Kiritimati</td><td align="left" valign="top"></td></tr>
+</table>
+</p>
+
+</section>
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/tz_update.xml b/JodaTime/src/site/xdoc/tz_update.xml
new file mode 100644
index 000000000..9b4bffe6c
--- /dev/null
+++ b/JodaTime/src/site/xdoc/tz_update.xml
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+
+ <properties>
+  <title>Java date and time API - Time zone update</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+ <body>
+
+<section name="Time zone updates">
+<p>
+Time zones are a concept driven by the political situation in each country around the world.
+As such, they change frequently, and often at short notice.
+In order to manage this, Joda-Time uses the interationally recognised
+<a href="http://www.twinsun.com/tz/tz-link.htm">tz database</a>, which is also used
+in most operating systems and the JDK itself.
+</p>
+<p>
+Using JDK time zone data is a problem however, as the zones are only updated when the
+JDK is updated. This can cause issues if you are locked into an older version of the JDK.
+</p>
+<p>
+Joda-Time also compiles the time zone data into our jar file. However, the key difference is
+that you can update the raw data and recompile the jar at any time.
+</p>
+</section>
+
+<section name="Updating the time zone data">
+<p>
+Firstly, download the latest version of the data files from
+<a href="http://www.twinsun.com/tz/tz-link.htm">tz database</a>. At the time of writing,
+you need to pick the 'FTP distribution' or 'HTTP mirror' links.
+</p>
+<p>
+Secondly, you need a source code download of Joda-Time, available via
+<a href="http://sourceforge.net/projects/joda-time/files/joda-time/">sourceforge</a>.
+</p>
+<p>
+Thirdly, you must take the time zone data files from step one, and replace those in the Joda-Time download.
+They are located at <code>{root}/src/java/org/joda/time/tz/src</code>.
+Note that only <i>some</i> of the files need to be copied across.
+</p>
+<p>
+Finally, recompile the Joda-Time jar file using ant.
+Simply type <code>ant jar</code> in the root directory.
+You may want to rename the produced jar file to remind you that it has been updated.
+</p>
+
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/upgradeto099.xml b/JodaTime/src/site/xdoc/upgradeto099.xml
new file mode 100644
index 000000000..836151241
--- /dev/null
+++ b/JodaTime/src/site/xdoc/upgradeto099.xml
@@ -0,0 +1,186 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 0.98 to 0.99</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 0.98 to version 0.99.
+<source>
+Joda-Time version 0.99
+----------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is the last pre-beta release of Joda-Time.
+
+We now recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
+
+      ******************************************
+      *  The license of Joda-Time has changed  *
+      *                                        *
+      *    Previous license: BSD-style         *
+      *    New license: Apache License v2      *
+      ******************************************
+
+This change should have no impact on users of the code, as the licenses both have the
+same intent - that is to make the code freely available with a minimum of restrictions.
+
+
+Incompatible changes since 0.98
+-------------------------------
+Please contact the joda-interest mailing list if you have difficulties upgrading
+This release is both source and binary incompatible with 0.98
+
+- Formatting package reworked
+  This mainly affects those doing low level formatting work.
+  A deprecated interface has been added for 0.99 for some methods.
+
+  DateTimeFormatter/PeriodFormatter changed from interface to class.
+  These classes are now the main formatting API.
+  You still create them via the same factory classes, such as DateTimeFormat.
+  Most methods, and all functionality, have been retained, but some are deprecated (see below).
+
+  DateTimePrinter/DateTimeParser/PeriodPrinter/PeriodParser are now internal classes.
+  Applications will use DateTimeFormatter/PeriodFormatter.
+  Any references to DateTimePrinter/DateTimeParser/PeriodPrinter/PeriodParser in
+  your application should be changed to DateTimeFormatter/PeriodFormatter.
+  (Unless you are implementing your own printer/parser)
+
+  DateTimeFormatterBuilder usage changes
+   DateTimeFormatterBuilder.toPrinter() --> DateTimeFormatterBuilder.toFormatter()
+   DateTimeFormatterBuilder.toParser() --> DateTimeFormatterBuilder.toFormatter()
+  The isPrinter() and isParser() methods on DateTimeFormatter tell you about the status of the formatter.
+  Make similar changes for PeriodFormatterBuilder.
+
+  Format factory classes now define static methods
+   DateTimeFormat.getInstance().xxx() --> DateTimeFormat.xxx()
+   DateTimeFormat.getInstance(locale).xxx() --> DateTimeFormat.xxx().withLocale()
+  and so on for ISODateFormat, PeriodFormat and ISOPeriodFormat
+
+  DateTimeFormat.appendPatternTo(formatter, pattern) --> f.appendPattern(pattern)
+  DateTimeFormat.getPatternForStyle --> Removed, please contact mailing list
+  
+  BaseDateTimeFormatter/BasePeriodFormatter
+  Classes removed, behaviour moved into DateTimeFormatter/PeriodFormatter
+  
+- DateTimeFormat pattern change
+  The time zone pattern 'ZZZZ' previously output a time zone offset like '+08:00'.
+  Now you need a pattern of 'ZZ' to output the offset.
+  The pattern 'ZZZZ' will now output the time zone id, such as 'Europe/London'.
+
+- ReadablePartial
+  - removed methods toDateTime(), toDateTime(DateTimeZone zone), as their meaning was confused.
+  Implementations on YearMonthDay/TimeOfDay are deprecated.
+
+- DateTime/DateMidnight/MutableDateTime
+  - removed getReadableInstant() from the property classes
+  On DateTime.Property, use getDateTime().
+  On DateMidnight.Property, use getDateMidnight().
+  On MutableDateTime.Property, use getMutableDateTime().
+
+- ReadableInstant
+  - added method isSupported(DateTimeFieldType field)
+  Implemented in DateTime/DateMidnight/MutableDateTime 
+
+- YearMonthDay/TimeOfDay
+  - removed getReadablePartial() from the property classes
+  On YearMonthDay.Property, use getYearMonthDay().
+  On TimeOfDay.Property, use getTimeOfDay().
+
+- TimeOfDay
+  - semantic change to TimeOfDay.Property.addToCopy()
+  Previously, add threw an exception if the 23:59/00:00 boundary was broken.
+  Now it wraps to the next 'day', as this is the more typical use case.
+  Change to the method TimeOfDay.Property.addNoWrapToCopy() to restore the old behaviour.
+
+
+Deprecations since 0.98
+-----------------------
+** ALL deprecated methods will be removed in 1.0 **
+Please contact the joda-interest mailing list if you have difficulties upgrading
+
+- Formatting package reworked
+  Factory classes now no longer have a static getInstance() method.
+   DateTimeFormat.getInstance().xxx() --> DateTimeFormat.xxx()
+   ISODateTimeFormat.getInstance().xxx() --> ISODateTimeFormat.xxx()
+   PeriodFormat.getInstance().xxx() --> PeriodFormat.xxx()
+   PeriodFormat.getInstance(locale).xxx() --> PeriodFormat.xxx().withLocale()
+   ISOPeriodFormat.getInstance().xxx() --> ISOPeriodFormat.xxx()
+  Some DateTimeFormatter methods deprecated.
+   f.print(millis, DateTimeZone) --> f.withZone(zone).print(millis)
+   f.print(millis, Chronology) --> f.withChronology(chrono).print(millis)
+   f.parseMillis(str, Chronology) --> f.withChronology(chrono).parseMillis(str)
+   f.parseDateTime(str, Chronology) --> f.withChronology(chrono).parseDateTime(str)
+   f.parseMutableDateTime(str, Chronology) --> f.withChronology(chrono).parseMutableDateTime(str)
+  Some PeriodFormatter methods deprecated.
+   f.parsePeriod(type, str) --> f.withType(type).parsePeriod(str)
+   f.parseMutablePeriod(type, str) --> f.withType(type).parseMutablePeriod(str)
+
+- DateTimeZone - factory methods changed:
+  getInstance() -> forID/forOffsetHours/forOffsetHoursMinutes/forTimeZone
+  Aim to clarify meaning of each method
+
+- YearMonthDay/TimeOfDay
+  - deprecated methods toDateTime(), toDateTime(DateTimeZone zone), as their meaning was confused.
+  On YearMonthDay, use toDateTimeAtCurrentTime() or toDateTimeAtMidnight().
+  On TimeOfDay, use toDateTimeToday().
+
+
+Bug fixes since 0.98
+--------------------
+- Interval/MutableInterval isAfter(ReadableInterval) - fixed bug when intervals abutted
+
+- Parsing periods of the form PT... - fixed bug that prevented parsing
+
+- Period parsing now more strict - 'T' character required to separate date and
+  time in ISO periods
+
+- Fixed parsing of fractional seconds in Periods
+
+- Default time zone based on offset was being interpreted as UTC
+
+- Fixed NullPointerException in DateTimeFormat
+
+- DateTimeFormat would use date style for time style
+
+- DateTimeFormatterBuilder was using wrong time zone for text fields
+
+- Avoid NPE in property(DateTimeFieldType) methods
+
+- Parsing two digit years using a pattern now follows JDK definition
+
+
+Enhancements since 0.98
+-----------------------
+- Formatting package much more powerful, and has potential to grow after 1.0 release
+
+- YearMonthDay/TimeOfDay
+  - add toString variants that take a pattern
+  - add withField(), withFieldAdded(), withPeriodAdded(), plus() and minus()
+
+- DateTimeField
+  - Add methods getAsText(int, Locale) and getAsShortText(int, Locale) for
+    simple access to text values
+
+- Period
+  - Added support to create periods from a duration and an end instant
+  - Periods can be converted to durations by end instant too
+
+- Duration
+  - Durations can be converted to periods by end instant too
+  - Durations can be converted to intervals by end instant too
+
+</source>
+</p>
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/upgradeto100.xml b/JodaTime/src/site/xdoc/upgradeto100.xml
new file mode 100644
index 000000000..bb09c3cf1
--- /dev/null
+++ b/JodaTime/src/site/xdoc/upgradeto100.xml
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 0.99 to 1.0</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 0.99 to version 1.0.
+<source>
+Joda-Time version 1.0
+---------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is the first full release of Joda-Time.
+There have been numerous beta releases over an extended period of time.
+
+We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license cause you problems please contact the mailing list.
+
+
+Incompatible changes since 0.99
+-------------------------------
+Deprecated methods removed.
+See http://joda-time.sourceforge.net/upgradeto099.html for 0.98 to 0.99 changes
+
+
+Deprecations since 0.99
+-----------------------
+None
+See http://joda-time.sourceforge.net/upgradeto099.html for 0.98 to 0.99 changes
+
+
+Bug fixes since 0.99
+--------------------
+None
+See http://joda-time.sourceforge.net/upgradeto099.html for 0.98 to 0.99 changes
+
+
+Enhancements since 0.99
+-----------------------
+None
+See http://joda-time.sourceforge.net/upgradeto099.html for 0.98 to 0.99 changes
+
+</source>
+</p>
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/upgradeto110.xml b/JodaTime/src/site/xdoc/upgradeto110.xml
new file mode 100644
index 000000000..f057e40da
--- /dev/null
+++ b/JodaTime/src/site/xdoc/upgradeto110.xml
@@ -0,0 +1,199 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 1.0 to 1.1</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 1.0 to version 1.1.
+<source>
+Joda-Time version 1.1
+---------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is the second full release of Joda-Time.
+
+We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license cause you problems please contact the mailing list.
+
+
+Incompatible changes since 1.0
+------------------------------
+Binary compatible - Yes
+  - v1.0 and v1.1 are binary compatible in their public and protected API
+
+Source compatible - Yes
+  - v1.0 and v1.1 are source compatible in their public and protected API
+
+Serialization compatible - Yes, except:
+  - DateTime.Property, DateMidnight.Property and MutableDateTime.Property
+   serialization formats have changed to fix a bug.
+    Please note that this only affects the property classes, and not DateTime,
+   DateMidnight or MutableDateTime themselves
+    It is unlikely that you serialized one of these classes
+
+Data compatible - Yes, except:
+  - Removed time zones Asia/Riyadh87, Asia/Riyadh88 and Asia/Riyadh89.
+   These should not have been included in the 1.0 release, and do not represent
+   genuine time zones. It is unlikely that you used them.
+   If you do want to use them, please contact the joda-interest mailing list
+
+
+Warnings since 1.0
+------------------
+ReadablePartial now has a comment recommending that all implementations
+should also implement Comparable.
+This is most easily achieved by extending AbstractPartial.
+
+
+Deprecations since 1.0
+----------------------
+None
+
+
+Bug fixes since 1.0
+-------------------
+- Date and Time (ZoneInfoCompiler)
+  Greek summer time was incorrect due to a comment parsing bug.
+  This disabled DST (summer time) for Europe/Athens after 1980.
+
+- DateTimeFormat
+  Parsing of two digit year by DateTimeFormat supports parsing of more or less
+  than two digits, for compatibility with java.text.SimpleDateFormat. If not
+  two digits or if sign character is present, then year is parsed as absolute.
+
+- GJChronology
+  Range duration field of dayOfMonth was not consistent with monthOfYear. This
+  bug manifested itself when adding/subtracting periods to partials.
+
+- DateTimeParserBucket
+  Fixed parsing date where format includes era. Era must be set and rounded
+  before any other fields.
+
+- PeriodFormatterBuilder
+  Formatters that had fields which required a zero to be printed were not being
+  parsed.
+
+- DateTime.Property, DateMidnight.Property and MutableDateTime.Property
+  Could previously only be serialized in UTC.
+  The serialization format has been changed to be simpler and more reliable.
+  Unfortunately, this was an incompatible change to the serialization format.
+
+- DateTimeFormatterBuilder/PeriodFormatterBuilder
+  Number parser would accept multiple sign characters as valid.
+
+- YearMonthDay/TimeOfDay.withChronologyRetainFields
+  Previously, switching chronology did not validate the fields, so you could
+  end up with an object in an invalid state, such as a YearMonthDay where
+  dayOfMonth=31 with Coptic.
+  This method can now throw an IllegalArgumentException
+
+- Chronologies
+  Overflowed calculations involving year throw ArithmeticException rather than
+  produce a bogus result.
+
+- DateTimeFormatterBuilder.canBuildFormatter()
+  Previously this method always returned false.
+
+
+Enhancements since 1.0
+----------------------
+- Partial
+  New immutable implementation of ReadablePartial.
+  This implementation is flexible as to the fields that it stores.
+  Thus, if you want a partial holding just a year and monthOfYear (perhaps
+  for a credit card expiry date), then this class can be used.
+  Full support for almost all truncated and reduced precision ISO output
+  formats is available via use of this class.
+
+- DateTime/DateMidnight/MutableDateTime/YearMonthDay/TimeOfDay
+  Added convenience plusXxx() and minusXxx() methods to add/subtract a period
+  For example, dt.plus(Period.days(6)) can now be replaced by dt.plusDays(6)
+
+- DateTime/DateMidnight/MutableDateTime/YearMonthDay/TimeOfDay
+  Added convenience toString() method that takes a DateTimeFormatter
+  For example, dt.toString(DateTimeFormat.shortDateTime())
+
+- YearMonthDay/TimeOfDay/AbstractPartial
+  Enabled comparisons using Comparable interface
+  Added compareTo/isEqual/isAfter/isBefore methods
+  These methods were added to AbstractPartial, and are thus available to
+  all implementations of ReadablePartial
+
+- YearMonthDay/TimeOfDay
+  Extra time zone constructor
+  Allows current date and time to be accurately obtained
+
+- DateTime/DateMidnight/MutableDateTime/YearMonthDay/TimeOfDay Property
+  Added new method to property class - getAsString()
+  Gets the value as a string, not using text values like 'Monday' or 'January'
+
+- Period
+  Added constructors to create a Period from two ReadablePartials, such as
+  YearMonthDay or TimeOfDay
+
+- Period
+  Added factory to create a Period from two ReadablePartials using an
+  alternative, field-based, calculation
+
+- DateTimeUtils
+  Added isContiguous(ReadablePartial) to test if a partial is contiguous
+  (see the method for the definition)
+
+- PeriodType
+  Added factory method forFields() to allow a PeriodType to be obtained
+  from any set of DurationFieldType objects
+
+- PeriodType
+  Added three new period types - YearMonthDay, YearWeekDay and YearDay
+  These complement the existing ones but exclude the time fields.
+
+- DateTimeFormatter
+  Method withPivotYear added to allow the two digit pivot year to be controlled.
+  This is most useful after creating a format from a string pattern.
+
+- DateTimeFormatter
+  Added lenient parse option to appendTwoDigitYear and appendTwoDigitWeekyear.
+
+- Interval
+  Added overlap method that returns the actual overlap between two intervals.
+  Added gap method that returns the gap between two intervals.
+  Added abuts method that returns true if two intervals abut.
+
+- DateTimeUtils
+  Added getReadableInterval(ReadableInterval) method to handle null intervals
+
+- IllegalFieldValueException
+  Added new exception subclass of IllegalArgumentException to capture more
+  context when a field is set to an illegal value. This can be helpful in
+  interactive applications.
+
+- GJLocaleSymbols
+  Supports parsing "CE" and "BCE" as era if locale language is English.
+
+- ISODateTimeFormat
+  New method, forFields(), which gets an ISO format for a set of fields.
+  This is useful for more unusual formats such as DayHour.
+
+- ISODateTimeFormat
+  New methods to output ordinal style dates, such as 2005-161.
+
+- DateTimeZone classes updated to latest data from the Olson time zone database
+</source>
+</p>
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/upgradeto120.xml b/JodaTime/src/site/xdoc/upgradeto120.xml
new file mode 100644
index 000000000..57742db87
--- /dev/null
+++ b/JodaTime/src/site/xdoc/upgradeto120.xml
@@ -0,0 +1,142 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 1.1 to 1.2</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 1.1 to version 1.2.
+<source>
+Joda-Time version 1.2
+---------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is the third full release of Joda-Time.
+This release focuses on bug fixes, with a few new features.
+
+We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license causes you problems please contact the mailing list.
+
+** Please also check out the JSP and Hibernate contributed projects **
+
+
+Incompatible changes since 1.1
+------------------------------
+Binary compatible - Yes, except
+  - The internal classes BaseGJChronology and CommonGJChronology have been removed
+    They were implementation classes and you should not have been using them
+    Please contact the mailing list if this causes you problems
+
+Source compatible - Yes
+  - v1.1 and v1.2 are source compatible in their public and protected API
+
+Serialization compatible - Yes
+  - Chronology serialization has changed, however the two formats are compatible
+  - v1.1 did not serialize the Chronology minimum days in first week field properly, v1.2 does
+
+Data compatible - Yes
+  - DateTimeZone data updated to version 2005q
+
+
+Deprecations since 1.1
+----------------------
+- Chronology factory methods, such as getISO() and getCopticUTC()
+  You should now use the chrono package directly:
+    Chronology.getCoptic(zone)   is replaced by
+    CopticChronology.getInstance(zone)
+  These factory methods have been removed as they were unable to scale
+  suitably as more and more chronologies are added
+
+
+Bug fixes since 1.1
+-------------------
+- ZonedChronology
+  getMaximumValue(ReadablePartial)/getMinimumValue(ReadablePartial)
+  Methods returned incorrect result
+
+- ZonedChronology
+  Better detection and handling of offset calculation overflow, throwing
+  an ArithmeticException.
+
+- DateTimeZone
+  Handles offset calculation overflow errors for instants near Long.MAX_VALUE,
+  ending the offset transition sequence.
+
+- DateTimeFormatter
+  Reverts to UTC if time zone offset calculation causes overflow. This allows at least
+  the time of day fields to be printed for instants near Long.MIN_VALUE or Long.MAX_VALUE.
+
+- CopticChronology
+  Fixed regression in month of year calculation which affected getMaximumValue
+  on dayOfMonth field.
+
+- CopticChronology
+  Fixed month duration field to handle short 13th month correctly.
+
+- ZonedChronology
+  Fixed getting text values for fields from getAs[Short]Text(int value, Locale locale).
+
+- Gregorian, Julian, GJ and Coptic
+  These Chronology classes did not correctly store the minimum days in first week
+  during serialization
+
+- DateTimeFormatter
+  Fixed printing of time zone name near DST transition
+
+- YearMonthDay
+  Fixed addition where date starts on a leap day
+  Fixed addition in the GJChronology
+
+- DateTimeFormat
+  Pattern letter 'K' was using the wrong underlying implementation
+
+
+Enhancements since 1.1
+----------------------
+- IslamicChronology
+- EthiopicChronology
+  New Chronologies
+
+- DateTime.Property.withMaximumValue() (also DateMidnight/YearMonthDay etc)
+- DateTime.Property.withMinimumValue()
+  Returns a copy of the base datetime with the specified field set to
+  the maximum or minimum value. This is useful to get the last day of the month.
+  - DateTime lastDayOfMonth = dt.dayOfMonth().withMaximumValue();
+
+- DateTime.Property.toInterval() (also DateMidnight/MutableDateTime)
+  New method to convert return an Interval object over the span of the property
+  Thus dt.monthOfYear().toInterval() returns an interval from the start to
+  the end of the month
+
+- MutableDateTime.property(DateTimeFieldType)
+  Gets the property by type. Complements the method already on DateTime/DateMidnight.
+
+- YearMonthDay.fromCalendarFields()
+- YearMonthDay.fromDateFields()
+- TimeOfDay.fromCalendarFields()
+- TimeOfDay.fromDateFields()
+  New factory methods to create a YearMonthDay/TimeOfDay using exactly the same
+  field values as the JDK objects, thus ignoring time zone effects
+
+- FieldUtils
+  Performance optimization when adding by scalars of one or negative one. The
+  overflow detecting multiplication skips the multiply and divide check for
+  these values.
+</source>
+</p>
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/upgradeto121.xml b/JodaTime/src/site/xdoc/upgradeto121.xml
new file mode 100644
index 000000000..3c8d24877
--- /dev/null
+++ b/JodaTime/src/site/xdoc/upgradeto121.xml
@@ -0,0 +1,76 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 1.2 to 1.2.1</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 1.2 to version 1.2.1.
+<source>
+Joda-Time version 1.2.1
+-----------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is a patch release for Joda-Time 1.2.
+This release only contains bug fixes.
+We recommend all users of 1.2 upgrade to 1.2.1.
+
+We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license causes you problems please contact the mailing list.
+
+** Please also check out the JSP and Hibernate contributed projects **
+
+
+Incompatible changes since 1.2
+------------------------------
+Binary compatible - Yes
+
+Source compatible - Yes
+  - A bug fix has changed the effect of some toXxx() methods if you use time zones
+
+Serialization compatible - Yes
+
+Data compatible - Yes
+  - DateTimeZone data updated to version 2006a
+
+
+Deprecations since 1.2
+----------------------
+- None
+
+
+Bug fixes since 1.2
+-------------------
+- DateTime/DateMidnight/MutableDateTime/AbstractInstant
+   Conversion methods toDateTime, toDateTimeISO, toMutableDateTime, and
+    toMutableDateTimeISO now preserve the time zone.
+    Previously calling any of these four methods would convert the result to
+    the default time zone. This was incorrect.
+    The methods have been changed to preserve the time zone.
+   The similarly named methods on Instant have not changed behaviour.
+
+- DateTimeFormatterBuilder.MatchingParser
+   Previously didn't estimate parsed length correctly
+
+
+Enhancements since 1.2
+----------------------
+- None
+</source>
+</p>
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/upgradeto130.xml b/JodaTime/src/site/xdoc/upgradeto130.xml
new file mode 100644
index 000000000..4cb5c3d6c
--- /dev/null
+++ b/JodaTime/src/site/xdoc/upgradeto130.xml
@@ -0,0 +1,152 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 1.2 to 1.3</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 1.2 to version 1.3.
+<source>
+Joda-Time version 1.3
+---------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is the fourth full release of Joda-Time.
+This release focuses on new features, but also include some bug fixes.
+
+We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license causes you problems please contact the mailing list.
+
+** Please also check out the JSP and Hibernate contributed projects **
+
+
+Enhancements since 1.2
+----------------------
+- LocalDate/LocalTime/LocalDateTime
+  New classes representing date, time and datetime without a time zone.
+  LocalDate is the recommended replacement for YearMonthDay.
+  LocalTime is the recommended replacement for TimeOfDay.
+  These classes are implemented more flexibly than YearMonthDay and TimeOfDay
+  and thus solve the problem where you couldn't query or format fields such
+  as dayOfWeek on a YearMonthDay or millisOfDay on a TimeOfDay.
+  Neither YearMonthDay or TimeOfDay will be immediately deprecated as they
+  are in widespread use.
+  The API of the new classes has been kept as similar to YearMonthDay/TimeOfDay
+  as possible to aid migration, so this should be a search and replace change.
+
+- DateTime/DateMidnight/YearMonthDay/TimeOfDay
+  - toLocalXxx()
+  Added methods that allow conversion to the new classes, for example:
+  LocalDate date = today.toLocalDate();
+
+- DateTime/DateMidnight/YearMonthDay/TimeOfDay
+  - withXxx()
+  Added methods that allow an individul field to be changed, for example:
+  DateTime firstOfMonth = today.withDayOfMonth(1);
+  These methods are the immutable equivalent of set methods.
+  These are convenince methods for the methods on the property API.
+
+- DateTimeFormatter/DateTimeParserBucket
+  If a parsed datetime is illegal due to field range or time zone offset
+  transition, thrown exception includes text of datetime being parsed.
+
+- DateTimeFormat
+  - patternForStyle()
+  Added method to retrieve the format pattern for a given style and locale.
+
+- ISODateTimeFormat
+  - localDateParser()
+  - localTimeParser()
+  - localDateOptionalTimeParser()
+  - dateOptionalTimeParser()
+  New formats for parsing a datetime/date/time without a time zone, and for
+  parsing a date (mandatory) with an optional time
+
+
+Compatibility with 1.2
+----------------------
+Binary compatible - Yes, except
+  - PartialConverter interface has had two new methods added.
+    This is an internal interface and thus it is unlikely that you have
+    implementations that will break. If you did create your own implementation
+    and extended AbstractConverter then your code will not break.
+
+Source compatible - Yes, except
+  - PartialConverter interface, see above
+
+Serialization compatible - Yes
+
+Data compatible - Yes
+  - DateTimeZone data updated to version 2006g
+
+Semantic compatible - Yes, except
+  - YearMonthDay constructor no longer accepts time only strings
+  - TimeOfDay constructor no longer accepts strings including a date
+
+
+Deprecations since 1.2
+----------------------
+- Instant.toDateTimeISO
+- Instant.toMutableDateTimeISO
+    These were identical to the methods without the ISO suffix
+
+
+Bug fixes since 1.2
+-------------------
+- YearMonthDay
+  Constructing with String value no longer accepts a time only string
+
+- TimeOfDay
+  Constructing with String value no longer accepts date fields
+  Constructing with String now treats 'T' prefix as optional
+
+- DateTime/DateMidnight/MutableDateTime/AbstractInstant
+   Conversion methods toDateTime, toDateTimeISO, toMutableDateTime, and
+    toMutableDateTimeISO now preserve the time zone.
+    Previously calling any of these four methods would convert the result to
+    the default time zone. This was incorrect.
+    The methods have been changed to preserve the time zone.
+   The similarly named methods on Instant have not changed behaviour.
+
+- Interval.overlap/Interval.gap
+  Previously these methods returned intervals in the default time zone
+  Now, they return intervals in the time zone of the original interval
+
+- Interval/MutableInterval.overlaps(ReadableInterval)
+  Previously, these methods did not handle null correctly
+  Now, if the current millisecond instant is at the start of the interval the
+  method returns false (as defined, even if its a little unexpected)
+
+- DateTimeFormatterBuilder.MatchingParser
+  Previously didn't estimate parsed length correctly
+
+- YearMonthDay/TimeOfDay/Partial.Property
+  Hashcode was not defined
+
+- FixedDateTimeZone
+  Hashcode was not defined
+
+- ISO/Gregorian/Julian/Coptic/EthiopicChronology
+  Fixed overflow when getting year field from instants at Long.MAX_VALUE and
+  LONG.MIN_VALUE
+
+- DayOfYear field
+  Better error messages
+</source>
+</p>
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/upgradeto140.xml b/JodaTime/src/site/xdoc/upgradeto140.xml
new file mode 100644
index 000000000..2a15c46d2
--- /dev/null
+++ b/JodaTime/src/site/xdoc/upgradeto140.xml
@@ -0,0 +1,88 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 1.3 to 1.4</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 1.3 to version 1.4.
+<source>
+Joda-Time version 1.4
+---------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is the fifth full release of Joda-Time.
+This release focuses on new features, but also include some bug fixes.
+
+We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license causes you problems please contact the mailing list.
+
+*  Please also check out our related projects   *
+* http://joda-time.sourceforge.net/related.html *
+
+
+Enhancements since 1.3
+----------------------
+- Years/Months/Weeks/Days/Hours/Minutes/Seconds
+  New group of single field period classes
+  These allow applications to specify a specific field in method signatures and calculations
+  Methods are provided to convert between most of these based on standard length periods
+
+- Period.ZERO
+  Add zero-length constant to Period
+
+- PeriodFormatBuilder.append(PeriodPrinter,PeriodParser)
+  This method completes the API of PeriodFormatBuilder in the style of DateTimeFormatBuilder
+
+
+Compatibility with 1.3
+----------------------
+Binary compatible - Yes
+
+Source compatible - Yes, except
+  If you subclassed AbstractReadableInstantFieldProperty (unlikely) then
+  you now need to override getChronology() to re-enable the equals() and
+  hashCode() methods.
+
+Serialization compatible - Yes
+
+Data compatible - Yes
+  - DateTimeZone data updated to version 2006o
+
+Semantic compatible - Yes
+
+
+Deprecations since 1.3
+----------------------
+
+
+Bug fixes since 1.3
+-------------------
+- GJChronology
+  Text value of ReadablePartial fields was always a decimal number.
+
+- Comparisons of Chronology instances by identity  [1576727]
+  Some comparisons of Chronology instances were performed using ==
+  This worked fine in most cases due to agressive caching, however it failed when
+  using LenientChronology and other wrapping chronologies which do not have caching
+  Comparison is now via equals(), and involved adding equals() methods to a number
+  of classes. In addition, subclasses of AbstractReadableInstantFieldProperty must
+  now implement getChronology().
+</source>
+</p>
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/upgradeto150.xml b/JodaTime/src/site/xdoc/upgradeto150.xml
new file mode 100644
index 000000000..e5e99ff85
--- /dev/null
+++ b/JodaTime/src/site/xdoc/upgradeto150.xml
@@ -0,0 +1,198 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 1.4 to 1.5</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 1.4 to version 1.5.
+<source>
+Joda-Time version 1.5
+---------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is the sixth full release of Joda-Time.
+This release focuses on new features, but also include some bug fixes.
+
+We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license causes you problems please contact the mailing list.
+
+*  Please also check out our related projects   *
+* http://joda-time.sourceforge.net/related.html *
+
+
+Enhancements since 1.4
+----------------------
+- LocalDate
+  - add toDateTimeAtStartOfDay(), toDateTimeAtStartOfDay(DateTimeZone)
+  methods to replace toDateTimeAtMidnight() which avoid issues with time zones
+  that do not have midnight at spring DST cutover
+
+- LocalDate
+  - add toLocalDateTime()
+    provide mechanism to create LocalDateTime from LocalDate and LocalTime
+
+- Performance enhancement for LocalDate, LocalTime and LocalDateTime
+  - equals, compareTo, Period construction
+
+- Partial
+  - add isMatch(ReadablePartial)
+    provide mechanism to match a Partial, such as 'Friday the Thirteenth' to
+    another partial, such as a LocalDate
+
+- Period
+  - add toStandardDuration()
+  - add toStandardWeeks(), toStandardDays(), toStandardHours(),
+    toStandardMinutes(), toStandardSeconds()
+  methods to convert a period to other types using the standard
+  conversions (7 day week, 24 hour day, ...)
+
+- Period
+  - add plus(ReadablePeriod), minus(ReadablePeriod)
+  methods to add and subtract whole periods rather than just single fields
+
+- Period
+  - add normalizedStandard(), normalizedStandard(PeriodType)
+  methods to normalize the period back to standard field ranges, such as
+  normalizing 1 year 15 months to 2 years 3 months
+
+- Period.toString(PeriodFormatter), MutablePeriod.toString(PeriodFormatter)
+  - allow periods to be directly formatted, as with datetimes
+
+- DateTimeZone
+  - add isStandardOffset()
+  assists in determining if DST applies
+
+- Interval
+  - add (long,long,DateTimeZone) constructor
+  constructor emphasises that intervals include a time zone
+
+- DateTimeFormatterBuilder
+  - add appendFixedDecimal(DateTimeFieldType,int),
+        appendFixedSignedDecimal(DateTimeFieldType,int)
+  methods for printing and parsing fields which must have a fixed number of digits
+
+
+Compatibility with 1.4
+----------------------
+Binary compatible - Yes, except
+  - Internal class LenientDateTimeField has an incompatible change to
+    getInstance() and the constructor
+  - Internal class DateTimeZoneBuilder has an incompatible change to
+    toDateTime() and writeTo()
+
+Source compatible - Yes, except
+  - Internal class LenientDateTimeField has an incompatible change to
+    getInstance() and the constructor
+  - Internal class DateTimeZoneBuilder has an incompatible change to
+    toDateTime() and writeTo()
+
+Serialization compatible - Yes
+
+Data compatible - Yes, except
+  - Format of time zone data files changed slightly to fix bug
+    This mainly affects Australia
+  - DateTimeZone data updated to version 2007h
+
+Semantic compatible - Yes
+
+
+Deprecations since 1.4
+----------------------
+- YearMonthDay
+  - use LocalDate
+- TimeOfDay
+  - use LocalTime
+  - LocalDate and LocalTime have a much better internal implementation and have
+    been available since v1.3. Both have been effectively deprecated in the javadoc
+    for over a year to enable a gentle transition. In this release, they are now
+    formally deprecated, however they won't be removed until a v2.0 which won't
+    occur until 2009 at the earliest.
+
+- LocalDate.toDateTimeAtMidnight()
+  LocalDate.toDateTimeAtMidnight(DateTimeZone)
+  - use toDateTimeAtStartOfDay() instead because it avoids exceptions
+
+
+Bug fixes since 1.4
+-------------------
+- Daylight savings cutover in Spring incorrect
+  A problem with DST cutover in Spring meant that the result of many
+  methods would be different depending on whether the time zone was in the
+  Eastern or Western hemisphere. Now, the DST cutover is consistent, such
+  that if a time is requested within the cutover, it will be pushed forwards
+  into summer time. [1710316, 1747219, 1755158]
+
+- LenientChronology and time zones
+  LenientChronology could throw exceptions when the time being created
+  didn't exist dies to the time zone [1755161]
+
+- LocalDate/LocalTime constructors did not set internal state correctly
+  This problem was exposed when Days.daysBetween() and similar methods
+  failed to give the right results
+
+- Period.plusXxx(), minusXxx(), withXxx()
+  Fix to throw correct exception as per javadoc (UnsupportedOperationException) when
+  changing an unsupported field
+
+- ZoneInfoProvider now returns a copy of its internal state on getAvailableIDs
+  This avoids race conditions on some JVMs
+
+- Period formating threw NegativeArraySizeException during formatting
+  This happened for certain period values, notably zero
+
+- Period formatting could end up in an infinite loop on IBM JDK 1.4.2
+  This appears to be an IBM JDK issue, not a Joda-Time issue, but we should
+  not have ended up in an infinite loop whatever happens
+
+- DateTimeZone did not properly convert fixed offset zones to java.util.TimeZone [1682152]
+
+- DateTimeZone names were incorrect when abbreviation is the same in winter
+  and summer, notably in Australia [1716305]
+
+- Avoid compilation issue reported by Apache Harmony [1699760]
+
+- LenientChronology might incorrectly adjust a valid hour field near DST transition
+
+- DateTimeFormat javadoc now explains time zone parsing restriction better [OpenDiscussion 1721909]
+
+- Period javadoc now explains toDurationFrom() and toDurationTo() better
+
+- DateTime/Instant/LocalDateTime javadoc improved
+
+- DateTimeZone
+  Clarify javadoc of forTimeZone to indicate that application created
+  SimpleTimeZone rules are not parsed [1705180]
+
+- Defect in localized Gregorian/Julian symbol cache severely impacted formatting
+  performance when using null (default) locale.
+
+- DateTimeFormatter specified with locale of null could produce mismatched
+  symbols if default locale changed concurrently.
+
+- DateTime parsing of text failed when the text for the locale contained characters
+  other than letters. [1788282]
+  For French, the short text for months ends with '.'.
+  For Korean, the text for months contains a number.
+  The parser was also too greedy, and would absorb all letters it found, preventing
+  parsing a format such as '23JunSat' (month followed by day of week, or any other text).
+  The parser has been rewritten to only match the text that can be produced by the
+  formatter.
+</source>
+</p>
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/upgradeto151.xml b/JodaTime/src/site/xdoc/upgradeto151.xml
new file mode 100644
index 000000000..95d0819eb
--- /dev/null
+++ b/JodaTime/src/site/xdoc/upgradeto151.xml
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 1.5 to 1.5.1</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 1.5 to version 1.5.1.
+<source>
+Joda-Time version 1.5.1
+-----------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is a patch release for Joda-Time 1.5.
+This release contains one bug fix and a time zone update.
+We recommend all users of 1.5 upgrade to 1.5.1.
+
+We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license causes you problems please contact the mailing list.
+
+*  Please also check out our related projects   *
+* http://joda-time.sourceforge.net/related.html *
+
+
+Enhancements since 1.5
+----------------------
+
+
+Compatibility with 1.5
+----------------------
+Binary compatible - Yes
+
+Source compatible - Yes
+
+Serialization compatible - Yes
+
+Data compatible - Yes, except
+  - DateTimeZone data updated to version 2007j
+
+Semantic compatible - Yes
+
+
+Deprecations since 1.5
+----------------------
+
+
+Bug fixes since 1.5
+-------------------
+- Parsing (regression) [1839440]
+  Support parsing all upper-case and all lower-case text
+</source>
+</p>
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/upgradeto152.xml b/JodaTime/src/site/xdoc/upgradeto152.xml
new file mode 100644
index 000000000..b680d0c7a
--- /dev/null
+++ b/JodaTime/src/site/xdoc/upgradeto152.xml
@@ -0,0 +1,77 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 1.5.1 to 1.5.2</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 1.5.1 to version 1.5.2.
+<source>
+Joda-Time version 1.5.2
+-----------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is a patch release for Joda-Time 1.5.1.
+This release contains one bug fix and a time zone update.
+We recommend all users of 1.5.1 upgrade to 1.5.2.
+
+We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license causes you problems please contact the mailing list.
+
+*  Please also check out our related projects   *
+* http://joda-time.sourceforge.net/related.html *
+
+
+Enhancements since 1.5
+----------------------
+
+
+Compatibility with 1.5
+----------------------
+Binary compatible - Yes
+
+Source compatible - Yes
+
+Serialization compatible - Yes
+
+Data compatible - Yes, except
+  - DateTimeZone data updated to version 2007k
+
+Semantic compatible - Yes
+
+
+Deprecations since 1.5
+----------------------
+
+
+Bug fixes since 1.5.1
+---------------------
+- DateTimeZone (regression from 1.4)
+  Fix getOffsetFromLocal DST gap adjustment.
+
+Bug fixes since 1.5
+-------------------
+- Parsing (regression) [1839440]
+  Support parsing all upper-case and all lower-case text
+
+- Javadoc clarity enhancements
+  - Constants in Years/Months/Weeks/Days/Hours/Minutes/Seconds etc.
+  - Period/Interval Object constructors
+</source>
+</p>
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/upgradeto160.xml b/JodaTime/src/site/xdoc/upgradeto160.xml
new file mode 100644
index 000000000..fcb57bbe6
--- /dev/null
+++ b/JodaTime/src/site/xdoc/upgradeto160.xml
@@ -0,0 +1,132 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 1.5 to 1.6</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 1.5 to version 1.6.
+<source>
+Joda-Time version 1.6
+---------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is the seventh release of Joda-Time.
+This release contains enhancements, bug fixes and a time zone update.
+
+We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license causes you problems please contact the mailing list.
+
+**  Please also check out our related projects   **
+** http://joda-time.sourceforge.net/related.html **
+
+********************************************************************
+ The next release will probably be v2.0
+ This will be source and binary compatible with the exception that
+ deprecated methods and classes will be removed.
+ If you rely on the deprecated methods or classes please move to
+ their replacements, or let us know why you can't move by writing
+ in https://sourceforge.net/forum/forum.php?forum_id=337835
+********************************************************************
+
+
+Enhancements since 1.5
+----------------------
+- Add static factory methods to Duration [1909376]
+  Duration now has four factory methods, standardDays(), standardHours(),
+  standardMinutes() and standardSeconds(). These create durations of the
+  length normally associated with a day/hour/minute/second
+
+- Added Duration.getStandardSeconds() and Duration.toStandardSeconds()
+  These convert a duration in milliseconds to a number of seconds.
+
+- Added OSGi bundle information [1889787]
+  Joda-Time should be usable directly as an OSGi bundle
+
+- Added stable Chronology hash code implementations [2018795]
+  The hash codes of each Chronology implementation is now stable.
+  This should aid large scale caching/distribution tools.
+
+- Added DateTimeZone.isLocalDateTimeGap
+  Returns true/false depending on whether the time is in a time-zone gap
+
+
+Compatibility with 1.5
+----------------------
+Binary compatible - Yes
+
+Source compatible - Yes
+
+Serialization compatible - Yes
+
+Data compatible - Yes, except
+  - DateTimeZone data updated to version 2008i
+
+Semantic compatible - Yes
+
+
+Deprecations since 1.5
+----------------------
+
+
+Bug fixes since 1.5
+-------------------
+- ISODateTimeFormat millisecond parsing broken
+  Millisecond parsing would parse 12:00:00.4 as 4 milliseconds rather
+  than 400 milliseconds
+
+- ISODateTimeFormat basic field parsing too lenient
+  The basic parsers in ISODateTimeFormat were too lenient
+  They have been changed to only accept the correct number of digits as
+  per the ISO-8601 standard. The non basic parsers are unaffected
+
+- DateTimeFormat.forFields(List) method can't handle immutable [1877843]
+  Fix so that the method does not throw an exception when an unmodifiable
+  list is passed in
+
+- Fixed offset time zones calculated incorrect periods
+  ZonedChronology.ZonedDuration.isPrecise() did not take into account
+  the decorated isPrecise() value. This meant that date fields for fixed
+  offset time zones were always considered precise. The result was periods
+  containing months and years when they should not have done.
+
+- ZonedChronology (regression from 1.4) [1887104]
+  Fix to roundFloor/roundCeiling
+  Bug affected DST cutover in Autumn for time fields (not date fields)
+  
+- Clarify Javadoc time zone formats
+  Time zone formats were incorrectly documented as 'Z' instead of 'ZZ'
+  Javadoc only change
+
+- Period formatting [2025928]
+  Formatting option printZeroRarelyFirst() did not work unless years
+  field was included.
+
+- DateTimeZone (regression from 1.4) [fix also available in v1.5.2]
+  Fix getOffsetFromLocal DST gap adjustment
+  Bug affected parsing of DST cutover in Autumn
+
+- Parsing (regression from 1.4) [1839440] [fix also available in v1.5.1]
+  Support parsing all upper-case and all lower-case text
+
+- Javadoc clarity enhancements [fix also available in v1.5.1]
+  - Constants in Years/Months/Weeks/Days/Hours/Minutes/Seconds etc.
+  - Period/Interval Object constructors
+</source>
+</p>
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/upgradeto161.xml b/JodaTime/src/site/xdoc/upgradeto161.xml
new file mode 100644
index 000000000..66fff37bc
--- /dev/null
+++ b/JodaTime/src/site/xdoc/upgradeto161.xml
@@ -0,0 +1,91 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - Upgrade from 1.6 to 1.6.1</title>
+  <author>Stephen Colebourne</author>
+ </properties>
+
+<body>
+
+<section name="Upgrade">
+<p>
+These are the release notes and advice for upgrading Joda-Time from
+version 1.6 to version 1.6.1.
+<source>
+Joda-Time version 1.6.1
+-----------------------
+
+Joda-Time is a date and time handling library that seeks to replace the JDK
+Date and Calendar classes.
+
+This is a patch release for Joda-Time 1.6.
+This release only contains bug fixes.
+We recommend all users of 1.6 upgrade to 1.6.1.
+
+We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
+
+Joda-Time is licensed under the business-friendly Apache License Version 2.
+This is the same license as all of Apache, plus other open source projects such as Spring.
+The intent is to make the code available to the Java community with the minimum
+of restrictions. If the license causes you problems please contact the mailing list.
+
+**  Please also check out our related projects   **
+** http://joda-time.sourceforge.net/related.html **
+
+
+Compatibility with 1.6
+----------------------
+Binary compatible - Yes
+
+Source compatible - Yes
+
+Serialization compatible - Yes
+
+Data compatible - Yes, except
+  - DateTimeZone data updated to version 2010k
+
+Semantic compatible - Yes
+
+
+Deprecations since 1.6
+----------------------
+- DateTimeFormatter.getChronolgy() [2783325]
+  Incorrect spelling - new method DateTimeFormatter.getChronology()
+
+
+Bug fixes since 1.6
+-------------------
+- LocalTime.fromDateFields()
+  Now handles times based on java.util.Date before 1970
+
+- LocalDate.toInterval() [2487417]
+  Now handles time zones which have no midnight at DST cutover
+
+- DateTimeZone.convertLocalToUTC [2903029]
+  Now handles date after last ever DST change
+
+- Period formatting concurrency [2820871]
+  Fix possible concurrency hole in PeriodFormatBuilder.Separator
+
+- Classloading CachedDateTimeZone could invalidate state [2935625]
+  Default time zone now lazily loaded
+
+- DateTimeUtils shared static variable now volatile [2986043]
+
+- Time zone compiler now handles 24:00 [2804258]
+
+- Time zone compiler now handles non-UTC better
+
+- Assorted Javadoc clarifications, including [2721880]
+
+
+Enhancements since 1.6
+----------------------
+- None
+</source>
+</p>
+</section>
+
+</body>
+</document>
diff --git a/JodaTime/src/site/xdoc/userguide.xml b/JodaTime/src/site/xdoc/userguide.xml
new file mode 100644
index 000000000..05d0712b7
--- /dev/null
+++ b/JodaTime/src/site/xdoc/userguide.xml
@@ -0,0 +1,989 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+
+<document>
+ <properties>
+  <title>Java date and time API - User Guide</title>
+  <author>Stephen Colebourne</author>
+  <author>Al Major</author>
+ </properties>
+<body>
+
+<!-- ========================================================================= -->
+
+<section name="Introduction">
+<p>
+Joda Time is like an iceberg, 9/10ths of it is invisible to user-code.
+Many, perhaps most, applications will never need to see what's below the surface.
+This document provides an introduction to the Joda-Time API for the
+average user, not for the would-be API developer.
+</p>
+<p>
+The bulk of the
+text is devoted to code snippets that display the most common usage scenarios
+in which the library classes are used. In particular, we cover the usage of the
+key <code>DateTime</code>, <code>Interval</code>, <code>Duration</code>
+and <code>Period</code> classes.
+</p>
+<p>
+We finish with a look at the important topic of formatting and parsing and a few
+more advanced topics.
+</p>
+<p>
+<ul>
+<li><a href="#Architecture_Overview">Architecture Overview</a>
+  <ul>
+    <li><a href="#Instants">Instants</a>
+      <ul>
+        <li><a href="#Fields">Fields</a></li>
+        <li><a href="#Properties">Properties</a></li>
+      </ul>
+    </li>
+    <li><a href="#Intervals">Intervals</a></li>
+    <li><a href="#Durations">Durations</a></li>
+    <li><a href="#Periods">Periods</a></li>
+    <li><a href="#Chronology">Chronology</a></li>
+    <li><a href="#TimeZones">TimeZones</a></li>
+    <li><a href="#Interface_usage">Interface usage</a></li>
+    <li><a href="#Package_structure">Package structure</a></li>
+  </ul>
+</li>
+<li><a href="#Working_with_DateTime">Working with DateTime</a>
+  <ul>
+    <li><a href="#Construction">Construction</a></li>
+    <li><a href="#JDK_Interoperability">JDK Interoperability</a></li>
+    <li><a href="#Querying_DateTimes">Querying DateTimes</a>
+      <ul>
+        <li><a href="#Accessing_fields">Acessing fields</a></li>
+        <li><a href="#Date_fields">Date fields</a></li>
+        <li><a href="#Time_fields">Time fields</a></li>
+      </ul>
+    </li>
+    <li><a href="#Manipulating_DateTimes">Manipulating DateTimes</a>
+      <ul>
+        <li><a href="#Modifying_fields">Modifying fields</a></li>
+        <li><a href="#DateTime_methods">DateTime methods</a></li>
+        <li><a href="#Using_a_MutableDateTime">Using a MutableDateTime</a></li>
+      </ul>
+    </li>
+    <li><a href="#Changing_TimeZone">Changing TimeZone</a></li>
+    <li><a href="#Changing_Chronology">Changing Chronology</a></li>
+  </ul>
+</li>
+<!---
+<li><a href="#intervals_durations_periods">Usage: Intervals, Durations and Periods</a>
+  <ul>
+    <li><a href="#interval_ex">Interval Examples</a></li>
+    <li><a href="#duration_ex">Duration Examples</a></li>
+    <li><a href="#period_ex">Period Examples</a></li>
+  </ul>
+</li>
+-->
+<li><a href="#Input_and_Output">Input and Output</a>
+<ul>
+    <li><a href="#Formatters">Formatters</a></li>
+    <li><a href="#Standard_Formatters">Standard Formatters</a></li>
+    <li><a href="#Custom_Formatters">Custom Formatters</a></li>
+    <li><a href="#Freaky_Formatters">Freaky Formatters</a></li>
+</ul>
+</li>
+<li><a href="#Advanced_features">Advanced features</a>
+<ul>
+    <li><a href="#Change_the_Current_Time">Change the Current Time</a></li>
+    <li><a href="#Converters">Converters</a></li>
+    <li><a href="#Security">Security</a></li>
+</ul>
+</li>
+</ul>
+</p>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Architecture Overview">
+<p>
+The major building blocks of joda time are introduced below. These are the concepts
+of <em>instant</em>, <em>interval</em>, <em>duration</em>, <em>period</em>,
+<em>chronology</em> and <em>timezones</em>. We then say a few words about the role
+of interfaces in the library design, which is a little different than the norm. We
+end with a few words on package structure. Usage examples for instant are delayed until the
+following sections of the guide. Examples for interval, duration and period may be
+found in the appropriate section in the "Key Concepts" part of the documentation.
+</p>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Instants">
+<p>
+The most frequently used concept in Joda-Time is that of the <em>instant</em>.
+An Instant is defined as <em>a moment in the datetime continuum specified as a
+number of milliseconds from 1970-01-01T00:00Z</em>.
+This definition of milliseconds is consistent with that of the JDK in <code>Date</code>
+or <code>Calendar</code>. Interoperating between the two APIs is thus simple.
+</p>
+<p>
+Within Joda-Time an instant is represented by the
+<code>ReadableInstant</code> interface. The main implementation
+of this interface, and the class that the average API user needs to be
+most familiar with, is <code>DateTime</code>. DateTime is immutable - and once
+created the values do not change. Thus, this class can safely be passed around
+and used in multiple threads without synchronization.
+</p>
+<p>
+The millisecond instant can be converted to any date time field using a
+<em>Chronology</em>.
+To assist with this, methods are provided on
+<code>DateTime</code> that act as getters for the most common date and
+time fields.
+</p>
+<p>
+We discuss the chronology concept a litte further on in this overview.
+</p>
+<p>
+A companion mutable class to <code>DateTime</code> is
+<code>MutableDateTime</code>. Objects
+of this class can be modified and are not thread-safe.
+</p>
+<p>
+Other implementations of <code>ReadableInstant</code> include <code>Instant</code>
+and <code>DateMidnight</code>.
+</p>
+
+<subsection name="Fields">
+<p>
+The main API of <code>DateTime</code> has been kept small, limited to just
+get methods for each calendar field. So, for instance, the 'day-of-year' calendar
+field would be retrieved by calling the <code>getDayOfYear()</code> method. For
+a complete list of fields and their descriptions, see the
+<a href="field.html">field reference</a>.
+</p>
+</subsection>
+
+<subsection name="Properties">
+<p>
+There is much more power available, however, through the use of what is termed a
+<em>property</em>. Each calendar field is associated with such a property.
+Thus, 'day-of-year', whose value is directly returned by the method
+<code>getDayOfYear()</code>, is also associated with the property returned by
+the <code>dayOfYear()</code> method. The property class associated with
+<code>DateTime</code> is <code>DateTime.Property</code>.
+</p>
+<p>
+Knowing the methods on the property is the secret to making the most of the API.
+We have more to say on the usage of properties later in this document.
+</p>
+</subsection>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Intervals">
+<p>
+An <em>interval</em> in Joda-Time represents an interval of time from one
+instant to another instant. Both instants are fully specified instants in the
+datetime continuum, complete with time zone.
+</p>
+<p>
+Intervals are implemented as <em>half-open</em>, which is to say that the start instant is
+inclusive but the end instant is exclusive. The end is always greater than or equal to the start.
+Both end-points are restricted to having the same chronology and the same time zone.
+</p>
+<p>
+Two implementations are provided, <code>Interval</code> and <code>MutableInterval</code>,
+both are specializations of <code>ReadableInterval</code>.
+</p>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Durations">
+<p>
+A <em>duration</em> in Joda-Time represents a duration of time measured in milliseconds.
+The duration is often obtained from an interval.
+</p>
+<p>
+Durations are a very simple concept, and the implementation is also simple.
+They have no chronology or time zone, and consist solely of the millisecond duration.
+</p>
+<p>
+Durations can be added to an instant, or to either
+end of an interval to change those objects.
+In datetime maths you could say:
+<source>
+      instant  +  duration  =  instant
+</source>
+</p>
+<p>
+Currently, there is only one implementation of the <code>ReadableDuration</code>
+interface: <code>Duration</code>.
+</p>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Periods">
+
+<p>
+A <em>period</em> in Joda-Time represents a period of time defined in terms of fields,
+for example, 3 years 5 months 2 days and 7 hours.
+This differs from a duration in that it is inexact in terms of milliseconds.
+A period can only be resolved to an exact number of milliseconds by specifying the
+instant (including chronology and time zone) it is relative to.
+</p>
+<p>
+For example, consider a period of 1 month.
+If you add this period to the 1st February (ISO) then you will get the 1st March.
+If you add the same period to the 1st March you will get the 1st April.
+But the duration added (in milliseconds) in these two cases is very different.
+</p>
+<p>
+As a second example, consider adding 1 day at the daylight savings boundary.
+If you use a period to do the addition then either 23 or 25 hours will be added as appropriate.
+If you had created a duration equal to 24 hours, then you would end up with the wrong result.
+</p>
+<p>
+Periods are implemented as a set of <code>int</code> fields.
+The standard set of fields in a period are years, months, weeks, days, hours, minutes, seconds
+and millis.
+The <code>PeriodType</code> class allows this set
+of fields to be restricted, for example to elimate weeks.
+This is significant when converting a duration or interval to a period, as the calculation
+needs to know which period fields it should populate.
+</p>
+<p>
+Methods exist on periods to obtain each field value.
+Periods are not associated with either a chronology or a time zone.
+</p>
+<p>
+Periods can be added to an instant, or to either
+end of an interval to change those objects.
+In datetime maths you could say:
+<source>
+      instant  +  period  =  instant
+</source>
+</p>
+<p>
+There are two implementations of the <code>ReadablePeriod</code> interface,
+<code>Period</code> and <code>MutablePeriod</code>.
+</p>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Chronology">
+<p>
+The Joda-Time design is based around the
+<em>Chronology</em>. It is a calculation engine that supports the complex
+rules for a calendar system. It encapsulates the field objects, which are used
+on demand to split the absolute time instant into recognisable calendar
+fields like 'day-of-week'. It is effectively a pluggable calendar system.
+</p>
+<p>
+The actual calculations of the chronology are split between the
+<code>Chronology</code> class itself and the field classes -
+<code>DateTimeField</code> and <code>DurationField</code>.
+Together, the subclasses of these three classes form the bulk of the code
+in the library.
+Most users will never need to use or refer directly to the subclasses.
+Instead, they will simply obtain the chronology and use it as a singleton, as follows:
+<source>
+Chronology coptic = CopticChronology.getInstance();
+</source>
+</p>
+<p>
+Internally, all the chronology, field, etc. classes are maintained as singletons.
+Thus there is an initial setup cost when using Joda-Time, but after that only
+the main API instance classes
+(<code>DateTime</code>, <code>Interval</code>, <code>Period</code>, etc.)
+have creation and garbage collector costs.
+</p>
+<p>
+Although the Chronology is key to the design, it is not key to using the API !!
+</p>
+<p>
+For most applications, the Chronology can be ignored as it will default to the
+ISOChronology. This is suitable for most uses.
+You would change it if you need accurate dates before October 15, 1582 when
+the Julian calendar was used, or if you need a specific calendar
+like the Coptic calendar illustrated earlier.
+</p>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="TimeZones">
+<p>
+The chronology class also supports the time zone functionality.
+This is applied to the underlying chronology via the decorator design pattern.
+The <code>DateTimeZone</code> class provides
+access to the zones primarily through one factory method, as follows:
+<source>
+DateTimeZone zone = DateTimeZone.forID("Europe/London");
+</source>
+</p>
+<p>
+In addition to named time zones, Joda-Time also supports fixed time zones.
+The simplest of these is UTC, which is defined as a constant:
+<source>
+DateTimeZone zoneUTC = DateTimeZone.UTC;
+</source>
+Other fixed offset time zones can be obtained by a specialise factory method:
+<source>
+DateTimeZone zoneUTC = DateTimeZone.forOffsetHours(hours);
+</source>
+</p>
+<p>
+The TimeZone implementation is based on data provided by the public
+<a href="http://www.twinsun.com/tz/tz-link.htm">tz database</a>,
+otherwise known as the Olson database.
+A full list of timezone ids can be found <a href="timezones.html">here</a>
+</p>
+<p>
+Joda-Time provides a default time zone which is used in many operations when a
+time zone is not specified. This is similar in concept to the default time zone
+of the <code>java.util.TimeZone</code> class. The value can be accessed and updated
+via static methods:
+<source>
+DateTimeZone defaultZone = DateTimeZone.getDefault();
+DateTimeZone.setDefault(myZone);
+</source>
+</p>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Interface usage">
+<p>
+As you have seen, Joda-Time defines a number of new interfaces which are visible
+throughout the javadocs. The most important is <code>ReadableInstant</code> which
+currently has 4 implementations.
+Other significant interfaces include <code>ReadableInterval</code> and
+<code>ReadablePeriod</code>. These are currently used as generalizations for
+a value-only and a mutable class, respectively.
+</p>
+<p>
+An important point to mention here is that the Joda interfaces are used differently
+than, for instance, the JDK Collections Framework interfaces.
+When working with a Collections interface, such as <code>List</code> or <code>Map</code>
+you will normally hold your variable as a type of <code>List</code> or <code>Map</code>, 
+only referencing the concrete class when you create the object.
+<source>
+    List list = new ArrayList();
+    Map map = new HashMap();
+</source>
+In Joda-Time, the interfaces exist to allow <em>interoperation</em> between similar
+date implementations, such as a mutable and immutable version of a class.
+As such, they only offer a subset of the methods of the concrete class.
+<em>For most work, you will reference the concrete class, not the interface</em>.
+This gives access to the full power of the library.
+<source>
+    DateTime dt = new DateTime();
+</source>
+</p>
+<p>
+For maximum flexibility however, you might choose to declare your method
+parameters using the Joda-Time interface.
+A method on the interface can obtain the concrete class for use within the method.
+<source>
+    public void process(ReadableDateTime dateTime) {
+        DateTime dt = dateTime.toDateTime();
+    }
+</source>
+</p>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Package structure">
+<p>
+The package structure is designed to separate the methods in the public API
+from the private API.
+The public packages are the root package (under <code>org.joda.time</code>) and
+the <code>format</code> package.
+The private packages are the <code>base</code>, <code>chrono</code>,
+<code>convert</code>, <code>field</code> and <code>tz</code> packages.
+Most applications should not need to import classes from the private packages.
+</p>
+</section>
+
+<!-- ========================================================================= -->
+<!-- ========================================================================= -->
+<!-- ========================================================================= -->
+
+<section name="Working with DateTime">
+<a name="construction"/>
+<subsection name="Construction">
+<p>
+A datetime object is created by using a <code>DateTime</code> constructor. The default
+constructor is used as follows
+<source>
+    DateTime dt = new DateTime();
+</source>
+and creates a datetime object representing the current date and time in milliseconds
+as determined by the system clock. It is constructed using the ISO
+calendar in the default time zone.</p>
+<p>
+To create a datetime object representing a specific date and time, you may use an
+initialization string:
+<source>
+    DateTime dt = new DateTime("2004-12-13T21:39:45.618-08:00");
+</source>
+The initialization string must be in a format that is compatible with the ISO8601
+standard.
+</p>
+<p>
+<code>DateTime</code> also provides
+<a href="apidocs/org/joda/time/DateTime.html#constructor_summary">other
+constructors</a> to create a specific date and time using a variety of standard
+fields. This also permits the use of any calendar and timezone.
+</p>
+</subsection>
+
+<subsection name="JDK Interoperability">
+<p>
+The <code>DateTime</code> class has a constructor which takes an <code>Object</code>
+as input. In particular this constructor can be passed a JDK <code>Date</code>,
+JDK <code>Calendar</code> or JDK <code>GregorianCalendar</code> (It also accepts an
+ISO8601 formatted String, or <code>Long</code> object representing milliseconds). This is one half
+of the interoperability with the JDK. The other half of interoperability with JDK
+is provided by <code>DateTime</code> methods which return JDK objects.
+</p>
+<p>
+Thus inter-conversion between Joda <code>DateTime</code> and JDK <code>Date</code>
+can be performed as follows
+<source>
+    // from Joda to JDK
+    DateTime dt = new DateTime();
+    Date jdkDate = dt.toDate();
+
+    // from JDK to Joda
+    dt = new DateTime(jdkDate);
+</source>
+</p>
+<p>
+Similarly, for JDK <code>Calendar</code>:
+<source>
+    // from Joda to JDK
+    DateTime dt = new DateTime();
+    Calendar jdkCal = dt.toCalendar(Locale.CHINESE);
+
+    // from JDK to Joda
+    dt = new DateTime(jdkCal);
+</source>
+</p>
+<p>
+and JDK <code>GregorianCalendar</code>:
+<source>
+    // from Joda to JDK
+    DateTime dt = new DateTime();
+    GregorianCalendar jdkGCal = dt.toGregorianCalendar();
+
+    // from JDK to Joda
+    dt = new DateTime(jdkGCal);
+</source>
+</p>
+</subsection>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Querying DateTimes">
+<p>
+The separation of the calculation of calendar fields (<code>DateTimeField</code>)
+from the representation of the calendar instant (<code>DateTime</code>) makes
+for a powerful and flexible API. The connection
+between the two is maintained by the property (<code>DateTime.Property</code>)
+which provides access to the field.
+</p>
+<p>
+For instance, the direct way to get the day of week for a particular
+<code>DateTime</code>, involves calling the method
+<source>
+    int iDoW = dt.getDayOfWeek();
+</source>
+where <code>iDoW</code> can take the values (from class
+<code>DateTimeConstants</code>).
+<source>
+    public static final int MONDAY = 1;
+    public static final int TUESDAY = 2;
+    public static final int WEDNESDAY = 3;
+    public static final int THURSDAY = 4;
+    public static final int FRIDAY = 5;
+    public static final int SATURDAY = 6;
+    public static final int SUNDAY = 7;
+</source>
+</p>
+
+<subsection name="Accessing fields">
+<p>The direct methods are fine for simple usage, but more flexibility can be achieved via the
+property/field mechanism. The day of week property is obtained by
+<source>
+    DateTime.Property pDoW = dt.dayOfWeek();
+</source>
+which can be used to get richer information about the field, such as
+<source>
+    String strST = pDoW.getAsShortText(); // returns "Mon", "Tue", etc.
+    String strT = pDoW.getAsText(); // returns "Monday", "Tuesday", etc.
+</source>
+which return short and long name strings (based on the current locale)
+of the day-of-week. Localized versions of these methods are also available, thus
+<source>
+    String strTF = pDoW.getAsText(Locale.FRENCH); // returns "Lundi", etc.
+</source>
+can be used to return the day-of-week name string in French.
+</p>
+<p>
+Of course, the original integer value of the field is still accessible as
+<source>
+    iDoW = pDoW.get();
+</source>
+The property also provides access to other values associated with the field
+such as metadata on the minimum and maximum text size, leap status, related 
+durations, etc. For a complete reference, see the
+<a href="apidocs/org/joda/time/field/AbstractReadableInstantFieldProperty.html">documentation</a>
+for the base class <code>AbstractReadableInstantFieldProperty</code>
+</p>
+<p>
+In practice, one would not actually create the intermediate <code>pDoW</code>
+variable. The code is easier to read if the methods are called on anonymous
+intermediate objects. Thus, for example,
+<source>
+    strT = dt.dayOfWeek().getAsText();
+    iDoW = dt.dayOfWeek().get();
+</source>
+would be written instead of the more indirect code presented earlier.
+</p>
+<p>
+Note: For the single case of getting the numerical value of a field, we recommend
+using the get method on the main <code>DateTime</code> object as it is more efficient.
+<source>
+    iDoW = dt.getDayOfWeek();
+</source>
+</p>
+</subsection>
+
+<subsection name="Date fields">
+<p>
+The <code>DateTime</code> implementation provides a complete list of standard
+calendar fields:
+<source>
+    dt.getEra();
+    dt.getYear();
+    dt.getWeekyear();
+    dt.getCenturyOfEra();
+    dt.getYearOfEra();
+    dt.getYearOfCentury();
+    dt.getMonthOfYear();
+    dt.getWeekOfWeekyear();
+    dt.getDayOfYear();
+    dt.getDayOfMonth();
+    dt.getDayOfWeek();
+</source>
+Each of these also has a corresponding property method, which returns a
+<code>DateTime.Property</code> binding to the appropriate field, such as
+<code>year()</code> or <code>monthOfYear()</code>.
+The fields represented by these properties behave pretty much as their
+names would suggest. The precise definitions are available in the
+<a href="field.html">field reference</a>.
+</p>
+<p>
+As you would expect, all the methods we showed above in the day-of-week example
+can be applied to any of these properties. For example, to extract the standard
+month, day and year fields from a datetime, we can write
+<source>
+    String month = dt.monthOfYear().getAsText();
+    int maxDay = dt.dayOfMonth().getMaximumValue();
+    boolean leapYear = dt.yearOfEra().isLeap();
+</source>
+</p>
+</subsection>
+
+<subsection name="Time fields">
+<p>
+Another set of properties access fields representing intra-day durations for
+time calculations. Thus to compute the hours, minutes and seconds of the instant
+represented by a <code>DateTime</code>, we would write
+<source>
+    int hour = dt.getHourOfDay();
+    int min = dt.getMinuteOfHour();
+    int sec = dt.getSecondOfMinute();
+</source>
+Again each of these has a corresponding property method for more complex manipulation.
+The complete list of time fields can be found in the 
+<a href="field.html">field reference</a>.
+</p>
+</subsection>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Manipulating DateTimes">
+<p>
+<code>DateTime</code> objects have value semantics, and cannot be modified after
+construction (they are immutable).
+Therefore, most simple manipulation of a datetime object involves
+construction of a new datetime as a modified copy of the original.
+</p>
+<p>
+WARNING: <i>A common mistake to make with immutable classes is to forget to assign
+the result to a variable. Remember that calling an add or set method on an
+immtable object has no effect on that object - only the result is updated.</i>
+</p>
+
+<subsection name="Modifying fields">
+<p>
+One way to do this is to use methods on properties. To
+return to our prior example, if we wish to modify the <code>dt</code> object
+by changing its day-of-week field to Monday we can do so by using the
+<code>setCopy</code> method of the property:
+<source>
+    DateTime result = dt.dayOfWeek().setCopy(DateTimeConstants.MONDAY);
+</source>
+Note: If the <code>DateTime</code> object is already set to Monday then the same
+object will be returned.
+</p>
+<p>
+To add to a date you could use the <code>addToCopy</code> method.
+<source>
+    DateTime result = dt.dayOfWeek().addToCopy(3);
+</source>
+</p>
+</subsection>
+
+<subsection name="DateTime methods">
+<p>
+Another means of accomplishing similar calculations is to use methods on the
+<code>DateTime</code> object itself. Thus we could add 3 days to <code>dt</code>
+directly as follows:
+<source>
+    DateTime result = dt.plusDays(3);
+</source>
+</p>
+</subsection>
+
+<subsection name="Using a MutableDateTime">
+<p>
+The methods outlined above are suitable for simple calculations involving one
+or two fields. In situations where multiple fields need to be modified, it is
+more efficient to create a mutable copy of the datetime, modify the copy and
+finally create a new value datetime.
+<source>
+    MutableDateTime mdt = dt.toMutableDateTime();
+    // perform various calculations on mdt
+    ...
+    DateTime result = mdt.toDateTime();
+</source>
+<code>MutableDateTime</code> has a number of methods, including standard setters,
+for directly modifying the datetime.
+</p>
+</subsection>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Changing TimeZone">
+<p>
+<code>DateTime</code> comes with support for a couple of common timezone
+calculations. For instance, if you want to get the local time in London at this
+very moment, you would do the following
+<source>
+    // get current moment in default time zone
+    DateTime dt = new DateTime();
+    // translate to London local time
+    DateTime dtLondon = dt.withZone(DateTimeZone.forID("Europe/London"));
+</source>
+where <code>DateTimeZone.forID("Europe/London")</code> returns the timezone
+value for London. The resulting value <code>dtLondon</code> has the same absolute
+millisecond time, but a different set of field values.
+</p>
+<p>
+There is also support for the reverse operation, i.e. to get the datetime (absolute
+millisecond) corresponding to the moment when London has the same local time as
+exists in the default time zone <em>now</em>. This is done as follows
+<source>
+    // get current moment in default time zone
+    DateTime dt = new DateTime();
+    // find the moment when London will have / had the same time
+    dtLondonSameTime = dt.withZoneRetainFields(DateTimeZone.forID("Europe/London"));
+</source>
+</p>
+<p>
+A set of all TimeZone ID strings (such as "Europe/London") may be obtained by
+calling <code>DateTimeZone.getAvailableIDs()</code>. A full list of available
+time zones is provided <a href="timezones.html">here</a>.
+</p>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Changing Chronology">
+<p>
+The <code>DateTime</code> class also has one method for changing calendars. This
+allows you to change the calendar for a given moment in time. Thus if you want to
+get the datetime for the current time, but in the Buddhist Calendar, you would do
+<source>
+    // get current moment in default time zone
+    DateTime dt = new DateTime();
+    dt.getYear();  // returns 2004
+    // change to Buddhist chronology
+    DateTime dtBuddhist = dt.withChronology(Chronology.getBuddhist());
+    dtBuddhist.getYear();  // returns 2547
+</source>
+where <code>Chronology.getBuddhist</code> is a factory method for obtaining a
+Buddhist chronology.
+</p>
+</section>
+
+<!-- ========================================================================= -->
+
+<!---
+<a name="#intervals_durations_periods"/>
+<section name="Usage: Intervals, Durations and Periods">
+
+<a name="#interval_ex"/>
+<section name="Interval Examples">
+<p>
+The code can be used in various ways:
+<source>
+// interval from start to end
+DateTime start = new DateTime(2004, 12, 25, 0, 0, 0, 0);
+DateTime end = new DateTime(2005, 1, 1, 0, 0, 0, 0);
+Interval interval = new Interval(start, end);
+</source>
+Accessing other objects is easy:
+<source>
+Interval interval = ...
+DateTime start = interval.getStart();
+DateTime end = interval.getEnd();
+Chronology chrono = interval.getChronology();
+Duration duration = interval.toDuration();
+Period period = interval.toPeriod();
+</source>
+</p>
+</section>
+
+<a name="#duration_ex"/>
+<section name="Duration Examples">
+<p>
+The code can be used in various ways:
+<source>
+DateTime start = new DateTime(2004, 12, 25, 0, 0, 0, 0);
+DateTime end = new DateTime(2005, 1, 1, 0, 0, 0, 0);
+
+// duration in ms between two instants
+Duration dur = new Duration(start, end);
+
+// calc will be the same as end
+DateTime calc = start.plus(dur);
+</source>
+</p>
+</section>
+
+<a name="#period_ex"/>
+<section name="Period Examples">
+<p>
+The code can be used in various ways:
+<source>
+DateTime start = new DateTime(2004, 12, 25, 0, 0, 0, 0);
+DateTime end = new DateTime(2006, 1, 1, 0, 0, 0, 0);
+
+// period of 1 year and 7 days
+Period period = new Period(start, end);
+
+// calc will equal end
+DateTime calc = start.plus(period);
+</source>
+</p>
+</section>
+</section>
+-->
+
+<!-- ========================================================================= -->
+
+<section name="Input and Output">
+<p>
+Reading date time information from external sources which have their own custom
+format is a frequent requirement for applications that have datetime
+computations. Writing to a custom format is also a common requirement.
+</p>
+<p>
+Many custom formats can be represented by date-format strings which specify
+a sequence of calendar fields along with the representation (numeric, name string,
+etc) and the field length. For example the pattern <code>"yyyy"</code> would
+represent a 4 digit year. Other formats are not so easily represented. For
+example, the pattern <code>"yy"</code> for a two digit year does not uniquely
+identify the century it belongs to. On output, this will not cause problems, but
+there is a problem of interpretation on input.
+</p>
+<p>
+In addition, there are several date/time serialization standards in common use
+today, in particular the ISO8601. These must also be supported by most datetime
+applications.
+</p>
+<p>
+Joda time supports these different requirements through a flexible architecture.
+We will now describe the various elements of this architecture.
+</p>
+
+<subsection name="Formatters">
+<p>
+All printing and parsing is performed using a <code>DateTimeFormatter</code> object.
+Given such an object <code>fmt</code>, parsing is performed as follows
+<source>
+    String strInputDateTime;
+    // string is populated with a date time string in some fashion
+    ...
+    DateTime dt = fmt.parseDateTime(strInputDateTime);
+</source>
+Thus a <code>DateTime</code> object is returned from the parse method of the
+formatter. Similarly, output is performed as
+<source>
+    String strOutputDateTime = fmt.print(dt);
+</source>
+</p>
+</subsection>
+
+<subsection name="Standard Formatters">
+<p>
+Support for standard formats based on ISO8601 is provided by the
+<code>ISODateTimeFormat</code> class. This provides a number of factory methods.
+</p>
+<p>
+For example, if you wanted to use the ISO standard format for <em>datetime</em>,
+which is <code>yyyy-MM-dd'T'HH:mm:ss.SSSZZ</code>, you would initialize
+<code>fmt</code> as
+<source>
+    DateTimeFormatter fmt = ISODateTimeFormat.dateTime();
+</source>
+You would then use <code>fmt</code> as described above, to read or write datetime
+objects in this format.
+</p>
+</subsection>
+
+<subsection name="Custom Formatters">
+<p>
+If you need a custom formatter which can be described in terms of
+a format pattern, you can use the factory method provided by the
+<code>DateTimeFormat</code> class. Thus to get a formatter for a 4 digit year,
+2 digit month and 2 digit day of month, i.e. a format of <code>yyyyMMdd</code>
+you would do
+<source>
+    DateTimeFormatter fmt = DateTimeFormat.forPattern("yyyyMMdd");
+</source>
+The pattern string is compatible with JDK date patterns.
+</p>
+<p>
+You may need to print or parse in a particular <code>Locale</code>.
+This is achieved by calling the <code>withLocale</code> method on a formatter,
+which returns another formatter based on the original.
+<source>
+    DateTimeFormatter fmt = DateTimeFormat.forPattern("yyyyMMdd");
+    DateTimeFormatter frenchFmt = fmt.withLocale(Locale.FRENCH);
+    DateTimeFormatter germanFmt = fmt.withLocale(Locale.GERMAN);
+</source>
+Formatters are immutable, so the original is not altered by the
+<code>withLocale</code> method.
+</p>
+</subsection>
+
+<subsection name="Freaky Formatters">
+<p>
+Finally, if you have a format that is not easily represented by a pattern string,
+Joda Time architecture exposes a builder class that can be used to build a custom
+formatter which is programatically defined. Thus if you wanted a formatter to
+print and parse dates of the form "22-Jan-65", you could do the following:
+<source>
+    DateTimeFormatter fmt = new DateTimeFormatterBuilder()
+            .appendDayOfMonth(2)
+            .appendLiteral('-')
+            .appendMonthOfYearShortText()
+            .appendLiteral('-')
+            .appendTwoDigitYear(1956)  // pivot = 1956
+            .toFormatter();
+</source>
+Each append method appends a new field to be parsed/printed to the
+calling builder and returns a new builder. The final <code>toFormatter</code> method
+creates the actual formatter that will be used to print/parse.
+</p>
+<p>
+What is particularly interesting about this format is the two digit year. Since
+the interpretation of a two digit year is ambiguous, the
+<code>appendTwoDigitYear</code> takes an extra parameter that defines the 100 year
+range of the two digits, by specifying the mid point of the range. In this example
+the range will be (1956 - 50) = 1906, to (1956 + 49) = 2005. Thus 04 will be 2004
+but 07 will be 1907. This kind of conversion is not possible with ordinary format
+strings, highlighting the power of the Joda time formatting architecture.
+</p>
+</subsection>
+
+<subsection name="Direct access">
+<p>
+To simplify the access to the formatter architecture, methods have been
+provided on the datetime classes such as DateTime.
+<source>
+    DateTime dt = new DateTime();
+    String a = dt.toString();
+    String b = dt.toString("dd:MM:yy");
+    String c = dt.toString("EEE", Locale.FRENCH);
+    DateTimeFormatter fmt = ...;
+    String d = dt.toString(fmt);
+</source>
+Each of the four results demonstrates a different way to use the formatters.
+Result <code>a</code> is the standard ISO8601 string for the DateTime.
+Result <code>b</code> will output using the pattern 'dd:MM:yy' (note that
+patterns are cached internally).
+Result <code>c</code> will output using the pattern 'EEE' in French.
+Result <code>d</code> will output using the specified formatter, and is thus
+the same as <code>fmt.print(dt)</code>.
+</p>
+</subsection>
+</section>
+
+<!-- ========================================================================= -->
+
+<section name="Advanced features">
+
+<subsection name="Change the Current Time">
+<p>
+Joda-Time allows you to change the current time.
+All methods that get the current time are indirected via <code>DateTimeUtils</code>.
+This allows the current time to be changed, which can be very useful for testing.
+<source>
+    // always return the same time when querying current time
+    DateTimeUtils.setCurrentMillisFixed(millis);
+    // offset the real time
+    DateTimeUtils.setCurrentMillisOffset(millis);
+</source>
+Note that changing the current time this way does not affect the system clock.
+</p>
+</subsection>
+
+<subsection name="Converters">
+<p>
+The constructors on each major concrete class in the API take an <code>Object</code>
+as a parameter.
+This is passed to the converter subsystem which is responsible for converting
+the object to one acceptable to Joda-Time.
+For example, the converters can convert a JDK <code>Date</code> object to a <code>DateTime</code>.
+If required, you can add your own converters to those supplied in Joda-Time.
+</p>
+</subsection>
+
+<subsection name="Security">
+<p>
+Joda-Time includes hooks into the standard JDK security scheme for sensitive changes.
+These include changing the time zone handler, changing the current time and changing
+the converters.
+See <code>JodaTimePermission</code> for details.
+</p>
+</subsection>
+</section>
+
+<!-- ========================================================================= -->
+
+<!--<section name="Where to Go Next">
+<p><b>list of resources</b></p>
+</section>-->
+
+</body>
+</document>

From 539d54d1b2a6c3fc1ac65d96d2f0941852d64c03 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 12:33:12 +0000
Subject: [PATCH 25/36] Start conversion to Maven 2

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1519 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/src/{ => main}/java/org/joda/time/Chronology.java        | 0
 JodaTime/src/{ => main}/java/org/joda/time/DateMidnight.java      | 0
 JodaTime/src/{ => main}/java/org/joda/time/DateTime.java          | 0
 .../src/{ => main}/java/org/joda/time/DateTimeComparator.java     | 0
 JodaTime/src/{ => main}/java/org/joda/time/DateTimeConstants.java | 0
 JodaTime/src/{ => main}/java/org/joda/time/DateTimeField.java     | 0
 JodaTime/src/{ => main}/java/org/joda/time/DateTimeFieldType.java | 0
 JodaTime/src/{ => main}/java/org/joda/time/DateTimeUtils.java     | 0
 JodaTime/src/{ => main}/java/org/joda/time/DateTimeZone.java      | 0
 JodaTime/src/{ => main}/java/org/joda/time/Days.java              | 0
 JodaTime/src/{ => main}/java/org/joda/time/Duration.java          | 0
 JodaTime/src/{ => main}/java/org/joda/time/DurationField.java     | 0
 JodaTime/src/{ => main}/java/org/joda/time/DurationFieldType.java | 0
 JodaTime/src/{ => main}/java/org/joda/time/Hours.java             | 0
 .../{ => main}/java/org/joda/time/IllegalFieldValueException.java | 0
 JodaTime/src/{ => main}/java/org/joda/time/Instant.java           | 0
 JodaTime/src/{ => main}/java/org/joda/time/Interval.java          | 0
 .../src/{ => main}/java/org/joda/time/JodaTimePermission.java     | 0
 JodaTime/src/{ => main}/java/org/joda/time/LocalDate.java         | 0
 JodaTime/src/{ => main}/java/org/joda/time/LocalDateTime.java     | 0
 JodaTime/src/{ => main}/java/org/joda/time/LocalTime.java         | 0
 JodaTime/src/{ => main}/java/org/joda/time/Minutes.java           | 0
 JodaTime/src/{ => main}/java/org/joda/time/Months.java            | 0
 JodaTime/src/{ => main}/java/org/joda/time/MutableDateTime.java   | 0
 JodaTime/src/{ => main}/java/org/joda/time/MutableInterval.java   | 0
 JodaTime/src/{ => main}/java/org/joda/time/MutablePeriod.java     | 0
 JodaTime/src/{ => main}/java/org/joda/time/Partial.java           | 0
 JodaTime/src/{ => main}/java/org/joda/time/Period.java            | 0
 JodaTime/src/{ => main}/java/org/joda/time/PeriodType.java        | 0
 .../src/{ => main}/java/org/joda/time/ReadWritableDateTime.java   | 0
 .../src/{ => main}/java/org/joda/time/ReadWritableInstant.java    | 0
 .../src/{ => main}/java/org/joda/time/ReadWritableInterval.java   | 0
 .../src/{ => main}/java/org/joda/time/ReadWritablePeriod.java     | 0
 JodaTime/src/{ => main}/java/org/joda/time/ReadableDateTime.java  | 0
 JodaTime/src/{ => main}/java/org/joda/time/ReadableDuration.java  | 0
 JodaTime/src/{ => main}/java/org/joda/time/ReadableInstant.java   | 0
 JodaTime/src/{ => main}/java/org/joda/time/ReadableInterval.java  | 0
 JodaTime/src/{ => main}/java/org/joda/time/ReadablePartial.java   | 0
 JodaTime/src/{ => main}/java/org/joda/time/ReadablePeriod.java    | 0
 JodaTime/src/{ => main}/java/org/joda/time/Seconds.java           | 0
 JodaTime/src/{ => main}/java/org/joda/time/TimeOfDay.java         | 0
 JodaTime/src/{ => main}/java/org/joda/time/Weeks.java             | 0
 JodaTime/src/{ => main}/java/org/joda/time/YearMonthDay.java      | 0
 JodaTime/src/{ => main}/java/org/joda/time/Years.java             | 0
 .../src/{ => main}/java/org/joda/time/base/AbstractDateTime.java  | 0
 .../src/{ => main}/java/org/joda/time/base/AbstractDuration.java  | 0
 .../src/{ => main}/java/org/joda/time/base/AbstractInstant.java   | 0
 .../src/{ => main}/java/org/joda/time/base/AbstractInterval.java  | 0
 .../src/{ => main}/java/org/joda/time/base/AbstractPartial.java   | 0
 .../src/{ => main}/java/org/joda/time/base/AbstractPeriod.java    | 0
 JodaTime/src/{ => main}/java/org/joda/time/base/BaseDateTime.java | 0
 JodaTime/src/{ => main}/java/org/joda/time/base/BaseDuration.java | 0
 JodaTime/src/{ => main}/java/org/joda/time/base/BaseInterval.java | 0
 JodaTime/src/{ => main}/java/org/joda/time/base/BaseLocal.java    | 0
 JodaTime/src/{ => main}/java/org/joda/time/base/BasePartial.java  | 0
 JodaTime/src/{ => main}/java/org/joda/time/base/BasePeriod.java   | 0
 .../{ => main}/java/org/joda/time/base/BaseSingleFieldPeriod.java | 0
 JodaTime/src/{ => main}/java/org/joda/time/base/package.html      | 0
 .../{ => main}/java/org/joda/time/chrono/AssembledChronology.java | 0
 .../src/{ => main}/java/org/joda/time/chrono/BaseChronology.java  | 0
 .../src/{ => main}/java/org/joda/time/chrono/BasicChronology.java | 0
 .../java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java   | 0
 .../java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java    | 0
 .../java/org/joda/time/chrono/BasicFixedMonthChronology.java      | 0
 .../{ => main}/java/org/joda/time/chrono/BasicGJChronology.java   | 0
 .../java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java  | 0
 .../java/org/joda/time/chrono/BasicSingleEraDateTimeField.java    | 0
 .../org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField.java    | 0
 .../java/org/joda/time/chrono/BasicWeekyearDateTimeField.java     | 0
 .../java/org/joda/time/chrono/BasicYearDateTimeField.java         | 0
 .../{ => main}/java/org/joda/time/chrono/BuddhistChronology.java  | 0
 .../{ => main}/java/org/joda/time/chrono/CopticChronology.java    | 0
 .../{ => main}/java/org/joda/time/chrono/EthiopicChronology.java  | 0
 .../src/{ => main}/java/org/joda/time/chrono/GJChronology.java    | 0
 .../java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java       | 0
 .../{ => main}/java/org/joda/time/chrono/GJEraDateTimeField.java  | 0
 .../src/{ => main}/java/org/joda/time/chrono/GJLocaleSymbols.java | 0
 .../java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java     | 0
 .../java/org/joda/time/chrono/GJYearOfEraDateTimeField.java       | 0
 .../{ => main}/java/org/joda/time/chrono/GregorianChronology.java | 0
 .../src/{ => main}/java/org/joda/time/chrono/ISOChronology.java   | 0
 .../java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java      | 0
 .../{ => main}/java/org/joda/time/chrono/IslamicChronology.java   | 0
 .../{ => main}/java/org/joda/time/chrono/JulianChronology.java    | 0
 .../{ => main}/java/org/joda/time/chrono/LenientChronology.java   | 0
 .../src/{ => main}/java/org/joda/time/chrono/LimitChronology.java | 0
 .../{ => main}/java/org/joda/time/chrono/StrictChronology.java    | 0
 .../src/{ => main}/java/org/joda/time/chrono/ZonedChronology.java | 0
 JodaTime/src/{ => main}/java/org/joda/time/chrono/package.html    | 0
 .../{ => main}/java/org/joda/time/convert/AbstractConverter.java  | 0
 .../{ => main}/java/org/joda/time/convert/CalendarConverter.java  | 0
 JodaTime/src/{ => main}/java/org/joda/time/convert/Converter.java | 0
 .../{ => main}/java/org/joda/time/convert/ConverterManager.java   | 0
 .../src/{ => main}/java/org/joda/time/convert/ConverterSet.java   | 0
 .../src/{ => main}/java/org/joda/time/convert/DateConverter.java  | 0
 .../{ => main}/java/org/joda/time/convert/DurationConverter.java  | 0
 .../{ => main}/java/org/joda/time/convert/InstantConverter.java   | 0
 .../{ => main}/java/org/joda/time/convert/IntervalConverter.java  | 0
 .../src/{ => main}/java/org/joda/time/convert/LongConverter.java  | 0
 .../src/{ => main}/java/org/joda/time/convert/NullConverter.java  | 0
 .../{ => main}/java/org/joda/time/convert/PartialConverter.java   | 0
 .../{ => main}/java/org/joda/time/convert/PeriodConverter.java    | 0
 .../java/org/joda/time/convert/ReadableDurationConverter.java     | 0
 .../java/org/joda/time/convert/ReadableInstantConverter.java      | 0
 .../java/org/joda/time/convert/ReadableIntervalConverter.java     | 0
 .../java/org/joda/time/convert/ReadablePartialConverter.java      | 0
 .../java/org/joda/time/convert/ReadablePeriodConverter.java       | 0
 .../{ => main}/java/org/joda/time/convert/StringConverter.java    | 0
 JodaTime/src/{ => main}/java/org/joda/time/convert/package.html   | 0
 .../java/org/joda/time/field/AbstractPartialFieldProperty.java    | 0
 .../org/joda/time/field/AbstractReadableInstantFieldProperty.java | 0
 .../{ => main}/java/org/joda/time/field/BaseDateTimeField.java    | 0
 .../{ => main}/java/org/joda/time/field/BaseDurationField.java    | 0
 .../java/org/joda/time/field/DecoratedDateTimeField.java          | 0
 .../java/org/joda/time/field/DecoratedDurationField.java          | 0
 .../java/org/joda/time/field/DelegatedDateTimeField.java          | 0
 .../java/org/joda/time/field/DelegatedDurationField.java          | 0
 .../{ => main}/java/org/joda/time/field/DividedDateTimeField.java | 0
 JodaTime/src/{ => main}/java/org/joda/time/field/FieldUtils.java  | 0
 .../java/org/joda/time/field/ImpreciseDateTimeField.java          | 0
 .../{ => main}/java/org/joda/time/field/LenientDateTimeField.java | 0
 .../{ => main}/java/org/joda/time/field/MillisDurationField.java  | 0
 .../{ => main}/java/org/joda/time/field/OffsetDateTimeField.java  | 0
 .../{ => main}/java/org/joda/time/field/PreciseDateTimeField.java | 0
 .../java/org/joda/time/field/PreciseDurationDateTimeField.java    | 0
 .../{ => main}/java/org/joda/time/field/PreciseDurationField.java | 0
 .../java/org/joda/time/field/RemainderDateTimeField.java          | 0
 .../{ => main}/java/org/joda/time/field/ScaledDurationField.java  | 0
 .../{ => main}/java/org/joda/time/field/SkipDateTimeField.java    | 0
 .../java/org/joda/time/field/SkipUndoDateTimeField.java           | 0
 .../{ => main}/java/org/joda/time/field/StrictDateTimeField.java  | 0
 .../java/org/joda/time/field/UnsupportedDateTimeField.java        | 0
 .../java/org/joda/time/field/UnsupportedDurationField.java        | 0
 .../java/org/joda/time/field/ZeroIsMaxDateTimeField.java          | 0
 JodaTime/src/{ => main}/java/org/joda/time/field/package.html     | 0
 .../src/{ => main}/java/org/joda/time/format/DateTimeFormat.java  | 0
 .../{ => main}/java/org/joda/time/format/DateTimeFormatter.java   | 0
 .../java/org/joda/time/format/DateTimeFormatterBuilder.java       | 0
 .../src/{ => main}/java/org/joda/time/format/DateTimeParser.java  | 0
 .../java/org/joda/time/format/DateTimeParserBucket.java           | 0
 .../src/{ => main}/java/org/joda/time/format/DateTimePrinter.java | 0
 .../src/{ => main}/java/org/joda/time/format/FormatUtils.java     | 0
 .../{ => main}/java/org/joda/time/format/ISODateTimeFormat.java   | 0
 .../src/{ => main}/java/org/joda/time/format/ISOPeriodFormat.java | 0
 .../src/{ => main}/java/org/joda/time/format/PeriodFormat.java    | 0
 .../src/{ => main}/java/org/joda/time/format/PeriodFormatter.java | 0
 .../java/org/joda/time/format/PeriodFormatterBuilder.java         | 0
 .../src/{ => main}/java/org/joda/time/format/PeriodParser.java    | 0
 .../src/{ => main}/java/org/joda/time/format/PeriodPrinter.java   | 0
 JodaTime/src/{ => main}/java/org/joda/time/format/package.html    | 0
 JodaTime/src/{ => main}/java/org/joda/time/overview.html          | 0
 JodaTime/src/{ => main}/java/org/joda/time/package.html           | 0
 .../src/{ => main}/java/org/joda/time/tz/CachedDateTimeZone.java  | 0
 .../src/{ => main}/java/org/joda/time/tz/DateTimeZoneBuilder.java | 0
 .../src/{ => main}/java/org/joda/time/tz/DefaultNameProvider.java | 0
 .../src/{ => main}/java/org/joda/time/tz/FixedDateTimeZone.java   | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/NameProvider.java   | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/Provider.java       | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/UTCProvider.java    | 0
 .../src/{ => main}/java/org/joda/time/tz/ZoneInfoCompiler.java    | 0
 .../src/{ => main}/java/org/joda/time/tz/ZoneInfoProvider.java    | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/package.html        | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/src/Readme.txt      | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/src/africa          | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/src/antarctica      | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/src/asia            | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/src/australasia     | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/src/backward        | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/src/etcetera        | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/src/europe          | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/src/northamerica    | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/src/pacificnew      | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/src/southamerica    | 0
 JodaTime/src/{ => main}/java/org/joda/time/tz/src/systemv         | 0
 174 files changed, 0 insertions(+), 0 deletions(-)
 rename JodaTime/src/{ => main}/java/org/joda/time/Chronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/DateMidnight.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/DateTime.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/DateTimeComparator.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/DateTimeConstants.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/DateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/DateTimeFieldType.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/DateTimeUtils.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/DateTimeZone.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/Days.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/Duration.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/DurationField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/DurationFieldType.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/Hours.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/IllegalFieldValueException.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/Instant.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/Interval.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/JodaTimePermission.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/LocalDate.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/LocalDateTime.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/LocalTime.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/Minutes.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/Months.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/MutableDateTime.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/MutableInterval.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/MutablePeriod.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/Partial.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/Period.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/PeriodType.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/ReadWritableDateTime.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/ReadWritableInstant.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/ReadWritableInterval.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/ReadWritablePeriod.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/ReadableDateTime.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/ReadableDuration.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/ReadableInstant.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/ReadableInterval.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/ReadablePartial.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/ReadablePeriod.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/Seconds.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/TimeOfDay.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/Weeks.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/YearMonthDay.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/Years.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/AbstractDateTime.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/AbstractDuration.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/AbstractInstant.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/AbstractInterval.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/AbstractPartial.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/AbstractPeriod.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/BaseDateTime.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/BaseDuration.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/BaseInterval.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/BaseLocal.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/BasePartial.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/BasePeriod.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/BaseSingleFieldPeriod.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/base/package.html (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/AssembledChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/BaseChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/BasicChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/BasicFixedMonthChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/BasicGJChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/BasicYearDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/BuddhistChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/CopticChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/EthiopicChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/GJChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/GJEraDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/GJLocaleSymbols.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/GregorianChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/ISOChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/IslamicChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/JulianChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/LenientChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/LimitChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/StrictChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/ZonedChronology.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/chrono/package.html (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/AbstractConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/CalendarConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/Converter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/ConverterManager.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/ConverterSet.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/DateConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/DurationConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/InstantConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/IntervalConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/LongConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/NullConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/PartialConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/PeriodConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/ReadableDurationConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/ReadableInstantConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/ReadableIntervalConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/ReadablePartialConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/ReadablePeriodConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/StringConverter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/convert/package.html (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/AbstractPartialFieldProperty.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/BaseDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/BaseDurationField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/DecoratedDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/DecoratedDurationField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/DelegatedDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/DelegatedDurationField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/DividedDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/FieldUtils.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/ImpreciseDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/LenientDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/MillisDurationField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/OffsetDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/PreciseDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/PreciseDurationDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/PreciseDurationField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/RemainderDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/ScaledDurationField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/SkipDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/SkipUndoDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/StrictDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/UnsupportedDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/UnsupportedDurationField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/ZeroIsMaxDateTimeField.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/field/package.html (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/DateTimeFormat.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/DateTimeFormatter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/DateTimeFormatterBuilder.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/DateTimeParser.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/DateTimeParserBucket.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/DateTimePrinter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/FormatUtils.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/ISODateTimeFormat.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/ISOPeriodFormat.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/PeriodFormat.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/PeriodFormatter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/PeriodFormatterBuilder.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/PeriodParser.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/PeriodPrinter.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/format/package.html (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/overview.html (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/package.html (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/CachedDateTimeZone.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/DateTimeZoneBuilder.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/DefaultNameProvider.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/FixedDateTimeZone.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/NameProvider.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/Provider.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/UTCProvider.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/ZoneInfoCompiler.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/ZoneInfoProvider.java (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/package.html (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/src/Readme.txt (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/src/africa (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/src/antarctica (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/src/asia (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/src/australasia (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/src/backward (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/src/etcetera (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/src/europe (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/src/northamerica (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/src/pacificnew (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/src/southamerica (100%)
 rename JodaTime/src/{ => main}/java/org/joda/time/tz/src/systemv (100%)

diff --git a/JodaTime/src/java/org/joda/time/Chronology.java b/JodaTime/src/main/java/org/joda/time/Chronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Chronology.java
rename to JodaTime/src/main/java/org/joda/time/Chronology.java
diff --git a/JodaTime/src/java/org/joda/time/DateMidnight.java b/JodaTime/src/main/java/org/joda/time/DateMidnight.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/DateMidnight.java
rename to JodaTime/src/main/java/org/joda/time/DateMidnight.java
diff --git a/JodaTime/src/java/org/joda/time/DateTime.java b/JodaTime/src/main/java/org/joda/time/DateTime.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/DateTime.java
rename to JodaTime/src/main/java/org/joda/time/DateTime.java
diff --git a/JodaTime/src/java/org/joda/time/DateTimeComparator.java b/JodaTime/src/main/java/org/joda/time/DateTimeComparator.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/DateTimeComparator.java
rename to JodaTime/src/main/java/org/joda/time/DateTimeComparator.java
diff --git a/JodaTime/src/java/org/joda/time/DateTimeConstants.java b/JodaTime/src/main/java/org/joda/time/DateTimeConstants.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/DateTimeConstants.java
rename to JodaTime/src/main/java/org/joda/time/DateTimeConstants.java
diff --git a/JodaTime/src/java/org/joda/time/DateTimeField.java b/JodaTime/src/main/java/org/joda/time/DateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/DateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/DateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/DateTimeFieldType.java b/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/DateTimeFieldType.java
rename to JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java
diff --git a/JodaTime/src/java/org/joda/time/DateTimeUtils.java b/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/DateTimeUtils.java
rename to JodaTime/src/main/java/org/joda/time/DateTimeUtils.java
diff --git a/JodaTime/src/java/org/joda/time/DateTimeZone.java b/JodaTime/src/main/java/org/joda/time/DateTimeZone.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/DateTimeZone.java
rename to JodaTime/src/main/java/org/joda/time/DateTimeZone.java
diff --git a/JodaTime/src/java/org/joda/time/Days.java b/JodaTime/src/main/java/org/joda/time/Days.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Days.java
rename to JodaTime/src/main/java/org/joda/time/Days.java
diff --git a/JodaTime/src/java/org/joda/time/Duration.java b/JodaTime/src/main/java/org/joda/time/Duration.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Duration.java
rename to JodaTime/src/main/java/org/joda/time/Duration.java
diff --git a/JodaTime/src/java/org/joda/time/DurationField.java b/JodaTime/src/main/java/org/joda/time/DurationField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/DurationField.java
rename to JodaTime/src/main/java/org/joda/time/DurationField.java
diff --git a/JodaTime/src/java/org/joda/time/DurationFieldType.java b/JodaTime/src/main/java/org/joda/time/DurationFieldType.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/DurationFieldType.java
rename to JodaTime/src/main/java/org/joda/time/DurationFieldType.java
diff --git a/JodaTime/src/java/org/joda/time/Hours.java b/JodaTime/src/main/java/org/joda/time/Hours.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Hours.java
rename to JodaTime/src/main/java/org/joda/time/Hours.java
diff --git a/JodaTime/src/java/org/joda/time/IllegalFieldValueException.java b/JodaTime/src/main/java/org/joda/time/IllegalFieldValueException.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/IllegalFieldValueException.java
rename to JodaTime/src/main/java/org/joda/time/IllegalFieldValueException.java
diff --git a/JodaTime/src/java/org/joda/time/Instant.java b/JodaTime/src/main/java/org/joda/time/Instant.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Instant.java
rename to JodaTime/src/main/java/org/joda/time/Instant.java
diff --git a/JodaTime/src/java/org/joda/time/Interval.java b/JodaTime/src/main/java/org/joda/time/Interval.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Interval.java
rename to JodaTime/src/main/java/org/joda/time/Interval.java
diff --git a/JodaTime/src/java/org/joda/time/JodaTimePermission.java b/JodaTime/src/main/java/org/joda/time/JodaTimePermission.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/JodaTimePermission.java
rename to JodaTime/src/main/java/org/joda/time/JodaTimePermission.java
diff --git a/JodaTime/src/java/org/joda/time/LocalDate.java b/JodaTime/src/main/java/org/joda/time/LocalDate.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/LocalDate.java
rename to JodaTime/src/main/java/org/joda/time/LocalDate.java
diff --git a/JodaTime/src/java/org/joda/time/LocalDateTime.java b/JodaTime/src/main/java/org/joda/time/LocalDateTime.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/LocalDateTime.java
rename to JodaTime/src/main/java/org/joda/time/LocalDateTime.java
diff --git a/JodaTime/src/java/org/joda/time/LocalTime.java b/JodaTime/src/main/java/org/joda/time/LocalTime.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/LocalTime.java
rename to JodaTime/src/main/java/org/joda/time/LocalTime.java
diff --git a/JodaTime/src/java/org/joda/time/Minutes.java b/JodaTime/src/main/java/org/joda/time/Minutes.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Minutes.java
rename to JodaTime/src/main/java/org/joda/time/Minutes.java
diff --git a/JodaTime/src/java/org/joda/time/Months.java b/JodaTime/src/main/java/org/joda/time/Months.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Months.java
rename to JodaTime/src/main/java/org/joda/time/Months.java
diff --git a/JodaTime/src/java/org/joda/time/MutableDateTime.java b/JodaTime/src/main/java/org/joda/time/MutableDateTime.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/MutableDateTime.java
rename to JodaTime/src/main/java/org/joda/time/MutableDateTime.java
diff --git a/JodaTime/src/java/org/joda/time/MutableInterval.java b/JodaTime/src/main/java/org/joda/time/MutableInterval.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/MutableInterval.java
rename to JodaTime/src/main/java/org/joda/time/MutableInterval.java
diff --git a/JodaTime/src/java/org/joda/time/MutablePeriod.java b/JodaTime/src/main/java/org/joda/time/MutablePeriod.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/MutablePeriod.java
rename to JodaTime/src/main/java/org/joda/time/MutablePeriod.java
diff --git a/JodaTime/src/java/org/joda/time/Partial.java b/JodaTime/src/main/java/org/joda/time/Partial.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Partial.java
rename to JodaTime/src/main/java/org/joda/time/Partial.java
diff --git a/JodaTime/src/java/org/joda/time/Period.java b/JodaTime/src/main/java/org/joda/time/Period.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Period.java
rename to JodaTime/src/main/java/org/joda/time/Period.java
diff --git a/JodaTime/src/java/org/joda/time/PeriodType.java b/JodaTime/src/main/java/org/joda/time/PeriodType.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/PeriodType.java
rename to JodaTime/src/main/java/org/joda/time/PeriodType.java
diff --git a/JodaTime/src/java/org/joda/time/ReadWritableDateTime.java b/JodaTime/src/main/java/org/joda/time/ReadWritableDateTime.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/ReadWritableDateTime.java
rename to JodaTime/src/main/java/org/joda/time/ReadWritableDateTime.java
diff --git a/JodaTime/src/java/org/joda/time/ReadWritableInstant.java b/JodaTime/src/main/java/org/joda/time/ReadWritableInstant.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/ReadWritableInstant.java
rename to JodaTime/src/main/java/org/joda/time/ReadWritableInstant.java
diff --git a/JodaTime/src/java/org/joda/time/ReadWritableInterval.java b/JodaTime/src/main/java/org/joda/time/ReadWritableInterval.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/ReadWritableInterval.java
rename to JodaTime/src/main/java/org/joda/time/ReadWritableInterval.java
diff --git a/JodaTime/src/java/org/joda/time/ReadWritablePeriod.java b/JodaTime/src/main/java/org/joda/time/ReadWritablePeriod.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/ReadWritablePeriod.java
rename to JodaTime/src/main/java/org/joda/time/ReadWritablePeriod.java
diff --git a/JodaTime/src/java/org/joda/time/ReadableDateTime.java b/JodaTime/src/main/java/org/joda/time/ReadableDateTime.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/ReadableDateTime.java
rename to JodaTime/src/main/java/org/joda/time/ReadableDateTime.java
diff --git a/JodaTime/src/java/org/joda/time/ReadableDuration.java b/JodaTime/src/main/java/org/joda/time/ReadableDuration.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/ReadableDuration.java
rename to JodaTime/src/main/java/org/joda/time/ReadableDuration.java
diff --git a/JodaTime/src/java/org/joda/time/ReadableInstant.java b/JodaTime/src/main/java/org/joda/time/ReadableInstant.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/ReadableInstant.java
rename to JodaTime/src/main/java/org/joda/time/ReadableInstant.java
diff --git a/JodaTime/src/java/org/joda/time/ReadableInterval.java b/JodaTime/src/main/java/org/joda/time/ReadableInterval.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/ReadableInterval.java
rename to JodaTime/src/main/java/org/joda/time/ReadableInterval.java
diff --git a/JodaTime/src/java/org/joda/time/ReadablePartial.java b/JodaTime/src/main/java/org/joda/time/ReadablePartial.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/ReadablePartial.java
rename to JodaTime/src/main/java/org/joda/time/ReadablePartial.java
diff --git a/JodaTime/src/java/org/joda/time/ReadablePeriod.java b/JodaTime/src/main/java/org/joda/time/ReadablePeriod.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/ReadablePeriod.java
rename to JodaTime/src/main/java/org/joda/time/ReadablePeriod.java
diff --git a/JodaTime/src/java/org/joda/time/Seconds.java b/JodaTime/src/main/java/org/joda/time/Seconds.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Seconds.java
rename to JodaTime/src/main/java/org/joda/time/Seconds.java
diff --git a/JodaTime/src/java/org/joda/time/TimeOfDay.java b/JodaTime/src/main/java/org/joda/time/TimeOfDay.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/TimeOfDay.java
rename to JodaTime/src/main/java/org/joda/time/TimeOfDay.java
diff --git a/JodaTime/src/java/org/joda/time/Weeks.java b/JodaTime/src/main/java/org/joda/time/Weeks.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Weeks.java
rename to JodaTime/src/main/java/org/joda/time/Weeks.java
diff --git a/JodaTime/src/java/org/joda/time/YearMonthDay.java b/JodaTime/src/main/java/org/joda/time/YearMonthDay.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/YearMonthDay.java
rename to JodaTime/src/main/java/org/joda/time/YearMonthDay.java
diff --git a/JodaTime/src/java/org/joda/time/Years.java b/JodaTime/src/main/java/org/joda/time/Years.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/Years.java
rename to JodaTime/src/main/java/org/joda/time/Years.java
diff --git a/JodaTime/src/java/org/joda/time/base/AbstractDateTime.java b/JodaTime/src/main/java/org/joda/time/base/AbstractDateTime.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/AbstractDateTime.java
rename to JodaTime/src/main/java/org/joda/time/base/AbstractDateTime.java
diff --git a/JodaTime/src/java/org/joda/time/base/AbstractDuration.java b/JodaTime/src/main/java/org/joda/time/base/AbstractDuration.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/AbstractDuration.java
rename to JodaTime/src/main/java/org/joda/time/base/AbstractDuration.java
diff --git a/JodaTime/src/java/org/joda/time/base/AbstractInstant.java b/JodaTime/src/main/java/org/joda/time/base/AbstractInstant.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/AbstractInstant.java
rename to JodaTime/src/main/java/org/joda/time/base/AbstractInstant.java
diff --git a/JodaTime/src/java/org/joda/time/base/AbstractInterval.java b/JodaTime/src/main/java/org/joda/time/base/AbstractInterval.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/AbstractInterval.java
rename to JodaTime/src/main/java/org/joda/time/base/AbstractInterval.java
diff --git a/JodaTime/src/java/org/joda/time/base/AbstractPartial.java b/JodaTime/src/main/java/org/joda/time/base/AbstractPartial.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/AbstractPartial.java
rename to JodaTime/src/main/java/org/joda/time/base/AbstractPartial.java
diff --git a/JodaTime/src/java/org/joda/time/base/AbstractPeriod.java b/JodaTime/src/main/java/org/joda/time/base/AbstractPeriod.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/AbstractPeriod.java
rename to JodaTime/src/main/java/org/joda/time/base/AbstractPeriod.java
diff --git a/JodaTime/src/java/org/joda/time/base/BaseDateTime.java b/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/BaseDateTime.java
rename to JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java
diff --git a/JodaTime/src/java/org/joda/time/base/BaseDuration.java b/JodaTime/src/main/java/org/joda/time/base/BaseDuration.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/BaseDuration.java
rename to JodaTime/src/main/java/org/joda/time/base/BaseDuration.java
diff --git a/JodaTime/src/java/org/joda/time/base/BaseInterval.java b/JodaTime/src/main/java/org/joda/time/base/BaseInterval.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/BaseInterval.java
rename to JodaTime/src/main/java/org/joda/time/base/BaseInterval.java
diff --git a/JodaTime/src/java/org/joda/time/base/BaseLocal.java b/JodaTime/src/main/java/org/joda/time/base/BaseLocal.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/BaseLocal.java
rename to JodaTime/src/main/java/org/joda/time/base/BaseLocal.java
diff --git a/JodaTime/src/java/org/joda/time/base/BasePartial.java b/JodaTime/src/main/java/org/joda/time/base/BasePartial.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/BasePartial.java
rename to JodaTime/src/main/java/org/joda/time/base/BasePartial.java
diff --git a/JodaTime/src/java/org/joda/time/base/BasePeriod.java b/JodaTime/src/main/java/org/joda/time/base/BasePeriod.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/BasePeriod.java
rename to JodaTime/src/main/java/org/joda/time/base/BasePeriod.java
diff --git a/JodaTime/src/java/org/joda/time/base/BaseSingleFieldPeriod.java b/JodaTime/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/BaseSingleFieldPeriod.java
rename to JodaTime/src/main/java/org/joda/time/base/BaseSingleFieldPeriod.java
diff --git a/JodaTime/src/java/org/joda/time/base/package.html b/JodaTime/src/main/java/org/joda/time/base/package.html
similarity index 100%
rename from JodaTime/src/java/org/joda/time/base/package.html
rename to JodaTime/src/main/java/org/joda/time/base/package.html
diff --git a/JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/BaseChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/BaseChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/BaseChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/BaseChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/BasicChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/BasicChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java b/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java b/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/BasicFixedMonthChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/BasicFixedMonthChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/BasicFixedMonthChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/BasicFixedMonthChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/BasicGJChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java b/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java b/JodaTime/src/main/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField.java b/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java b/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/BasicYearDateTimeField.java b/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/BasicYearDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/CopticChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/CopticChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/CopticChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/CopticChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/EthiopicChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/EthiopicChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/EthiopicChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/EthiopicChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/GJChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/GJChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java b/JodaTime/src/main/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/GJEraDateTimeField.java b/JodaTime/src/main/java/org/joda/time/chrono/GJEraDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/GJEraDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/chrono/GJEraDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java b/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java
rename to JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java b/JodaTime/src/main/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java b/JodaTime/src/main/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/GregorianChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/ISOChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/ISOChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java b/JodaTime/src/main/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/IslamicChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/IslamicChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/IslamicChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/IslamicChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/JulianChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/JulianChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/LenientChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/LenientChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/LenientChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/LenientChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/LimitChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/LimitChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/StrictChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/StrictChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/StrictChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/StrictChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java b/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java
rename to JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java
diff --git a/JodaTime/src/java/org/joda/time/chrono/package.html b/JodaTime/src/main/java/org/joda/time/chrono/package.html
similarity index 100%
rename from JodaTime/src/java/org/joda/time/chrono/package.html
rename to JodaTime/src/main/java/org/joda/time/chrono/package.html
diff --git a/JodaTime/src/java/org/joda/time/convert/AbstractConverter.java b/JodaTime/src/main/java/org/joda/time/convert/AbstractConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/AbstractConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/AbstractConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/CalendarConverter.java b/JodaTime/src/main/java/org/joda/time/convert/CalendarConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/CalendarConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/CalendarConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/Converter.java b/JodaTime/src/main/java/org/joda/time/convert/Converter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/Converter.java
rename to JodaTime/src/main/java/org/joda/time/convert/Converter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/ConverterManager.java b/JodaTime/src/main/java/org/joda/time/convert/ConverterManager.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/ConverterManager.java
rename to JodaTime/src/main/java/org/joda/time/convert/ConverterManager.java
diff --git a/JodaTime/src/java/org/joda/time/convert/ConverterSet.java b/JodaTime/src/main/java/org/joda/time/convert/ConverterSet.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/ConverterSet.java
rename to JodaTime/src/main/java/org/joda/time/convert/ConverterSet.java
diff --git a/JodaTime/src/java/org/joda/time/convert/DateConverter.java b/JodaTime/src/main/java/org/joda/time/convert/DateConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/DateConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/DateConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/DurationConverter.java b/JodaTime/src/main/java/org/joda/time/convert/DurationConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/DurationConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/DurationConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/InstantConverter.java b/JodaTime/src/main/java/org/joda/time/convert/InstantConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/InstantConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/InstantConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/IntervalConverter.java b/JodaTime/src/main/java/org/joda/time/convert/IntervalConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/IntervalConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/IntervalConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/LongConverter.java b/JodaTime/src/main/java/org/joda/time/convert/LongConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/LongConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/LongConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/NullConverter.java b/JodaTime/src/main/java/org/joda/time/convert/NullConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/NullConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/NullConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/PartialConverter.java b/JodaTime/src/main/java/org/joda/time/convert/PartialConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/PartialConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/PartialConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/PeriodConverter.java b/JodaTime/src/main/java/org/joda/time/convert/PeriodConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/PeriodConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/PeriodConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java b/JodaTime/src/main/java/org/joda/time/convert/ReadableDurationConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/ReadableDurationConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/ReadableDurationConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/ReadableInstantConverter.java b/JodaTime/src/main/java/org/joda/time/convert/ReadableInstantConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/ReadableInstantConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/ReadableInstantConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/ReadableIntervalConverter.java b/JodaTime/src/main/java/org/joda/time/convert/ReadableIntervalConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/ReadableIntervalConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/ReadableIntervalConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java b/JodaTime/src/main/java/org/joda/time/convert/ReadablePartialConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/ReadablePartialConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/ReadablePartialConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/ReadablePeriodConverter.java b/JodaTime/src/main/java/org/joda/time/convert/ReadablePeriodConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/ReadablePeriodConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/ReadablePeriodConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/StringConverter.java b/JodaTime/src/main/java/org/joda/time/convert/StringConverter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/StringConverter.java
rename to JodaTime/src/main/java/org/joda/time/convert/StringConverter.java
diff --git a/JodaTime/src/java/org/joda/time/convert/package.html b/JodaTime/src/main/java/org/joda/time/convert/package.html
similarity index 100%
rename from JodaTime/src/java/org/joda/time/convert/package.html
rename to JodaTime/src/main/java/org/joda/time/convert/package.html
diff --git a/JodaTime/src/java/org/joda/time/field/AbstractPartialFieldProperty.java b/JodaTime/src/main/java/org/joda/time/field/AbstractPartialFieldProperty.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/AbstractPartialFieldProperty.java
rename to JodaTime/src/main/java/org/joda/time/field/AbstractPartialFieldProperty.java
diff --git a/JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java b/JodaTime/src/main/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java
rename to JodaTime/src/main/java/org/joda/time/field/AbstractReadableInstantFieldProperty.java
diff --git a/JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/BaseDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/BaseDurationField.java b/JodaTime/src/main/java/org/joda/time/field/BaseDurationField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/BaseDurationField.java
rename to JodaTime/src/main/java/org/joda/time/field/BaseDurationField.java
diff --git a/JodaTime/src/java/org/joda/time/field/DecoratedDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/DecoratedDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/DecoratedDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/DecoratedDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java b/JodaTime/src/main/java/org/joda/time/field/DecoratedDurationField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/DecoratedDurationField.java
rename to JodaTime/src/main/java/org/joda/time/field/DecoratedDurationField.java
diff --git a/JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/DelegatedDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java b/JodaTime/src/main/java/org/joda/time/field/DelegatedDurationField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/DelegatedDurationField.java
rename to JodaTime/src/main/java/org/joda/time/field/DelegatedDurationField.java
diff --git a/JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/DividedDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/FieldUtils.java b/JodaTime/src/main/java/org/joda/time/field/FieldUtils.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/FieldUtils.java
rename to JodaTime/src/main/java/org/joda/time/field/FieldUtils.java
diff --git a/JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/ImpreciseDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/ImpreciseDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/ImpreciseDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/LenientDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/LenientDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/LenientDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/LenientDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/MillisDurationField.java b/JodaTime/src/main/java/org/joda/time/field/MillisDurationField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/MillisDurationField.java
rename to JodaTime/src/main/java/org/joda/time/field/MillisDurationField.java
diff --git a/JodaTime/src/java/org/joda/time/field/OffsetDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/OffsetDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/PreciseDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/PreciseDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/PreciseDurationDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/PreciseDurationDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/PreciseDurationField.java b/JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/PreciseDurationField.java
rename to JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java
diff --git a/JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/RemainderDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/ScaledDurationField.java b/JodaTime/src/main/java/org/joda/time/field/ScaledDurationField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/ScaledDurationField.java
rename to JodaTime/src/main/java/org/joda/time/field/ScaledDurationField.java
diff --git a/JodaTime/src/java/org/joda/time/field/SkipDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/SkipDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/SkipUndoDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/SkipUndoDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/StrictDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/StrictDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/StrictDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/StrictDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/UnsupportedDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/UnsupportedDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/UnsupportedDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java b/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/UnsupportedDurationField.java
rename to JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java
diff --git a/JodaTime/src/java/org/joda/time/field/ZeroIsMaxDateTimeField.java b/JodaTime/src/main/java/org/joda/time/field/ZeroIsMaxDateTimeField.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/ZeroIsMaxDateTimeField.java
rename to JodaTime/src/main/java/org/joda/time/field/ZeroIsMaxDateTimeField.java
diff --git a/JodaTime/src/java/org/joda/time/field/package.html b/JodaTime/src/main/java/org/joda/time/field/package.html
similarity index 100%
rename from JodaTime/src/java/org/joda/time/field/package.html
rename to JodaTime/src/main/java/org/joda/time/field/package.html
diff --git a/JodaTime/src/java/org/joda/time/format/DateTimeFormat.java b/JodaTime/src/main/java/org/joda/time/format/DateTimeFormat.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/DateTimeFormat.java
rename to JodaTime/src/main/java/org/joda/time/format/DateTimeFormat.java
diff --git a/JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java b/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/DateTimeFormatter.java
rename to JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java
diff --git a/JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java b/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java
rename to JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java
diff --git a/JodaTime/src/java/org/joda/time/format/DateTimeParser.java b/JodaTime/src/main/java/org/joda/time/format/DateTimeParser.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/DateTimeParser.java
rename to JodaTime/src/main/java/org/joda/time/format/DateTimeParser.java
diff --git a/JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java b/JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/DateTimeParserBucket.java
rename to JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java
diff --git a/JodaTime/src/java/org/joda/time/format/DateTimePrinter.java b/JodaTime/src/main/java/org/joda/time/format/DateTimePrinter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/DateTimePrinter.java
rename to JodaTime/src/main/java/org/joda/time/format/DateTimePrinter.java
diff --git a/JodaTime/src/java/org/joda/time/format/FormatUtils.java b/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/FormatUtils.java
rename to JodaTime/src/main/java/org/joda/time/format/FormatUtils.java
diff --git a/JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java b/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/ISODateTimeFormat.java
rename to JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java
diff --git a/JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java b/JodaTime/src/main/java/org/joda/time/format/ISOPeriodFormat.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/ISOPeriodFormat.java
rename to JodaTime/src/main/java/org/joda/time/format/ISOPeriodFormat.java
diff --git a/JodaTime/src/java/org/joda/time/format/PeriodFormat.java b/JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/PeriodFormat.java
rename to JodaTime/src/main/java/org/joda/time/format/PeriodFormat.java
diff --git a/JodaTime/src/java/org/joda/time/format/PeriodFormatter.java b/JodaTime/src/main/java/org/joda/time/format/PeriodFormatter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/PeriodFormatter.java
rename to JodaTime/src/main/java/org/joda/time/format/PeriodFormatter.java
diff --git a/JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java b/JodaTime/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/PeriodFormatterBuilder.java
rename to JodaTime/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
diff --git a/JodaTime/src/java/org/joda/time/format/PeriodParser.java b/JodaTime/src/main/java/org/joda/time/format/PeriodParser.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/PeriodParser.java
rename to JodaTime/src/main/java/org/joda/time/format/PeriodParser.java
diff --git a/JodaTime/src/java/org/joda/time/format/PeriodPrinter.java b/JodaTime/src/main/java/org/joda/time/format/PeriodPrinter.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/PeriodPrinter.java
rename to JodaTime/src/main/java/org/joda/time/format/PeriodPrinter.java
diff --git a/JodaTime/src/java/org/joda/time/format/package.html b/JodaTime/src/main/java/org/joda/time/format/package.html
similarity index 100%
rename from JodaTime/src/java/org/joda/time/format/package.html
rename to JodaTime/src/main/java/org/joda/time/format/package.html
diff --git a/JodaTime/src/java/org/joda/time/overview.html b/JodaTime/src/main/java/org/joda/time/overview.html
similarity index 100%
rename from JodaTime/src/java/org/joda/time/overview.html
rename to JodaTime/src/main/java/org/joda/time/overview.html
diff --git a/JodaTime/src/java/org/joda/time/package.html b/JodaTime/src/main/java/org/joda/time/package.html
similarity index 100%
rename from JodaTime/src/java/org/joda/time/package.html
rename to JodaTime/src/main/java/org/joda/time/package.html
diff --git a/JodaTime/src/java/org/joda/time/tz/CachedDateTimeZone.java b/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/CachedDateTimeZone.java
rename to JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java
diff --git a/JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java b/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/DateTimeZoneBuilder.java
rename to JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java
diff --git a/JodaTime/src/java/org/joda/time/tz/DefaultNameProvider.java b/JodaTime/src/main/java/org/joda/time/tz/DefaultNameProvider.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/DefaultNameProvider.java
rename to JodaTime/src/main/java/org/joda/time/tz/DefaultNameProvider.java
diff --git a/JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java b/JodaTime/src/main/java/org/joda/time/tz/FixedDateTimeZone.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/FixedDateTimeZone.java
rename to JodaTime/src/main/java/org/joda/time/tz/FixedDateTimeZone.java
diff --git a/JodaTime/src/java/org/joda/time/tz/NameProvider.java b/JodaTime/src/main/java/org/joda/time/tz/NameProvider.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/NameProvider.java
rename to JodaTime/src/main/java/org/joda/time/tz/NameProvider.java
diff --git a/JodaTime/src/java/org/joda/time/tz/Provider.java b/JodaTime/src/main/java/org/joda/time/tz/Provider.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/Provider.java
rename to JodaTime/src/main/java/org/joda/time/tz/Provider.java
diff --git a/JodaTime/src/java/org/joda/time/tz/UTCProvider.java b/JodaTime/src/main/java/org/joda/time/tz/UTCProvider.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/UTCProvider.java
rename to JodaTime/src/main/java/org/joda/time/tz/UTCProvider.java
diff --git a/JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java b/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/ZoneInfoCompiler.java
rename to JodaTime/src/main/java/org/joda/time/tz/ZoneInfoCompiler.java
diff --git a/JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java b/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/ZoneInfoProvider.java
rename to JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java
diff --git a/JodaTime/src/java/org/joda/time/tz/package.html b/JodaTime/src/main/java/org/joda/time/tz/package.html
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/package.html
rename to JodaTime/src/main/java/org/joda/time/tz/package.html
diff --git a/JodaTime/src/java/org/joda/time/tz/src/Readme.txt b/JodaTime/src/main/java/org/joda/time/tz/src/Readme.txt
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/src/Readme.txt
rename to JodaTime/src/main/java/org/joda/time/tz/src/Readme.txt
diff --git a/JodaTime/src/java/org/joda/time/tz/src/africa b/JodaTime/src/main/java/org/joda/time/tz/src/africa
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/src/africa
rename to JodaTime/src/main/java/org/joda/time/tz/src/africa
diff --git a/JodaTime/src/java/org/joda/time/tz/src/antarctica b/JodaTime/src/main/java/org/joda/time/tz/src/antarctica
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/src/antarctica
rename to JodaTime/src/main/java/org/joda/time/tz/src/antarctica
diff --git a/JodaTime/src/java/org/joda/time/tz/src/asia b/JodaTime/src/main/java/org/joda/time/tz/src/asia
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/src/asia
rename to JodaTime/src/main/java/org/joda/time/tz/src/asia
diff --git a/JodaTime/src/java/org/joda/time/tz/src/australasia b/JodaTime/src/main/java/org/joda/time/tz/src/australasia
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/src/australasia
rename to JodaTime/src/main/java/org/joda/time/tz/src/australasia
diff --git a/JodaTime/src/java/org/joda/time/tz/src/backward b/JodaTime/src/main/java/org/joda/time/tz/src/backward
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/src/backward
rename to JodaTime/src/main/java/org/joda/time/tz/src/backward
diff --git a/JodaTime/src/java/org/joda/time/tz/src/etcetera b/JodaTime/src/main/java/org/joda/time/tz/src/etcetera
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/src/etcetera
rename to JodaTime/src/main/java/org/joda/time/tz/src/etcetera
diff --git a/JodaTime/src/java/org/joda/time/tz/src/europe b/JodaTime/src/main/java/org/joda/time/tz/src/europe
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/src/europe
rename to JodaTime/src/main/java/org/joda/time/tz/src/europe
diff --git a/JodaTime/src/java/org/joda/time/tz/src/northamerica b/JodaTime/src/main/java/org/joda/time/tz/src/northamerica
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/src/northamerica
rename to JodaTime/src/main/java/org/joda/time/tz/src/northamerica
diff --git a/JodaTime/src/java/org/joda/time/tz/src/pacificnew b/JodaTime/src/main/java/org/joda/time/tz/src/pacificnew
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/src/pacificnew
rename to JodaTime/src/main/java/org/joda/time/tz/src/pacificnew
diff --git a/JodaTime/src/java/org/joda/time/tz/src/southamerica b/JodaTime/src/main/java/org/joda/time/tz/src/southamerica
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/src/southamerica
rename to JodaTime/src/main/java/org/joda/time/tz/src/southamerica
diff --git a/JodaTime/src/java/org/joda/time/tz/src/systemv b/JodaTime/src/main/java/org/joda/time/tz/src/systemv
similarity index 100%
rename from JodaTime/src/java/org/joda/time/tz/src/systemv
rename to JodaTime/src/main/java/org/joda/time/tz/src/systemv

From efb215c0f8b6975f920503a118321209a2aa7d75 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 12:39:56 +0000
Subject: [PATCH 26/36] Start conversion to Maven 2

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1521 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/src/test/{ => java}/org/joda/time/ClassLoadTest.java     | 0
 .../src/test/{ => java}/org/joda/time/MockNullZoneChronology.java | 0
 JodaTime/src/test/{ => java}/org/joda/time/MockPartial.java       | 0
 JodaTime/src/test/{ => java}/org/joda/time/MockZone.java          | 0
 .../src/test/{ => java}/org/joda/time/TestAbstractPartial.java    | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestAll.java           | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestAllPackages.java   | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestBasePartial.java   | 0
 .../test/{ => java}/org/joda/time/TestBaseSingleFieldPeriod.java  | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestChronology.java    | 0
 .../test/{ => java}/org/joda/time/TestDateMidnight_Basics.java    | 0
 .../{ => java}/org/joda/time/TestDateMidnight_Constructors.java   | 0
 .../{ => java}/org/joda/time/TestDateMidnight_Properties.java     | 0
 .../src/test/{ => java}/org/joda/time/TestDateTimeComparator.java | 0
 .../src/test/{ => java}/org/joda/time/TestDateTimeConstants.java  | 0
 .../src/test/{ => java}/org/joda/time/TestDateTimeFieldType.java  | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestDateTimeUtils.java | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestDateTimeZone.java  | 0
 .../test/{ => java}/org/joda/time/TestDateTimeZoneCutover.java    | 0
 .../src/test/{ => java}/org/joda/time/TestDateTime_Basics.java    | 0
 .../test/{ => java}/org/joda/time/TestDateTime_Constructors.java  | 0
 .../test/{ => java}/org/joda/time/TestDateTime_Properties.java    | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestDays.java          | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestDurationField.java | 0
 .../src/test/{ => java}/org/joda/time/TestDurationFieldType.java  | 0
 .../src/test/{ => java}/org/joda/time/TestDuration_Basics.java    | 0
 .../test/{ => java}/org/joda/time/TestDuration_Constructors.java  | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestHours.java         | 0
 .../{ => java}/org/joda/time/TestIllegalFieldValueException.java  | 0
 .../src/test/{ => java}/org/joda/time/TestInstant_Basics.java     | 0
 .../test/{ => java}/org/joda/time/TestInstant_Constructors.java   | 0
 .../src/test/{ => java}/org/joda/time/TestInterval_Basics.java    | 0
 .../test/{ => java}/org/joda/time/TestInterval_Constructors.java  | 0
 .../test/{ => java}/org/joda/time/TestLocalDateTime_Basics.java   | 0
 .../{ => java}/org/joda/time/TestLocalDateTime_Constructors.java  | 0
 .../{ => java}/org/joda/time/TestLocalDateTime_Properties.java    | 0
 .../src/test/{ => java}/org/joda/time/TestLocalDate_Basics.java   | 0
 .../test/{ => java}/org/joda/time/TestLocalDate_Constructors.java | 0
 .../test/{ => java}/org/joda/time/TestLocalDate_Properties.java   | 0
 .../src/test/{ => java}/org/joda/time/TestLocalTime_Basics.java   | 0
 .../test/{ => java}/org/joda/time/TestLocalTime_Constructors.java | 0
 .../test/{ => java}/org/joda/time/TestLocalTime_Properties.java   | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestMinutes.java       | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestMonths.java        | 0
 .../test/{ => java}/org/joda/time/TestMutableDateTime_Adds.java   | 0
 .../test/{ => java}/org/joda/time/TestMutableDateTime_Basics.java | 0
 .../org/joda/time/TestMutableDateTime_Constructors.java           | 0
 .../{ => java}/org/joda/time/TestMutableDateTime_Properties.java  | 0
 .../test/{ => java}/org/joda/time/TestMutableDateTime_Sets.java   | 0
 .../test/{ => java}/org/joda/time/TestMutableInterval_Basics.java | 0
 .../org/joda/time/TestMutableInterval_Constructors.java           | 0
 .../{ => java}/org/joda/time/TestMutableInterval_Updates.java     | 0
 .../test/{ => java}/org/joda/time/TestMutablePeriod_Basics.java   | 0
 .../{ => java}/org/joda/time/TestMutablePeriod_Constructors.java  | 0
 .../test/{ => java}/org/joda/time/TestMutablePeriod_Updates.java  | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestParseISO.java      | 0
 .../src/test/{ => java}/org/joda/time/TestPartial_Basics.java     | 0
 .../test/{ => java}/org/joda/time/TestPartial_Constructors.java   | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestPartial_Match.java | 0
 .../src/test/{ => java}/org/joda/time/TestPartial_Properties.java | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestPeriodType.java    | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestPeriod_Basics.java | 0
 .../test/{ => java}/org/joda/time/TestPeriod_Constructors.java    | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestSeconds.java       | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestSerialization.java | 0
 .../src/test/{ => java}/org/joda/time/TestTimeOfDay_Basics.java   | 0
 .../test/{ => java}/org/joda/time/TestTimeOfDay_Constructors.java | 0
 .../test/{ => java}/org/joda/time/TestTimeOfDay_Properties.java   | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestWeeks.java         | 0
 .../test/{ => java}/org/joda/time/TestYearMonthDay_Basics.java    | 0
 .../{ => java}/org/joda/time/TestYearMonthDay_Constructors.java   | 0
 .../{ => java}/org/joda/time/TestYearMonthDay_Properties.java     | 0
 JodaTime/src/test/{ => java}/org/joda/time/TestYears.java         | 0
 JodaTime/src/test/{ => java}/org/joda/time/chrono/TestAll.java    | 0
 .../{ => java}/org/joda/time/chrono/TestBuddhistChronology.java   | 0
 .../{ => java}/org/joda/time/chrono/TestCopticChronology.java     | 0
 .../{ => java}/org/joda/time/chrono/TestEthiopicChronology.java   | 0
 .../test/{ => java}/org/joda/time/chrono/TestGJChronology.java    | 0
 .../{ => java}/org/joda/time/chrono/TestGregorianChronology.java  | 0
 .../test/{ => java}/org/joda/time/chrono/TestISOChronology.java   | 0
 .../{ => java}/org/joda/time/chrono/TestIslamicChronology.java    | 0
 .../{ => java}/org/joda/time/chrono/TestJulianChronology.java     | 0
 .../{ => java}/org/joda/time/chrono/TestLenientChronology.java    | 0
 .../src/test/{ => java}/org/joda/time/chrono/gj/MainTest.java     | 0
 JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestAll.java | 0
 .../test/{ => java}/org/joda/time/chrono/gj/TestGJChronology.java | 0
 .../{ => java}/org/joda/time/chrono/gj/TestGJDateTimeField.java   | 0
 .../{ => java}/org/joda/time/chrono/gj/TestGJDayOfMonthField.java | 0
 .../{ => java}/org/joda/time/chrono/gj/TestGJDayOfWeekField.java  | 0
 .../{ => java}/org/joda/time/chrono/gj/TestGJDayOfYearField.java  | 0
 .../org/joda/time/chrono/gj/TestGJMonthOfYearField.java           | 0
 .../org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java        | 0
 .../{ => java}/org/joda/time/chrono/gj/TestGJWeekyearField.java   | 0
 .../test/{ => java}/org/joda/time/chrono/gj/TestGJYearField.java  | 0
 .../org/joda/time/chrono/gj/TestGregorianChronology.java          | 0
 .../{ => java}/org/joda/time/chrono/gj/TestJulianChronology.java  | 0
 .../org/joda/time/chrono/gj/TestJulianDayOfMonthField.java        | 0
 .../org/joda/time/chrono/gj/TestJulianMonthOfYearField.java       | 0
 .../org/joda/time/chrono/gj/TestJulianWeekyearField.java          | 0
 .../{ => java}/org/joda/time/chrono/gj/TestJulianYearField.java   | 0
 .../test/{ => java}/org/joda/time/convert/MockBadChronology.java  | 0
 .../{ => java}/org/joda/time/convert/MockUnknownCalendar.java     | 0
 .../{ => java}/org/joda/time/convert/MockUnknownTimeZone.java     | 0
 .../org/joda/time/convert/MockZeroNullIntegerConverter.java       | 0
 JodaTime/src/test/{ => java}/org/joda/time/convert/TestAll.java   | 0
 .../{ => java}/org/joda/time/convert/TestCalendarConverter.java   | 0
 .../{ => java}/org/joda/time/convert/TestConverterManager.java    | 0
 .../test/{ => java}/org/joda/time/convert/TestConverterSet.java   | 0
 .../test/{ => java}/org/joda/time/convert/TestDateConverter.java  | 0
 .../test/{ => java}/org/joda/time/convert/TestLongConverter.java  | 0
 .../test/{ => java}/org/joda/time/convert/TestNullConverter.java  | 0
 .../org/joda/time/convert/TestReadableDurationConverter.java      | 0
 .../org/joda/time/convert/TestReadableInstantConverter.java       | 0
 .../org/joda/time/convert/TestReadableIntervalConverter.java      | 0
 .../org/joda/time/convert/TestReadablePartialConverter.java       | 0
 .../org/joda/time/convert/TestReadablePeriodConverter.java        | 0
 .../{ => java}/org/joda/time/convert/TestStringConverter.java     | 0
 JodaTime/src/test/{ => java}/org/joda/time/field/TestAll.java     | 0
 .../{ => java}/org/joda/time/field/TestBaseDateTimeField.java     | 0
 .../src/test/{ => java}/org/joda/time/field/TestFieldUtils.java   | 0
 .../{ => java}/org/joda/time/field/TestMillisDurationField.java   | 0
 .../{ => java}/org/joda/time/field/TestOffsetDateTimeField.java   | 0
 .../{ => java}/org/joda/time/field/TestPreciseDateTimeField.java  | 0
 .../org/joda/time/field/TestPreciseDurationDateTimeField.java     | 0
 .../{ => java}/org/joda/time/field/TestPreciseDurationField.java  | 0
 .../{ => java}/org/joda/time/field/TestScaledDurationField.java   | 0
 .../org/joda/time/field/TestUnsupportedDateTimeField.java         | 0
 JodaTime/src/test/{ => java}/org/joda/time/format/TestAll.java    | 0
 .../test/{ => java}/org/joda/time/format/TestDateTimeFormat.java  | 0
 .../{ => java}/org/joda/time/format/TestDateTimeFormatStyle.java  | 0
 .../{ => java}/org/joda/time/format/TestDateTimeFormatter.java    | 0
 .../org/joda/time/format/TestDateTimeFormatterBuilder.java        | 0
 .../{ => java}/org/joda/time/format/TestISODateTimeFormat.java    | 0
 .../org/joda/time/format/TestISODateTimeFormatParsing.java        | 0
 .../org/joda/time/format/TestISODateTimeFormat_Fields.java        | 0
 .../test/{ => java}/org/joda/time/format/TestISOPeriodFormat.java | 0
 .../org/joda/time/format/TestISOPeriodFormatParsing.java          | 0
 .../test/{ => java}/org/joda/time/format/TestPeriodFormat.java    | 0
 .../{ => java}/org/joda/time/format/TestPeriodFormatParsing.java  | 0
 .../test/{ => java}/org/joda/time/format/TestPeriodFormatter.java | 0
 .../org/joda/time/format/TestPeriodFormatterBuilder.java          | 0
 .../src/test/{ => java}/org/joda/time/format/TestTextFields.java  | 0
 JodaTime/src/test/{ => java}/org/joda/time/tz/TestAll.java        | 0
 JodaTime/src/test/{ => java}/org/joda/time/tz/TestBuilder.java    | 0
 JodaTime/src/test/{ => java}/org/joda/time/tz/TestCompiler.java   | 0
 .../test/{ => java}/org/joda/time/tz/TestFixedDateTimeZone.java   | 0
 .../src/test/{ => java}/org/joda/time/tz/TestUTCProvider.java     | 0
 147 files changed, 0 insertions(+), 0 deletions(-)
 rename JodaTime/src/test/{ => java}/org/joda/time/ClassLoadTest.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/MockNullZoneChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/MockPartial.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/MockZone.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestAbstractPartial.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestAll.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestAllPackages.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestBasePartial.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestBaseSingleFieldPeriod.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDateMidnight_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDateMidnight_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDateMidnight_Properties.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDateTimeComparator.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDateTimeConstants.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDateTimeFieldType.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDateTimeUtils.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDateTimeZone.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDateTimeZoneCutover.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDateTime_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDateTime_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDateTime_Properties.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDays.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDurationField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDurationFieldType.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDuration_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestDuration_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestHours.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestIllegalFieldValueException.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestInstant_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestInstant_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestInterval_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestInterval_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestLocalDateTime_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestLocalDateTime_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestLocalDateTime_Properties.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestLocalDate_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestLocalDate_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestLocalDate_Properties.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestLocalTime_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestLocalTime_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestLocalTime_Properties.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMinutes.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMonths.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMutableDateTime_Adds.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMutableDateTime_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMutableDateTime_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMutableDateTime_Properties.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMutableDateTime_Sets.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMutableInterval_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMutableInterval_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMutableInterval_Updates.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMutablePeriod_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMutablePeriod_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestMutablePeriod_Updates.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestParseISO.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestPartial_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestPartial_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestPartial_Match.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestPartial_Properties.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestPeriodType.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestPeriod_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestPeriod_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestSeconds.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestSerialization.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestTimeOfDay_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestTimeOfDay_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestTimeOfDay_Properties.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestWeeks.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestYearMonthDay_Basics.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestYearMonthDay_Constructors.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestYearMonthDay_Properties.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/TestYears.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/TestAll.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/TestBuddhistChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/TestCopticChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/TestEthiopicChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/TestGJChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/TestGregorianChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/TestISOChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/TestIslamicChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/TestJulianChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/TestLenientChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/MainTest.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestAll.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestGJChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestGJDateTimeField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestGJDayOfMonthField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestGJDayOfWeekField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestGJDayOfYearField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestGJMonthOfYearField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestGJWeekyearField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestGJYearField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestGregorianChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestJulianChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestJulianDayOfMonthField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestJulianWeekyearField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/chrono/gj/TestJulianYearField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/MockBadChronology.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/MockUnknownCalendar.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/MockUnknownTimeZone.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/MockZeroNullIntegerConverter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestAll.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestCalendarConverter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestConverterManager.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestConverterSet.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestDateConverter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestLongConverter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestNullConverter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestReadableDurationConverter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestReadableInstantConverter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestReadableIntervalConverter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestReadablePartialConverter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestReadablePeriodConverter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/convert/TestStringConverter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/field/TestAll.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/field/TestBaseDateTimeField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/field/TestFieldUtils.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/field/TestMillisDurationField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/field/TestOffsetDateTimeField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/field/TestPreciseDateTimeField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/field/TestPreciseDurationDateTimeField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/field/TestPreciseDurationField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/field/TestScaledDurationField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/field/TestUnsupportedDateTimeField.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestAll.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestDateTimeFormat.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestDateTimeFormatStyle.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestDateTimeFormatter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestDateTimeFormatterBuilder.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestISODateTimeFormat.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestISODateTimeFormatParsing.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestISODateTimeFormat_Fields.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestISOPeriodFormat.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestISOPeriodFormatParsing.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestPeriodFormat.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestPeriodFormatParsing.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestPeriodFormatter.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestPeriodFormatterBuilder.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/format/TestTextFields.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/tz/TestAll.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/tz/TestBuilder.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/tz/TestCompiler.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/tz/TestFixedDateTimeZone.java (100%)
 rename JodaTime/src/test/{ => java}/org/joda/time/tz/TestUTCProvider.java (100%)

diff --git a/JodaTime/src/test/org/joda/time/ClassLoadTest.java b/JodaTime/src/test/java/org/joda/time/ClassLoadTest.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/ClassLoadTest.java
rename to JodaTime/src/test/java/org/joda/time/ClassLoadTest.java
diff --git a/JodaTime/src/test/org/joda/time/MockNullZoneChronology.java b/JodaTime/src/test/java/org/joda/time/MockNullZoneChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/MockNullZoneChronology.java
rename to JodaTime/src/test/java/org/joda/time/MockNullZoneChronology.java
diff --git a/JodaTime/src/test/org/joda/time/MockPartial.java b/JodaTime/src/test/java/org/joda/time/MockPartial.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/MockPartial.java
rename to JodaTime/src/test/java/org/joda/time/MockPartial.java
diff --git a/JodaTime/src/test/org/joda/time/MockZone.java b/JodaTime/src/test/java/org/joda/time/MockZone.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/MockZone.java
rename to JodaTime/src/test/java/org/joda/time/MockZone.java
diff --git a/JodaTime/src/test/org/joda/time/TestAbstractPartial.java b/JodaTime/src/test/java/org/joda/time/TestAbstractPartial.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestAbstractPartial.java
rename to JodaTime/src/test/java/org/joda/time/TestAbstractPartial.java
diff --git a/JodaTime/src/test/org/joda/time/TestAll.java b/JodaTime/src/test/java/org/joda/time/TestAll.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestAll.java
rename to JodaTime/src/test/java/org/joda/time/TestAll.java
diff --git a/JodaTime/src/test/org/joda/time/TestAllPackages.java b/JodaTime/src/test/java/org/joda/time/TestAllPackages.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestAllPackages.java
rename to JodaTime/src/test/java/org/joda/time/TestAllPackages.java
diff --git a/JodaTime/src/test/org/joda/time/TestBasePartial.java b/JodaTime/src/test/java/org/joda/time/TestBasePartial.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestBasePartial.java
rename to JodaTime/src/test/java/org/joda/time/TestBasePartial.java
diff --git a/JodaTime/src/test/org/joda/time/TestBaseSingleFieldPeriod.java b/JodaTime/src/test/java/org/joda/time/TestBaseSingleFieldPeriod.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestBaseSingleFieldPeriod.java
rename to JodaTime/src/test/java/org/joda/time/TestBaseSingleFieldPeriod.java
diff --git a/JodaTime/src/test/org/joda/time/TestChronology.java b/JodaTime/src/test/java/org/joda/time/TestChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestChronology.java
rename to JodaTime/src/test/java/org/joda/time/TestChronology.java
diff --git a/JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java b/JodaTime/src/test/java/org/joda/time/TestDateMidnight_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDateMidnight_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestDateMidnight_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestDateMidnight_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDateMidnight_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestDateMidnight_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java b/JodaTime/src/test/java/org/joda/time/TestDateMidnight_Properties.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDateMidnight_Properties.java
rename to JodaTime/src/test/java/org/joda/time/TestDateMidnight_Properties.java
diff --git a/JodaTime/src/test/org/joda/time/TestDateTimeComparator.java b/JodaTime/src/test/java/org/joda/time/TestDateTimeComparator.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDateTimeComparator.java
rename to JodaTime/src/test/java/org/joda/time/TestDateTimeComparator.java
diff --git a/JodaTime/src/test/org/joda/time/TestDateTimeConstants.java b/JodaTime/src/test/java/org/joda/time/TestDateTimeConstants.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDateTimeConstants.java
rename to JodaTime/src/test/java/org/joda/time/TestDateTimeConstants.java
diff --git a/JodaTime/src/test/org/joda/time/TestDateTimeFieldType.java b/JodaTime/src/test/java/org/joda/time/TestDateTimeFieldType.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDateTimeFieldType.java
rename to JodaTime/src/test/java/org/joda/time/TestDateTimeFieldType.java
diff --git a/JodaTime/src/test/org/joda/time/TestDateTimeUtils.java b/JodaTime/src/test/java/org/joda/time/TestDateTimeUtils.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDateTimeUtils.java
rename to JodaTime/src/test/java/org/joda/time/TestDateTimeUtils.java
diff --git a/JodaTime/src/test/org/joda/time/TestDateTimeZone.java b/JodaTime/src/test/java/org/joda/time/TestDateTimeZone.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDateTimeZone.java
rename to JodaTime/src/test/java/org/joda/time/TestDateTimeZone.java
diff --git a/JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java b/JodaTime/src/test/java/org/joda/time/TestDateTimeZoneCutover.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDateTimeZoneCutover.java
rename to JodaTime/src/test/java/org/joda/time/TestDateTimeZoneCutover.java
diff --git a/JodaTime/src/test/org/joda/time/TestDateTime_Basics.java b/JodaTime/src/test/java/org/joda/time/TestDateTime_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDateTime_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestDateTime_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestDateTime_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestDateTime_Properties.java b/JodaTime/src/test/java/org/joda/time/TestDateTime_Properties.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDateTime_Properties.java
rename to JodaTime/src/test/java/org/joda/time/TestDateTime_Properties.java
diff --git a/JodaTime/src/test/org/joda/time/TestDays.java b/JodaTime/src/test/java/org/joda/time/TestDays.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDays.java
rename to JodaTime/src/test/java/org/joda/time/TestDays.java
diff --git a/JodaTime/src/test/org/joda/time/TestDurationField.java b/JodaTime/src/test/java/org/joda/time/TestDurationField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDurationField.java
rename to JodaTime/src/test/java/org/joda/time/TestDurationField.java
diff --git a/JodaTime/src/test/org/joda/time/TestDurationFieldType.java b/JodaTime/src/test/java/org/joda/time/TestDurationFieldType.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDurationFieldType.java
rename to JodaTime/src/test/java/org/joda/time/TestDurationFieldType.java
diff --git a/JodaTime/src/test/org/joda/time/TestDuration_Basics.java b/JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDuration_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestDuration_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestDuration_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestDuration_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestDuration_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestDuration_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestHours.java b/JodaTime/src/test/java/org/joda/time/TestHours.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestHours.java
rename to JodaTime/src/test/java/org/joda/time/TestHours.java
diff --git a/JodaTime/src/test/org/joda/time/TestIllegalFieldValueException.java b/JodaTime/src/test/java/org/joda/time/TestIllegalFieldValueException.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestIllegalFieldValueException.java
rename to JodaTime/src/test/java/org/joda/time/TestIllegalFieldValueException.java
diff --git a/JodaTime/src/test/org/joda/time/TestInstant_Basics.java b/JodaTime/src/test/java/org/joda/time/TestInstant_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestInstant_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestInstant_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestInstant_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestInstant_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestInstant_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestInterval_Basics.java b/JodaTime/src/test/java/org/joda/time/TestInterval_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestInterval_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestInterval_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestInterval_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestInterval_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestInterval_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java b/JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestLocalDateTime_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestLocalDateTime_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java b/JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Properties.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestLocalDateTime_Properties.java
rename to JodaTime/src/test/java/org/joda/time/TestLocalDateTime_Properties.java
diff --git a/JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java b/JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestLocalDate_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestLocalDate_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestLocalDate_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestLocalDate_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestLocalDate_Properties.java b/JodaTime/src/test/java/org/joda/time/TestLocalDate_Properties.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestLocalDate_Properties.java
rename to JodaTime/src/test/java/org/joda/time/TestLocalDate_Properties.java
diff --git a/JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java b/JodaTime/src/test/java/org/joda/time/TestLocalTime_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestLocalTime_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestLocalTime_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestLocalTime_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestLocalTime_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestLocalTime_Properties.java b/JodaTime/src/test/java/org/joda/time/TestLocalTime_Properties.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestLocalTime_Properties.java
rename to JodaTime/src/test/java/org/joda/time/TestLocalTime_Properties.java
diff --git a/JodaTime/src/test/org/joda/time/TestMinutes.java b/JodaTime/src/test/java/org/joda/time/TestMinutes.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMinutes.java
rename to JodaTime/src/test/java/org/joda/time/TestMinutes.java
diff --git a/JodaTime/src/test/org/joda/time/TestMonths.java b/JodaTime/src/test/java/org/joda/time/TestMonths.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMonths.java
rename to JodaTime/src/test/java/org/joda/time/TestMonths.java
diff --git a/JodaTime/src/test/org/joda/time/TestMutableDateTime_Adds.java b/JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Adds.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMutableDateTime_Adds.java
rename to JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Adds.java
diff --git a/JodaTime/src/test/org/joda/time/TestMutableDateTime_Basics.java b/JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMutableDateTime_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestMutableDateTime_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMutableDateTime_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java b/JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Properties.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMutableDateTime_Properties.java
rename to JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Properties.java
diff --git a/JodaTime/src/test/org/joda/time/TestMutableDateTime_Sets.java b/JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Sets.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMutableDateTime_Sets.java
rename to JodaTime/src/test/java/org/joda/time/TestMutableDateTime_Sets.java
diff --git a/JodaTime/src/test/org/joda/time/TestMutableInterval_Basics.java b/JodaTime/src/test/java/org/joda/time/TestMutableInterval_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMutableInterval_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestMutableInterval_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMutableInterval_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestMutableInterval_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestMutableInterval_Updates.java b/JodaTime/src/test/java/org/joda/time/TestMutableInterval_Updates.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMutableInterval_Updates.java
rename to JodaTime/src/test/java/org/joda/time/TestMutableInterval_Updates.java
diff --git a/JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java b/JodaTime/src/test/java/org/joda/time/TestMutablePeriod_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMutablePeriod_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestMutablePeriod_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestMutablePeriod_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMutablePeriod_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestMutablePeriod_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java b/JodaTime/src/test/java/org/joda/time/TestMutablePeriod_Updates.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestMutablePeriod_Updates.java
rename to JodaTime/src/test/java/org/joda/time/TestMutablePeriod_Updates.java
diff --git a/JodaTime/src/test/org/joda/time/TestParseISO.java b/JodaTime/src/test/java/org/joda/time/TestParseISO.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestParseISO.java
rename to JodaTime/src/test/java/org/joda/time/TestParseISO.java
diff --git a/JodaTime/src/test/org/joda/time/TestPartial_Basics.java b/JodaTime/src/test/java/org/joda/time/TestPartial_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestPartial_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestPartial_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestPartial_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestPartial_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestPartial_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestPartial_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestPartial_Match.java b/JodaTime/src/test/java/org/joda/time/TestPartial_Match.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestPartial_Match.java
rename to JodaTime/src/test/java/org/joda/time/TestPartial_Match.java
diff --git a/JodaTime/src/test/org/joda/time/TestPartial_Properties.java b/JodaTime/src/test/java/org/joda/time/TestPartial_Properties.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestPartial_Properties.java
rename to JodaTime/src/test/java/org/joda/time/TestPartial_Properties.java
diff --git a/JodaTime/src/test/org/joda/time/TestPeriodType.java b/JodaTime/src/test/java/org/joda/time/TestPeriodType.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestPeriodType.java
rename to JodaTime/src/test/java/org/joda/time/TestPeriodType.java
diff --git a/JodaTime/src/test/org/joda/time/TestPeriod_Basics.java b/JodaTime/src/test/java/org/joda/time/TestPeriod_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestPeriod_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestPeriod_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestPeriod_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestPeriod_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestSeconds.java b/JodaTime/src/test/java/org/joda/time/TestSeconds.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestSeconds.java
rename to JodaTime/src/test/java/org/joda/time/TestSeconds.java
diff --git a/JodaTime/src/test/org/joda/time/TestSerialization.java b/JodaTime/src/test/java/org/joda/time/TestSerialization.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestSerialization.java
rename to JodaTime/src/test/java/org/joda/time/TestSerialization.java
diff --git a/JodaTime/src/test/org/joda/time/TestTimeOfDay_Basics.java b/JodaTime/src/test/java/org/joda/time/TestTimeOfDay_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestTimeOfDay_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestTimeOfDay_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestTimeOfDay_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestTimeOfDay_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestTimeOfDay_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java b/JodaTime/src/test/java/org/joda/time/TestTimeOfDay_Properties.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestTimeOfDay_Properties.java
rename to JodaTime/src/test/java/org/joda/time/TestTimeOfDay_Properties.java
diff --git a/JodaTime/src/test/org/joda/time/TestWeeks.java b/JodaTime/src/test/java/org/joda/time/TestWeeks.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestWeeks.java
rename to JodaTime/src/test/java/org/joda/time/TestWeeks.java
diff --git a/JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java b/JodaTime/src/test/java/org/joda/time/TestYearMonthDay_Basics.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestYearMonthDay_Basics.java
rename to JodaTime/src/test/java/org/joda/time/TestYearMonthDay_Basics.java
diff --git a/JodaTime/src/test/org/joda/time/TestYearMonthDay_Constructors.java b/JodaTime/src/test/java/org/joda/time/TestYearMonthDay_Constructors.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestYearMonthDay_Constructors.java
rename to JodaTime/src/test/java/org/joda/time/TestYearMonthDay_Constructors.java
diff --git a/JodaTime/src/test/org/joda/time/TestYearMonthDay_Properties.java b/JodaTime/src/test/java/org/joda/time/TestYearMonthDay_Properties.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestYearMonthDay_Properties.java
rename to JodaTime/src/test/java/org/joda/time/TestYearMonthDay_Properties.java
diff --git a/JodaTime/src/test/org/joda/time/TestYears.java b/JodaTime/src/test/java/org/joda/time/TestYears.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/TestYears.java
rename to JodaTime/src/test/java/org/joda/time/TestYears.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/TestAll.java b/JodaTime/src/test/java/org/joda/time/chrono/TestAll.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/TestAll.java
rename to JodaTime/src/test/java/org/joda/time/chrono/TestAll.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java b/JodaTime/src/test/java/org/joda/time/chrono/TestBuddhistChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java
rename to JodaTime/src/test/java/org/joda/time/chrono/TestBuddhistChronology.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java b/JodaTime/src/test/java/org/joda/time/chrono/TestCopticChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java
rename to JodaTime/src/test/java/org/joda/time/chrono/TestCopticChronology.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java b/JodaTime/src/test/java/org/joda/time/chrono/TestEthiopicChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/TestEthiopicChronology.java
rename to JodaTime/src/test/java/org/joda/time/chrono/TestEthiopicChronology.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java b/JodaTime/src/test/java/org/joda/time/chrono/TestGJChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java
rename to JodaTime/src/test/java/org/joda/time/chrono/TestGJChronology.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java b/JodaTime/src/test/java/org/joda/time/chrono/TestGregorianChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java
rename to JodaTime/src/test/java/org/joda/time/chrono/TestGregorianChronology.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java b/JodaTime/src/test/java/org/joda/time/chrono/TestISOChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java
rename to JodaTime/src/test/java/org/joda/time/chrono/TestISOChronology.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java b/JodaTime/src/test/java/org/joda/time/chrono/TestIslamicChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/TestIslamicChronology.java
rename to JodaTime/src/test/java/org/joda/time/chrono/TestIslamicChronology.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java b/JodaTime/src/test/java/org/joda/time/chrono/TestJulianChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java
rename to JodaTime/src/test/java/org/joda/time/chrono/TestJulianChronology.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java b/JodaTime/src/test/java/org/joda/time/chrono/TestLenientChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/TestLenientChronology.java
rename to JodaTime/src/test/java/org/joda/time/chrono/TestLenientChronology.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/MainTest.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/MainTest.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/MainTest.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/MainTest.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestAll.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestAll.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestAll.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestAll.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestGJChronology.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestGJChronology.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJChronology.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestGJDateTimeField.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJDateTimeField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestGJDateTimeField.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJDateTimeField.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJDayOfMonthField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfMonthField.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJDayOfMonthField.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJDayOfWeekField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfWeekField.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJDayOfWeekField.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJDayOfYearField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestGJDayOfYearField.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJDayOfYearField.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJMonthOfYearField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestGJMonthOfYearField.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJMonthOfYearField.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJWeekOfWeekyearField.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekyearField.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJWeekyearField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestGJWeekyearField.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJWeekyearField.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestGJYearField.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJYearField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestGJYearField.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestGJYearField.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestGregorianChronology.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestGregorianChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestGregorianChronology.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestGregorianChronology.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestJulianChronology.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestJulianChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestJulianChronology.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestJulianChronology.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestJulianDayOfMonthField.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestJulianDayOfMonthField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestJulianDayOfMonthField.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestJulianDayOfMonthField.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestJulianMonthOfYearField.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestJulianWeekyearField.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestJulianWeekyearField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestJulianWeekyearField.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestJulianWeekyearField.java
diff --git a/JodaTime/src/test/org/joda/time/chrono/gj/TestJulianYearField.java b/JodaTime/src/test/java/org/joda/time/chrono/gj/TestJulianYearField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/chrono/gj/TestJulianYearField.java
rename to JodaTime/src/test/java/org/joda/time/chrono/gj/TestJulianYearField.java
diff --git a/JodaTime/src/test/org/joda/time/convert/MockBadChronology.java b/JodaTime/src/test/java/org/joda/time/convert/MockBadChronology.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/MockBadChronology.java
rename to JodaTime/src/test/java/org/joda/time/convert/MockBadChronology.java
diff --git a/JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java b/JodaTime/src/test/java/org/joda/time/convert/MockUnknownCalendar.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/MockUnknownCalendar.java
rename to JodaTime/src/test/java/org/joda/time/convert/MockUnknownCalendar.java
diff --git a/JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java b/JodaTime/src/test/java/org/joda/time/convert/MockUnknownTimeZone.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/MockUnknownTimeZone.java
rename to JodaTime/src/test/java/org/joda/time/convert/MockUnknownTimeZone.java
diff --git a/JodaTime/src/test/org/joda/time/convert/MockZeroNullIntegerConverter.java b/JodaTime/src/test/java/org/joda/time/convert/MockZeroNullIntegerConverter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/MockZeroNullIntegerConverter.java
rename to JodaTime/src/test/java/org/joda/time/convert/MockZeroNullIntegerConverter.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestAll.java b/JodaTime/src/test/java/org/joda/time/convert/TestAll.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestAll.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestAll.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java b/JodaTime/src/test/java/org/joda/time/convert/TestCalendarConverter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestCalendarConverter.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestCalendarConverter.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestConverterManager.java b/JodaTime/src/test/java/org/joda/time/convert/TestConverterManager.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestConverterManager.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestConverterManager.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestConverterSet.java b/JodaTime/src/test/java/org/joda/time/convert/TestConverterSet.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestConverterSet.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestConverterSet.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestDateConverter.java b/JodaTime/src/test/java/org/joda/time/convert/TestDateConverter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestDateConverter.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestDateConverter.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestLongConverter.java b/JodaTime/src/test/java/org/joda/time/convert/TestLongConverter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestLongConverter.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestLongConverter.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestNullConverter.java b/JodaTime/src/test/java/org/joda/time/convert/TestNullConverter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestNullConverter.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestNullConverter.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java b/JodaTime/src/test/java/org/joda/time/convert/TestReadableDurationConverter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestReadableDurationConverter.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestReadableDurationConverter.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java b/JodaTime/src/test/java/org/joda/time/convert/TestReadableInstantConverter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestReadableInstantConverter.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestReadableInstantConverter.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java b/JodaTime/src/test/java/org/joda/time/convert/TestReadableIntervalConverter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestReadableIntervalConverter.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestReadableIntervalConverter.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java b/JodaTime/src/test/java/org/joda/time/convert/TestReadablePartialConverter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestReadablePartialConverter.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestReadablePartialConverter.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java b/JodaTime/src/test/java/org/joda/time/convert/TestReadablePeriodConverter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestReadablePeriodConverter.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestReadablePeriodConverter.java
diff --git a/JodaTime/src/test/org/joda/time/convert/TestStringConverter.java b/JodaTime/src/test/java/org/joda/time/convert/TestStringConverter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/convert/TestStringConverter.java
rename to JodaTime/src/test/java/org/joda/time/convert/TestStringConverter.java
diff --git a/JodaTime/src/test/org/joda/time/field/TestAll.java b/JodaTime/src/test/java/org/joda/time/field/TestAll.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/field/TestAll.java
rename to JodaTime/src/test/java/org/joda/time/field/TestAll.java
diff --git a/JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java b/JodaTime/src/test/java/org/joda/time/field/TestBaseDateTimeField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/field/TestBaseDateTimeField.java
rename to JodaTime/src/test/java/org/joda/time/field/TestBaseDateTimeField.java
diff --git a/JodaTime/src/test/org/joda/time/field/TestFieldUtils.java b/JodaTime/src/test/java/org/joda/time/field/TestFieldUtils.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/field/TestFieldUtils.java
rename to JodaTime/src/test/java/org/joda/time/field/TestFieldUtils.java
diff --git a/JodaTime/src/test/org/joda/time/field/TestMillisDurationField.java b/JodaTime/src/test/java/org/joda/time/field/TestMillisDurationField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/field/TestMillisDurationField.java
rename to JodaTime/src/test/java/org/joda/time/field/TestMillisDurationField.java
diff --git a/JodaTime/src/test/org/joda/time/field/TestOffsetDateTimeField.java b/JodaTime/src/test/java/org/joda/time/field/TestOffsetDateTimeField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/field/TestOffsetDateTimeField.java
rename to JodaTime/src/test/java/org/joda/time/field/TestOffsetDateTimeField.java
diff --git a/JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java b/JodaTime/src/test/java/org/joda/time/field/TestPreciseDateTimeField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/field/TestPreciseDateTimeField.java
rename to JodaTime/src/test/java/org/joda/time/field/TestPreciseDateTimeField.java
diff --git a/JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java b/JodaTime/src/test/java/org/joda/time/field/TestPreciseDurationDateTimeField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/field/TestPreciseDurationDateTimeField.java
rename to JodaTime/src/test/java/org/joda/time/field/TestPreciseDurationDateTimeField.java
diff --git a/JodaTime/src/test/org/joda/time/field/TestPreciseDurationField.java b/JodaTime/src/test/java/org/joda/time/field/TestPreciseDurationField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/field/TestPreciseDurationField.java
rename to JodaTime/src/test/java/org/joda/time/field/TestPreciseDurationField.java
diff --git a/JodaTime/src/test/org/joda/time/field/TestScaledDurationField.java b/JodaTime/src/test/java/org/joda/time/field/TestScaledDurationField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/field/TestScaledDurationField.java
rename to JodaTime/src/test/java/org/joda/time/field/TestScaledDurationField.java
diff --git a/JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java b/JodaTime/src/test/java/org/joda/time/field/TestUnsupportedDateTimeField.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/field/TestUnsupportedDateTimeField.java
rename to JodaTime/src/test/java/org/joda/time/field/TestUnsupportedDateTimeField.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestAll.java b/JodaTime/src/test/java/org/joda/time/format/TestAll.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestAll.java
rename to JodaTime/src/test/java/org/joda/time/format/TestAll.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java b/JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java
rename to JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java b/JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatStyle.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java
rename to JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatStyle.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java b/JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java
rename to JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java b/JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatterBuilder.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestDateTimeFormatterBuilder.java
rename to JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatterBuilder.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestISODateTimeFormat.java b/JodaTime/src/test/java/org/joda/time/format/TestISODateTimeFormat.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestISODateTimeFormat.java
rename to JodaTime/src/test/java/org/joda/time/format/TestISODateTimeFormat.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestISODateTimeFormatParsing.java b/JodaTime/src/test/java/org/joda/time/format/TestISODateTimeFormatParsing.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestISODateTimeFormatParsing.java
rename to JodaTime/src/test/java/org/joda/time/format/TestISODateTimeFormatParsing.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestISODateTimeFormat_Fields.java b/JodaTime/src/test/java/org/joda/time/format/TestISODateTimeFormat_Fields.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestISODateTimeFormat_Fields.java
rename to JodaTime/src/test/java/org/joda/time/format/TestISODateTimeFormat_Fields.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java b/JodaTime/src/test/java/org/joda/time/format/TestISOPeriodFormat.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java
rename to JodaTime/src/test/java/org/joda/time/format/TestISOPeriodFormat.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java b/JodaTime/src/test/java/org/joda/time/format/TestISOPeriodFormatParsing.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestISOPeriodFormatParsing.java
rename to JodaTime/src/test/java/org/joda/time/format/TestISOPeriodFormatParsing.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java b/JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestPeriodFormat.java
rename to JodaTime/src/test/java/org/joda/time/format/TestPeriodFormat.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java b/JodaTime/src/test/java/org/joda/time/format/TestPeriodFormatParsing.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestPeriodFormatParsing.java
rename to JodaTime/src/test/java/org/joda/time/format/TestPeriodFormatParsing.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java b/JodaTime/src/test/java/org/joda/time/format/TestPeriodFormatter.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestPeriodFormatter.java
rename to JodaTime/src/test/java/org/joda/time/format/TestPeriodFormatter.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java b/JodaTime/src/test/java/org/joda/time/format/TestPeriodFormatterBuilder.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java
rename to JodaTime/src/test/java/org/joda/time/format/TestPeriodFormatterBuilder.java
diff --git a/JodaTime/src/test/org/joda/time/format/TestTextFields.java b/JodaTime/src/test/java/org/joda/time/format/TestTextFields.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/format/TestTextFields.java
rename to JodaTime/src/test/java/org/joda/time/format/TestTextFields.java
diff --git a/JodaTime/src/test/org/joda/time/tz/TestAll.java b/JodaTime/src/test/java/org/joda/time/tz/TestAll.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/tz/TestAll.java
rename to JodaTime/src/test/java/org/joda/time/tz/TestAll.java
diff --git a/JodaTime/src/test/org/joda/time/tz/TestBuilder.java b/JodaTime/src/test/java/org/joda/time/tz/TestBuilder.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/tz/TestBuilder.java
rename to JodaTime/src/test/java/org/joda/time/tz/TestBuilder.java
diff --git a/JodaTime/src/test/org/joda/time/tz/TestCompiler.java b/JodaTime/src/test/java/org/joda/time/tz/TestCompiler.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/tz/TestCompiler.java
rename to JodaTime/src/test/java/org/joda/time/tz/TestCompiler.java
diff --git a/JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java b/JodaTime/src/test/java/org/joda/time/tz/TestFixedDateTimeZone.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/tz/TestFixedDateTimeZone.java
rename to JodaTime/src/test/java/org/joda/time/tz/TestFixedDateTimeZone.java
diff --git a/JodaTime/src/test/org/joda/time/tz/TestUTCProvider.java b/JodaTime/src/test/java/org/joda/time/tz/TestUTCProvider.java
similarity index 100%
rename from JodaTime/src/test/org/joda/time/tz/TestUTCProvider.java
rename to JodaTime/src/test/java/org/joda/time/tz/TestUTCProvider.java

From 6b07a14cebd0e834ed44652c6f155d62b4fc09f7 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 12:43:38 +0000
Subject: [PATCH 27/36] Start conversion to Maven 2

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1522 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 .../src/{ => test}/testdata/BuddhistChronology.dat  | Bin
 .../src/{ => test}/testdata/CopticChronology.dat    | Bin
 JodaTime/src/{ => test}/testdata/DateMidnight.dat   | Bin
 .../{ => test}/testdata/DateMidnightProperty.dat    | Bin
 JodaTime/src/{ => test}/testdata/DateTime.dat       | Bin
 .../src/{ => test}/testdata/DateTimeFieldType.dat   | Bin
 .../src/{ => test}/testdata/DateTimeProperty.dat    | Bin
 JodaTime/src/{ => test}/testdata/DateTimeZone.dat   | Bin
 .../src/{ => test}/testdata/DateTimeZoneUTC.dat     | Bin
 .../{ => test}/testdata/DelegatedDurationField.dat  | Bin
 .../src/{ => test}/testdata/DurationFieldType.dat   | Bin
 JodaTime/src/{ => test}/testdata/GJChronology.dat   | Bin
 .../testdata/GJChronologyChangedInternals.dat       | Bin
 .../src/{ => test}/testdata/GregorianChronology.dat | Bin
 JodaTime/src/{ => test}/testdata/ISOChronology.dat  | Bin
 JodaTime/src/{ => test}/testdata/Instant.dat        | Bin
 .../src/{ => test}/testdata/JulianChronology.dat    | Bin
 .../src/{ => test}/testdata/MillisDurationField.dat | Bin
 .../src/{ => test}/testdata/MutableDateTime.dat     | Bin
 .../{ => test}/testdata/MutableDateTimeProperty.dat | Bin
 JodaTime/src/{ => test}/testdata/PeriodType.dat     | Bin
 JodaTime/src/{ => test}/testdata/TimeOfDay.dat      | Bin
 .../src/{ => test}/testdata/TimeOfDayProperty.dat   | Bin
 .../testdata/UnsupportedDateTimeField.dat           | Bin
 .../testdata/UnsupportedDurationField.dat           | Bin
 JodaTime/src/{ => test}/testdata/YearMonthDay.dat   | Bin
 .../{ => test}/testdata/YearMonthDayProperty.dat    | Bin
 27 files changed, 0 insertions(+), 0 deletions(-)
 rename JodaTime/src/{ => test}/testdata/BuddhistChronology.dat (100%)
 rename JodaTime/src/{ => test}/testdata/CopticChronology.dat (100%)
 rename JodaTime/src/{ => test}/testdata/DateMidnight.dat (100%)
 rename JodaTime/src/{ => test}/testdata/DateMidnightProperty.dat (100%)
 rename JodaTime/src/{ => test}/testdata/DateTime.dat (100%)
 rename JodaTime/src/{ => test}/testdata/DateTimeFieldType.dat (100%)
 rename JodaTime/src/{ => test}/testdata/DateTimeProperty.dat (100%)
 rename JodaTime/src/{ => test}/testdata/DateTimeZone.dat (100%)
 rename JodaTime/src/{ => test}/testdata/DateTimeZoneUTC.dat (100%)
 rename JodaTime/src/{ => test}/testdata/DelegatedDurationField.dat (100%)
 rename JodaTime/src/{ => test}/testdata/DurationFieldType.dat (100%)
 rename JodaTime/src/{ => test}/testdata/GJChronology.dat (100%)
 rename JodaTime/src/{ => test}/testdata/GJChronologyChangedInternals.dat (100%)
 rename JodaTime/src/{ => test}/testdata/GregorianChronology.dat (100%)
 rename JodaTime/src/{ => test}/testdata/ISOChronology.dat (100%)
 rename JodaTime/src/{ => test}/testdata/Instant.dat (100%)
 rename JodaTime/src/{ => test}/testdata/JulianChronology.dat (100%)
 rename JodaTime/src/{ => test}/testdata/MillisDurationField.dat (100%)
 rename JodaTime/src/{ => test}/testdata/MutableDateTime.dat (100%)
 rename JodaTime/src/{ => test}/testdata/MutableDateTimeProperty.dat (100%)
 rename JodaTime/src/{ => test}/testdata/PeriodType.dat (100%)
 rename JodaTime/src/{ => test}/testdata/TimeOfDay.dat (100%)
 rename JodaTime/src/{ => test}/testdata/TimeOfDayProperty.dat (100%)
 rename JodaTime/src/{ => test}/testdata/UnsupportedDateTimeField.dat (100%)
 rename JodaTime/src/{ => test}/testdata/UnsupportedDurationField.dat (100%)
 rename JodaTime/src/{ => test}/testdata/YearMonthDay.dat (100%)
 rename JodaTime/src/{ => test}/testdata/YearMonthDayProperty.dat (100%)

diff --git a/JodaTime/src/testdata/BuddhistChronology.dat b/JodaTime/src/test/testdata/BuddhistChronology.dat
similarity index 100%
rename from JodaTime/src/testdata/BuddhistChronology.dat
rename to JodaTime/src/test/testdata/BuddhistChronology.dat
diff --git a/JodaTime/src/testdata/CopticChronology.dat b/JodaTime/src/test/testdata/CopticChronology.dat
similarity index 100%
rename from JodaTime/src/testdata/CopticChronology.dat
rename to JodaTime/src/test/testdata/CopticChronology.dat
diff --git a/JodaTime/src/testdata/DateMidnight.dat b/JodaTime/src/test/testdata/DateMidnight.dat
similarity index 100%
rename from JodaTime/src/testdata/DateMidnight.dat
rename to JodaTime/src/test/testdata/DateMidnight.dat
diff --git a/JodaTime/src/testdata/DateMidnightProperty.dat b/JodaTime/src/test/testdata/DateMidnightProperty.dat
similarity index 100%
rename from JodaTime/src/testdata/DateMidnightProperty.dat
rename to JodaTime/src/test/testdata/DateMidnightProperty.dat
diff --git a/JodaTime/src/testdata/DateTime.dat b/JodaTime/src/test/testdata/DateTime.dat
similarity index 100%
rename from JodaTime/src/testdata/DateTime.dat
rename to JodaTime/src/test/testdata/DateTime.dat
diff --git a/JodaTime/src/testdata/DateTimeFieldType.dat b/JodaTime/src/test/testdata/DateTimeFieldType.dat
similarity index 100%
rename from JodaTime/src/testdata/DateTimeFieldType.dat
rename to JodaTime/src/test/testdata/DateTimeFieldType.dat
diff --git a/JodaTime/src/testdata/DateTimeProperty.dat b/JodaTime/src/test/testdata/DateTimeProperty.dat
similarity index 100%
rename from JodaTime/src/testdata/DateTimeProperty.dat
rename to JodaTime/src/test/testdata/DateTimeProperty.dat
diff --git a/JodaTime/src/testdata/DateTimeZone.dat b/JodaTime/src/test/testdata/DateTimeZone.dat
similarity index 100%
rename from JodaTime/src/testdata/DateTimeZone.dat
rename to JodaTime/src/test/testdata/DateTimeZone.dat
diff --git a/JodaTime/src/testdata/DateTimeZoneUTC.dat b/JodaTime/src/test/testdata/DateTimeZoneUTC.dat
similarity index 100%
rename from JodaTime/src/testdata/DateTimeZoneUTC.dat
rename to JodaTime/src/test/testdata/DateTimeZoneUTC.dat
diff --git a/JodaTime/src/testdata/DelegatedDurationField.dat b/JodaTime/src/test/testdata/DelegatedDurationField.dat
similarity index 100%
rename from JodaTime/src/testdata/DelegatedDurationField.dat
rename to JodaTime/src/test/testdata/DelegatedDurationField.dat
diff --git a/JodaTime/src/testdata/DurationFieldType.dat b/JodaTime/src/test/testdata/DurationFieldType.dat
similarity index 100%
rename from JodaTime/src/testdata/DurationFieldType.dat
rename to JodaTime/src/test/testdata/DurationFieldType.dat
diff --git a/JodaTime/src/testdata/GJChronology.dat b/JodaTime/src/test/testdata/GJChronology.dat
similarity index 100%
rename from JodaTime/src/testdata/GJChronology.dat
rename to JodaTime/src/test/testdata/GJChronology.dat
diff --git a/JodaTime/src/testdata/GJChronologyChangedInternals.dat b/JodaTime/src/test/testdata/GJChronologyChangedInternals.dat
similarity index 100%
rename from JodaTime/src/testdata/GJChronologyChangedInternals.dat
rename to JodaTime/src/test/testdata/GJChronologyChangedInternals.dat
diff --git a/JodaTime/src/testdata/GregorianChronology.dat b/JodaTime/src/test/testdata/GregorianChronology.dat
similarity index 100%
rename from JodaTime/src/testdata/GregorianChronology.dat
rename to JodaTime/src/test/testdata/GregorianChronology.dat
diff --git a/JodaTime/src/testdata/ISOChronology.dat b/JodaTime/src/test/testdata/ISOChronology.dat
similarity index 100%
rename from JodaTime/src/testdata/ISOChronology.dat
rename to JodaTime/src/test/testdata/ISOChronology.dat
diff --git a/JodaTime/src/testdata/Instant.dat b/JodaTime/src/test/testdata/Instant.dat
similarity index 100%
rename from JodaTime/src/testdata/Instant.dat
rename to JodaTime/src/test/testdata/Instant.dat
diff --git a/JodaTime/src/testdata/JulianChronology.dat b/JodaTime/src/test/testdata/JulianChronology.dat
similarity index 100%
rename from JodaTime/src/testdata/JulianChronology.dat
rename to JodaTime/src/test/testdata/JulianChronology.dat
diff --git a/JodaTime/src/testdata/MillisDurationField.dat b/JodaTime/src/test/testdata/MillisDurationField.dat
similarity index 100%
rename from JodaTime/src/testdata/MillisDurationField.dat
rename to JodaTime/src/test/testdata/MillisDurationField.dat
diff --git a/JodaTime/src/testdata/MutableDateTime.dat b/JodaTime/src/test/testdata/MutableDateTime.dat
similarity index 100%
rename from JodaTime/src/testdata/MutableDateTime.dat
rename to JodaTime/src/test/testdata/MutableDateTime.dat
diff --git a/JodaTime/src/testdata/MutableDateTimeProperty.dat b/JodaTime/src/test/testdata/MutableDateTimeProperty.dat
similarity index 100%
rename from JodaTime/src/testdata/MutableDateTimeProperty.dat
rename to JodaTime/src/test/testdata/MutableDateTimeProperty.dat
diff --git a/JodaTime/src/testdata/PeriodType.dat b/JodaTime/src/test/testdata/PeriodType.dat
similarity index 100%
rename from JodaTime/src/testdata/PeriodType.dat
rename to JodaTime/src/test/testdata/PeriodType.dat
diff --git a/JodaTime/src/testdata/TimeOfDay.dat b/JodaTime/src/test/testdata/TimeOfDay.dat
similarity index 100%
rename from JodaTime/src/testdata/TimeOfDay.dat
rename to JodaTime/src/test/testdata/TimeOfDay.dat
diff --git a/JodaTime/src/testdata/TimeOfDayProperty.dat b/JodaTime/src/test/testdata/TimeOfDayProperty.dat
similarity index 100%
rename from JodaTime/src/testdata/TimeOfDayProperty.dat
rename to JodaTime/src/test/testdata/TimeOfDayProperty.dat
diff --git a/JodaTime/src/testdata/UnsupportedDateTimeField.dat b/JodaTime/src/test/testdata/UnsupportedDateTimeField.dat
similarity index 100%
rename from JodaTime/src/testdata/UnsupportedDateTimeField.dat
rename to JodaTime/src/test/testdata/UnsupportedDateTimeField.dat
diff --git a/JodaTime/src/testdata/UnsupportedDurationField.dat b/JodaTime/src/test/testdata/UnsupportedDurationField.dat
similarity index 100%
rename from JodaTime/src/testdata/UnsupportedDurationField.dat
rename to JodaTime/src/test/testdata/UnsupportedDurationField.dat
diff --git a/JodaTime/src/testdata/YearMonthDay.dat b/JodaTime/src/test/testdata/YearMonthDay.dat
similarity index 100%
rename from JodaTime/src/testdata/YearMonthDay.dat
rename to JodaTime/src/test/testdata/YearMonthDay.dat
diff --git a/JodaTime/src/testdata/YearMonthDayProperty.dat b/JodaTime/src/test/testdata/YearMonthDayProperty.dat
similarity index 100%
rename from JodaTime/src/testdata/YearMonthDayProperty.dat
rename to JodaTime/src/test/testdata/YearMonthDayProperty.dat

From 76a4b2370d91436933c4f44ed48af70aa69cb4be Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 12:45:51 +0000
Subject: [PATCH 28/36] Start conversion to Maven 2

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1523 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 .../{testdata => resources}/BuddhistChronology.dat  | Bin
 .../{testdata => resources}/CopticChronology.dat    | Bin
 .../test/{testdata => resources}/DateMidnight.dat   | Bin
 .../DateMidnightProperty.dat                        | Bin
 .../src/test/{testdata => resources}/DateTime.dat   | Bin
 .../{testdata => resources}/DateTimeFieldType.dat   | Bin
 .../{testdata => resources}/DateTimeProperty.dat    | Bin
 .../test/{testdata => resources}/DateTimeZone.dat   | Bin
 .../{testdata => resources}/DateTimeZoneUTC.dat     | Bin
 .../DelegatedDurationField.dat                      | Bin
 .../{testdata => resources}/DurationFieldType.dat   | Bin
 .../test/{testdata => resources}/GJChronology.dat   | Bin
 .../GJChronologyChangedInternals.dat                | Bin
 .../{testdata => resources}/GregorianChronology.dat | Bin
 .../test/{testdata => resources}/ISOChronology.dat  | Bin
 .../src/test/{testdata => resources}/Instant.dat    | Bin
 .../{testdata => resources}/JulianChronology.dat    | Bin
 .../{testdata => resources}/MillisDurationField.dat | Bin
 .../{testdata => resources}/MutableDateTime.dat     | Bin
 .../MutableDateTimeProperty.dat                     | Bin
 .../src/test/{testdata => resources}/PeriodType.dat | Bin
 .../src/test/{testdata => resources}/TimeOfDay.dat  | Bin
 .../{testdata => resources}/TimeOfDayProperty.dat   | Bin
 .../UnsupportedDateTimeField.dat                    | Bin
 .../UnsupportedDurationField.dat                    | Bin
 .../test/{testdata => resources}/YearMonthDay.dat   | Bin
 .../YearMonthDayProperty.dat                        | Bin
 27 files changed, 0 insertions(+), 0 deletions(-)
 rename JodaTime/src/test/{testdata => resources}/BuddhistChronology.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/CopticChronology.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/DateMidnight.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/DateMidnightProperty.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/DateTime.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/DateTimeFieldType.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/DateTimeProperty.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/DateTimeZone.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/DateTimeZoneUTC.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/DelegatedDurationField.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/DurationFieldType.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/GJChronology.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/GJChronologyChangedInternals.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/GregorianChronology.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/ISOChronology.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/Instant.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/JulianChronology.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/MillisDurationField.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/MutableDateTime.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/MutableDateTimeProperty.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/PeriodType.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/TimeOfDay.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/TimeOfDayProperty.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/UnsupportedDateTimeField.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/UnsupportedDurationField.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/YearMonthDay.dat (100%)
 rename JodaTime/src/test/{testdata => resources}/YearMonthDayProperty.dat (100%)

diff --git a/JodaTime/src/test/testdata/BuddhistChronology.dat b/JodaTime/src/test/resources/BuddhistChronology.dat
similarity index 100%
rename from JodaTime/src/test/testdata/BuddhistChronology.dat
rename to JodaTime/src/test/resources/BuddhistChronology.dat
diff --git a/JodaTime/src/test/testdata/CopticChronology.dat b/JodaTime/src/test/resources/CopticChronology.dat
similarity index 100%
rename from JodaTime/src/test/testdata/CopticChronology.dat
rename to JodaTime/src/test/resources/CopticChronology.dat
diff --git a/JodaTime/src/test/testdata/DateMidnight.dat b/JodaTime/src/test/resources/DateMidnight.dat
similarity index 100%
rename from JodaTime/src/test/testdata/DateMidnight.dat
rename to JodaTime/src/test/resources/DateMidnight.dat
diff --git a/JodaTime/src/test/testdata/DateMidnightProperty.dat b/JodaTime/src/test/resources/DateMidnightProperty.dat
similarity index 100%
rename from JodaTime/src/test/testdata/DateMidnightProperty.dat
rename to JodaTime/src/test/resources/DateMidnightProperty.dat
diff --git a/JodaTime/src/test/testdata/DateTime.dat b/JodaTime/src/test/resources/DateTime.dat
similarity index 100%
rename from JodaTime/src/test/testdata/DateTime.dat
rename to JodaTime/src/test/resources/DateTime.dat
diff --git a/JodaTime/src/test/testdata/DateTimeFieldType.dat b/JodaTime/src/test/resources/DateTimeFieldType.dat
similarity index 100%
rename from JodaTime/src/test/testdata/DateTimeFieldType.dat
rename to JodaTime/src/test/resources/DateTimeFieldType.dat
diff --git a/JodaTime/src/test/testdata/DateTimeProperty.dat b/JodaTime/src/test/resources/DateTimeProperty.dat
similarity index 100%
rename from JodaTime/src/test/testdata/DateTimeProperty.dat
rename to JodaTime/src/test/resources/DateTimeProperty.dat
diff --git a/JodaTime/src/test/testdata/DateTimeZone.dat b/JodaTime/src/test/resources/DateTimeZone.dat
similarity index 100%
rename from JodaTime/src/test/testdata/DateTimeZone.dat
rename to JodaTime/src/test/resources/DateTimeZone.dat
diff --git a/JodaTime/src/test/testdata/DateTimeZoneUTC.dat b/JodaTime/src/test/resources/DateTimeZoneUTC.dat
similarity index 100%
rename from JodaTime/src/test/testdata/DateTimeZoneUTC.dat
rename to JodaTime/src/test/resources/DateTimeZoneUTC.dat
diff --git a/JodaTime/src/test/testdata/DelegatedDurationField.dat b/JodaTime/src/test/resources/DelegatedDurationField.dat
similarity index 100%
rename from JodaTime/src/test/testdata/DelegatedDurationField.dat
rename to JodaTime/src/test/resources/DelegatedDurationField.dat
diff --git a/JodaTime/src/test/testdata/DurationFieldType.dat b/JodaTime/src/test/resources/DurationFieldType.dat
similarity index 100%
rename from JodaTime/src/test/testdata/DurationFieldType.dat
rename to JodaTime/src/test/resources/DurationFieldType.dat
diff --git a/JodaTime/src/test/testdata/GJChronology.dat b/JodaTime/src/test/resources/GJChronology.dat
similarity index 100%
rename from JodaTime/src/test/testdata/GJChronology.dat
rename to JodaTime/src/test/resources/GJChronology.dat
diff --git a/JodaTime/src/test/testdata/GJChronologyChangedInternals.dat b/JodaTime/src/test/resources/GJChronologyChangedInternals.dat
similarity index 100%
rename from JodaTime/src/test/testdata/GJChronologyChangedInternals.dat
rename to JodaTime/src/test/resources/GJChronologyChangedInternals.dat
diff --git a/JodaTime/src/test/testdata/GregorianChronology.dat b/JodaTime/src/test/resources/GregorianChronology.dat
similarity index 100%
rename from JodaTime/src/test/testdata/GregorianChronology.dat
rename to JodaTime/src/test/resources/GregorianChronology.dat
diff --git a/JodaTime/src/test/testdata/ISOChronology.dat b/JodaTime/src/test/resources/ISOChronology.dat
similarity index 100%
rename from JodaTime/src/test/testdata/ISOChronology.dat
rename to JodaTime/src/test/resources/ISOChronology.dat
diff --git a/JodaTime/src/test/testdata/Instant.dat b/JodaTime/src/test/resources/Instant.dat
similarity index 100%
rename from JodaTime/src/test/testdata/Instant.dat
rename to JodaTime/src/test/resources/Instant.dat
diff --git a/JodaTime/src/test/testdata/JulianChronology.dat b/JodaTime/src/test/resources/JulianChronology.dat
similarity index 100%
rename from JodaTime/src/test/testdata/JulianChronology.dat
rename to JodaTime/src/test/resources/JulianChronology.dat
diff --git a/JodaTime/src/test/testdata/MillisDurationField.dat b/JodaTime/src/test/resources/MillisDurationField.dat
similarity index 100%
rename from JodaTime/src/test/testdata/MillisDurationField.dat
rename to JodaTime/src/test/resources/MillisDurationField.dat
diff --git a/JodaTime/src/test/testdata/MutableDateTime.dat b/JodaTime/src/test/resources/MutableDateTime.dat
similarity index 100%
rename from JodaTime/src/test/testdata/MutableDateTime.dat
rename to JodaTime/src/test/resources/MutableDateTime.dat
diff --git a/JodaTime/src/test/testdata/MutableDateTimeProperty.dat b/JodaTime/src/test/resources/MutableDateTimeProperty.dat
similarity index 100%
rename from JodaTime/src/test/testdata/MutableDateTimeProperty.dat
rename to JodaTime/src/test/resources/MutableDateTimeProperty.dat
diff --git a/JodaTime/src/test/testdata/PeriodType.dat b/JodaTime/src/test/resources/PeriodType.dat
similarity index 100%
rename from JodaTime/src/test/testdata/PeriodType.dat
rename to JodaTime/src/test/resources/PeriodType.dat
diff --git a/JodaTime/src/test/testdata/TimeOfDay.dat b/JodaTime/src/test/resources/TimeOfDay.dat
similarity index 100%
rename from JodaTime/src/test/testdata/TimeOfDay.dat
rename to JodaTime/src/test/resources/TimeOfDay.dat
diff --git a/JodaTime/src/test/testdata/TimeOfDayProperty.dat b/JodaTime/src/test/resources/TimeOfDayProperty.dat
similarity index 100%
rename from JodaTime/src/test/testdata/TimeOfDayProperty.dat
rename to JodaTime/src/test/resources/TimeOfDayProperty.dat
diff --git a/JodaTime/src/test/testdata/UnsupportedDateTimeField.dat b/JodaTime/src/test/resources/UnsupportedDateTimeField.dat
similarity index 100%
rename from JodaTime/src/test/testdata/UnsupportedDateTimeField.dat
rename to JodaTime/src/test/resources/UnsupportedDateTimeField.dat
diff --git a/JodaTime/src/test/testdata/UnsupportedDurationField.dat b/JodaTime/src/test/resources/UnsupportedDurationField.dat
similarity index 100%
rename from JodaTime/src/test/testdata/UnsupportedDurationField.dat
rename to JodaTime/src/test/resources/UnsupportedDurationField.dat
diff --git a/JodaTime/src/test/testdata/YearMonthDay.dat b/JodaTime/src/test/resources/YearMonthDay.dat
similarity index 100%
rename from JodaTime/src/test/testdata/YearMonthDay.dat
rename to JodaTime/src/test/resources/YearMonthDay.dat
diff --git a/JodaTime/src/test/testdata/YearMonthDayProperty.dat b/JodaTime/src/test/resources/YearMonthDayProperty.dat
similarity index 100%
rename from JodaTime/src/test/testdata/YearMonthDayProperty.dat
rename to JodaTime/src/test/resources/YearMonthDayProperty.dat

From bb9bca53d8152f5dda9600155d5f3d75d4a80cf9 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 12:55:19 +0000
Subject: [PATCH 29/36] Start conversion to Maven 2

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1524 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/build.xml                                          | 4 ++--
 JodaTime/pom.xml                                            | 3 ---
 JodaTime/src/test/java/org/joda/time/TestSerialization.java | 4 ++--
 3 files changed, 4 insertions(+), 7 deletions(-)

diff --git a/JodaTime/build.xml b/JodaTime/build.xml
index d3fcb83a2..9b0553e60 100644
--- a/JodaTime/build.xml
+++ b/JodaTime/build.xml
@@ -42,10 +42,10 @@
 
   <!-- The directory of source files -->
   <property name="source"                  value="src"/>
-  <property name="source.home"             value="${source}/java"/>
+  <property name="source.home"             value="${source}/main/java"/>
   <property name="source.tz"               value="${source.home}/org/joda/time/tz/src"/>
   <property name="conf.home"               value="${source}/conf"/>
-  <property name="test.home"               value="${source}/test"/>
+  <property name="test.home"               value="${source}/test/java"/>
 
   <!-- The base directory for example sources -->
   <property name="example.home"            value="src/example"/>
diff --git a/JodaTime/pom.xml b/JodaTime/pom.xml
index 7142e8f3d..364a6c938 100644
--- a/JodaTime/pom.xml
+++ b/JodaTime/pom.xml
@@ -213,9 +213,6 @@
           <excludes>
             <exclude>**/TestAll*.java</exclude>
           </excludes>
-          <additionalClasspathElements>
-            <additionalClasspathElement>src/testdata</additionalClasspathElement>
-          </additionalClasspathElements>
         </configuration>
       </plugin>
       <plugin>
diff --git a/JodaTime/src/test/java/org/joda/time/TestSerialization.java b/JodaTime/src/test/java/org/joda/time/TestSerialization.java
index ccfc9bc8e..c9e26584c 100644
--- a/JodaTime/src/test/java/org/joda/time/TestSerialization.java
+++ b/JodaTime/src/test/java/org/joda/time/TestSerialization.java
@@ -259,7 +259,7 @@ public void testSerializedUnsupportedDateTimeField() throws Exception {
     }
 
     private void loadAndCompare(Serializable test, String filename, boolean same) throws Exception {
-        FileInputStream fis = new FileInputStream("src/testdata/" + filename);
+        FileInputStream fis = new FileInputStream("src/test/resources/" + filename);
         ObjectInputStream ois = new ObjectInputStream(fis);
         Object obj = ois.readObject();
         ois.close();
@@ -429,7 +429,7 @@ public void inlineCompare(Serializable test, boolean same) throws Exception {
 //    }
 
     private void store(Serializable test, String filename) throws Exception {
-        FileOutputStream fos = new FileOutputStream("src/testdata/" + filename);
+        FileOutputStream fos = new FileOutputStream("src/test/resources/" + filename);
         ObjectOutputStream oos = new ObjectOutputStream(fos);
         try {
             oos.writeObject(test);

From f37c439eb5b07088ea80186f2cd304ac9addafce Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 16:45:24 +0000
Subject: [PATCH 30/36] Convert to Maven 2

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1525 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/pom.xml              | 53 ++++++++++++++++++++++++-----------
 JodaTime/src/conf/MANIFEST.MF |  1 +
 2 files changed, 37 insertions(+), 17 deletions(-)

diff --git a/JodaTime/pom.xml b/JodaTime/pom.xml
index 364a6c938..53273fd87 100644
--- a/JodaTime/pom.xml
+++ b/JodaTime/pom.xml
@@ -128,16 +128,25 @@
       </resource>
     </resources>
     <plugins>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-clean-plugin</artifactId>
+        <version>2.4.1</version>
+      </plugin>
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-compiler-plugin</artifactId>
-        <version>2.1</version>
+        <version>2.3.1</version>
         <configuration>
           <verbose>true</verbose>
           <fork>true</fork>
           <compilerVersion>1.4</compilerVersion>
-          <source>1.4</source>
-          <target>1.4</target>
+          <source>1.3</source>
+          <target>1.3</target>
+          <debug>true</debug>
+          <debuglevel>lines,source</debuglevel>
+          <optimize>true</optimize>
+          <showDeprecation>false</showDeprecation>
         </configuration>
       </plugin>
       <plugin>
@@ -169,18 +178,13 @@
             <phase>compile</phase>
             <configuration>
               <tasks>
-                <echo message="=============================================" />
-                <echo message="${maven.build.dest}" />
-                <echo message="${pom.build.sourceDirectory}" />
-                <echo message="${maven.compile.classpath}" />
-                
-                <mkdir dir="${maven.build.dest}/org/joda/time/tz/data" />
+                <mkdir dir="${pom.build.outputDirectory}/org/joda/time/tz/data" />
                 <java classname="org.joda.time.tz.ZoneInfoCompiler" fork="true" failonerror="true">
-                  <classpath path="${maven.compile.classpath}" />
+                  <classpath refid="maven.compile.classpath" />
                   <!-- Override default provider since data directory doesn't exist yet -->
                   <sysproperty key="org.joda.time.DateTimeZone.Provider" value="org.joda.time.tz.UTCProvider" />
                   <!-- Specify destination directory for compiled data files -->
-                  <arg line="-src ${pom.build.sourceDirectory}/org/joda/time/tz/src -dst ${maven.build.dest}/org/joda/time/tz/data" />
+                  <arg line="-src ${pom.build.sourceDirectory}/org/joda/time/tz/src -dst ${pom.build.outputDirectory}/org/joda/time/tz/data" />
                   <!-- Specify all the data files to compile -->
                   <arg value="africa" />
                   <arg value="antarctica" />
@@ -205,20 +209,27 @@
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-surefire-plugin</artifactId>
-        <version>2.4.2</version>
+        <version>2.5</version>
         <configuration>
           <includes>
-            <include>**/Test*.java</include>
+            <include>**/TestAllPackages.java</include>
           </includes>
-          <excludes>
-            <exclude>**/TestAll*.java</exclude>
-          </excludes>
         </configuration>
       </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-jar-plugin</artifactId>
+        <version>2.3.1</version>
+        <configuration>
+          <archive>
+            <manifestFile>src/conf/MANIFEST.MF</manifestFile>
+          </archive>
+        </configuration>
+      </plugin>
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-javadoc-plugin</artifactId>
-        <version>2.6.1</version>
+        <version>2.7</version>
         <configuration>
           <linksource>true</linksource>
           <links>
@@ -260,6 +271,11 @@
           </execution>
         </executions>
       </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-site-plugin</artifactId>
+        <version>2.1.1</version>
+      </plugin>
       <!--plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-gpg-plugin</artifactId>
@@ -386,4 +402,7 @@
     </site>
     <downloadUrl>http://oss.sonatype.org/content/repositories/joda-releases</downloadUrl>
   </distributionManagement>
+  <properties>
+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+  </properties>
 </project>
diff --git a/JodaTime/src/conf/MANIFEST.MF b/JodaTime/src/conf/MANIFEST.MF
index f1b719755..951e805e0 100644
--- a/JodaTime/src/conf/MANIFEST.MF
+++ b/JodaTime/src/conf/MANIFEST.MF
@@ -1,3 +1,4 @@
+Build-Jdk: 1.4.2
 Package: org.joda.time
 Extension-Name: joda-time
 Specification-Title: Joda-Time

From cc1d11fbe384a6b90e1e4dc3042c215c150875ad Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 17:01:34 +0000
Subject: [PATCH 31/36] Convert to Maven 2

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1526 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/build.xml                 |   4 +-
 JodaTime/maven.xml                 |  31 -----
 JodaTime/prepare.bat               |   3 -
 JodaTime/project.properties        |  23 ----
 JodaTime/project.xml               | 197 -----------------------------
 JodaTime/src/main/assembly/src.xml |   1 +
 6 files changed, 2 insertions(+), 257 deletions(-)
 delete mode 100644 JodaTime/maven.xml
 delete mode 100644 JodaTime/prepare.bat
 delete mode 100644 JodaTime/project.properties
 delete mode 100644 JodaTime/project.xml

diff --git a/JodaTime/build.xml b/JodaTime/build.xml
index 9b0553e60..c0de8fefb 100644
--- a/JodaTime/build.xml
+++ b/JodaTime/build.xml
@@ -354,9 +354,7 @@
     </copy>
 	<delete     dir="${build.dist.src.fullname}/src/tzdata"/>
     <copy      file="build.xml" todir="${build.dist.src.fullname}"/>
-    <copy      file="maven.xml" todir="${build.dist.src.fullname}"/>
-    <copy      file="project.xml" todir="${build.dist.src.fullname}"/>
-    <copy      file="project.properties" todir="${build.dist.src.fullname}"/>
+    <copy      file="pom.xml" todir="${build.dist.src.fullname}"/>
     <copy      file="checkstyle.xml" todir="${build.dist.src.fullname}"/>
     <copy      file="ToDo.txt" todir="${build.dist.src.fullname}"/>
 	
diff --git a/JodaTime/maven.xml b/JodaTime/maven.xml
deleted file mode 100644
index c8f2a9031..000000000
--- a/JodaTime/maven.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<project default="java:jar"
-  xmlns:j="jelly:core"
-  xmlns:ant="jelly:ant">
-
-  <postGoal name="java:compile">
-    <ant:mkdir dir="${maven.build.dest}/org/joda/time/tz/data" />
-    <ant:java classname="org.joda.time.tz.ZoneInfoCompiler"
-          fork="true"
-          failonerror="true">
-      <classpath path="${maven.build.dest}" />
-      <!-- Override default provider since data directory doesn't exist yet -->
-      <sysproperty key="org.joda.time.DateTimeZone.Provider"
-                   value="org.joda.time.tz.UTCProvider" />
-      <!-- Specify destination directory for compiled data files -->
-      <arg line="-src ${pom.build.sourceDirectory}/org/joda/time/tz/src -dst ${maven.build.dest}/org/joda/time/tz/data" />
-      <!-- Specify all the data files to compile -->
-      <arg value="africa" />
-      <arg value="antarctica" />
-      <arg value="asia" />
-      <arg value="australasia" />
-      <arg value="europe" />
-      <arg value="northamerica" />
-      <arg value="southamerica" />
-      <arg value="pacificnew" />
-      <arg value="etcetera" />
-      <arg value="backward" />
-      <arg value="systemv" />
-    </ant:java>
-  </postGoal>
-  
-</project>
diff --git a/JodaTime/prepare.bat b/JodaTime/prepare.bat
deleted file mode 100644
index 5991965ba..000000000
--- a/JodaTime/prepare.bat
+++ /dev/null
@@ -1,3 +0,0 @@
-SET JAVA_HOME=C:\java\jdk1.4.2
-call ant clean dist
-call maven clean site
diff --git a/JodaTime/project.properties b/JodaTime/project.properties
deleted file mode 100644
index 6ad392b64..000000000
--- a/JodaTime/project.properties
+++ /dev/null
@@ -1,23 +0,0 @@
-#show data on the breadcrumbs line
-maven.xdoc.date = navigation-bottom
-maven.xdoc.date.format = yyyy-MM-dd
-# maven.xdoc.version = ${pom.currentVersion}
-maven.xdoc.legend = false;
-maven.xdoc.theme.url = ./style/joda-theme.css
-
-maven.scm.svn.tag.base=https://svn.sourceforge.net/svnroot/joda-time/tags
-maven.changelog.factory=org.apache.maven.svnlib.SvnChangeLogFactory
-
-maven.checkstyle.properties=checkstyle.xml
-maven.junit.fork=true
-maven.xdoc.poweredby.image=maven-feather.png
-maven.javadoc.links=http://java.sun.com/products/j2se/1.4/docs/api
-maven.javadoc.overview=src/java/org/joda/time/overview.html
-maven.javadoc.public=true
-maven.javadoc.package=false
-maven.javadoc.private=false
-
-maven.jdiff.old.tag=v1_6_000
-maven.jdiff.new.tag=CURRENT
-
-maven.repo.remote=http://repo1.maven.org/maven, http://emma.sourceforge.net/maven/ 
\ No newline at end of file
diff --git a/JodaTime/project.xml b/JodaTime/project.xml
deleted file mode 100644
index 37ee62935..000000000
--- a/JodaTime/project.xml
+++ /dev/null
@@ -1,197 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project>
-<!-- You are strongly recommended to use ant for compiling and building -->
-<!-- We only use and test maven for website construction -->
-
-  <pomVersion>3</pomVersion>
-  <groupId>joda-time</groupId>
-  <artifactId>joda-time</artifactId>
-  <name>Joda time</name>
-  <currentVersion>1.6.1</currentVersion>
-  <organization>
-    <name>Joda.org</name>
-    <url>http://www.joda.org</url>
-    <logo>/images/joda.png</logo>
-  </organization>
-  <inceptionYear>2002</inceptionYear>
-  <package>org.joda.time</package>
-  <packageGroups>
-    <packageGroup>
-      <title>User Packages</title>
-      <packages>org.joda.time:org.joda.time.format:org.joda.time.chrono</packages>
-    </packageGroup>
-    <packageGroup>
-      <title>Implementation Packages</title>
-      <packages>org.joda.time.base:org.joda.time.convert:org.joda.time.field:org.joda.time.tz</packages>
-    </packageGroup>
-  </packageGroups>  
-  <logo>/images/jodatime.png</logo>
-
-  <description>
-    Date and time library to replace JDK date handling.
-  </description>
-  <shortDescription>Joda time</shortDescription>
-  <url>http://joda-time.sourceforge.net</url>
-  
-  <issueTrackingUrl>http://sourceforge.net/tracker/?atid=617889&amp;group_id=97367&amp;func=browse</issueTrackingUrl>
-  
-  <siteAddress>shell.sourceforge.net</siteAddress>
-  <siteDirectory>/home/groups/j/jo/joda-time/htdocs/</siteDirectory>
-  <distributionDirectory>home/groups/j/jo/joda-time/htdocs/repository</distributionDirectory>
-  
-  <repository>
-    <connection>scm:svn:https://joda-time.svn.sourceforge.net/svnroot/joda-time/trunk/JodaTime/</connection>
-    <url>http://joda-time.svn.sourceforge.net/viewvc/joda-time/trunk/JodaTime/</url>
-  </repository>
-
-  <licenses>
-    <license>
-      <name>Apache 2</name>
-      <url>http://www.apache.org/licenses/</url>
-      <distribution>repo</distribution>
-    </license>
-  </licenses>
-
-  <mailingLists>
-    <mailingList>
-      <name>Joda Interest list</name>
-      <subscribe>https://lists.sourceforge.net/lists/listinfo/joda-interest</subscribe>
-      <unsubscribe>https://lists.sourceforge.net/lists/listinfo/joda-interest</unsubscribe>
-      <archive>http://sourceforge.net/mailarchive/forum.php?forum_name=joda-interest</archive>
-    </mailingList>
-  </mailingLists>
-
-  <developers>
-    <developer>
-      <name>Stephen Colebourne</name>
-      <id>scolebourne</id>
-      <email>scolebourne@joda.org</email>
-      <organization></organization>
-      <roles>
-        <role>Project Lead</role>
-      </roles>
-    </developer>
-    <developer>
-      <name>Brian S O'Neill</name>
-      <id>broneill</id>
-      <email>broneill@users.sourceforge.net</email>
-      <organization></organization>
-      <roles>
-        <role>Senior Developer</role>
-      </roles>
-    </developer>
-  </developers>
-  
-  <contributors>
-    <contributor>
-      <name>Guy Allard</name>
-    </contributor>
-    <contributor>
-      <name>Fredrik Borgh</name>
-    </contributor>
-    <contributor>
-      <name>Jeroen van Erp</name>
-    </contributor>
-    <contributor>
-      <name>Gwyn Evans</name>
-    </contributor>
-    <contributor>
-      <name>Sean Geoghegan</name>
-    </contributor>
-    <contributor>
-      <name>Ashish Katyal</name>
-    </contributor>
-    <contributor>
-      <name>Antonio Leitao</name>
-    </contributor>
-    <contributor>
-      <name>Kostas Maistrelis</name>
-    </contributor>
-    <contributor>
-      <name>Al Major</name>
-    </contributor>
-    <contributor>
-      <name>Blair Martin</name>
-    </contributor>
-    <contributor>
-      <name>Julen Parra</name>
-    </contributor>
-    <contributor>
-      <name>Mike Schrag</name>
-    </contributor>
-    <contributor>
-      <name>Kandarp Shah</name>
-    </contributor>
-    <contributor>
-      <name>Francois Staes</name>
-    </contributor>
-    <contributor>
-      <name>Maxim Zhao</name>
-    </contributor>
-    <contributor>
-      <name>Ryan Propper</name>
-    </contributor>
-  </contributors>
-
-  <dependencies>
-  </dependencies>
-
-  <build>
-    <sourceDirectory>src/java</sourceDirectory>
-    <unitTestSourceDirectory>src/test</unitTestSourceDirectory>
-    <unitTest>
-      <resources>
-        <resource>
-          <directory>${basedir}/src/testdata</directory>
-          <includes>
-            <include>*.dat</include>
-          </includes>
-        </resource>
-      </resources>
-      <includes>
-        <include>org/joda/time/**/TestAll.java</include>
-      </includes>
-    </unitTest>
-    <resources>
-      <resource>
-        <directory>${basedir}/target/classes</directory>
-        <includes>
-          <include>org/joda/time/tz/data/**</include>
-        </includes>
-      </resource>
-      <resource>
-        <targetPath>META-INF</targetPath>
-        <includes>
-          <include>NOTICE.txt</include>
-        </includes>
-      </resource>
-    </resources>
-  </build>
-
-  <reports>
-     <report>maven-changelog-plugin</report>
-     <report>maven-changes-plugin</report>
-     <!--report>maven-checkstyle-plugin</report-->
-     <!--report>maven-findbugs-plugin</report-->
-     <!--report>maven-jdiff-plugin</report-->
-     <!--report>maven-clover-plugin</report-->
-     <!--report>maven-jcoverage-plugin</report-->
-     <!--report>maven-cobertura-plugin</report-->
-     <report>maven-emma-plugin</report>
-     <report>maven-developer-activity-plugin</report>
-     <report>maven-file-activity-plugin</report>
-     <report>maven-javadoc-plugin</report>
-     <report>maven-junit-report-plugin</report>
-     <report>maven-jxr-plugin</report>
-     <report>maven-license-plugin</report>
-     <!--report>maven-linkcheck-plugin</report-->
-     <!--report>maven-statcvs-plugin</report-->
-     <!--report>maven-tasklist-plugin</report-->
-  </reports>
-  
-  <!-- To install Emma, run:
-   maven plugin:download -DgroupId=emma -DartifactId=maven-emma-plugin -Dversion=0.6 -->
-  <!-- To run Jdiff:
-   copy the src folder from the previous version to target/jdiff/{tag} -->
-
-</project>
diff --git a/JodaTime/src/main/assembly/src.xml b/JodaTime/src/main/assembly/src.xml
index d3e266f8b..b439630fa 100644
--- a/JodaTime/src/main/assembly/src.xml
+++ b/JodaTime/src/main/assembly/src.xml
@@ -13,6 +13,7 @@
                 <include>NOTICE.txt</include>
                 <include>pom.xml</include>
                 <include>RELEASE-NOTES.txt</include>
+                <include>ToDo.txt</include>
             </includes>
         </fileSet>
         <fileSet>

From 534bd970aee3a0a5bbdc496013afc6ebe7e34a22 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 17:32:14 +0000
Subject: [PATCH 32/36] Convert to Maven 2

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1527 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/xdocs/cal_buddhist.xml            |  57 --
 JodaTime/xdocs/cal_coptic.xml              |  61 --
 JodaTime/xdocs/cal_ethiopic.xml            |  60 --
 JodaTime/xdocs/cal_gj.xml                  |  66 --
 JodaTime/xdocs/cal_gregorian.xml           |  58 --
 JodaTime/xdocs/cal_islamic.xml             | 104 ---
 JodaTime/xdocs/cal_iso.xml                 | 128 ---
 JodaTime/xdocs/cal_julian.xml              |  52 --
 JodaTime/xdocs/faq.xml                     | 289 ------
 JodaTime/xdocs/field.xml                   | 488 ----------
 JodaTime/xdocs/images/joda.png             | Bin 2919 -> 0 bytes
 JodaTime/xdocs/images/jodatime.png         | Bin 2850 -> 0 bytes
 JodaTime/xdocs/index.xml                   | 172 ----
 JodaTime/xdocs/installation.xml            |  51 --
 JodaTime/xdocs/key_chronology.xml          |  81 --
 JodaTime/xdocs/key_duration.xml            |  77 --
 JodaTime/xdocs/key_instant.xml             | 105 ---
 JodaTime/xdocs/key_interval.xml            |  83 --
 JodaTime/xdocs/key_partial.xml             | 118 ---
 JodaTime/xdocs/key_period.xml              | 182 ----
 JodaTime/xdocs/navigation.xml              |  72 --
 JodaTime/xdocs/privacy.xml                 |  49 -
 JodaTime/xdocs/quickstart.xml              | 155 ----
 JodaTime/xdocs/related.xml                 |  40 -
 JodaTime/xdocs/stylesheets/joda-theme.css  | 124 ---
 JodaTime/xdocs/stylesheets/maven-theme.css | 121 ---
 JodaTime/xdocs/tasks.xml                   |  39 -
 JodaTime/xdocs/timezones.xml               | 459 ----------
 JodaTime/xdocs/tz_update.xml               |  54 --
 JodaTime/xdocs/upgradeto099.xml            | 186 ----
 JodaTime/xdocs/upgradeto100.xml            |  61 --
 JodaTime/xdocs/upgradeto110.xml            | 199 -----
 JodaTime/xdocs/upgradeto120.xml            | 142 ---
 JodaTime/xdocs/upgradeto121.xml            |  76 --
 JodaTime/xdocs/upgradeto130.xml            | 152 ----
 JodaTime/xdocs/upgradeto140.xml            |  88 --
 JodaTime/xdocs/upgradeto150.xml            | 198 -----
 JodaTime/xdocs/upgradeto151.xml            |  68 --
 JodaTime/xdocs/upgradeto152.xml            |  77 --
 JodaTime/xdocs/upgradeto160.xml            | 132 ---
 JodaTime/xdocs/upgradeto161.xml            |  91 --
 JodaTime/xdocs/userguide.xml               | 989 ---------------------
 42 files changed, 5804 deletions(-)
 delete mode 100644 JodaTime/xdocs/cal_buddhist.xml
 delete mode 100644 JodaTime/xdocs/cal_coptic.xml
 delete mode 100644 JodaTime/xdocs/cal_ethiopic.xml
 delete mode 100644 JodaTime/xdocs/cal_gj.xml
 delete mode 100644 JodaTime/xdocs/cal_gregorian.xml
 delete mode 100644 JodaTime/xdocs/cal_islamic.xml
 delete mode 100644 JodaTime/xdocs/cal_iso.xml
 delete mode 100644 JodaTime/xdocs/cal_julian.xml
 delete mode 100644 JodaTime/xdocs/faq.xml
 delete mode 100644 JodaTime/xdocs/field.xml
 delete mode 100644 JodaTime/xdocs/images/joda.png
 delete mode 100644 JodaTime/xdocs/images/jodatime.png
 delete mode 100644 JodaTime/xdocs/index.xml
 delete mode 100644 JodaTime/xdocs/installation.xml
 delete mode 100644 JodaTime/xdocs/key_chronology.xml
 delete mode 100644 JodaTime/xdocs/key_duration.xml
 delete mode 100644 JodaTime/xdocs/key_instant.xml
 delete mode 100644 JodaTime/xdocs/key_interval.xml
 delete mode 100644 JodaTime/xdocs/key_partial.xml
 delete mode 100644 JodaTime/xdocs/key_period.xml
 delete mode 100644 JodaTime/xdocs/navigation.xml
 delete mode 100644 JodaTime/xdocs/privacy.xml
 delete mode 100644 JodaTime/xdocs/quickstart.xml
 delete mode 100644 JodaTime/xdocs/related.xml
 delete mode 100644 JodaTime/xdocs/stylesheets/joda-theme.css
 delete mode 100644 JodaTime/xdocs/stylesheets/maven-theme.css
 delete mode 100644 JodaTime/xdocs/tasks.xml
 delete mode 100644 JodaTime/xdocs/timezones.xml
 delete mode 100644 JodaTime/xdocs/tz_update.xml
 delete mode 100644 JodaTime/xdocs/upgradeto099.xml
 delete mode 100644 JodaTime/xdocs/upgradeto100.xml
 delete mode 100644 JodaTime/xdocs/upgradeto110.xml
 delete mode 100644 JodaTime/xdocs/upgradeto120.xml
 delete mode 100644 JodaTime/xdocs/upgradeto121.xml
 delete mode 100644 JodaTime/xdocs/upgradeto130.xml
 delete mode 100644 JodaTime/xdocs/upgradeto140.xml
 delete mode 100644 JodaTime/xdocs/upgradeto150.xml
 delete mode 100644 JodaTime/xdocs/upgradeto151.xml
 delete mode 100644 JodaTime/xdocs/upgradeto152.xml
 delete mode 100644 JodaTime/xdocs/upgradeto160.xml
 delete mode 100644 JodaTime/xdocs/upgradeto161.xml
 delete mode 100644 JodaTime/xdocs/userguide.xml

diff --git a/JodaTime/xdocs/cal_buddhist.xml b/JodaTime/xdocs/cal_buddhist.xml
deleted file mode 100644
index 1ffc4552c..000000000
--- a/JodaTime/xdocs/cal_buddhist.xml
+++ /dev/null
@@ -1,57 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Buddhist calendar system</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Buddhist calendar system">
-<p>
-The Buddhist calendar system implemented in Joda-Time is based on that supplied
-in the private Sun packages of a typical JDK.
-It differs from the <a href="cal_gj.html">GregorianJulian</a> calendar only in the
-year and era.
-The Buddhist calendar has one era (the current era), and has a year offset by 543
-from the current Gregorian year.
-</p>
-<p>
-It appears that Sun developed the Buddhist Calendar system to meet the needs of Thailand.
-However, the calendar is only accurate from 1941-01-01 (ISO).
-Before that date Thailand used three other calendar systems.
-The BuddhistChronology follows the design of the BuddhistCalendar.
-It is hoped that in the future an accurate Thai chronology can be developed.
-</p>
-<p>
-References
-<ul>
-<li><a href="http://en.wikipedia.org/wiki/Thai_solar_calendar">Wikipedia - Thai Solar Calendar</a></li>
-<li><a href="http://en.wikipedia.org/wiki/Thai_lunar_calendar">Wikipedia - Thai Lunar Calendar</a></li>
-<li><a href="http://www.faqs.org/faqs/thai/culture/section-5.html">Thai Calendar FAQs</a></li>
-</ul>
-</p>
-</section>
-
-<section name="Using Buddhist chronology in Joda-Time">
-<p>
-Within Joda-Time the Buddhist calendar system can be used by obtaining an
-instance of <a href="apidocs/org/joda/time/chrono/BuddhistChronology.html">BuddhistChronology</a>.
-This is normally created using the factory method
-<a href="apidocs/org/joda/time/chrono/BuddhistChronology.html#getInstance()">BuddhistChronology.getInstance()</a>.
-This is then passed into the constructors of the main date and time classes.
-</p>
-<source>
-// setup date object for midday on May Day 2004 (ISO year 2004)
-DateTime dtISO = new DateTime(2004, 5, 1, 12, 0, 0, 0);
-
-// find out what the same instant is using the Buddhist Chronology
-DateTime dtBudd = dtISO.withChronology(BuddhistChronology.getInstance());
-</source>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/cal_coptic.xml b/JodaTime/xdocs/cal_coptic.xml
deleted file mode 100644
index edf2dcc01..000000000
--- a/JodaTime/xdocs/cal_coptic.xml
+++ /dev/null
@@ -1,61 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Coptic calendar system</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Coptic calendar system">
-<p>
-The Coptic calendar system is based on that used in ancient Egypt.
-It is sometimes referred to as the Alexandrian Calendar.
-The calendar system is in use today by the Coptic Orthodox Church and by farmers
-tracking the seasons in Egypt.
-</p>
-<p>
-The Coptic calendar system consists of 12 months of exactly 30 days, followed by
-a 5 or 6 day intercalary month making a year of 365 or 366 days.
-Leap years (6 day intercalary month) occur every 4 years without exception (as per the Julian calendar).
-They occur when the remainder left after dividing the Coptic year by four is 3.
-The Coptic year starts on Septamber 11th/12th depending on leap years.
-The epoch date for the calendar is 0284-08-29 (Julian), which therefore is 0001-01-01 (Coptic).
-The current era is 'AM' (Anno Martyrum or Year of the Martyrs).
-</p>
-<p>
-Joda-Time implements the rules described above.
-We model the 5 or 6 day intercalary month as month 13.
-We also prevent the entry of dates before year 1.
-</p>
-<p>
-References
-<ul>
-<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
-<li><a href="http://en.wikipedia.org/wiki/Coptic_calendar">Wikipedia - Coptic Calendar</a></li>
-</ul>
-</p>
-</section>
-
-<section name="Using Coptic chronology in Joda-Time">
-<p>
-Within Joda-Time the Coptic calendar system can be used by obtaining an
-instance of <a href="apidocs/org/joda/time/chrono/CopticChronology.html">CopticChronology</a>.
-This is normally created using the factory method
-<a href="apidocs/org/joda/time/chrono/CopticChronology.html#getInstance()">CopticChronology.getInstance()</a>.
-This is then passed into the constructors of the main date and time classes.
-</p>
-<source>
-// setup date object for midday on May Day 2004 (ISO year 2004)
-DateTime dtISO = new DateTime(2004, 5, 1, 12, 0, 0, 0);
-
-// find out what the same instant is using the Coptic Chronology
-DateTime dtCopt = dtISO.withChronology(CopticChronology.getInstance());
-</source>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/cal_ethiopic.xml b/JodaTime/xdocs/cal_ethiopic.xml
deleted file mode 100644
index 46cfb225d..000000000
--- a/JodaTime/xdocs/cal_ethiopic.xml
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Coptic calendar system</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Ethiopic calendar system">
-<p>
-The Ethiopic calendar system is similiar to the
-<a href="cal_coptic.html">Coptic</a> calendar and based on that used in ancient Egypt.
-The calendar system is in use today in Ethiopia.
-</p>
-<p>
-The Ethiopic calendar system consists of 12 months of exactly 30 days, followed by
-a 5 or 6 day intercalary month making a year of 365 or 366 days.
-Leap years (6 day intercalary month) occur every 4 years without exception (as per the Julian calendar).
-They occur when the remainder left after dividing the Ethiopic year by four is 3.
-The Ethiopic year starts on Septamber 11th/12th depending on leap years.
-The epoch date for the calendar is 0008-08-29 (Julian), which therefore is 0001-01-01 (Ethiopic).
-The current era is 'EE' (Ethiopian Era).
-</p>
-<p>
-Joda-Time implements the rules described above.
-We model the 5 or 6 day intercalary month as month 13.
-We also prevent the entry of dates before year 1.
-</p>
-<p>
-References
-<ul>
-<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
-<li><a href="http://en.wikipedia.org/wiki/Ethiopian_calendar">Wikipedia - Ethiopic Calendar</a></li>
-</ul>
-</p>
-</section>
-
-<section name="Using Ethiopic chronology in Joda-Time">
-<p>
-Within Joda-Time the Ethiopic calendar system can be used by obtaining an
-instance of <a href="apidocs/org/joda/time/chrono/EthiopicChronology.html">EthiopicChronology</a>.
-This is normally created via the
-<a href="apidocs/org/joda/time/chrono/EthiopicChronology.html#getInstance()">EthiopicChronology.getInstance()</a> factory.
-The chronology is then passed into the constructors of the main date and time classes.
-</p>
-<source>
-// setup date object for midday on May Day 2004 (ISO year 2004)
-DateTime dtISO = new DateTime(2004, 5, 1, 12, 0, 0, 0);
-
-// find out what the same instant is using the Ethiopic Chronology
-DateTime dtEthiopic = dtISO.withChronology(EthiopicChronology.getInstance());
-</source>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/cal_gj.xml b/JodaTime/xdocs/cal_gj.xml
deleted file mode 100644
index 054e85f2a..000000000
--- a/JodaTime/xdocs/cal_gj.xml
+++ /dev/null
@@ -1,66 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - GregorianJulian (GJ) calendar system</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="GregorianJulian (GJ) calendar system">
-<p>
-The GregorianJulian calendar system is the fusion of the two calendar systems
-in the Christian or Roman tradition.
-This calendar system is widely used today throughout the world, and is
-especially useful for historical work.
-</p>
-<p>
-The GregorianJulian calendar is a combination of two separate calendar systems,
-the <a href="cal_gregorian.html">Gregorian</a> and the <a href="cal_julian.html">Julian</a>.
-The switch from one to the other occurs at a configurable date.
-The default date is 1582-10-15, as defined by Pope Gregory XIII.
-</p>	
-<p>
-The two calendar systems differ mainly in their accuracy of recording leap years.
-The Julian calendar defines a leap year as being once every four years.
-The Gregorian calendar adds two extra rules to state that years divisible by 100 are not leap, but those divisible by 400 are.
-</p>
-<p>
-Joda-Time defines this calendar system using the GJChronology.
-This is a replacement for the JDK GregorianCalendar.
-If you intend to only refer to modern dates (after 1583) then you should use the
-Joda-Time default of <a href="cal_iso.html">ISO</a> chronology.
-</p>
-<p>
-References
-<ul>
-<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
-<li><a href="http://en.wikipedia.org/wiki/Gregorian_calendar">Wikipedia - Gregorian Calendar</a></li>
-</ul>
-</p>
-</section>
-
-<section name="Using GregorianJulian in Joda-Time">
-<p>
-Within Joda-Time the GregorianJulian calendar system can be used by obtaining an
-instance of <a href="apidocs/org/joda/time/chrono/GJChronology.html">GJChronology</a>.
-This is normally created using the factory method
-<a href="apidocs/org/joda/time/chrono/GJChronology.html#getInstance()">GJChronology.getInstance()</a>.
-This is then passed into the constructors of the main date and time classes.
-</p>
-<source>
-// setup date object for the Battle of Hastings in 1066
-Chronology chrono = GJChronology.getInstance();
-DateTime dt = new DateTime(1066, 10, 14, 10, 0, 0, 0, chrono);
-</source>
-<p>
-If you want to change the cutover date between Julian and Gregorian, you will need
-to use the other factory methods on GJChronology.
-</p>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/cal_gregorian.xml b/JodaTime/xdocs/cal_gregorian.xml
deleted file mode 100644
index d417f837b..000000000
--- a/JodaTime/xdocs/cal_gregorian.xml
+++ /dev/null
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Gregorian calendar system</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Gregorian calendar system">
-<p>
-The Gregorian calendar system is calendar system used by most of the modern business world.
-It was first introduced on 1582-10-15 replacing the <a href="cal_julian.html">Julian</a> calendar.
-Gregorian rules define a leap year as once every four years, except every 100, but including every 400.
-</p>
-<p>
-The Gregorian chronology in Joda-Time is equivalent* to the ISO chronology, and uses
-Gregorian rules for all time. Thus it is not historically accurate before 1583.
-This also means that the Gregorian chronology does not correspond to the java class
-<code>GregorianCalendar</code>. See <a href="cal_gj.html">GregorianJulian</a> for a
-suitable replacement.
-</p>
-<p>
-* The Gregorian and ISO chronologies do in fact differ slightly.
-The Gregorian chronology defines a century as it is spoken,
-thus 2005 is in the 21st century.
-The ISO chronology defines a century as the first two digits of the year,
-thus 2005 has a century field of 20.
-</p>
-<p>
-References
-<ul>
-<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
-<li><a href="http://en.wikipedia.org/wiki/Gregorian_calendar">Wikipedia - Gregorian Calendar</a></li>
-</ul>
-</p>
-</section>
-
-<section name="Using Gregorian chronology in Joda-Time">
-<p>
-Within Joda-Time the Gregorian calendar system can be used by obtaining an
-instance of <a href="apidocs/org/joda/time/chrono/GregorianChronology.html">GregorianChronology</a>.
-This is normally created using the factory method
-<a href="apidocs/org/joda/time/chrono/GregorianChronology.html#getInstance()">GregorianChronology.getInstance()</a>.
-This is then passed into the constructors of the main date and time classes.
-</p>
-<source>
-// setup date object for midday on Christmas 2004
-Chronology chrono = GregorianChronology.getInstance();
-DateTime dt = new DateTime(2004, 12, 25, 12, 0, 0, 0, chrono);
-</source>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/cal_islamic.xml b/JodaTime/xdocs/cal_islamic.xml
deleted file mode 100644
index 350743efd..000000000
--- a/JodaTime/xdocs/cal_islamic.xml
+++ /dev/null
@@ -1,104 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Islamic calendar system</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Islamic calendar system">
-<p>
-The Islamic, or Hijri, calendar system is a Lunar calendar used
-in many Muslim countries.
-</p>
-<p>
-The Islamic calendar system is a lunar calendar based on observation.
-The observation aspect of the calendar means that a new month can only
-be declared based on human observations of the moon, something
-which can obviously vary and is unsuited to computer calculation.
-</p>
-<p>
-Joda-Time implements the arithmetic Islamic calendar, which is an 
-approximation of the actual calendar.
-There are 12 months, each of 29 or 30 days, making a year of 354 days, or 355 in a leap year.
-The days in the month alternate, with the first month having 30 days,
-the second 29 days and so on.
-In a leap year, the twelfth month has 30 days instead of the normal 29.
-</p>
-<p>
-The definition of a leap year in the Islamic calendar varies.
-All agree on a 30 year cycle, however which years within the 30 are leap
-varies by the leap year pattern:
-</p>
-<table>
-<tr>
-<td>15-based</td>
-<td>2, 5, 7, 10, 13, 15, 18, 21, 24, 26, 29</td>
-</tr>
-<tr>
-<td>16-based</td>
-<td>2, 5, 7, 10, 13, 16, 18, 21, 24, 26, 29</td>
-</tr>
-<tr>
-<td>Indian</td>
-<td>2, 5, 8, 10, 13, 16, 19, 21, 24, 27, 29</td>
-</tr>
-<tr>
-<td>Habash al-Hasib</td>
-<td>2, 5, 8, 11, 13, 16, 19, 21, 24, 27, 30</td>
-</tr>
-</table>
-<p>
-Joda-Time allows you to choose between these leap year patterns.
-The 16-based algorithm is the most commonly used, and is the default.
-Note that Microsoft uses the 15-based pattern, and calls it the 'Kuwaiti algorithm'.
-</p>
-<p>
-The epoch of the calendar system is 0622-07-16 (Julian) which is therefore 0001-01-01 (Islamic).
-The current (and only implemented) era is 'AH' (Anno Hegirae).
-</p>
-<p>
-Days of the week are named 'the first day', 'the second day' and so on, where
-Sunday is the first day.
-The day of the week value (numeric) returned by Joda-Time however, is the same
-as the ISO day of week definition.
-Thus Sunday will return the numeric value 7, and Monday will return the numeric value 1.
-</p>
-<p>
-A day in the Islamic calendar begins at sunset on the previous 'day'.
-Joda-Time does not model this, thus times and date rollover follow standard
-ISO definitions, in other words starting at midnight.
-</p>
-<p>
-References
-<ul>
-<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
-<li><a href="http://en.wikipedia.org/wiki/Islamic_calendar">Wikipedia - Islamic Calendar</a></li>
-<li><a href="http://www.phys.uu.nl/~vgent/islam/islamyear_en.htm">Islamic calendar converter</a></li>
-</ul>
-</p>
-</section>
-
-<section name="Using Islamic chronology in Joda-Time">
-<p>
-Within Joda-Time the Islamic calendar system can be used by obtaining an
-instance of <a href="apidocs/org/joda/time/chrono/IslamicChronology.html">IslamicChronology</a>.
-This is normally created via the
-<a href="apidocs/org/joda/time/chrono/IslamicChronology.html#getInstance()">IslamicChronology.getInstance()</a> factory.
-The chronology is then passed into the constructors of the main date and time classes.
-</p>
-<source>
-// setup date object for midday on May Day 2004 (ISO year 2004)
-DateTime dtISO = new DateTime(2004, 5, 1, 12, 0, 0, 0);
-
-// find out what the same instant is using the Islamic Chronology
-DateTime dtIslamic = dtISO.withChronology(IslamicChronology.getInstance());
-</source>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/cal_iso.xml b/JodaTime/xdocs/cal_iso.xml
deleted file mode 100644
index 2a7d0f3be..000000000
--- a/JodaTime/xdocs/cal_iso.xml
+++ /dev/null
@@ -1,128 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - ISO8601 calendar system</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="ISO8601 Java calendar system">
-<p>
-The ISO 8601 calendar system is the default implementation within Joda-Time.
-The standard formalises the <a href="cal_gregorian.html">Gregorian</a> calendar
-system used by the modern business world.
-</p>
-<p>
-The ISO8601 standard was created by the International Organization for Standards based in Geneva.
-It aims to eliminate the risk of misinterpretting dates and times when representations
-are passed between systems and across national boundaries.
-We are unable to provide a direct link to the standard as it is a paid-for document.
-However some <a href="http://www.exit109.com/~ghealton/.dates.html#@Standards.ISO.8601.Commentary.Links">ISO8601 links</a> may be useful.
-</p>
-<p>
-The ISO8601 standard is based on the <i>proleptic Gregorian calendar</i>.
-This makes it fully compatible with the calendar system used in most countries today.
-The <i>proleptic</i> means that the Gregorian rules for leap years are applied for all time,
-thus the ISO8601 standard gives different results for dates before the year 1583 when
-the historic cutover from the Julian calendar occurred.
-</p>
-<p>
-The standard sets out a framework within which dates and times can be represented.
-It offers many choices, however in reality there are three main date representations,
-year month day, year dayOfYear and year week dayOfWeek.
-</p>
-<p>
-References
-<ul>
-<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
-<li><a href="http://www.exit109.com/~ghealton/.dates.html#@Standards.ISO.8601.Commentary.Links">ISO8601 links</a></li>
-<li><a href="http://en.wikipedia.org/wiki/ISO8601">Wikipedia - ISO Calendar</a></li>
-</ul>
-</p>
-
-<subsection name="Month based">
-<p>
-yyyy-mm-dd<b>T</b>HH:MM:SS.SSS<br />
-This is the most common format of ISO8601 and separates the fields by dashes.
-The fields are:
-<ul>
-<li>four digit year</li>
-<li>two digit month, where 01 is Janurary and 12 is December</li>
-<li>two digit day of month, from 01 to 31</li>
-<li>two digit hour, from 00 to 23</li>
-<li>two digit minute, from 00 to 59</li>
-<li>two digit second, from 00 to 59</li>
-<li>three decimal places for milliseconds if required</li>
-</ul>
-This format is used in XML standards for passing dates and times.
-</p>
-</subsection>
-
-<subsection name="Day of Year based">
-<p>
-yyyy-ddd<b>T</b>HH:MM:SS.SSS<br />
-This format of ISO8601 has the following fields:
-<ul>
-<li>four digit year</li>
-<li>three digit day of year, from 001 to 366</li>
-<li>two digit hour, from 00 to 23</li>
-<li>two digit minute, from 00 to 59</li>
-<li>two digit second, from 00 to 59</li>
-<li>three decimal places for milliseconds if required</li>
-</ul>
-</p>
-</subsection>
-
-<subsection name="Week based">
-<p>
-yyyy-<b>W</b>ww-d<b>T</b>HH:MM:SS.SSS<br />
-This format of ISO8601 has the following fields:
-<ul>
-<li>four digit weekyear, see rules below</li>
-<li>two digit week of year, from 01 to 53</li>
-<li>one digit day of week, from 1 to 7 where 1 is Monday and 7 is Sunday</li>
-<li>two digit hour, from 00 to 23</li>
-<li>two digit minute, from 00 to 59</li>
-<li>two digit second, from 00 to 59</li>
-<li>three decimal places for milliseconds if required</li>
-</ul>
-Weeks are always complete, and the first week of a year is the one that includes the first Thursday of the year.
-This definition can mean that the first week of a year starts in the previous year, and the last week finishes in the next year.
-The weekyear field is defined to refer to the year that owns the week, which may differ from the actual year.
-</p>
-</subsection>
-
-</section>
-
-<section name="Using ISO8601 in Joda-Time">
-<p>
-Within Joda-Time the ISO8601 calendar system is the default. As such, all methods
-that take a chronology as a parameter will use the ISO chronology if null is passed in.
-There is almost always a version of the method without the chronology parameter, and this
-will default to ISO chronology.
-</p>
-<p>
-The actual chronology class is
-<a href="apidocs/org/joda/time/chrono/ISOChronology.html">ISOChronology</a>.
-This is normally created if required using the factory method
-<a href="apidocs/org/joda/time/chrono/ISOChronology.html#getInstance()">ISOChronology.getInstance()</a>.
-</p>
-<source>
-// setup date object for midday on Christmas 2004 (default time zone)
-DateTime dt = new DateTime(2004, 12, 25, 12, 0, 0, 0);
-
-// or specify the chronology explicitly
-Chronology chrono = ISOChronology.getInstance();
-DateTime dt = new DateTime(2004, 12, 25, 12, 0, 0, 0, chrono);
-
-// or use the default null handling behaviour
-DateTime dt = new DateTime(2004, 12, 25, 12, 0, 0, 0, (Chronology) null);
-</source>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/cal_julian.xml b/JodaTime/xdocs/cal_julian.xml
deleted file mode 100644
index a84d861e4..000000000
--- a/JodaTime/xdocs/cal_julian.xml
+++ /dev/null
@@ -1,52 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Julian calendar system</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Julian calendar system">
-<p>
-The Julian calendar system is calendar system that was widely used from about 4CE to 1582CE.
-It was replaced by the <a href="cal_gregorian.html">Gregorian</a> calendar on 1582-10-15.
-The Julian calendar defines a leap year as once every four years.
-This becomes inaccurate over time, to such an extent that by 1582, 10 days had to be
-'lost' to correct the calendar.
-</p>
-<p>
-The Julian calendar is represented in Joda-Time by the Julian chronology.
-This chronology applies Julian rules for all time.
-Normally, a more accurate historic calendar is found by using the
-<a href="cal_gj.html">GregorianJulian</a> chronology instead.
-</p>
-<p>
-References
-<ul>
-<li>Calendrical Calculations - Millenium Edition - ISBN 0521777526</li>
-<li><a href="http://en.wikipedia.org/wiki/Julian_calendar">Wikipedia - Julian Calendar</a></li>
-</ul>
-</p>
-</section>
-
-<section name="Using Julian chronology in Joda-Time">
-<p>
-Within Joda-Time the Julian calendar system can be used by obtaining an
-instance of <a href="apidocs/org/joda/time/chrono/JulianChronology.html">JulianChronology</a>.
-This is normally created using the factory method
-<a href="apidocs/org/joda/time/chrono/JulianChronology.html#getInstance()">JulianChronology.getInstance()</a>.
-This is then passed into the constructors of the main date and time classes.
-</p>
-<source>
-// setup date object for the Battle of Hastings in 1066
-Chronology chrono = JulianChronology.getInstance();
-DateTime dt = new DateTime(1066, 10, 14, 10, 0, 0, 0, chrono);
-</source>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/faq.xml b/JodaTime/xdocs/faq.xml
deleted file mode 100644
index fb169b41d..000000000
--- a/JodaTime/xdocs/faq.xml
+++ /dev/null
@@ -1,289 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - FAQ</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
-  <author email="broneill.at.users.sourceforge.net">Brian S O'Neill</author>
- </properties>
-
- <body>
-
-<section name="Frequently Asked Questions">
-<p>
-Some common questions about Joda-Time are answered here.
-<ul>
-<li><a href="#newzonerules">Does Joda-Time support the 2007 US and Canada time zone rules?</a></li>
-<li><a href="#datediff">How do I calculate the difference between two dates?</a></li>
-<li><a href="#iso">What is ISO8601?</a></li>
-<li><a href="#default">Why is ISO8601 the default?</a></li>
-<li><a href="#internalstorage">How are times calculated internally?</a></li>
-<li><a href="#long">Why limit to the number of milliseconds in a long?</a></li>
-<li><a href="#range">What date range is supported?</a></li>
-<li><a href="#submilli">What about sub-millisecond accuracy?</a></li>
-<li><a href="#performance">How well does it perform?</a></li>
-<li><a href="#threading">Does it support multi-threading?</a></li>
-<li><a href="#leapseconds">Are leap seconds supported?</a></li>
-<li><a href="#numberclasses">There are lots of classes, do I need to learn them all?</a></li>
-<li><a href="#tzreimplement">Why reimplement TimeZone?</a></li>
-<li><a href="#joda">What is with the name 'joda'?</a></li>
-</ul>
-Question not answered? Suggest one via the <a href="mail-lists.html">mailing list</a>.<br></br>
-</p>
-
-
-<a name="newzonerules" />
-<subsection name="Does Joda-Time support the 2007 US and Canada time zone rules?">
-<p>
-The time zone rules occur in three key places, your operating system, the JDK and Joda-Time.
-To be sure of hitting no issues, you should ensure that all three of these have been updated.
-</p>
-<p>
-Version 1.5 of Joda-Time contains all the daylight savings rule updates for the 2007 US change.
-For earlier versions of Joda-Time the situation is more complex:
-</p>
-<p>
-If your application only uses the major time zones of the US, then you need Joda-Time 1.2 or later.
-If your application also uses the major time zones of the Canada, then you need Joda-Time 1.2.1 or later.
-If your application uses the minor time zones of the US or Canada, then you need Joda-Time 1.4 or later.
-For Bermuda (Atlantic/Bermuda) you need Joda-Time 1.4 or later.
-For the Bahamas (America/Nassau) you need Joda-Time 1.5.
-</p>
-<p>
-For any future, or similar time zone change, you can upgrade your Joda-Time jar by following <a href="tz_update.html">these instructions</a>.
-</p>
-</subsection>
-
-<a name="datediff" />
-<subsection name="How do I calculate the difference between two dates?">
-<p>
-This question has more than one answer!
-If you just want the number of whole days between two dates, then you can use the
-new <a href="api-release/index.html?org/joda/time/Days.html">Days</a> class
-in version 1.4 of Joda-Time.
-<source>
-  Days d = Days.daysBetween(startDate, endDate);
-  int days = d.getDays();
-</source>
-This method, and other static methods on the <code>Days</code> class have been
-designed to operate well with the JDK5 static import facility.
-</p>
-<p>
-If however you want to calculate the number of days, weeks, months and years between
-the two dates, then you need a <a href="api-release/index.html?org/joda/time/Period.html">Period</a>
-By default, this will split the difference between the two datetimes into parts,
-such as "1 month, 2 weeks, 4 days and 7 hours".
-<source>
-  Period p = new Period(startDate, endDate);
-</source>
-You can control which fields get extracted using a
-<a href="api-release/index.html?org/joda/time/PeriodType.html">PeriodType</a>.
-<source>
-  Period p = new Period(startDate, endDate, PeriodType.yearMonthDay());
-</source>
-This example will return not return any weeks or time fields, thus the previous
-example becomes "1 month and 18 days".
-</p>
-<p>
-For more info, consult the <a href="key_period.html">period guide</a>.
-</p>
-</subsection>
-
-<a name="iso" />
-<subsection name="What is ISO-8601?">
-<p>
-Historically, every country has found their own solution to measuring time.
-This has often been political and religious.
-To simplify the problem, especially in the realm of computer data transfer, the
-<a href="cal_iso.html">ISO-8601</a> standard was founded.
-</p>
-<p>
-The ISO standard defines a framework for passing dates and times between computer systems in a standard way.
-The standard uses the proleptic Gregorian calendar.
-This makes it fully compatible with the calendar system used in most of the world after 1582.
-The standard warns that it may only be used to represent dates before 1582 'by mutual agreement'.
-</p>
-<p>
-The standard defines twelve months January to December numbered 1 to 12 and
-seven days Monday to Sunday, numbered 1 to 7.
-In addition it defines the first week of the year as the first week to have most of its days in the new year.
-This can result in the first week of a year starting in the previous year and the last week ending in the following year.
-</p>
-<p>
-The key point about ISO-8601 is that it is a framework for dates not an absolute single definition.
-The most common form is YYYY-MM-DDTHH:MM:SS.SSSZ, in other words year-month-day letter 'T' hour:minute:second and fractions.
-</p>
-</subsection>
-
-
-<a name="default" />
-<subsection name="Why is ISO8601 the default?">
-<p>
-Dates and times can be a localization nightmare (or should that be localisation...).
-Often political, geographic and religious factors have come into play.
-We wanted to avoid these factors if possible.
-</p>
-<p>
-The ISO8601 standard is a good choice because it is a standard designed for computer
-data transfer and developed by a standards body. It is also a good choice because it
-is compatible with the calendar system used by most businesses worldwide today.
-Finally, it is a good choice as it forces API users to think about the decision they
-make if they require non-ISO or historically accurate calendar systems.
-</p>
-</subsection>
-
-
-<a name="internalstorage" />
-<subsection name="How are times calculated internally?">
-<p>
-The main time interface is <a href="apidocs/org/joda/time/ReadableInstant.html">ReadableInstant</a>.
-All classes that implement this interface, such as <code>DateTime</code>,
-store time as a single long value representing milliseconds.
-The epoch of the definition is 1970-01-01T00:00:00Z, which is the same as the JDK time definition and usage.
-Querying a field, such as year or hour, will calculate the value from the millisecond instant.
-</p>
-<p>
-A secondary time interface is  <a href="apidocs/org/joda/time/ReadablePartial.html">ReadablePartial</a>.
-Classes implementing this interface store data in two ways. The 'local' classes, such as <code>LocalDate</code>
-and <code>LocalTime</code> store the number of milliseconds from 1970 without a time zone.
-All other implementations, such as <code>YearMonthDay</code> and <code>TimeOfDay</code>,
-store time as a one int value for each field.
-</p>
-</subsection>
-
-
-<a name="long" />
-<subsection name="Why limit to the number of milliseconds in a long?">
-<p>
-There are three main reasons for using a single long value to store the time.
-<ol>
-<li>Compatibility - being compatible with the JDK makes conversion simpler</li>
-<li>Performance - a primitive value enables fast calculations,
-whereas alternatives generally involve lots of expensive object creation</li>
-<li>Big enough - the range provided by a millisecond based solution is big enough for most needs</li>
-</ol>
-</p>
-</subsection>
-
-
-<a name="range" />
-<subsection name="What date range is supported?">
-<p>
-The range supported is -292,269,054 to 292,277,023.
-In other words, roughly +/- 290 million years to millisecond precision.
-</p>
-<p>
-If you want a date outside this range, ask yourself if you really want millisecond precision.
-In reality, dates this far in the past or future should only be stored as years - 
-anything else is meaningless.
-</p>
-</subsection>
-
-
-<a name="submilli" />
-<subsection name="What about sub-millisecond accuracy?">
-<p>
-Joda-Time does not support accuracy of times below millisecond.
-Physics defines time scales down to 5E-44 secs.
-The only way to accurately record these sorts of times is using the BigInteger class.
-This would severely compromise the performance of the whole API for a very limited use.
-</p>
-</subsection>
-
-
-<a name="performance" />
-<subsection name="How well does it perform?">
-<p>
-Joda-Time is designed for performance. Compared to java.util.Calendar,
-java.text.SimpleDateFormat, and java.util.TimeZone, nearly all equivalent
-operations in Joda-Time are faster. The significant exceptions are operations
-to get or set an individual field.
-</p>
-<p>
-Calling "get" on java.util.Calendar is very fast because it doesn't do any
-work. Calendar calculates all fields in advance, even if many of those fields
-you won't need. Calendar's set method is fast because it defers calculations
-until later. Calling Calendar.get after calling Calendar.set forces all the
-field values to be re-calculated. Calling Joda's DateTime.get method after
-calling DateTime.set only performs the minimum amount of calculations, and the
-pair is faster than Calendar.
-</p>
-<p>
-Joda-Time also allocates very few temporary objects during operations, and
-performs almost no thread synchronization. In systems that are heavily
-multi-threaded or use a lot of memory, Calendar, SimpleDateFormat, and TimeZone
-can become bottlenecks. When the Joda-Time classes are used instead, the
-bottlenecks go away.
-</p>
-</subsection>
-
-
-<a name="threading" />
-<subsection name="Does it support multi-threading?">
-<p>
-Every public class in Joda-Time is documented as being thread-safe or not.
-Joda-Time makes heavy use of the immutability design pattern, and all immutable
-classes in Joda-Time are thread-safe. Many mutable classes whose instances are
-not likely to be shared are not thread-safe, and are documented as such.
-</p>
-<p>
-The most common multi-threading mistake made by Java programmers is in the use
-of SimpleDateFormat. Calling its format method on a shared instance by
-concurrent threads can produce bizarre results. All of Joda-Time's formatting
-classes are thread-safe and immutable.
-</p>
-</subsection>
-
-
-<a name="leapseconds" />
-<subsection name="Are leap seconds supported?">
-<p>
-Joda-Time does not support leap seconds. Leap seconds can be supported by
-writing a new, specialized chronology, or by making a few enhancements to the
-existing ZonedChronology class. In either case, future versions of Joda-Time
-will not enable leap seconds by default. Most applications have no need for it,
-and it might have additional performance costs.
-</p>
-</subsection>
-
-
-<a name="numberclasses" />
-<subsection name="There are lots of classes, do I need to learn them all?">
-<p>
-No, you only need to learn a small subset of the classes in the API.
-The javadoc clearly indicates which packages contain user classes, and which contain
-implementation classes.
-In addition, there are a large number of package scoped classes, which are hidden
-in the javadoc view anyway.
-Most applications will not need to directly import, extend or implement classes in
-the implementation packages.
-Basically, the API consists of the main package, plus the formatting package.
-</p>
-</subsection>
-
-
-<a name="tzreimplement" />
-<subsection name="Why reimplement TimeZone?">
-<p>
-The JDK TimeZone class varies in the support it can provide from one JDK release to another.
-The rules for determining Daylight Saving Time also change frequently.
-The Joda solution uses the international standard format for time zone rule data,
-and allows it to be updated independently of the timing of JDK releases.
-With perhaps 8 releases of the time zone rules per year this can be quite significant.
-</p>
-</subsection>
-
-
-<a name="joda" />
-<subsection name="What is with the name 'joda'?">
-<p>
-'Joda' is a short, four letter name, beginning with 'j' whose domain name was free.
-It is not an acronym.
-</p>
-</subsection>
-
-
-</section>
-</body>
-</document>
diff --git a/JodaTime/xdocs/field.xml b/JodaTime/xdocs/field.xml
deleted file mode 100644
index 79538488c..000000000
--- a/JodaTime/xdocs/field.xml
+++ /dev/null
@@ -1,488 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Fields</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Date and Time fields">
-<p>
-The library breaks up the date and time into a number of fields. This document
-defines what those fields mean.
-</p>
-<p>
-A naming convention is used to define the fields. These correspond to the common 
-names given to date and time concepts in the Gregorian calendar.
-</p>
-<p>Most fields are a view over part of the total time.
-These fields are expressed as <code>XxxOfYyy</code> where <code>Xxx</code> and <code>Yyy</code> are two date time units.
-<code>Yyy</code> will always be larger than <code>Xxx</code>.
-For example, <code>DayOfWeek</code> or <code>SecondOfMinute</code>.
-A side effect of this is that these field values cannot be negative.
-</p>
-<p>
-Certain fields extend over all time, and do not include the word 'Of' in their names.
-For example, <code>year</code> and <code>weekyear</code>.
-These fields can have negative values (see the table for details).
-</p>
-<p>
-The fields are explained in more detail below (for the GJChronology):
-</p>
-<table cols="3" border="1">
-<tr>
-<th>Name</th>
-<th>Min value (GJ)</th>
-<th>Max value (GJ)</th>
-<th>Notes</th>
-</tr><tr>
-<td><a href="#millisOfSecond">millisOfSecond</a></td>
-<td align="center">0</td>
-<td align="center">999</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#millisOfDay">millisOfDay</a></td>
-<td align="center">0</td>
-<td align="center">86 399 999</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#secondOfMinute">secondOfMinute</a></td>
-<td align="center">0</td>
-<td align="center">59</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#secondOfDay">secondOfDay</a></td>
-<td align="center">0</td>
-<td align="center">86 399</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#minuteOfHour">minuteOfHour</a></td>
-<td align="center">0</td>
-<td align="center">59</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#minuteOfDay">minuteOfDay</a></td>
-<td align="center">0</td>
-<td align="center">1439</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#hourOfDay">hourOfDay</a></td>
-<td align="center">0</td>
-<td align="center">23</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#hourOfHalfday">hourOfHalfday</a></td>
-<td align="center">0</td>
-<td align="center">11</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#hourOfDay">clockhourOfDay</a></td>
-<td align="center">1</td>
-<td align="center">24</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#hourOfHalfday">clockhourOfHalfday</a></td>
-<td align="center">1</td>
-<td align="center">12</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#halfdayOfDay">halfdayOfDay</a></td>
-<td align="center">0 (AM)</td>
-<td align="center">1 (PM)</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#dayOfWeek">dayOfWeek</a></td>
-<td align="center">1 (Monday)</td>
-<td align="center">7 (Sunday)</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#weekOfWeekyear">weekOfWeekyear</a></td>
-<td align="center">1</td>
-<td align="center">53</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#weekyear">weekyear</a></td>
-<td align="center">-292 000 000</td>
-<td align="center">292 000 000</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#dayOfMonth">dayOfMonth</a></td>
-<td align="center">1</td>
-<td align="center">31</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#dayOfYear">dayOfYear</a></td>
-<td align="center">1</td>
-<td align="center">366</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#monthOfYear">monthOfYear</a></td>
-<td align="center">1 (January)</td>
-<td align="center">12 (December)</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#year">year</a></td>
-<td align="center">-292 000 000</td>
-<td align="center">292 000 000</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#yearOfCentury">yearOfCentury</a></td>
-<td align="center">1</td>
-<td align="center">100</td>
-<td align="center">[1]</td>
-</tr><tr>
-<td><a href="#yearOfEra">yearOfEra</a></td>
-<td align="center">1</td>
-<td align="center">292 000 000</td>
-<td><span></span></td>
-</tr><tr>
-<td><a href="#centuryOfEra">centuryOfEra</a></td>
-<td align="center">1</td>
-<td align="center">2 920 000</td>
-<td align="center">[2]</td>
-</tr><tr>
-<td><a href="#era">era</a></td>
-<td align="center">0 (BC/BCE)</td>
-<td align="center">1 (AD/CE)</td>
-<td><span></span></td>
-</tr>
-</table>
-<p>
-[1] For the ISOChronology, the year of century range is from 0 to 99.<br />
-[2] For the ISOChronology, the century of era range is from 0.<br />
-</p>
-
-<a name="millisOfSecond" />
-<subsection name="MillisOfSecond">
-<p>
-The number of milliseconds in the specified time once the second and larger parts are removed.
-</p>
-</subsection>
-
-
-<a name="millisOfDay" />
-<subsection name="MillisOfDay">
-<p>
-The number of milliseconds in the specified time once the day and larger parts are removed.
-</p>
-</subsection>
-
-
-<a name="secondOfMinute" />
-<subsection name="SecondOfMinute">
-<p>
-The number of seconds in the specified time once the minute and larger parts are removed.
-</p>
-</subsection>
-
-
-<a name="secondOfDay" />
-<subsection name="SecondOfDay">
-<p>
-The number of seconds in the specified time once the day and larger parts are removed.
-</p>
-</subsection>
-
-
-<a name="minuteOfHour" />
-<subsection name="MinuteOfHour">
-<p>
-The number of minutes in the specified time once the hour and larger parts are removed.
-</p>
-</subsection>
-
-
-<a name="minuteOfDay" />
-<subsection name="MinuteOfDay">
-<p>
-The number of minutes in the specified time once the day and larger parts are removed.
-</p>
-</subsection>
-
-
-<a name="hourOfDay" />
-<subsection name="HourOfDay">
-<p>
-The number of hours in the specified time once the day and larger parts are
-removed. The clockhour value represents midnight of the current day as 24
-instead of 0.
-</p>
-</subsection>
-
-<a name="hourOfHalfday" />
-<subsection name="HourOfHalfday">
-<p>
-The number of hours within the half day. The clockhour value represents
-midnight or noon of the current day as 12 instead of 0.
-</p>
-</subsection>
-
-<a name="halfdayOfDay" />
-<subsection name="HalfdayOfDay">
-<p>
-The AM/PM value of the day.
-</p>
-</subsection>
-
-<a name="dayOfWeek" />
-<subsection name="DayOfWeek">
-<p>
-The day of week is defined by constants in <code>DateTimeConstants</code>.
-The values used are from the ISO8601 standard.
-Monday is defined as 1, through to Sunday as 7.
-</p>
-</subsection>
-
-
-<a name="weekOfWeekyear" />
-<a name="weekyear" />
-<subsection name="WeekOfWeekyear and Weekyear">
-<p>
-A week based year is one where dates are expressed as a day of week, week number and year (week based).
-The following description is of the ISO8601 standard used by implementations of this method in this library.
-</p>
-<p>
-Weeks run from 1 to 52-53 in a week based year.
-The first day of the week is defined as Monday and given the value 1. 
-</p>
-<p>
-The first week of a year is defined as the first week that has at least four days in the year.
-As a result of this definition, week 1 may extend into the previous year, and week 52/53 may extend into the following year.
-Hence the need for the year of weekyear field.
-</p>
-<p>
-For example, 2003-01-01 was a Wednesday.
-This means that five days, Wednesday to Sunday, of that week are in 2003.
-Thus the whole week is considered to be the first week of 2003.
-Since all weeks start on Monday, the first week of 2003 started on 2002-12-30, ie. in 2002.
-</p>
-<p>
-The week based year has a specific text format.<br />
-2002-12-30 (Monday 30th December 2002) would be represented as 2003-W01-1.<br />
-2003-01-01 (Wednesday 1st January 2003) would be represented as 2003-W01-3.
-</p>
-</subsection>
-
-
-<a name="dayOfMonth" />
-<subsection name="DayOfMonth">
-<p>
-The day of the month. For the GJ and ISO chronologies, this will run from 1 through to 
-28 or 29 in February, 30 in April, June, September and November and 31 otherwise.
-</p>
-</subsection>
-
-
-<a name="dayOfYear" />
-<subsection name="DayOfYear">
-<p>
-The day of the year. This runs from 1 to 365, or 366 in leap years. 
-The exception is when a Julian to Gregorian cutover has occurred.
-In that case, the count is from 1 to 355 (typically) and is unbroken.
-</p>
-</subsection>
-
-
-<a name="monthOfYear" />
-<subsection name="MonthOfYear">
-<p>
-The month of year defined by constants in <code>DateTimeConstants</code>.
-The values used are from the ISO8601 standard.
-January is defined as 1, through to December as 12.
-</p>
-</subsection>
-
-
-<a name="year" />
-<subsection name="Year">
-<p>
-The year, using negative values to represent years in the previous era. For the
-GJ chronology, year zero is not included, unless the cutover to Gregorian is
-specified at or before 1 BCE. The ISO chronology always includes the year
-zero.
-</p>
-</subsection>
-
-<a name="centuryOfEra" />
-<a name="yearOfCentury" />
-<subsection name="CenturyOfEra and YearOfCentury">
-<p>
-The definition of these varies by chronology:
-</p>
-<table border="1">
-<tr>
-<th></th>
-<th colspan="3">GJ</th>
-<th colspan="3">ISO</th>
-</tr><tr>
-<th>year of era</th>
-<th>year</th>
-<th>century of era</th>
-<th>year of century</th>
-<th>year</th>
-<th>century of era</th>
-<th>year of century</th>
-</tr><tr>
-<td align="center">101 BCE</td>
-<td align="center">-101</td>
-<td align="center">2</td>
-<td align="center">1</td>
-<td align="center">-100</td>
-<td align="center">1</td>
-<td align="center">0</td>
-</tr><tr>
-<td align="center">100 BCE</td>
-<td align="center">-100</td>
-<td align="center">1</td>
-<td align="center">100</td>
-<td align="center">-99</td>
-<td align="center">0</td>
-<td align="center">99</td>
-</tr><tr>
-<td align="center">99 BCE</td>
-<td align="center">-99</td>
-<td align="center">1</td>
-<td align="center">99</td>
-<td align="center">-98</td>
-<td align="center">0</td>
-<td align="center">98</td>
-</tr><tr>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-</tr><tr>
-<td align="center">2 BCE</td>
-<td align="center">-2</td>
-<td align="center">1</td>
-<td align="center">2</td>
-<td align="center">-1</td>
-<td align="center">0</td>
-<td align="center">1</td>
-</tr><tr>
-<td align="center">1 BCE</td>
-<td align="center">-1</td>
-<td align="center">1</td>
-<td align="center">1</td>
-<td align="center">0</td>
-<td align="center">0</td>
-<td align="center">0</td>
-</tr><tr>
-<td align="center">1 CE</td>
-<td align="center">1</td>
-<td align="center">1</td>
-<td align="center">1</td>
-<td align="center">1</td>
-<td align="center">0</td>
-<td align="center">1</td>
-</tr><tr>
-<td align="center">2 CE</td>
-<td align="center">2</td>
-<td align="center">1</td>
-<td align="center">2</td>
-<td align="center">2</td>
-<td align="center">0</td>
-<td align="center">2</td>
-</tr><tr>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-</tr><tr>
-<td align="center">99 CE</td>
-<td align="center">99</td>
-<td align="center">1</td>
-<td align="center">99</td>
-<td align="center">99</td>
-<td align="center">0</td>
-<td align="center">99</td>
-</tr><tr>
-<td align="center">100 CE</td>
-<td align="center">100</td>
-<td align="center">1</td>
-<td align="center">100</td>
-<td align="center">100</td>
-<td align="center">1</td>
-<td align="center">0</td>
-</tr><tr>
-<td align="center">101 CE</td>
-<td align="center">101</td>
-<td align="center">2</td>
-<td align="center">1</td>
-<td align="center">101</td>
-<td align="center">1</td>
-<td align="center">1</td>
-</tr><tr>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-<td align="center">...</td>
-</tr><tr>
-<td align="center">1999 CE</td>
-<td align="center">1999</td>
-<td align="center">20</td>
-<td align="center">99</td>
-<td align="center">1999</td>
-<td align="center">19</td>
-<td align="center">99</td>
-</tr><tr>
-<td align="center">2000 CE</td>
-<td align="center">2000</td>
-<td align="center">20</td>
-<td align="center">100</td>
-<td align="center">2000</td>
-<td align="center">20</td>
-<td align="center">0</td>
-</tr><tr>
-<td align="center">2001 CE</td>
-<td align="center">2001</td>
-<td align="center">21</td>
-<td align="center">1</td>
-<td align="center">2001</td>
-<td align="center">20</td>
-<td align="center">1</td>
-</tr>
-</table>
-<p>
-For GJ this is consistent with phrases such '2003 is in the 21st century'.<br />
-For ISO this represents a straight split of a textual ISO8601 year.
-</p>
-</subsection>
-
-
-<a name="yearOfEra" />
-<subsection name="YearOfEra">
-<p>
-The year as generally known (always positive).
-Both the GJ and ISO chronologies return 1 for 1BC/BCE, 2 for 2BC/BCE etc.
-In other words there is no year zero and no negative value for this field.
-</p>
-</subsection>
-
-<a name="era" />
-<subsection name="Era">
-<p>
-The era expressed as a constant, zero for BC/BCE, one for AD/CE.
-</p>
-<p>
-Other chronologies should respect the convention that one is the current era and
-zero is the previous era.
-If more eras are required the values should increase numerically over time.
-</p>
-</subsection>
-
-</section>
-</body>
-</document>
diff --git a/JodaTime/xdocs/images/joda.png b/JodaTime/xdocs/images/joda.png
deleted file mode 100644
index 435df26a39732551d2f7ed9b1fdf288be1c83875..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2919
zcmY*bc{EgSAHT9>C)v0BESbp~S(CBGl$e?^_B~6ojwNKGWSNNUMkJ&mhRl>=EM>`7
zw&BN^Y$4f83=+Nf?T`1I_n!0I=bn4c{XEZozMtibLs(nzaEfyR0KfycG`j}QVc>wU
z9|P|ue%BJgi6g|);lD4L{tg?3&VRv&<Kgft=Eterg8UphIyI<i0N`SSn;D~`iq;(h
zt&rmqaY478CQY0sFSAysyvuRKb8CC3E1D8gl&uN|0<L~w7;mSh;`{CMyf15?_PMm@
zev$O4Gq6zXT!PpL?{n*rgh-9p#P4OVI2kQDc_X{@BUsVG*O+LrAHje6<CZt6%X)2L
z8)0{r^ai5`pu#vanIuU3j*Z0kI&&+U-#^a-UhyNf9aEqZDxEnGg+2Q&a-H=qPb?q}
zx0mHik$r6(9SfaRXPTqQ!+x<OVM*8>gY)N|RP*g@ZEu__R6M^2V~;&6|M-)S2L9Mx
zz?feiZs@?}teW3@okU-cq+H-<H=w=$W87J0{J(XS&kU%hZES30E80xI4fVocvbsE>
zxqT}uD<l%Bv(t=?x`-(@#Qyq-*W{BnnEkn5QBiT6SF&JJjOtlm1dD5Z{W>Bb;A4Px
zSfg{rHHWKL>%*1?($dnpM18a$(<dhfiq8|qS6f`wjQJH56mIWsU^g0<AnEk=)|efC
zCnt&Y`J3alDr#!Metw856dVqxM6T<{?y0BG-!+>3@KB;VU21iGy({#0mxx;pk?8U!
z$OVa{c6PF4bXOCJwr6rb4q6D`9T~Z%n$HE$XteqHdDP+d_BK7ZO+}E?ckl&?gz@u(
zNb({Va5$U`CGtm<fqvjrQ^fxMz5tE|&<^@MF*cUiqZ2$`Q&ZC!`nBCl6pcpzOQ%y_
zzAr^olF4C*zjnwxP7MJLrlzJc{6<#QV~%cae1Nm64!G@^R&0u}h=`r5Yx>u{PdYQ5
zU0uV+GcQ%_?CjXU4$lE8W@T=7_PrZ;{^XJlb~j6q==(a;QC{KUf@iUY;Kv670s@GW
z>GRjBat4>E`#B`(jHRJcQ$G#Sq!TQed3mP=aF9^&<iCaJ3ah`RP;Pf5@%$9aD=eIx
znCL;|ee&UAImVlupxfKq+nsT0_u#O&xcJA9AC+Jkab~jh_Gx>5`ahuud!dZJTqXb4
zF)=aX0J_c<`)hl-zP`S;w)UZfPMNpvZN}PIwVkhz4=_7YaasJ~hxJHiqdRw69f{g_
zt6Q7X*rnoI5DL_p5=m@po7vp`x&NEbaL+v?1W`9$je4Qt)BqUC3!D{y$d=$?*b$&j
zuWLK{b+FmS43rGc)O%S32XB7=9^&OSPx9^u++$;#D=HQl>-23`d3cP0^gWsB+nX)r
z78x6#8_Ca}bp~k1?Tp#^ak3Z}>4vt?g@|$|ef{bq**zTowae>ZZDWd(N##gvPfzD<
zo5@(&oTAtv5br$efv3&QvF`3N0=U?{xnz(_z@vhKC=k<KJ*9`4nc3-0ka^w^Hqy`U
z+Zv5LgWa9#>0$R|J9f9JNx$=RE0%(;E*_jr6;Ug*?DMRTT$?Z!Tl*1ZU96udtf8m3
zPql$n94G_w^75mjqeIC}(LYZYmK(`TkbU`VVOm-d-)D_SS2+%9#{66E95#)wvc`|Q
z-VR)!d~F#6^z`&Vl$1>M84QLa5e<lniG}J)0tggpdlYGNl?hdaIwQz=(H_*7gM$O*
z)+SgO*Vq0+@GSk}jnOKkU9Gc2S|HykLrF<VmUtm0bo1}6{{DP5Lei)HetL7XCaJBi
zPEC}1<oxqz&rr6uS7BJg5^I8Km|$vGZf-6r+eoIeveJGct@|SnHyg7z+S;1e%Yr~4
zlo$5)!U<G8P0jg8%J8BJ6bhH&AL?Z>?(FU^=NR%hCvJOYERjp(ocO~oPlsn7(iz>J
z^-%`Wz#~ifoEmnM(vYqPLI6K+GKdwZEg@vj6yH7HyNFrwg$RP4Q<*le+k*S#Q~r(w
zNF!;>%QsdEm2xjFGnnG-m7n_?NN4mfaweMOToFwg?v>3<nIi*3las&pmr8bbcad69
zC^XX&WCJshKA)yGz`>i`Vc+%kt?o(>4_iXe8;J@9!ICG?qz;dg!Q?&=;-nCFhbXN*
zz(9bf@bTlYu&|12H-ds{`xhObN*MEx<_~2bYZ>!@{p;`!3iRH~dCH}0A-a+|jVK<>
zSx!e{Lt~>@?+XM3G{0AlL~BC%HCgElo!e*mCjzt;ng*A`^ozIAb>lb5Gz7kXu?+d-
zn5hGAvRrmALQjyh^ktG!*1}Ay)rB&U0aBu(AaYF0lPwKEU6lJ9!CBSfo~m1Gkw7(p
zkX+B*(a{0%wY+jgD77m<+v#-nKPnqDZ8jw;@GKv)SSHl(oVXw)41-CRz7Vs}lll91
z>_u6FQ(wM(xvqgnonZwiQ?=CPZ$u;#>E-1GyqgQj%F2SweU&()r6rVmLE6T~hHq@)
z=YA7~BGRyM!dr-wRi8?D{(RJ5Ys-v?zIjf(V@@4-Mj*&#@N*_cM@ReBRiR$Mj`o-<
zP6I<!YB{=EQBjd;Hc`aYo^+i9sBs{(ty9k5+TiBqMl1{r41nTJo!b&l_4fDY1oBi}
zE?qgA>qsVRs<h3(baf}D|6VgQ8TTSE7>tk4>6J2cb)8#VdQWzCwuqYR+RBPaQG2_|
zMQ6`T9iCu1`IcaXfg<ar4A@cB>c1)gJ6l5B(f(4VoP{u&ky+F4S&yJIRVZs|X|Wh1
zgu&REUfq%13T`{h%gakzF_#^tY_`%zMn;B)9^vu0JPU|mLqkJZz}n>No2;y?Dax6a
z({X<eLBW(5L}Nfd573qvLps<Yktg*}naK`|xW&$e>+`Ugy0}Og^QXYQT~22&gDzaT
zwKMM47Wc>S(lf)OJug(R4;dttgoMOkksf&V2@Iapu1V0*z&Mgy?He3?LkkEu27d#0
zQW2q)<N*fGW9`7nmmbU!i+8(b-ZM65U^8<sBUaJby=IDW+rt*yC*$j9!Kgr2=gP)y
z^(ywniP<-WLm%AAAxTL|B_<|T=Jqc>Fq0MJROdFm>Fn$ryT7%#pJUF|h&^EF@i501
z6%~Ol*y(Ifvy?9zUv-OFR`|ev>~4JDpm22!b-AXpvH<I$rlL|@Q1G;kStj<+;jWTh
z?ezd9oY~0e==C@BWvjaJ1DbEiaF_^hG8uIGj$}SxZ|~t;P+?&9mTNN2;(eb~5sBsx
z>YN+5z*u!L0@u>e*N>Tf$Mk_?U@qiAYHHOut_yNGYhhwy;&E^*PLj7n9dE^0%y(n#
z?5NZz3*%R-mcd*J3=9PGc`n4h3Kc|eAXZkUG;yiBYv3p8bS-h7zN05#(fj)P!1jUG
z&kSI(SQQnO^73*H4vueZ%b3QE>6X<<3dg;kzCM#=K6sWRk<p&WmC|^F`aF={z`=5F
zc=)Pdpr)p#5U05e|Jz%e()u|InEgVno8R;j2A3$<gN92L;?mMj@OUsBpddIDTDnO#
zlKDRSKB2VqAHdSeN*Mwv2<vA{Fm7>$85n$A#E{8kkhH;5O}Y8`#{tj!y`_>kRaI4=
zaJ&;ulwVo6f7~rjik)SIO0}zVbwMEFKPw1wf+a2Gk<YYz<+%RBwz{C$mlDb?7_KiR
zbbS${CsZ7$?GzEA1-Ogmfjh}sSZlSJT|970yMO;aD2i=Y4|P#j?2c`s$qAfU+C{mh
zke^Y_FJ7F<;X3;RwsZH7&LjEgrGa9w^m-B9q0KK}hP38?u`fE5Fq1t&nL6s=gZ<v7
z+Q`Yt38%7lyxiN{D=RCrbB$gkzL_q2vLN=iyF8-&e|s4RJf;x@X*Ewdz$O`hn_HXJ
Inz-Nl59h<Bq5uE@

diff --git a/JodaTime/xdocs/images/jodatime.png b/JodaTime/xdocs/images/jodatime.png
deleted file mode 100644
index 4d5d609868c392a2871e8f15100f4ba54b7e92b6..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2850
zcmai$c{Ei28^^DVeMuoZ6GADZX}&_k*dh$3F_xskSY|?&2rZUx$d)V_YZwwqizRC)
z2GJN|EJNZuA|~rlWc%Ik@9*C^zkAN}JolV?&b^<{b6?N<{YkJzT@vD#<_7>k$imzN
z4b}uO)OZhp*_0ba2Mb?-xl=G$IsO|qCpt&K8=hMh)}}l|f?^`V0uC{)PXU1cgM|qa
z6PCZ^>|`Z+O$Kq!FXzjbL*gefr_U%sAI3z9NSJh{nAG}<48sy*e3UO|3V2MqTe)b!
zx@eLqE>JTI7jmbht&$qi)(&$1^ph9n<6?x9brZK*lh}8(v#?eFcpsF~V#9a(gQvo2
z;r;7Rk;!F*>FBG64kq}*rp4s_CMEt~_&Uhs>xK}0e0TxF^irc@$q$%_h=|_a-lA)^
zw(axmNCPh?Cnp;l8cl0P=H}NX`q&unzTwJ!uG%E1MLKPsy}c{0j%{H4+6nvhQ|dsy
zsj10Kc`jM%+?D~)R@cXm9}R|^uSfN<x^P<UAs#U4OQBg~zHmvY{_G<O3DtYYr)8{F
zh7=aRYPNg&?YF%l(q9Y@V>Z~omL{yNtpPwjwcf3RTSe5rI505KGV3%4psb>@U!S8J
zl}9{>W|>uBoKGLysCoVRFp<e*UU6~xj5qQV<EOlIs)4$h9Nm&jE`?(&>#D1(!G%44
z-t7wyZk#MFE&bj{;^F2NR;{nC&CJSb4QF%zyM1&89zoIitl?{KZyy=ihOMLo>Vp>o
zaeutp)791Wo6SimG-^Aen~D6J;?Bjxb9lb({+@KADygsgk(@vQnEp0%b)6a*7@#Cc
z6e8{s;d!3g<7L));H#-#>YAEuA*`$qxK%dW(%PEZ-`}-%lZeZsV(slim|ZEYtq35>
zTsilgcR$%QY0P*2XhVcyv4*FYm-gPu)cd~PUVZ@qQT|v6GC)UGgCrv>s~@sBytqhg
zhB~}*Nk~cAWV4yzBjIiuO%o3P)gH~MR@vW=>Vf50adC0Exw#<_2ncdo=Ml5PRxR`L
zv+(e6m5fi%X4!1E+wSx<F8+bv#JdEF`&-ABh)v?GSR`d{=eIXC_r$RzH=cX<?p;Bn
zb#-+U6BA3(CrN$Z19bG|ZB9Lr*AIIvHG<a`7Z*=cUSKjgn?KL9J++<u{g<bwi)wtM
zsis<WNL0orSmgfQ7--y$RJUvwjn}VVUz%kw7-v1YpfQF}5nf1Wa7#^%X!^nSyaL8b
z0CFf@dC+-gEzHx?Q{zM-i4<SEjffuC%cPfDWH_GAGFLWY9qwM++6s#{Z1<`$RXpOJ
zXhN3IbS>iD`MnZ<4*~=<y5R5Jxg#MiexWZEKSE6qRRw#qK`YSv-IXHqd-?0cTMr&a
zE*gziON^O~6_8LIe<XjAF*WrHT@ku6Ma5uB1_xl)c9^g*osE~*nz7H&?;{WP_xE<x
z;`8%mN$CeOO-P8>iY->>k%I0m^D1mx#O5gt4dG2AsK{hX_?0Sb;l(@0(oz)+g!3vf
zrwj}Xeqc^L@$>UrT3Y&1%Vcj;sZ`+%DGooi#KeaWqx#Fs%a@n^YsP)+oHrx(rrzHv
zE~L2IW3gXgRimuIb?3JG??2#*2n??pAt51<3gOYYHD<SWe?Ca3<?Y+`RId^OgIMR~
z>4|i9cPCqZIw*tJc+<@I6cBeMw{NdZ`N8uDxo~L^wAO*faJJXjUDim|fauYq>kC7w
zV*>A84T9&ah9}*$m23s{BllaXs)QKLp-cRNf)Dy)Y4Z{i5(;{uzBpVIxm?}h)#tpw
zR>1G8Wbmbf_$@3g2?6a|$=%E|*P3d{<QOTbjyDe;JZNapsTogZHhjPh_`txqvMEHw
zLTYDxV7WujZ6;1+<>cf%e!RLPXVTNtW5{Ru3_VNh?Twk>Mv4SAwiFk0062Kw%#hyg
zWkaQl7Ym>dHLtg}^AZRI@c(fF?UC`!(K@8);?hKY56arwGs|&mYAP))EhHoah|0=3
z21J>aAZ?VClyW#!t+H_vvK?BLbjILd;LOKZ5WY*P@`O5P!H(?LQ9l+J8TB^{3$7@p
zjS-9w%3+rv@m4ujalW@^0bn-hLbY9ZoMKDlfxI+H<62WVTg9EsI+Hsd8t@_oTS;HI
z1*X2fr0`oxMI73af;|avZ08aF*ntt&=Jdo4oSn_}ZG<{dMgV0ff|`3?I)yvS+oLO4
z>S9FgppUP=KlgRb69%a>WL+g4d{CoHd~vp}kgA}tuu;dW>eco2nD2*^C_&lDSNtwt
zzKnXRUoq%IE-5M0504?2RLbh^o;b=!q<{IM9lnm=$RMl1ZWtLE0l??0v1TRFDBc2;
zH>sn&y}c=fHI24Jq5404vaqyFdh}?jAy8?U+nOr|YD<rbDx-XhHBsDNo#6y<zkZJ2
z7<sw99fztrE1h!c2|rMTu0TZY|6Ex)4E$JH+S^zVRelf`XQZUBpAY2?OUxvZx;s0e
z<F2iDx0k=_`KYR@asuY*__vN?rW^o~NK8*ppT3eu4gI}*tyxwcad&KRkOKtfWlM|f
zHSR$x6Uo2)CpTH6OZiA7(%=Grq!=F`pRG)8nK(aJi|-fM*MR{;JF(Pm8L(p=;HnZ*
zQ@gd2%NC-eqd}0o@pznM=;oq*Z3?-{<<t{Yj`p*6?~VZhbDwiEGc(7=9EIbD==8ea
zc~nC}iu8H@EH`C~xcK-Er^w~W#tXr7J$UWhvIz#GztG?&$v86d;Gh~`Gt+Njhq-Y>
zUB4ahh@TB=WOk?C4j<bWJ?+}E^=Fd>vmPBD)(>07t<QdfAj|2Cpy<n_nB`c#17-B*
z&!00w1;mW}{L`eqiHQjg0Gy;3<>k1yjy|@aFMb&sI@0*&&6~Qqy88P1wzkN<Kb!oq
zMrvXs!^4IMqzEY3tL5G`<1%1dTJJSe+zCWtFOBA)CWfutWYpbQ_23o_-~-(+iBj!N
zlYfS;7+Sb&X-OxZSJqM&Agy+gr%7k^*FVMzfb{3(<;BOvf$s6-^0T(KgSs1|(^-Z?
zFh;a&XHcA|DoSVf2h4x6AwB)5%8)M{6tkXJ%Q3vXyggJZomltqC7nppye^z%2Pw9F
zxI8<}+UxRxX*j+C>=B@pNXD&g--VqqQA|TU-$6<IT+REPmzc;ui_hBm%)7R>Hjq<T
zn3@mDxUz+?LOzJ$#XG->t~ScGIvCH-&7sBYot!GLl|tN{ac&$O96^nD2g#<Oyx_Gj
z$o7Nh0ApigaOQXCs4`*2YwPRaCM+#2`)D+8`97oK)t)q^<HwJu%3oYuUgieOmD4vi
zHezB9HE41I(|eiFhnzgZ5C{YYhksnWprPT<s3nY#kArIR;JnSvo0@+h>&Bg(op?MR
z0J6V1$R5q6{I$_uj2Bj4KX=xT0ekBxXnfoog%UQk1Kq8vs>-?Q7yx=z*CV;Sr%zi6
zLn_U$$-I(#CG@Y8le_EREelZb%mx$19GyUN2L&=nr_%=pR@a!9k|_TyEy;<Bo^$&M
ziC=+B3W5R^a9hzL=+DN2FMJ2&ewAQi0{LSIl5*9-VRUpfo*9P0VBFmmlPE+2A)3q7
z*7k8tbZGX}Jgtxe@P*6V>kBZC^57{@Q?I}z?uQnQvh4Vz<>XQnYwPPft_*zp_RYUY
zS5J?{Vj0}u<po3%OpY8m@-M+Ef?HC4`de35cMW8I$6os1!8H-w7I<}6;7zqmuJI&B
R4?N!j7N#hZS4Oy){{UxZaMAz(

diff --git a/JodaTime/xdocs/index.xml b/JodaTime/xdocs/index.xml
deleted file mode 100644
index 1c9221f29..000000000
--- a/JodaTime/xdocs/index.xml
+++ /dev/null
@@ -1,172 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Home</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
-  <author email="almajor.at.boxspoon.com">Al Major</author>
- </properties>
-
- <body>
-
-<section name="Joda Time - Java date and time API">
-<p>
-Joda-Time provides a quality replacement for the Java <em>date</em>
-and <em>time</em> classes. The design allows for multiple <em>calendar</em>
-systems, while still providing a simple API.
-The 'default' calendar is the <a href="cal_iso.html">ISO8601</a> standard which
-is used by XML. The Gregorian, Julian, Buddhist, Coptic, Ethiopic and Islamic systems
-are also included, and we welcome further additions. Supporting classes include
-time zone, duration, format and parsing.
-</p>
-<!--p style="color:red; margin-left:20px;">
-JSR 310 has now been launched. It aims to build upon Joda-Time and include it in the JDK.
-<a href="https://jsr-310.dev.java.net/" class="externalLink" title="External Link">More information</a>.
-</p-->
-<p>
-As a flavour of Joda-Time, here's some example code:
-<source>
-public boolean isAfterPayDay(<a href="api-release/index.html?org/joda/time/DateTime.html"><b>DateTime</b></a> datetime) {
-  if (datetime.getMonthOfYear() == 2) {   // February is month 2!!
-    return datetime.getDayOfMonth() > 26;
-  }
-  return datetime.getDayOfMonth() > 28;
-}
-
-public <a href="api-release/index.html?org/joda/time/Days.html"><b>Days</b></a> daysToNewYear(<a href="api-release/index.html?org/joda/time/LocalDate.html"><b>LocalDate</b></a> fromDate) {
-  <a href="api-release/index.html?org/joda/time/LocalDate.html"><b>LocalDate</b></a> newYear = fromDate.plusYears(1).withDayOfYear(1);
-  return <a href="api-release/index.html?org/joda/time/Days.html"><b>Days</b></a>.daysBetween(fromDate, newYear);
-}
-
-public boolean isRentalOverdue(<a href="api-release/index.html?org/joda/time/DateTime.html"><b>DateTime</b></a> datetimeRented) {
-  <a href="api-release/index.html?org/joda/time/Period.html"><b>Period</b></a> rentalPeriod = new <a href="api-release/index.html?org/joda/time/Period.html"><b>Period</b></a>().withDays(2).withHours(12);
-  return datetimeRented.plus(rentalPeriod).isBeforeNow();
-}
-
-public String getBirthMonthText(<a href="api-release/index.html?org/joda/time/LocalDate.html"><b>LocalDate</b></a> dateOfBirth) {
-  return dateOfBirth.monthOfYear().getAsText(Locale.ENGLISH);
-}
-</source>
-<!--
-public boolean isDoubleShift(<a href="api-release/index.html?org/joda/time/LocalTime.html"><b>LocalTime</b></a> startTime, <a href="api-release/index.html?org/joda/time/LocalTime.html"><b>LocalTime</b></a> endTime) {
-  <a href="api-release/index.html?org/joda/time/Hours.html"><b>Hours</b></a> hoursBetween = <a href="api-release/index.html?org/joda/time/Hours.html"><b>Hours</b></a>.hoursBetween(time1, time2);
-  return hoursBetween.isGreaterThan(<a href="api-release/index.html?org/joda/time/Hours.html"><b>Hours</b></a>.EIGHT);
-}
-public boolean isJoinedInLastThreeMonths(<a href="api-release/index.html?org/joda/time/DateTime.html"><b>DateTime</b></a> datetimeJoined) {
-  <a href="api-release/index.html?org/joda/time/Interval.html"><b>Interval</b></a> last3Months = new <a href="api-release/index.html?org/joda/time/Interval.html"><b>Interval</b></a>(<a href="api-release/index.html?org/joda/time/Months.html"><b>Months</b></a>.THREE, new <a href="api-release/index.html?org/joda/time/DateTime.html"><b>DateTime</b></a>());
-  return last3Months.contains(datetimeJoined);
-}
--->
-Version 1.6.1 was released on 2010-08-08 -
-<a href="http://sourceforge.net/projects/joda-time/files/joda-time/">Download now</a>
-</p>
-</section>
-
-
-<section name="Why Joda Time?">
-<p>
-Joda-Time has been created to radically change date and time handling in Java.
-The JDK classes Date and Calendar are very badly designed, have had numerous bugs
-and have odd performance effects.
-Here are some of our reasons for developing and using Joda-Time:
-<ul>
-<li><b>Easy to Use</b>.
-Calendar makes accessing 'normal' dates difficult, due to the lack of simple methods.
-Joda-Time has straightforward <a href="field.html">field accessors</a> such as
-<code>getYear()</code> or <code>getDayOfWeek()</code>.</li>
-
-<li><b>Easy to Extend</b>.
-The JDK supports multiple calendar systems via subclasses of <code>Calendar</code>.
-This is clunky, and in practice it is very difficult to write another calendar system.
-Joda-Time supports multiple calendar systems via a pluggable system based on the
-<code>Chronology</code> class.</li>
-
-<li><b>Comprehensive Feature Set</b>.
-The library is intended to provide all the functionality that is required for date-time
-calculations. It already provides out-of-the-box features, such as support for oddball
-date formats, which are difficult to replicate with the JDK.</li>
-
-<li><b>Up-to-date Time Zone calculations</b>.
-The <a href="timezones.html">time zone implementation</a> is based on
-the public <a href="http://www.twinsun.com/tz/tz-link.htm">tz database</a>, which is
-updated several times a year. New Joda-Time releases incorporate all changes
-made to this database. Should the changes be needed earlier,
-<a href="tz_update.html">manually updating the zone data</a> is easy.</li>
-
-<li><b>Calendar support</b>.
-The library currently provides 8 calendar systems. More will be added in the future.</li>
-
-<li><b>Easy interoperability</b>.
-The library internally uses a millisecond instant which is identical to the JDK and similar
-to other common time representations. This makes interoperability easy, and Joda-Time comes
-with out-of-the-box JDK interoperability.</li>
-
-<li><b>Better Performance Characteristics</b>.
-Calendar has strange performance characteristics as it recalculates fields at unexpected moments.
-Joda-Time does only the minimal calculation for the field that is being accessed.</li>
-
-<li><b>Good Test Coverage</b>.
-Joda-Time has a comprehensive set of developer tests, providing assurance of the library's quality.</li>
-
-<li><b>Complete Documentation</b>.
-There is a full <a href="userguide.html">User Guide</a> which provides an overview and covers
-common usage scenarios. The <a href="api-release/index.html">javadoc</a>
-is extremely detailed and covers the rest of the API.</li>
-
-<li><b>Maturity</b>.
-The library has been under active development since 2002.
-Although it continues to be improved with the addition of new features and
-bug-fixes, it is a mature and reliable code base.
-A number of <a href="related.html">related projects</a> are now available.</li>
-
-<li><b>Open Source</b>.
-Joda-Time is licenced under the business friendly <a href="license.html">Apache License Version 2.0</a>.</li>
-</ul>
-</p>
-</section>
-
-<section name="Documentation">
-<p>
-Various documentation is available:
-<ul>
-<li>Two user guides - <a href="quickstart.html">quick</a> and <a href="userguide.html">full</a></li>
-<li>The key concepts and chronology documents in the left navigation area</li>
-<li>The javadoc for the <a href="api-release/index.html">current release</a></li>
-<li>The javadoc for the <a href="apidocs/index.html">latest code in development</a></li>
-<li>A <a href="faq.html">FAQ</a> list</li>
-<li>Information on <a href="installation.html">downloading and installing</a> Joda-Time</li>
-<li>The <a href="http://joda-time.svn.sourceforge.net/viewvc/joda-time/trunk/JodaTime/">Subversion repository</a></li>
-</ul>
-</p>
-</section>
-
-<section name="Releases">
-<p>
-<a href="http://sourceforge.net/projects/joda-time/files/joda-time/">Release 1.6.1</a>
-is the current latest release.
-This release is considered stable and worthy of the 1.x tag.
-It has extensive testing suites and has been used in production.
-We now recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
-</p>
-<p>
-We will support the 1.x product line using standard Java mechanisms.
-The main public API will remain backwards compatible for both source and binary.
-The version number will change to 2.0 to indicate a change in compatibility.
-</p>
-</section>
-
-<section name="Support">
-<p>
-Support on bugs, library usage or enhancement requests is available via:
-</p>
-<ul>
-<li>the joda-interest <a href="mail-lists.html">mailing list</a>. Due to spam, you must be subscribed to post to the mailing list.</li>
-<li>the joda-time sourceforge <a href="http://sourceforge.net/projects/joda-time/forums/forum/337835">forum</a>.</li>
-</ul>
-<p>
-Alternatively, you can contact the project lead, Stephen Colebourne via scolebourne.at.users.sourceforge.net.
-</p>
-</section>
-</body>
-</document>
diff --git a/JodaTime/xdocs/installation.xml b/JodaTime/xdocs/installation.xml
deleted file mode 100644
index a3fda18f8..000000000
--- a/JodaTime/xdocs/installation.xml
+++ /dev/null
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Download and Installation</title>
-  <author email="almajor.at.boxspoon.com">Al Major</author>
- </properties>
-
-<body>
-
-<section name="Download and Installation">
-<p>
-To use Joda-Time you need to
-<a href="http://sourceforge.net/projects/joda-time/files/joda-time/">download the latest version</a>.
-The download will contain the joda-time-1.6.1.jar.
-Once you add this to your classpath you will be able to use Joda-Time.
-</p>
-<p>
-The binary download also includes joda-time-1.6.1-sources.jar, which is a jar file
-of the source code suitable for linking to the jar file in IDEs such as Eclipse.
-</p>
-<p>
-The release notes for upgraders can be found here:
-<ul>
-<li><a href="upgradeto161.html">Version 1.6 to Version 1.6.1</a></li>
-<li><a href="upgradeto160.html">Version 1.5 to Version 1.6</a></li>
-<li><a href="upgradeto152.html">Version 1.5.1 to Version 1.5.2</a></li>
-<li><a href="upgradeto151.html">Version 1.5 to Version 1.5.1</a></li>
-<li><a href="upgradeto150.html">Version 1.4 to Version 1.5</a></li>
-<li><a href="upgradeto140.html">Version 1.3 to Version 1.4</a></li>
-<li><a href="upgradeto130.html">Version 1.2 to Version 1.3</a></li>
-<li><a href="upgradeto120.html">Version 1.1 to Version 1.2</a></li>
-<li><a href="upgradeto110.html">Version 1.0 to Version 1.1</a></li>
-<li><a href="upgradeto100.html">Version 0.99 to Version 1.0</a></li>
-<li><a href="upgradeto099.html">Version 0.98 to Version 0.99</a></li>
-</ul>
-</p>
-<p>
-If you want to build Joda-Time from source you will need
-<a href="http://ant.apache.org">Apache Ant</a>.
-Simply call <code>ant jar</code> to compile and create a jar file.
-</p>
-<p>
-Compilation is also available using
-<a href="http://maven.apache.org">Apache Maven</a>.
-Maven is intended to be used primarily as a website generation tool.
-Ant is our preferred build tool.
-</p>
-</section>
-</body>
-</document>
diff --git a/JodaTime/xdocs/key_chronology.xml b/JodaTime/xdocs/key_chronology.xml
deleted file mode 100644
index 1d5cfd561..000000000
--- a/JodaTime/xdocs/key_chronology.xml
+++ /dev/null
@@ -1,81 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Chronology</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Chronology">
-
-<p>
-A <i>chronology</i> in Joda-Time is a pluggable calendar system.
-The JDK supports multiple calendar systems via subclasses of <code>Calendar</code>.
-This is clunky, and in practice it is very difficult to write another calendar system.
-Joda-Time supports multiple calendar systems by designing a pluggable system.
-</p>
-<p>
-The default chronology in Joda-Time is <a href="cal_iso.html">ISO</a>.
-This calendar system is the same as that used by business in the majority of the world today.
-The ISO system is unsuitable for historical work before 1583 as it applies the leap year rules
-from today back in time (it is a proleptic calendar).
-As a result, users requiring a more historically accurate calendar system are forced to
-think about their actual requirements, which we believe is a Good Thing.
-</p>
-<p>
-The actual calculations of the chronology are split between the
-<a href="api-release/index.html?org/joda/time/Chronology.html">Chronology</a> class itself
-and the field classes -
-<a href="api-release/index.html?org/joda/time/DateTimeField.html">DateTimeField</a> and
-<a href="api-release/index.html?org/joda/time/DurationField.html">DurationField</a>.
-Together, the subclasses of these three classes form the bulk of the code in the library.
-However, most users will never need to use or refer directly to the subclasses.
-Instead, most applications will simply obtain the chronology and use it as a singleton.
-</p>
-<p>
-The chronology class also supports the time zone functionality.
-This is applied to the underlying chronology via the decorator design pattern.
-The <a href="api-release/index.html?org/joda/time/DateTimeZone.html">DateTimeZone</a> class provides
-access to the zones via factories, and also supports a default zone concept.
-A full list of time zones can be found <a href="timezones.html">here</a>.
-It is also possible to <a href="tz_update.html">update the zone data</a> yourself.
-</p>
-<p>
-Internally, all the chronology, field and time zone classes are maintained as singletons.
-Thus there is an initial setup cost when using Joda-Time, but after that only
-the main API instance classes (DateTime, Interval, Period, etc.) have creation and
-garbage collector costs.
-</p>
-
-</section>
-
-<section name="Using Chronology in Joda-Time">
-<p>
-A Chronology is obtained and used in Joda-Time as a singleton:
-<source>
-DateTimeZone zone = DateTimeZone.forID("Europe/London");
-Chronology coptic = CopticChronology.getInstance(zone);
-
-// current time with coptic chronology
-DateTime dt = new DateTime(coptic);
-
-int year = dt.getYear();   // gets the current coptic year
-int month = dt.getMonthOfYear(); // gets the current coptic month
-</source>
-</p>
-
-<subsection name="Nulls">
-<p>
-A null chronology always refers to ISO chronology in the default zone.
-Thus, when a method is defined as taking a <code>Chronology</code>, passing null in
-will be the same as passing in the ISO chronology in the default time zone.
-</p>
-</subsection>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/key_duration.xml b/JodaTime/xdocs/key_duration.xml
deleted file mode 100644
index 60861c27b..000000000
--- a/JodaTime/xdocs/key_duration.xml
+++ /dev/null
@@ -1,77 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Duration</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Duration">
-
-<p>
-A <i>duration</i> in Joda-Time represents a duration of time measured in milliseconds.
-The duration is often obtained from an <a href="key_interval.html">interval</a>.
-</p>
-<p>
-Durations are a very simple concept, and the implementation is also simple.
-They have no <a href="key_chronology.html">chronology</a> or time zone, and consist
-solely of the millisecond duration.
-</p>
-<p>
-Durations can be added to an <a href="key_instant.html">instant</a>, or to either
-end of an interval to change those objects.
-In datetime maths you could say:
-<source>
-      instant  +  duration  =  instant
-</source>
-</p>
-<p>
-Durations implement <code>Comparable</code> which compares the lengths of the two durations.
-</p>
-
-</section>
-
-<section name="Using Durations in Joda-Time">
-<p>
-Within Joda-Time a duration is represented by the
-<a href="api-release/index.html?org/joda/time/ReadableDuration.html">ReadableDuration</a> interface.
-There is one implementation of the interface provided:
-<ul>
-<li><a href="api-release/index.html?org/joda/time/Duration.html">Duration</a> -
-An immutable implementation</li>
-</ul>
-</p>
-<p>
-The code can be used in various ways:
-<source>
-DateTime start = new DateTime(2004, 12, 25, 0, 0, 0, 0);
-DateTime end = new DateTime(2005, 1, 1, 0, 0, 0, 0);
-
-// duration in ms between two instants
-Duration dur = new Duration(start, end);
-
-// calc will be the same as end
-DateTime calc = start.plus(dur);
-</source>
-</p>
-<p>
-Note that the interface <code>ReadableDuration</code> should not be used like the collections API.
-The interface only contains the core subset of the operations.
-Instead, you should usually refer directly to the implementation class in your APIs.
-</p>
-
-<subsection name="Nulls">
-<p>
-Joda-Time defines a null duration as zero length.
-Thus, when a method is defined as taking a <code>ReadableDuration</code>, passing null in
-will be the same as passing in a zero length duration.
-</p>
-</subsection>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/key_instant.xml b/JodaTime/xdocs/key_instant.xml
deleted file mode 100644
index e3c8b69c6..000000000
--- a/JodaTime/xdocs/key_instant.xml
+++ /dev/null
@@ -1,105 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Instant</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Instant">
-
-<p>
-The most frequently used concept in Joda-Time is that of the <i>instant</i>.
-An Instant is defined as <i>an instant in the datetime continuum specified as a
-number of milliseconds from 1970-01-01T00:00Z</i>.
-This definition of milliseconds is consistent with that of the JDK in <code>Date</code>
-or <code>Calendar</code>. Interoperating between the two APIs is thus simple.
-</p>
-<p>
-The millisecond instant can be converted to any date time field using a
-<a href="key_chronology.html">Chronology</a>.
-To assist with this, methods are provided on <code>DateTime</code> that act as getters for
-the most common date and time fields.
-More powerful access to the field can be obtained via its property.
-<source>
-DateTime dt = new DateTime();  // current time
-int month = dt.getMonth();     // gets the current month
-int month = dt.month().get();  // alternative way to get value
-String monthStr = dt.month().getAsText();  // gets the month name
-</source>
-</p>
-<p>
-To deal with local times (no time zone), or with date only or time only concepts,
-you should use the <a href="key_partial.html">partial</a> classes.
-</p>
-
-</section>
-
-<section name="Using Instants in Joda-Time">
-<p>
-Within Joda-Time an instant is represented by the
-<a href="api-release/index.html?org/joda/time/ReadableInstant.html">ReadableInstant</a> interface.
-There are four implementations of the interface provided:
-<ul>
-<li><a href="api-release/index.html?org/joda/time/Instant.html">Instant</a> -
-A simple immutable implementation which is restricted to the UTC time zone
-and is intended for time zone and calendar neutral data transfer</li>
-<li><a href="api-release/index.html?org/joda/time/DateTime.html">DateTime</a> -
-The most commonly used class in the library, and an immutable representation of a
-date and time with calendar and time zone</li>
-<li><a href="api-release/index.html?org/joda/time/DateMidnight.html">DateMidnight</a> -
-Similar to <code>DateTime</code> and also immutable but with the time component
-forced to be midnight (at the start of a day)</li>
-<li><a href="api-release/index.html?org/joda/time/MutableDateTime.html">MutableDateTime</a> -
-A mutable representation of date and time with calendar and time zone</li>
-</ul>
-We recommend the immutable implementations for general usage.
-</p>
-<p>
-The code can be used in various ways:
-<source>
-// setup date object for midday on Christmas 2004 (ISO year 2004)
-DateTime dt = new DateTime(2004, 12, 25, 12, 0, 0, 0);
-// get the year, 2004
-int year = dt.getYear();
-// get the day of week index 1 (Monday) to 7 (Sunday)
-int dow = dt.getDayOfWeek();
-// get the text, such as 'Tuesday'
-String dowStr = dt.dayOfWeek().getAsText();
-</source>
-Compared to <code>GregorianCalendar</code> Joda-Time classes use 1-12 for months, and are
-immutable in the standard implementations.
-It is also easy to convert to and from the JDK classes.
-<source>
-// construct DateTime from JDK Date
-Date jdkDate = new Date();
-DateTime dt = new DateTime(jdkDate);
-
-// construct Calendar from DateTime (could also construct a Date)
-GregorianCalendar cal = dt.toGregorianCalendar();
-</source>
-</p>
-<p>
-Note that the interface <code>ReadableInstant</code> should not be used like the collections API.
-The interface only contains the core subset of the operations of <code>DateTime</code>.
-You should use the interface only when you feel the need to be flexible about future changes
-to the object passed into a method.
-You might also want to consider the <a href="api-release/index.html?org/joda/time/ReadableDateTime.html">ReadableDateTime</a>
-interface which extends <code>ReadableInstant</code> to provide additional methods.
-</p>
-
-<subsection name="Nulls">
-<p>
-Joda-Time defines a null instant as the current time.
-Thus, when a method is defined as taking a <code>ReadableInstant</code>, passing null in
-will be the same as passing in an instant set to the current time.
-</p>
-</subsection>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/key_interval.xml b/JodaTime/xdocs/key_interval.xml
deleted file mode 100644
index c0f092ddc..000000000
--- a/JodaTime/xdocs/key_interval.xml
+++ /dev/null
@@ -1,83 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Interval</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Interval">
-
-<p>
-An <i>interval</i> in Joda-Time represents an interval of time from one millisecond
-<a href="key_instant.html">instant</a> to another instant.
-Both instants are fully specified instants in the datetime continuum, complete with time zone.
-</p>
-<p>
-Intervals are implemented as <i>half-open</i>, which is to say that the start instant is
-inclusive but the end instant is exclusive.
-The end is always greater than or equal to the start.
-The interval is also restricted to just one <a href="key_chronology.html">chronology</a> and time zone.
-</p>
-<p>
-Methods exist on intervals to obtain the start and end instants plus the chronology and time zone.
-There are also methods to obtain the <a href="key_duration.html">duration</a> and
-<a href="key_period.html">period</a> of the interval.
-</p>
-<p>
-You cannot compare intervals for order (ie. they do not implement <code>Comparable</code>.
-If you want to compare the length of intervals you must obtain the duration of each and compare those.
-</p>
-
-</section>
-
-<section name="Using Intervals in Joda-Time">
-<p>
-Within Joda-Time an interval is represented by the
-<a href="api-release/index.html?org/joda/time/ReadableInterval.html">ReadableInterval</a> interface.
-There are two implementations of the interface provided:
-<ul>
-<li><a href="api-release/index.html?org/joda/time/Interval.html">Interval</a> - An immutable implementation</li>
-<li><a href="api-release/index.html?org/joda/time/MutableInterval.html">MutableInterval</a> - A mutable implementation</li>
-</ul>
-We recommend the immutable implementation for general usage.
-</p>
-<p>
-The code can be used in various ways:
-<source>
-// interval from start to end
-DateTime start = new DateTime(2004, 12, 25, 0, 0, 0, 0);
-DateTime end = new DateTime(2005, 1, 1, 0, 0, 0, 0);
-Interval interval = new Interval(start, end);
-</source>
-Accessing other objects is easy:
-<source>
-Interval interval = ...
-DateTime start = interval.getStart();
-DateTime end = interval.getEnd();
-Chronology chrono = interval.getChronology();
-Duration duration = interval.toDuration();
-Period period = interval.toPeriod();
-</source>
-</p>
-<p>
-Note that the interface <code>ReadableInterval</code> should not be used like the collections API.
-The interface only contains the core subset of the operations.
-Instead, you should usually refer directly to the implementation classes in your APIs.
-</p>
-
-<subsection name="Nulls">
-<p>
-Joda-Time defines a null interval as a zero length interval from now to now.
-Thus, when a method is defined as taking a <code>ReadableInterval</code>, passing null in
-will be the same as passing in a zero length interval at the current time.
-</p>
-</subsection>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/key_partial.xml b/JodaTime/xdocs/key_partial.xml
deleted file mode 100644
index d714d9ff3..000000000
--- a/JodaTime/xdocs/key_partial.xml
+++ /dev/null
@@ -1,118 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Partial</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Partial">
-
-<p>
-A <i>partial</i> in Joda-Time is a partial date and time representation.
-All implementations represent local dates and times, and do not reference a time zone.
-As such, they only <i>partially</i> represent a date or time in the datetime continuum.
-</p>
-<p>
-The main implementations changed in version 1.3.
-This was to address implementation issues with the original design.
-The previous classes - <code>TimeofDay</code> and <code>YearMonthDay</code> - are now effectively deprecated.
-The new implementations are <code>LocalDate</code>, <code>LocalTime</code> and <code>LocalDateTime</code>.
-</p>
-<p>
-It is not possible to directly interoperate between a partial and an <a href="key_instant.html">instant</a>.
-A partial does not fully specify a single point in the datetime continuum, but instead may match
-multiple points. For example, a <code>LocalTime</code> occurs one per day on the datetime continuum.
-</p>
-<p>
-A partial can be converted to a full instant by specifying the missing values.
-At a minimum the time zone must be specified. It may be necessary to specify other missing fields.
-For example, to convert a <code>LocalDate</code> to a <code>DateTime</code> requires
-filling in the time fields and the time zone.
-</p>
-<p>
-In terms of datetime maths, you could write:
-<source>
-      partial  +  missing fields  +  time zone  =  instant
-</source>
-</p>
-
-<subsection name="Date representations">
-<p>
-Two classes represent a date in Joda-Time - <code>DateMidnight</code> and <code>LocalDate</code>.
-These have different meanings.
-<code>DateMidnight</code> is a fully specified instant, with a time zone.
-It is defined as the milliseond instant at exactly mignight (00:00) at the start of a day.
-<code>LocalDate</code> defines a day using the year, monthOfYear and dayOfMonth fields and no time zone.
-It can be thought of as a local date that covers the whole of the day from 00:00 to 23:59.
-</p>
-</subsection>
-
-</section>
-
-<section name="Using Partials in Joda-Time">
-<p>
-Within Joda-Time a partial is represented by the
-<a href="api-release/index.html?org/joda/time/ReadablePartial.html">ReadablePartial</a> interface.
-There are six implementations of the interface provided:
-<ul>
-<li><a href="api-release/index.html?org/joda/time/LocalDate.html">LocalDate</a> -
-An immutable implementation that represents a date without a time or time zone.</li>
-<li><a href="api-release/index.html?org/joda/time/LocalTime.html">LocalTime</a> -
-An immutable implementation that represents a time without a date or time zone.</li>
-<li><a href="api-release/index.html?org/joda/time/LocalDateTime.html">LocalDateTime</a> -
-An immutable implementation that represents a datetime without a time zone.</li>
-<li><a href="api-release/index.html?org/joda/time/Partial.html">Partial</a> -
-An immutable implementation that can store any combination of datetime fields.
-For example, using this class you could create a YearMonth or DayOfWeekDayOfMonth partial.</li>
-<li><a href="api-release/index.html?org/joda/time/YearMonthDay.html">YearMonthDay</a> -
-Effectively deprecated - only supports the year, monthOfYear and dayOfMonth fields.</li>
-<li><a href="api-release/index.html?org/joda/time/TimeOfDay.html">TimeOfDay</a> -
-Effectively deprecated - only supports the hour, minute, second and millisecond fields.</li>
-</ul>
-</p>
-<p>
-The code can be used in various ways:
-<source>
-// setup objects
-LocalDate date = new LocalDate(2004, 12, 25);
-LocalTime time = new LocalTime(12, 20);
-
-int year = date.getYear();  // returns 2004
-int hour = time.getHour();  // returns 12
-String monthStr = date.month().getAsText();  // returns 'December'
-</source>
-Conversion to and from instants is easy:
-<source>
-LocalDate date = new LocalDate(2004, 12, 25);
-LocalTime time = new LocalTime(12, 20);
-
-// merge, resulting in 2004-25-12T12:20 (default time zone)
-DateTime dt = date.toDateTime(time);
-
-// extract the date fields from someDT
-DateTime someDT = ...
-LocalDate date = new LocalDate(someDT);
-</source>
-</p>
-<p>
-Note that the interface <code>ReadablePartial</code> should not be used like the collections API.
-The interface only contains the core subset of the operations.
-Instead, you should refer directly to the implementation classes in your APIs.
-</p>
-
-<subsection name="Nulls">
-<p>
-Joda-Time defines a null partial as the current time.
-Thus, when a method is defined as taking a <code>ReadablePartial</code>, passing null in
-will be the same as passing in a partial set to the current time.
-</p>
-</subsection>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/key_period.xml b/JodaTime/xdocs/key_period.xml
deleted file mode 100644
index cfc6722fc..000000000
--- a/JodaTime/xdocs/key_period.xml
+++ /dev/null
@@ -1,182 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Period</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Period">
-
-<p>
-A <i>period</i> in Joda-Time represents a period of time defined in terms of fields,
-for example, 3 years 5 months 2 days and 7 hours.
-This differs from a <a href="key_duration.html">duration</a> in that it is inexact in terms of milliseconds.
-A period can only be resolved to an exact number of milliseconds by specifying the
-<a href="key_instant.html">instant</a> (including chronology and time zone) it is relative to.
-</p>
-<p>
-Periods do not have a <a href="key_chronology.html">chronology</a> or time zone.
-They can be added to an <a href="key_instant.html">instant</a>, or to either
-end of an interval to change those objects.
-In datetime maths you could say:
-<source>
-      instant  +  period  =  instant
-</source>
-</p>
-<p>
-For example, consider a period of 1 month.
-If you add this period to the 1st February (ISO) then you will get the 1st March.
-If you add the same period to the 1st March you will get the 1st April.
-But the duration added (in milliseconds) in these two cases is very different.
-</p>
-<p>
-As a second example, consider adding 1 day at the daylight savings boundary.
-If you use a period to do the addition then either 23 or 25 hours will be added as appropriate.
-If you had created a duration equal to 24 hours, then you would end up with the wrong result.
-</p>
-<p>
-The Joda-Time library defines two types of implementation of the period concept.
-The first type can only store a single-field, such as days or hours, but not both.
-The second type can store any-field, expressing a value such as 5 months 8 days and 7 hours.
-</p>
-
-<subsection name="Single field Periods">
-<p>
-The first type, single-field periods, is new to version 1.4 of Joda-Time.
-These classes - <code>Years</code>, <code>Months</code>, <code>Weeks</code>,
-<code>Days</code>, <code>Hours</code>, <code>Minutes</code>, <code>Seconds</code> -
-all follow a very similar design, and only store the single field as implied by
-their name. Thus a <code>Days</code> object can only store a number of days.
-</p>
-<p>
-These classes can be useful when you want to write an API that must specifically take
-in a period measured in a particular unit. For example, a travel website where you are
-given the option of travelling &#177;1 days or &#177;3 days could store this
-information in a <code>Days</code> object.
-</p>
-<p>
-These classes provide static factory methods rather than constructors.
-For <code>Days</code> these include <code>daysBetween(startDate, endDate)</code> to
-obtain the number of whole days between two dates or datetimes, and 
-<code>daysIn(interval)</code> to obtain the number of whole days in an interval.
-In addition, there are a range of constants, such as <code>Days.ZERO</code> and
-<code>Days.ONE</code>. The factory method <code>days(int)</code> either returns
-a constant, or creates a new instance as appropriate.
-</p>
-<p>
-The single-field classes include basic mathemaical operator support.
-For <code>Days</code> this includes <code>plus(int)</code>, <code>plus(Days)</code>,
-<code>multipliedBy(int)</code>, <code>dividedBy(int)</code> and <code>negated()</code>.
-All operations return a new instance, as <code>Days</code> is immutable.
-The single-field classes are also comparable.
-</p>
-<p>
-Converting between different types of period is a difficult problem.
-One day is not always equal to 24 hours. (It might be 23 or 25 at daylight savings time change.)
-However, many applications have business rules that assume a 24 hour day and so on.
-To support this, <code>Days</code> has methods named <code>toStandardHours()</code> and
-so on which convert the number of days to a number of hours assuming a 24 hour day.
-The word 'standard' is being specifically used in the method name to remind users of the assumption.
-</p>
-</subsection>
-
-<subsection name="Any field Periods">
-<p>
-The second type of period is the any-field period.
-These are implemented by the <code>Period</code> and <code>MutablePeriod</code> classes.
-Internally, they store a set of <code>int</code> fields, one for each field.
-The standard set of fields in a period are years, months, weeks, days, hours, minutes, seconds and millis.
-The <a href="api-release/index.html?org/joda/time/PeriodType.html">PeriodType</a> class allows this set
-of fields to be restricted, for example to elimate weeks.
-This is significant when converting a duration or interval to a period, as the calculation
-needs to know which period fields it should populate.
-</p>
-<p>
-The <code>Period</code> class is useful when you want to write an API that can take
-a period that probably contains more than one field. However, to be even more general,
-your API could define itself to accept a <code>ReadablePeriod</code>, and then the
-calling code could pass in either a <code>Period</code> or a single field period like
-<code>Days</code>.
-</p>
-<p>
-Methods exist on <code>Period</code> to obtain each field value.
-There are also methods to change a field value, such as <code>withDays(int)</code>.
-They are named 'with' as they return a new <code>Period</code> object, due to immutability.
-</p>
-<p>
-You cannot compare any-field periods for order, as there is no sensible comparison strategy.
-Instead, you need to convert the period to a <code>Duration</code> based on a specific date
-and then compare the duration.
-</p>
-</subsection>
-
-</section>
-
-<section name="Using Periods in Joda-Time">
-<p>
-Within Joda-Time a period is represented by the
-<a href="api-release/index.html?org/joda/time/ReadablePeriod.html">ReadablePeriod</a> interface.
-There are nine implementations of the interface provided:
-<ul>
-<li><a href="api-release/index.html?org/joda/time/Period.html">Period</a> -
-An immutable implementation</li>
-<li><a href="api-release/index.html?org/joda/time/MutablePeriod.html">MutablePeriod</a> -
-A mutable implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Years.html">Years</a> -
-An immutable years-only implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Months.html">Months</a> -
-An immutable months-only implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Weeks.html">Weeks</a> -
-An immutable weeks-only implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Days.html">Days</a> -
-An immutable days-only implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Hours.html">Hours</a> -
-An immutable hours-only implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Minutes.html">Minutes</a> -
-An immutable minutes-only implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Seconds.html">Seconds</a> -
-An immutable seconds-only implementation</li>
-</ul>
-We recommend the immutable implementation for general usage.
-</p>
-<p>
-The code can be used in various ways:
-<source>
-DateTime start = new DateTime(2004, 12, 25, 0, 0, 0, 0);
-DateTime end = new DateTime(2006, 1, 1, 0, 0, 0, 0);
-
-// period of 1 year and 7 days
-Period period = new Period(start, end);
-
-// calc will equal end
-DateTime calc = start.plus(period);
-
-// able to calculate whole days between two dates easily
-Days days = Days.daysBetween(start, end);
-
-// able to calculate whole months between two dates easily
-Months months = Months.monthsBetween(start, end);
-</source>
-</p>
-<p>
-Note that the interface <code>ReadablePeriod</code> should not be used like the collections API.
-The interface only contains the core subset of the operations.
-Instead, you should usually refer directly to the implementation classes in your APIs.
-</p>
-
-<subsection name="Nulls">
-<p>
-Joda-Time defines a null period as a zero length period.
-Thus, when a method is defined as taking a <code>ReadablePeriod</code>, passing null in
-will be the same as passing in a zero length period.
-</p>
-</subsection>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/navigation.xml b/JodaTime/xdocs/navigation.xml
deleted file mode 100644
index 2e201795f..000000000
--- a/JodaTime/xdocs/navigation.xml
+++ /dev/null
@@ -1,72 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<project name="Joda Time">
-
-  <title>Joda Time</title>
-  <organizationLogo href="">Joda.org</organizationLogo>
-
-  <body>
-    <links>
-      <item name="Joda-Time" href="/index.html"/>
-      <item name="JSP tags" href="/contrib/jsptags/index.html"/>
-      <item name="Hibernate" href="/contrib/hibernate/index.html"/>
-      <item name="I18N" href="/contrib/i18n/index.html"/>
-    </links>
-
-    <menu name="Joda Time">
-      <item name="Overview" href="/index.html"/>
-      <item name="Quick start guide" href="/quickstart.html"/>
-      <item name="User guide" href="/userguide.html"/>
-      <item name="FAQ" href="/faq.html"/>
-      <item name="Related projects" href="/related.html"/>
-      <item name="Javadoc (Release)" href="/api-release/index.html"/>
-      <item name="License" href="/license.html"/>
-      <item name="Download" href="http://sourceforge.net/projects/joda-time/files/joda-time/"/>
-    </menu>
-    
-    <menu name="Key concepts">
-      <item name="Instant" href="/key_instant.html"/>
-      <item name="Partial" href="/key_partial.html"/>
-      <item name="Interval" href="/key_interval.html"/>
-      <item name="Duration" href="/key_duration.html"/>
-      <item name="Period" href="/key_period.html"/>
-      <item name="Chronology" href="/key_chronology.html"/>
-    </menu>
-    
-    <menu name="Chronologies">
-      <item name="ISO8601" href="/cal_iso.html"/>
-      <item name="Buddhist" href="/cal_buddhist.html"/>
-      <item name="Coptic" href="/cal_coptic.html"/>
-      <item name="Ethiopic" href="/cal_ethiopic.html"/>
-      <item name="Gregorian" href="/cal_gregorian.html"/>
-      <item name="GregorianJulian" href="/cal_gj.html"/>
-      <item name="Islamic" href="/cal_islamic.html"/>
-      <item name="Julian" href="/cal_julian.html"/>
-    </menu>
-    
-    <menu name="Development">
-      <item name="Sourceforge" href="http://sourceforge.net/projects/joda-time/"/>
-      <item name="Test results" href="/junit-report.html"/>
-      <item name="Test coverage" href="/coverage/index.html"/>
-      <item name="Mailing lists" href="/mail-lists.html"/>
-      <item name="Tasks" href="/tasks.html"/>
-      <item name="Subversion" href="http://joda-time.svn.sourceforge.net/viewvc/joda-time/trunk/JodaTime/"/>
-      <item name="Javadoc (Development)" href="/apidocs/index.html"/>
-    </menu>
-    
-    <menu name="Joda">
-      <item name="Joda home" href="http://joda.sourceforge.net"/>
-      <item name="Money" href="http://joda-money.sourceforge.net/index.html"/>
-      <item name="Primitives" href="http://joda-primitives.sourceforge.net/index.html"/>
-      <item name="Beans" href="http://joda-beans.sourceforge.net/index.html"/>
-    </menu>
-    
-    <footer>
-      <a href="http://sourceforge.net">
-        <img src="http://sourceforge.net/sflogo.php?group_id=97367&amp;type=2" width="125" height="37" border="0" alt="SourceForge.net Logo" />
-      </a>
-      <br />
-      <a href="privacy.html">Privacy</a>
-    </footer>
-  </body>
-</project>
diff --git a/JodaTime/xdocs/privacy.xml b/JodaTime/xdocs/privacy.xml
deleted file mode 100644
index 4cb646fb4..000000000
--- a/JodaTime/xdocs/privacy.xml
+++ /dev/null
@@ -1,49 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Privacy</title>
- </properties>
-<body>
-
-<!-- ========================================================================= -->
-
-<section name="Privacy">
-<p>
-Information about your use of this website is collected using cookies.
-The collected information consists of the following:
-<br />
-   1. The IP address from which you access the website;<br />
-   2. The type of browser and operating system you use to access our site;<br />
-   3. The date and time you access our site;<br />
-   4. The pages you visit; and<br />
-   5. The addresses of pages from where you followed a link to our site.<br />
-</p>
-<p>
-Part of this information is gathered using a tracking cookie set by the 
-<a href="http://www.google.com/analytics/">Google Analytics</a> service
-and handled by Google as described in their 
-<a href="http://www.google.com/privacy.html">privacy policy</a>. See your browser documentation for
-instructions on how to disable the cookie if you prefer not to share this data with Google.
-</p>
-<p>
-We use the gathered information to help us make our site more useful to visitors and to better
-understand how and when our site is used. We do not track or collect personally identifiable information
-or associate gathered data with any personally identifying information from other sources.
-</p>
-<p>
-By using this website, you consent to the collection of this data in the manner and for the purpose described above.
-<br />
-</p>
-<!-- <p>
-This website also makes use of targetted adverts supplied by
-<a href="https://www.google.com/adsense">Google Adsense</a>.
-To achieve this targetting, Google utilises cookies which collect the same information described above.
-The cookies identfy your usage of many different internet websites, not just this one, and may be used
-in conjunction with other advertising networks.
-For more details on the Adsense program, and to find out your options to control how the data
-is used please <a href="http://www.google.com/privacy_ads.html">click here</a>.
-</p>-->
-</section>
-</body>
-</document>
diff --git a/JodaTime/xdocs/quickstart.xml b/JodaTime/xdocs/quickstart.xml
deleted file mode 100644
index 30ba294ed..000000000
--- a/JodaTime/xdocs/quickstart.xml
+++ /dev/null
@@ -1,155 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Quick start guide</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-<body>
-
-<!-- ========================================================================= -->
-
-<section name="Quick start guide">
-<p>
-This is the quick introduction guide to Joda-Time and the features on offer.
-Its designed for those of you who are too impatient to read the full
-<a href="userguide.html">user guide</a>.
-</p>
-
-<subsection name="Date and Time">
-<p>
-Joda-Time includes these key datetime classes:
-<ul>
-<li><a href="api-release/org/joda/time/DateTime.html"><code>DateTime</code></a> - Immutable replacement for JDK <code>Calendar</code></li>
-<li><a href="api-release/org/joda/time/DateMidnight.html"><code>DateMidnight</code></a> - Immutable class representing a date where the time is forced to midnight</li>
-<li><a href="api-release/org/joda/time/LocalDate.html"><code>LocalDate</code></a> - Immutable class representing a local date without a time (no time zone)</li>
-<li><a href="api-release/org/joda/time/LocalTime.html"><code>LocalTime</code></a> - Immutable class representing a time without a date (no time zone)</li>
-<li><a href="api-release/org/joda/time/LocalDateTime.html"><code>LocalDateTime</code></a> - Immutable class representing a local date and time (no time zone)</li>
-</ul>
-</p>
-
-<p>
-Each datetime class provides a variety of constructors.
-These include the <code>Object</code> constructor.
-This allows you to construct, for example, <code>DateTime</code> from
-the following objects:
-<ul>
-<li><code>Date</code> - a JDK instant</li>
-<li><code>Calendar</code> - a JDK calendar</li>
-<li><code>String</code> - in ISO8601 format</li>
-<li><code>Long</code> - in milliseconds</li>
-<li>any Joda-Time datetime class</li>
-</ul>
-This list is extensible. In other words Joda-Time sacrifices a little type-safety
-for extensibility. It does mean however, that converting from a JDK <code>Date</code>
-or <code>Calendar</code> to a Joda-Time class is easy - simply pass the JDK class
-into the constructor.
-</p>
-
-<p>
-Each datetime class provides simple easy methods
-to access the datetime <a href="field.html">fields</a>. For example, to access
-the month you can use:
-<source>
-  DateTime dt = new DateTime();
-  int month = dt.getMonthOfYear();
-</source>
-</p>
-
-<p>
-All the main datetime classes are immutable (like String) and cannot be changed
-after creation. However, simple methods have been provided to alter field values
-in a newly created object. For example, to set the year, or add 2 hours you can use:
-<source>
-  DateTime dt = new DateTime();
-  DateTime year2000 = dt.withYear(2000);
-  DateTime twoHoursLater = dt.plusHours(2);
-</source>
-</p>
-
-<p>
-In addition to the basic get methods, each datetime class provides property
-methods for each field. These provide access to the full wealth of Joda-Time
-functionality. For example, to access details about a month or year:
-<source>
-  DateTime dt = new DateTime();
-  String monthName = dt.monthOfYear().getAsText();
-  String frenchShortName = dt.monthOfYear().getAsShortText(Locale.FRENCH);
-  boolean isLeapYear = dt.year().isLeap();
-  DateTime rounded = dt.dayOfMonth().roundFloorCopy();
-</source>
-</p>
-</subsection>
-
-<subsection name="Calendar systems and time zones">
-<p>
-Joda-Time provides support for multiple calendar systems and the full range
-of time zones.
-The <a href="api-release/org/joda/time/Chronology.html"><code>Chronology</code></a>
-and <a href="api-release/org/joda/time/DateTimeZone.html"><code>DateTimeZone</code></a>
-classes provide this support.
-</p>
-<p>
-Joda-Time defaults to using the ISO calendar system (the calendar used by most
-of the business world) and the default time zone of your machine.
-These default values can be overridden whenever necessary.
-Please note that the ISO calendar system is historically inaccurate before 1583.
-</p>
-<p>
-Joda-Time uses a pluggable mechanism for calendars. (The JDK uses subclasses
-such as <code>GregorianCalendar</code>.)
-To obtain a Joda-Time calendar, use one of the factory methods on <code>Chronology</code>.
-<source>
-  Chronology coptic = CopticChronology.getInstance();
-</source>
-</p>
-<p>
-Time zones are implemented as part of the chronology.
-To obtain a Joda-Time chronology in the Tokyo time zone, you can use.
-<source>
-  DateTimeZone zone = DateTimeZone.forID("Asia/Tokyo");
-  Chronology gregorianJuian = GJChronology.getInstance(zone);
-</source>
-</p>
-</subsection>
-
-<subsection name="Intervals and time periods">
-<p>
-Joda-Time provides support for intervals and time periods.
-</p>
-<p>
-An interval is represented by the
-<a href="api-release/org/joda/time/Interval.html"><code>Interval</code></a> class.
-It holds a start and end datetime, and allows operations based around that
-range of time.
-</p>
-<p>
-A time period is represented by the
-<a href="api-release/org/joda/time/Period.html"><code>Period</code></a> class.
-This holds a period such as 6 months, 3 days and 7 hours.
-You can create a <code>Period</code> directly, or derive it from an interval.
-</p>
-<p>
-A time duration is represented by the
-<a href="api-release/org/joda/time/Duration.html"><code>Duration</code></a> class.
-This holds an exact duration in milliseconds.
-You can create a <code>Duration</code> directly, or derive it from an interval.
-</p>
-<p>
-Although a period and a duration may seem similar, they operate differently.
-For example, consider adding one day to a <code>DateTime</code> at the daylight
-savings cutover.
-<source>
-  DateTime dt = new DateTime(2005, 3, 26, 12, 0, 0, 0);
-  DateTime plusPeriod = dt.plus(Period.days(1));
-  DateTime plusDuration = dt.plus(new Duration(24L*60L*60L*1000L));
-</source>
-Adding a period will add 23 hours in this case, not 24 because of the daylight
-savings change, thus the time of the result will still be midday.
-Adding a duration will add 24 hours no matter what, thus the time of the result
-will change to 13:00.
-</p>
-</subsection>
-</section>
-</body>
-</document>
diff --git a/JodaTime/xdocs/related.xml b/JodaTime/xdocs/related.xml
deleted file mode 100644
index abd5d56da..000000000
--- a/JodaTime/xdocs/related.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Related projects</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Related projects">
-<p>
-A number of libraries and applications are now built using Joda-Time.
-</p>
-<ul>
-
-<li><a href="http://usertype.sourceforge.net/">Extended Hibernate support</a>
-A set of classes to link Joda-Time to databases using Hibernate.</li>
-<li><a href="http://joda-time.sourceforge.net/contrib/hibernate/index.html">Original Hibernate support</a>
-The original set of classes to link Joda-Time to databases using Hibernate (UserType project is newer and better maintained).</li>
-<li><a href="http://joda-time.sourceforge.net/contrib/jsptags/index.html">JSP tag support</a>
-A tag library in the style of JSTL to allow Joda-Time classes to be used in JSP.</li>
-<li><a href="http://joda-time.sourceforge.net/contrib/i18n/index.html">I18N support</a>
-A simple library that provides additional internationalization data for Joda-Time.</li>
-<li><a href="http://objectlabkit.sourceforge.net/">Holiday calculation</a>
-Support for working and non-working days, plus how to calculate and resolve holidays.</li>
-<li><a href="http://code.google.com/p/google-rfc-2445/">Recurrance (RFC 2445)</a>
-Support for the RFC2445 recurrence specification, as found in iCal.</li>
-<li><a href="http://www.datanucleus.org/plugins/store.types.jodatime.html">DataNucleus support</a>
-A library providing persistence via the DataNucleus platform.</li>
-</ul>
-<p>
-If your open source library provides a value added feature on top of Joda-Time, then let us know!
-</p>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/stylesheets/joda-theme.css b/JodaTime/xdocs/stylesheets/joda-theme.css
deleted file mode 100644
index 783d38997..000000000
--- a/JodaTime/xdocs/stylesheets/joda-theme.css
+++ /dev/null
@@ -1,124 +0,0 @@
-body, td, select, input, li{
-  font-family: Helvetica, Arial, sans-serif;
-  font-size: 13px;
-  background-color: #fff;
-}
-a {
-  text-decoration: none;
-}
-a:link {
-  color:#009;
-}
-a:visited  {
-  color:#009;
-}
-a:active, a:hover {
-  text-decoration: underline;
-}
-a.externalLink, a.externalLink:link, a.externalLink:visited, a.externalLink:active, a.externalLink:hover {
-  background: url(../images/external.png) right center no-repeat;
-  padding-right: 15px;
-}
-a.newWindow, a.newWindow:link, a.newWindow:visited, a.newWindow:active, a.newWindow:hover {
-  background: url(../images/newwindow.png) right center no-repeat;
-  padding-right: 18px;
-}
-.source a {
-  color:black;
-}
-h2 {
-  font-family: Verdana, Helvetica, Arial, sans-serif;
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #999;
-  color: #006;
-  background-color: #eef;
-  font-weight:bold;
-  font-size: 16px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-h3 {
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #aaa;
-  color: #006;
-  background-color: #eee;
-  font-weight: normal;
-  font-size: 14px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-p, ul {
-  font-size: 13px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-#banner {
-  background-color: #eef;
-  border-bottom: 1px solid #aaa;
-}
-#organizationLogo img, #projectLogo img {
-  border: 1px solid #999;
-}
-#breadcrumbs {
-  padding-top: 1px;
-  padding-bottom: 2px;
-  border-bottom: 1px solid #aaa;
-  background-color: #ddf;
-}
-#leftColumn {
-  margin: 8px 0 8px 4px;
-  border: 1px solid #999;
-  background-color: #eef;
-}
-#navcolumn {
-  padding: 6px 4px 0 6px;
-}
-#navcolumn h5 {
-  font-size: 12px;
-  border-bottom: 1px solid #aaaaaa;
-  padding-top: 2px;
-  font-weight: normal;
-}
-#navcolumn li {
-  font-size: 12px;
-  padding-left: 12px;
-  background-color: #eef;
-}
-#navcolumn a:active, #navcolumn a:hover {
-  text-decoration: none;
-}
-#lastPublished {
-  font-size: 10px;
-}
-table.bodyTable th {
-  color: white;
-  background-color: #bbb;
-  text-align: left;
-  font-weight: bold;
-  font-size: 13px;
-}
-
-table.bodyTable th, table.bodyTable td {
-  font-size: 13px;
-}
-
-table.bodyTable tr.a {
-  background-color: #ddd;
-}
-
-table.bodyTable tr.b {
-  background-color: #eee;
-}
-
-.source {
-  border: 1px solid #999;
-  padding: 8px;
-  margin: 6px;
-}
-#footer {
-  background-color: #eef;
-  border-top: 1px solid #999;
-}
-body {
-  padding-bottom: 0px;
-}
diff --git a/JodaTime/xdocs/stylesheets/maven-theme.css b/JodaTime/xdocs/stylesheets/maven-theme.css
deleted file mode 100644
index 9925fb868..000000000
--- a/JodaTime/xdocs/stylesheets/maven-theme.css
+++ /dev/null
@@ -1,121 +0,0 @@
-body, td, select, input, li{
-  font-family: Helvetica, Arial, sans-serif;
-  font-size: 13px;
-  background-color: #fff;
-}
-a {
-  text-decoration: none;
-}
-a:link {
-  color:#009;
-}
-a:visited  {
-  color:#009;
-}
-a:active, a:hover {
-  text-decoration: underline;
-}
-a.externalLink, a.externalLink:link, a.externalLink:visited, a.externalLink:active, a.externalLink:hover {
-  background: url(../images/external.png) right center no-repeat;
-  padding-right: 15px;
-}
-a.newWindow, a.newWindow:link, a.newWindow:visited, a.newWindow:active, a.newWindow:hover {
-  background: url(../images/newwindow.png) right center no-repeat;
-  padding-right: 18px;
-}
-h2 {
-  font-family: Verdana, Helvetica, Arial, sans-serif;
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #999;
-  color: #006;
-  background-color: #eef;
-  font-weight:bold;
-  font-size: 16px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-h3 {
-  padding: 4px 4px 4px 6px;
-  border: 1px solid #aaa;
-  color: #006;
-  background-color: #eee;
-  font-weight: normal;
-  font-size: 14px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-p, ul {
-  font-size: 13px;
-  margin-top: 4px;
-  margin-bottom: 6px;
-}
-#banner {
-  background-color: #eef;
-  border-bottom: 1px solid #aaa;
-}
-#organizationLogo img, #projectLogo img {
-  border: 1px solid #999;
-}
-#breadcrumbs {
-  padding-top: 1px;
-  padding-bottom: 2px;
-  border-bottom: 1px solid #aaa;
-  background-color: #ddf;
-}
-#leftColumn {
-  margin: 8px 0 8px 4px;
-  border: 1px solid #999;
-  background-color: #eef;
-}
-#navcolumn {
-  padding: 6px 4px 0 6px;
-}
-#navcolumn h5 {
-  font-size: 12px;
-  border-bottom: 1px solid #aaaaaa;
-  padding-top: 2px;
-  font-weight: normal;
-}
-#navcolumn li {
-  font-size: 12px;
-  padding-left: 12px;
-  background-color: #eef;
-}
-#navcolumn a:active, #navcolumn a:hover {
-  text-decoration: none;
-}
-#lastPublished {
-  font-size: 10px;
-}
-table.bodyTable th {
-  color: white;
-  background-color: #bbb;
-  text-align: left;
-  font-weight: bold;
-  font-size: 13px;
-}
-
-table.bodyTable th, table.bodyTable td {
-  font-size: 13px;
-}
-
-table.bodyTable tr.a {
-  background-color: #ddd;
-}
-
-table.bodyTable tr.b {
-  background-color: #eee;
-}
-
-.source {
-  border: 1px solid #999;
-  padding: 8px;
-  margin: 6px;
-}
-#footer {
-  background-color: #eef;
-  border-top: 1px solid #999;
-}
-body {
-  padding-bottom: 0px;
-}
diff --git a/JodaTime/xdocs/tasks.xml b/JodaTime/xdocs/tasks.xml
deleted file mode 100644
index 24ec48960..000000000
--- a/JodaTime/xdocs/tasks.xml
+++ /dev/null
@@ -1,39 +0,0 @@
-<?xml version="1.0"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Tasks outstanding</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Tasks outstanding">
-
-<p>
-The following tasks are on the possible TODO list - contact the mailing lists for more details:
-</p>
-
-<ul>
-<li>Add more chronologies - Hebrew, Persian, Hindu, Thai, Chinese, Japanese,...</li>
-<li>Consider formatting ordinal numbers, like 1st, 2nd, 3rd</li>
-<li>Consider allowing the text output to be altered</li>
-<li>Formatter switching by locale</li>
-<li>Date matching methods to find next date matching search criteria</li>
-</ul>
-
-<p>
-Would you like to volunteer?
-Please contact scolebourne.at.users.sourceforge.net or the <a href="mail-lists.html">mailing list</a>.
-</p>
-</section>
-
-</body>
-</document>
-
-
-
-
-
-
diff --git a/JodaTime/xdocs/timezones.xml b/JodaTime/xdocs/timezones.xml
deleted file mode 100644
index 9bdd99a02..000000000
--- a/JodaTime/xdocs/timezones.xml
+++ /dev/null
@@ -1,459 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Time Zones</title>
-  <author email="broneill.at.users.sourceforge.net">Brian S O'Neill</author>
- </properties>
-
- <body>
-
-<section name="Available Time Zones">
-<p>
-Time zone data is provided by the public <a href="http://www.twinsun.com/tz/tz-link.htm">tz</a>
-database, otherwise known as the Olson database. The following table shows all the time zones
-supported by Joda-Time, using version 2010k of the tz database.
-It is also possible to update to a <a href="tz_update.html">later version of the database</a>.
-This table can be rebuilt by running <code>org.joda.example.time.TimeZoneTable</code>.
-</p>
-<p>
-<table>
-<tr><th align="left">Standard Offset</th><th align="left">Canonical ID</th><th align="left">Aliases</th></tr>
-<tr><td align="left" valign="top">-12:00</td><td align="left" valign="top">Etc/GMT+12</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-11:00</td><td align="left" valign="top">Etc/GMT+11</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-11:00</td><td align="left" valign="top">Pacific/Apia</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-11:00</td><td align="left" valign="top">Pacific/Midway</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-11:00</td><td align="left" valign="top">Pacific/Niue</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-11:00</td><td align="left" valign="top">Pacific/Pago_Pago</td><td align="left" valign="top">Pacific/Samoa, US/Samoa</td></tr>
-<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">America/Adak</td><td align="left" valign="top">America/Atka, US/Aleutian</td></tr>
-<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">Etc/GMT+10</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">HST</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">Pacific/Fakaofo</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">Pacific/Honolulu</td><td align="left" valign="top">US/Hawaii</td></tr>
-<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">Pacific/Johnston</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">Pacific/Rarotonga</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-10:00</td><td align="left" valign="top">Pacific/Tahiti</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-09:30</td><td align="left" valign="top">Pacific/Marquesas</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">America/Anchorage</td><td align="left" valign="top">US/Alaska</td></tr>
-<tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">America/Juneau</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">America/Nome</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">America/Yakutat</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">Etc/GMT+9</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-09:00</td><td align="left" valign="top">Pacific/Gambier</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Dawson</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Los_Angeles</td><td align="left" valign="top">US/Pacific, US/Pacific-New</td></tr>
-<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Santa_Isabel</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Tijuana</td><td align="left" valign="top">America/Ensenada, Mexico/BajaNorte</td></tr>
-<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Vancouver</td><td align="left" valign="top">Canada/Pacific</td></tr>
-<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">America/Whitehorse</td><td align="left" valign="top">Canada/Yukon</td></tr>
-<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">Etc/GMT+8</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">PST8PDT</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-08:00</td><td align="left" valign="top">Pacific/Pitcairn</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Boise</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Cambridge_Bay</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Chihuahua</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Dawson_Creek</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Denver</td><td align="left" valign="top">America/Shiprock, Navajo, US/Mountain</td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Edmonton</td><td align="left" valign="top">Canada/Mountain</td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Hermosillo</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Inuvik</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Mazatlan</td><td align="left" valign="top">Mexico/BajaSur</td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Ojinaga</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Phoenix</td><td align="left" valign="top">US/Arizona</td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">America/Yellowknife</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">Etc/GMT+7</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">MST</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-07:00</td><td align="left" valign="top">MST7MDT</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Bahia_Banderas</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Belize</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Cancun</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Chicago</td><td align="left" valign="top">US/Central</td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Costa_Rica</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/El_Salvador</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Guatemala</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Indiana/Knox</td><td align="left" valign="top">America/Knox_IN, US/Indiana-Starke</td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Indiana/Tell_City</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Managua</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Matamoros</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Menominee</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Merida</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Mexico_City</td><td align="left" valign="top">Mexico/General</td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Monterrey</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/North_Dakota/Center</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/North_Dakota/New_Salem</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Rainy_River</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Rankin_Inlet</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Regina</td><td align="left" valign="top">Canada/East-Saskatchewan, Canada/Saskatchewan</td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Swift_Current</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Tegucigalpa</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">America/Winnipeg</td><td align="left" valign="top">Canada/Central</td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">CST6CDT</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">Etc/GMT+6</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">Pacific/Easter</td><td align="left" valign="top">Chile/EasterIsland</td></tr>
-<tr><td align="left" valign="top">-06:00</td><td align="left" valign="top">Pacific/Galapagos</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Atikokan</td><td align="left" valign="top">America/Coral_Harbour</td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Bogota</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Cayman</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Detroit</td><td align="left" valign="top">US/Michigan</td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Grand_Turk</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Guayaquil</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Havana</td><td align="left" valign="top">Cuba</td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Indiana/Indianapolis</td><td align="left" valign="top">America/Fort_Wayne, America/Indianapolis, US/East-Indiana</td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Indiana/Marengo</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Indiana/Petersburg</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Indiana/Vevay</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Indiana/Vincennes</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Indiana/Winamac</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Iqaluit</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Jamaica</td><td align="left" valign="top">Jamaica</td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Kentucky/Louisville</td><td align="left" valign="top">America/Louisville</td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Kentucky/Monticello</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Lima</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Montreal</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Nassau</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/New_York</td><td align="left" valign="top">US/Eastern</td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Nipigon</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Panama</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Pangnirtung</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Port-au-Prince</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Resolute</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Thunder_Bay</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">America/Toronto</td><td align="left" valign="top">Canada/Eastern</td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">EST</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">EST5EDT</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-05:00</td><td align="left" valign="top">Etc/GMT+5</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:30</td><td align="left" valign="top">America/Caracas</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Anguilla</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Antigua</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/San_Luis</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Aruba</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Asuncion</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Barbados</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Blanc-Sablon</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Boa_Vista</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Campo_Grande</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Cuiaba</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Curacao</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Dominica</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Eirunepe</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Glace_Bay</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Goose_Bay</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Grenada</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Guadeloupe</td><td align="left" valign="top">America/Marigot, America/St_Barthelemy</td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Guyana</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Halifax</td><td align="left" valign="top">Canada/Atlantic</td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/La_Paz</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Manaus</td><td align="left" valign="top">Brazil/West</td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Martinique</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Moncton</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Montserrat</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Port_of_Spain</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Porto_Velho</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Puerto_Rico</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Rio_Branco</td><td align="left" valign="top">America/Porto_Acre, Brazil/Acre</td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Santiago</td><td align="left" valign="top">Chile/Continental</td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Santo_Domingo</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/St_Kitts</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/St_Lucia</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/St_Thomas</td><td align="left" valign="top">America/Virgin</td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/St_Vincent</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Thule</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">America/Tortola</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">Antarctica/Palmer</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">Atlantic/Bermuda</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">Atlantic/Stanley</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-04:00</td><td align="left" valign="top">Etc/GMT+4</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:30</td><td align="left" valign="top">America/St_Johns</td><td align="left" valign="top">Canada/Newfoundland</td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Araguaina</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Buenos_Aires</td><td align="left" valign="top">America/Buenos_Aires</td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Catamarca</td><td align="left" valign="top">America/Argentina/ComodRivadavia, America/Catamarca</td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Cordoba</td><td align="left" valign="top">America/Cordoba, America/Rosario</td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Jujuy</td><td align="left" valign="top">America/Jujuy</td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/La_Rioja</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Mendoza</td><td align="left" valign="top">America/Mendoza</td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Rio_Gallegos</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Salta</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/San_Juan</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Tucuman</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Argentina/Ushuaia</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Bahia</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Belem</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Cayenne</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Fortaleza</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Godthab</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Maceio</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Miquelon</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Montevideo</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Paramaribo</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Recife</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Santarem</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">America/Sao_Paulo</td><td align="left" valign="top">Brazil/East</td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">Antarctica/Rothera</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-03:00</td><td align="left" valign="top">Etc/GMT+3</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-02:00</td><td align="left" valign="top">America/Noronha</td><td align="left" valign="top">Brazil/DeNoronha</td></tr>
-<tr><td align="left" valign="top">-02:00</td><td align="left" valign="top">Atlantic/South_Georgia</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-02:00</td><td align="left" valign="top">Etc/GMT+2</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-01:00</td><td align="left" valign="top">America/Scoresbysund</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-01:00</td><td align="left" valign="top">Atlantic/Azores</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-01:00</td><td align="left" valign="top">Atlantic/Cape_Verde</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">-01:00</td><td align="left" valign="top">Etc/GMT+1</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Abidjan</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Accra</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Bamako</td><td align="left" valign="top">Africa/Timbuktu</td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Banjul</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Bissau</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Casablanca</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Conakry</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Dakar</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/El_Aaiun</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Freetown</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Lome</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Monrovia</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Nouakchott</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Ouagadougou</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Africa/Sao_Tome</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">America/Danmarkshavn</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Atlantic/Canary</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Atlantic/Faroe</td><td align="left" valign="top">Atlantic/Faeroe</td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Atlantic/Madeira</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Atlantic/Reykjavik</td><td align="left" valign="top">Iceland</td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Atlantic/St_Helena</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Etc/GMT</td><td align="left" valign="top">Etc/GMT+0, Etc/GMT-0, Etc/GMT0, Etc/Greenwich, GMT, GMT+0, GMT-0, GMT0, Greenwich</td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Etc/UCT</td><td align="left" valign="top">UCT</td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Etc/UTC</td><td align="left" valign="top">Etc/Universal, Etc/Zulu, Universal, Zulu</td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Europe/Dublin</td><td align="left" valign="top">Eire</td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Europe/Lisbon</td><td align="left" valign="top">Portugal</td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">Europe/London</td><td align="left" valign="top">Europe/Belfast, Europe/Guernsey, Europe/Isle_of_Man, Europe/Jersey, GB, GB-Eire</td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">UTC</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+00:00</td><td align="left" valign="top">WET</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Algiers</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Bangui</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Brazzaville</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Ceuta</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Douala</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Kinshasa</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Lagos</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Libreville</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Luanda</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Malabo</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Ndjamena</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Niamey</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Porto-Novo</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Tunis</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Africa/Windhoek</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">CET</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Etc/GMT-1</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Amsterdam</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Andorra</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Belgrade</td><td align="left" valign="top">Europe/Ljubljana, Europe/Podgorica, Europe/Sarajevo, Europe/Skopje, Europe/Zagreb</td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Berlin</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Brussels</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Budapest</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Copenhagen</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Gibraltar</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Luxembourg</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Madrid</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Malta</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Monaco</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Oslo</td><td align="left" valign="top">Arctic/Longyearbyen, Atlantic/Jan_Mayen</td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Paris</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Prague</td><td align="left" valign="top">Europe/Bratislava</td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Rome</td><td align="left" valign="top">Europe/San_Marino, Europe/Vatican</td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Stockholm</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Tirane</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Vaduz</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Vienna</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Warsaw</td><td align="left" valign="top">Poland</td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">Europe/Zurich</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+01:00</td><td align="left" valign="top">MET</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Blantyre</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Bujumbura</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Cairo</td><td align="left" valign="top">Egypt</td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Gaborone</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Harare</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Johannesburg</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Kigali</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Lubumbashi</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Lusaka</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Maputo</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Maseru</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Mbabane</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Africa/Tripoli</td><td align="left" valign="top">Libya</td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Asia/Amman</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Asia/Beirut</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Asia/Damascus</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Asia/Gaza</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Asia/Jerusalem</td><td align="left" valign="top">Asia/Tel_Aviv, Israel</td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Asia/Nicosia</td><td align="left" valign="top">Europe/Nicosia</td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">EET</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Etc/GMT-2</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Athens</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Bucharest</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Chisinau</td><td align="left" valign="top">Europe/Tiraspol</td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Helsinki</td><td align="left" valign="top">Europe/Mariehamn</td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Istanbul</td><td align="left" valign="top">Asia/Istanbul, Turkey</td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Kaliningrad</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Kiev</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Minsk</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Riga</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Simferopol</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Sofia</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Tallinn</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Uzhgorod</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Vilnius</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+02:00</td><td align="left" valign="top">Europe/Zaporozhye</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Addis_Ababa</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Asmara</td><td align="left" valign="top">Africa/Asmera</td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Dar_es_Salaam</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Djibouti</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Kampala</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Khartoum</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Mogadishu</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Africa/Nairobi</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Antarctica/Syowa</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Aden</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Baghdad</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Bahrain</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Kuwait</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Qatar</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Asia/Riyadh</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Etc/GMT-3</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Europe/Moscow</td><td align="left" valign="top">W-SU</td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Europe/Samara</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Europe/Volgograd</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Indian/Antananarivo</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Indian/Comoro</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:00</td><td align="left" valign="top">Indian/Mayotte</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+03:30</td><td align="left" valign="top">Asia/Tehran</td><td align="left" valign="top">Iran</td></tr>
-<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Asia/Baku</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Asia/Dubai</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Asia/Muscat</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Asia/Tbilisi</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Asia/Yerevan</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Etc/GMT-4</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Indian/Mahe</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Indian/Mauritius</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+04:00</td><td align="left" valign="top">Indian/Reunion</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+04:30</td><td align="left" valign="top">Asia/Kabul</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Antarctica/Mawson</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Aqtau</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Aqtobe</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Ashgabat</td><td align="left" valign="top">Asia/Ashkhabad</td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Dushanbe</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Karachi</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Oral</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Samarkand</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Tashkent</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Asia/Yekaterinburg</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Etc/GMT-5</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Indian/Kerguelen</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:00</td><td align="left" valign="top">Indian/Maldives</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:30</td><td align="left" valign="top">Asia/Colombo</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+05:30</td><td align="left" valign="top">Asia/Kolkata</td><td align="left" valign="top">Asia/Calcutta</td></tr>
-<tr><td align="left" valign="top">+05:45</td><td align="left" valign="top">Asia/Kathmandu</td><td align="left" valign="top">Asia/Katmandu</td></tr>
-<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Antarctica/Vostok</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Almaty</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Bishkek</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Dhaka</td><td align="left" valign="top">Asia/Dacca</td></tr>
-<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Novokuznetsk</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Novosibirsk</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Omsk</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Qyzylorda</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Asia/Thimphu</td><td align="left" valign="top">Asia/Thimbu</td></tr>
-<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Etc/GMT-6</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+06:00</td><td align="left" valign="top">Indian/Chagos</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+06:30</td><td align="left" valign="top">Asia/Rangoon</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+06:30</td><td align="left" valign="top">Indian/Cocos</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Antarctica/Davis</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Bangkok</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Ho_Chi_Minh</td><td align="left" valign="top">Asia/Saigon</td></tr>
-<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Hovd</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Jakarta</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Krasnoyarsk</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Phnom_Penh</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Pontianak</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Asia/Vientiane</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Etc/GMT-7</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+07:00</td><td align="left" valign="top">Indian/Christmas</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Antarctica/Casey</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Brunei</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Choibalsan</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Chongqing</td><td align="left" valign="top">Asia/Chungking</td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Harbin</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Hong_Kong</td><td align="left" valign="top">Hongkong</td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Irkutsk</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Kashgar</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Kuala_Lumpur</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Kuching</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Macau</td><td align="left" valign="top">Asia/Macao</td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Makassar</td><td align="left" valign="top">Asia/Ujung_Pandang</td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Manila</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Shanghai</td><td align="left" valign="top">PRC</td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Singapore</td><td align="left" valign="top">Singapore</td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Taipei</td><td align="left" valign="top">ROC</td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Ulaanbaatar</td><td align="left" valign="top">Asia/Ulan_Bator</td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Asia/Urumqi</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Australia/Perth</td><td align="left" valign="top">Australia/West</td></tr>
-<tr><td align="left" valign="top">+08:00</td><td align="left" valign="top">Etc/GMT-8</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+08:45</td><td align="left" valign="top">Australia/Eucla</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Dili</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Jayapura</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Pyongyang</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Seoul</td><td align="left" valign="top">ROK</td></tr>
-<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Tokyo</td><td align="left" valign="top">Japan</td></tr>
-<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Asia/Yakutsk</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Etc/GMT-9</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+09:00</td><td align="left" valign="top">Pacific/Palau</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+09:30</td><td align="left" valign="top">Australia/Adelaide</td><td align="left" valign="top">Australia/South</td></tr>
-<tr><td align="left" valign="top">+09:30</td><td align="left" valign="top">Australia/Broken_Hill</td><td align="left" valign="top">Australia/Yancowinna</td></tr>
-<tr><td align="left" valign="top">+09:30</td><td align="left" valign="top">Australia/Darwin</td><td align="left" valign="top">Australia/North</td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Antarctica/DumontDUrville</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Asia/Sakhalin</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Asia/Vladivostok</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Brisbane</td><td align="left" valign="top">Australia/Queensland</td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Currie</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Hobart</td><td align="left" valign="top">Australia/Tasmania</td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Lindeman</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Melbourne</td><td align="left" valign="top">Australia/Victoria</td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Australia/Sydney</td><td align="left" valign="top">Australia/ACT, Australia/Canberra, Australia/NSW</td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Etc/GMT-10</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Chuuk</td><td align="left" valign="top">Pacific/Truk, Pacific/Yap</td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Guam</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Port_Moresby</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+10:00</td><td align="left" valign="top">Pacific/Saipan</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+10:30</td><td align="left" valign="top">Australia/Lord_Howe</td><td align="left" valign="top">Australia/LHI</td></tr>
-<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Antarctica/Macquarie</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Asia/Anadyr</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Asia/Kamchatka</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Asia/Magadan</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Etc/GMT-11</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Efate</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Guadalcanal</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Kosrae</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Noumea</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+11:00</td><td align="left" valign="top">Pacific/Pohnpei</td><td align="left" valign="top">Pacific/Ponape</td></tr>
-<tr><td align="left" valign="top">+11:30</td><td align="left" valign="top">Pacific/Norfolk</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Antarctica/McMurdo</td><td align="left" valign="top">Antarctica/South_Pole</td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Etc/GMT-12</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Auckland</td><td align="left" valign="top">NZ</td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Fiji</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Funafuti</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Kwajalein</td><td align="left" valign="top">Kwajalein</td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Majuro</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Nauru</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Tarawa</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Wake</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+12:00</td><td align="left" valign="top">Pacific/Wallis</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+12:45</td><td align="left" valign="top">Pacific/Chatham</td><td align="left" valign="top">NZ-CHAT</td></tr>
-<tr><td align="left" valign="top">+13:00</td><td align="left" valign="top">Etc/GMT-13</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+13:00</td><td align="left" valign="top">Pacific/Enderbury</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+13:00</td><td align="left" valign="top">Pacific/Tongatapu</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+14:00</td><td align="left" valign="top">Etc/GMT-14</td><td align="left" valign="top"></td></tr>
-<tr><td align="left" valign="top">+14:00</td><td align="left" valign="top">Pacific/Kiritimati</td><td align="left" valign="top"></td></tr>
-</table>
-</p>
-
-</section>
-</body>
-</document>
diff --git a/JodaTime/xdocs/tz_update.xml b/JodaTime/xdocs/tz_update.xml
deleted file mode 100644
index 8483adcc7..000000000
--- a/JodaTime/xdocs/tz_update.xml
+++ /dev/null
@@ -1,54 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
-
- <properties>
-  <title>Java date and time API - Time zone update</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
- <body>
-
-<section name="Time zone updates">
-<p>
-Time zones are a concept driven by the political situation in each country around the world.
-As such, they change frequently, and often at short notice.
-In order to manage this, Joda-Time uses the interationally recognised
-<a href="http://www.twinsun.com/tz/tz-link.htm">tz database</a>, which is also used
-in most operating systems and the JDK itself.
-</p>
-<p>
-Using JDK time zone data is a problem however, as the zones are only updated when the
-JDK is updated. This can cause issues if you are locked into an older version of the JDK.
-</p>
-<p>
-Joda-Time also compiles the time zone data into our jar file. However, the key difference is
-that you can update the raw data and recompile the jar at any time.
-</p>
-</section>
-
-<section name="Updating the time zone data">
-<p>
-Firstly, download the latest version of the data files from
-<a href="http://www.twinsun.com/tz/tz-link.htm">tz database</a>. At the time of writing,
-you need to pick the 'FTP distribution' or 'HTTP mirror' links.
-</p>
-<p>
-Secondly, you need a source code download of Joda-Time, available via
-<a href="http://sourceforge.net/projects/joda-time/files/joda-time/">sourceforge</a>.
-</p>
-<p>
-Thirdly, you must take the time zone data files from step one, and replace those in the Joda-Time download.
-They are located at <code>{root}/src/java/org/joda/time/tz/src</code>.
-Note that only <i>some</i> of the files need to be copied across.
-</p>
-<p>
-Finally, recompile the Joda-Time jar file using ant.
-Simply type <code>ant jar</code> in the root directory.
-You may want to rename the produced jar file to remind you that it has been updated.
-</p>
-
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/upgradeto099.xml b/JodaTime/xdocs/upgradeto099.xml
deleted file mode 100644
index 65ba78d0f..000000000
--- a/JodaTime/xdocs/upgradeto099.xml
+++ /dev/null
@@ -1,186 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Upgrade from 0.98 to 0.99</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="Upgrade">
-<p>
-These are the release notes and advice for upgrading Joda-Time from
-version 0.98 to version 0.99.
-<source>
-Joda-Time version 0.99
-----------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is the last pre-beta release of Joda-Time.
-
-We now recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
-
-      ******************************************
-      *  The license of Joda-Time has changed  *
-      *                                        *
-      *    Previous license: BSD-style         *
-      *    New license: Apache License v2      *
-      ******************************************
-
-This change should have no impact on users of the code, as the licenses both have the
-same intent - that is to make the code freely available with a minimum of restrictions.
-
-
-Incompatible changes since 0.98
--------------------------------
-Please contact the joda-interest mailing list if you have difficulties upgrading
-This release is both source and binary incompatible with 0.98
-
-- Formatting package reworked
-  This mainly affects those doing low level formatting work.
-  A deprecated interface has been added for 0.99 for some methods.
-
-  DateTimeFormatter/PeriodFormatter changed from interface to class.
-  These classes are now the main formatting API.
-  You still create them via the same factory classes, such as DateTimeFormat.
-  Most methods, and all functionality, have been retained, but some are deprecated (see below).
-
-  DateTimePrinter/DateTimeParser/PeriodPrinter/PeriodParser are now internal classes.
-  Applications will use DateTimeFormatter/PeriodFormatter.
-  Any references to DateTimePrinter/DateTimeParser/PeriodPrinter/PeriodParser in
-  your application should be changed to DateTimeFormatter/PeriodFormatter.
-  (Unless you are implementing your own printer/parser)
-
-  DateTimeFormatterBuilder usage changes
-   DateTimeFormatterBuilder.toPrinter() --> DateTimeFormatterBuilder.toFormatter()
-   DateTimeFormatterBuilder.toParser() --> DateTimeFormatterBuilder.toFormatter()
-  The isPrinter() and isParser() methods on DateTimeFormatter tell you about the status of the formatter.
-  Make similar changes for PeriodFormatterBuilder.
-
-  Format factory classes now define static methods
-   DateTimeFormat.getInstance().xxx() --> DateTimeFormat.xxx()
-   DateTimeFormat.getInstance(locale).xxx() --> DateTimeFormat.xxx().withLocale()
-  and so on for ISODateFormat, PeriodFormat and ISOPeriodFormat
-
-  DateTimeFormat.appendPatternTo(formatter, pattern) --> f.appendPattern(pattern)
-  DateTimeFormat.getPatternForStyle --> Removed, please contact mailing list
-  
-  BaseDateTimeFormatter/BasePeriodFormatter
-  Classes removed, behaviour moved into DateTimeFormatter/PeriodFormatter
-  
-- DateTimeFormat pattern change
-  The time zone pattern 'ZZZZ' previously output a time zone offset like '+08:00'.
-  Now you need a pattern of 'ZZ' to output the offset.
-  The pattern 'ZZZZ' will now output the time zone id, such as 'Europe/London'.
-
-- ReadablePartial
-  - removed methods toDateTime(), toDateTime(DateTimeZone zone), as their meaning was confused.
-  Implementations on YearMonthDay/TimeOfDay are deprecated.
-
-- DateTime/DateMidnight/MutableDateTime
-  - removed getReadableInstant() from the property classes
-  On DateTime.Property, use getDateTime().
-  On DateMidnight.Property, use getDateMidnight().
-  On MutableDateTime.Property, use getMutableDateTime().
-
-- ReadableInstant
-  - added method isSupported(DateTimeFieldType field)
-  Implemented in DateTime/DateMidnight/MutableDateTime 
-
-- YearMonthDay/TimeOfDay
-  - removed getReadablePartial() from the property classes
-  On YearMonthDay.Property, use getYearMonthDay().
-  On TimeOfDay.Property, use getTimeOfDay().
-
-- TimeOfDay
-  - semantic change to TimeOfDay.Property.addToCopy()
-  Previously, add threw an exception if the 23:59/00:00 boundary was broken.
-  Now it wraps to the next 'day', as this is the more typical use case.
-  Change to the method TimeOfDay.Property.addNoWrapToCopy() to restore the old behaviour.
-
-
-Deprecations since 0.98
------------------------
-** ALL deprecated methods will be removed in 1.0 **
-Please contact the joda-interest mailing list if you have difficulties upgrading
-
-- Formatting package reworked
-  Factory classes now no longer have a static getInstance() method.
-   DateTimeFormat.getInstance().xxx() --> DateTimeFormat.xxx()
-   ISODateTimeFormat.getInstance().xxx() --> ISODateTimeFormat.xxx()
-   PeriodFormat.getInstance().xxx() --> PeriodFormat.xxx()
-   PeriodFormat.getInstance(locale).xxx() --> PeriodFormat.xxx().withLocale()
-   ISOPeriodFormat.getInstance().xxx() --> ISOPeriodFormat.xxx()
-  Some DateTimeFormatter methods deprecated.
-   f.print(millis, DateTimeZone) --> f.withZone(zone).print(millis)
-   f.print(millis, Chronology) --> f.withChronology(chrono).print(millis)
-   f.parseMillis(str, Chronology) --> f.withChronology(chrono).parseMillis(str)
-   f.parseDateTime(str, Chronology) --> f.withChronology(chrono).parseDateTime(str)
-   f.parseMutableDateTime(str, Chronology) --> f.withChronology(chrono).parseMutableDateTime(str)
-  Some PeriodFormatter methods deprecated.
-   f.parsePeriod(type, str) --> f.withType(type).parsePeriod(str)
-   f.parseMutablePeriod(type, str) --> f.withType(type).parseMutablePeriod(str)
-
-- DateTimeZone - factory methods changed:
-  getInstance() -> forID/forOffsetHours/forOffsetHoursMinutes/forTimeZone
-  Aim to clarify meaning of each method
-
-- YearMonthDay/TimeOfDay
-  - deprecated methods toDateTime(), toDateTime(DateTimeZone zone), as their meaning was confused.
-  On YearMonthDay, use toDateTimeAtCurrentTime() or toDateTimeAtMidnight().
-  On TimeOfDay, use toDateTimeToday().
-
-
-Bug fixes since 0.98
---------------------
-- Interval/MutableInterval isAfter(ReadableInterval) - fixed bug when intervals abutted
-
-- Parsing periods of the form PT... - fixed bug that prevented parsing
-
-- Period parsing now more strict - 'T' character required to separate date and
-  time in ISO periods
-
-- Fixed parsing of fractional seconds in Periods
-
-- Default time zone based on offset was being interpreted as UTC
-
-- Fixed NullPointerException in DateTimeFormat
-
-- DateTimeFormat would use date style for time style
-
-- DateTimeFormatterBuilder was using wrong time zone for text fields
-
-- Avoid NPE in property(DateTimeFieldType) methods
-
-- Parsing two digit years using a pattern now follows JDK definition
-
-
-Enhancements since 0.98
------------------------
-- Formatting package much more powerful, and has potential to grow after 1.0 release
-
-- YearMonthDay/TimeOfDay
-  - add toString variants that take a pattern
-  - add withField(), withFieldAdded(), withPeriodAdded(), plus() and minus()
-
-- DateTimeField
-  - Add methods getAsText(int, Locale) and getAsShortText(int, Locale) for
-    simple access to text values
-
-- Period
-  - Added support to create periods from a duration and an end instant
-  - Periods can be converted to durations by end instant too
-
-- Duration
-  - Durations can be converted to periods by end instant too
-  - Durations can be converted to intervals by end instant too
-
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/upgradeto100.xml b/JodaTime/xdocs/upgradeto100.xml
deleted file mode 100644
index fcec0a382..000000000
--- a/JodaTime/xdocs/upgradeto100.xml
+++ /dev/null
@@ -1,61 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Upgrade from 0.99 to 1.0</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="Upgrade">
-<p>
-These are the release notes and advice for upgrading Joda-Time from
-version 0.99 to version 1.0.
-<source>
-Joda-Time version 1.0
----------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is the first full release of Joda-Time.
-There have been numerous beta releases over an extended period of time.
-
-We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
-
-Joda-Time is licensed under the business-friendly Apache License Version 2.
-This is the same license as all of Apache, plus other open source projects such as Spring.
-The intent is to make the code available to the Java community with the minimum
-of restrictions. If the license cause you problems please contact the mailing list.
-
-
-Incompatible changes since 0.99
--------------------------------
-Deprecated methods removed.
-See http://joda-time.sourceforge.net/upgradeto099.html for 0.98 to 0.99 changes
-
-
-Deprecations since 0.99
------------------------
-None
-See http://joda-time.sourceforge.net/upgradeto099.html for 0.98 to 0.99 changes
-
-
-Bug fixes since 0.99
---------------------
-None
-See http://joda-time.sourceforge.net/upgradeto099.html for 0.98 to 0.99 changes
-
-
-Enhancements since 0.99
------------------------
-None
-See http://joda-time.sourceforge.net/upgradeto099.html for 0.98 to 0.99 changes
-
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/upgradeto110.xml b/JodaTime/xdocs/upgradeto110.xml
deleted file mode 100644
index cd79d0833..000000000
--- a/JodaTime/xdocs/upgradeto110.xml
+++ /dev/null
@@ -1,199 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Upgrade from 1.0 to 1.1</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="Upgrade">
-<p>
-These are the release notes and advice for upgrading Joda-Time from
-version 1.0 to version 1.1.
-<source>
-Joda-Time version 1.1
----------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is the second full release of Joda-Time.
-
-We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
-
-Joda-Time is licensed under the business-friendly Apache License Version 2.
-This is the same license as all of Apache, plus other open source projects such as Spring.
-The intent is to make the code available to the Java community with the minimum
-of restrictions. If the license cause you problems please contact the mailing list.
-
-
-Incompatible changes since 1.0
-------------------------------
-Binary compatible - Yes
-  - v1.0 and v1.1 are binary compatible in their public and protected API
-
-Source compatible - Yes
-  - v1.0 and v1.1 are source compatible in their public and protected API
-
-Serialization compatible - Yes, except:
-  - DateTime.Property, DateMidnight.Property and MutableDateTime.Property
-   serialization formats have changed to fix a bug.
-    Please note that this only affects the property classes, and not DateTime,
-   DateMidnight or MutableDateTime themselves
-    It is unlikely that you serialized one of these classes
-
-Data compatible - Yes, except:
-  - Removed time zones Asia/Riyadh87, Asia/Riyadh88 and Asia/Riyadh89.
-   These should not have been included in the 1.0 release, and do not represent
-   genuine time zones. It is unlikely that you used them.
-   If you do want to use them, please contact the joda-interest mailing list
-
-
-Warnings since 1.0
-------------------
-ReadablePartial now has a comment recommending that all implementations
-should also implement Comparable.
-This is most easily achieved by extending AbstractPartial.
-
-
-Deprecations since 1.0
-----------------------
-None
-
-
-Bug fixes since 1.0
--------------------
-- Date and Time (ZoneInfoCompiler)
-  Greek summer time was incorrect due to a comment parsing bug.
-  This disabled DST (summer time) for Europe/Athens after 1980.
-
-- DateTimeFormat
-  Parsing of two digit year by DateTimeFormat supports parsing of more or less
-  than two digits, for compatibility with java.text.SimpleDateFormat. If not
-  two digits or if sign character is present, then year is parsed as absolute.
-
-- GJChronology
-  Range duration field of dayOfMonth was not consistent with monthOfYear. This
-  bug manifested itself when adding/subtracting periods to partials.
-
-- DateTimeParserBucket
-  Fixed parsing date where format includes era. Era must be set and rounded
-  before any other fields.
-
-- PeriodFormatterBuilder
-  Formatters that had fields which required a zero to be printed were not being
-  parsed.
-
-- DateTime.Property, DateMidnight.Property and MutableDateTime.Property
-  Could previously only be serialized in UTC.
-  The serialization format has been changed to be simpler and more reliable.
-  Unfortunately, this was an incompatible change to the serialization format.
-
-- DateTimeFormatterBuilder/PeriodFormatterBuilder
-  Number parser would accept multiple sign characters as valid.
-
-- YearMonthDay/TimeOfDay.withChronologyRetainFields
-  Previously, switching chronology did not validate the fields, so you could
-  end up with an object in an invalid state, such as a YearMonthDay where
-  dayOfMonth=31 with Coptic.
-  This method can now throw an IllegalArgumentException
-
-- Chronologies
-  Overflowed calculations involving year throw ArithmeticException rather than
-  produce a bogus result.
-
-- DateTimeFormatterBuilder.canBuildFormatter()
-  Previously this method always returned false.
-
-
-Enhancements since 1.0
-----------------------
-- Partial
-  New immutable implementation of ReadablePartial.
-  This implementation is flexible as to the fields that it stores.
-  Thus, if you want a partial holding just a year and monthOfYear (perhaps
-  for a credit card expiry date), then this class can be used.
-  Full support for almost all truncated and reduced precision ISO output
-  formats is available via use of this class.
-
-- DateTime/DateMidnight/MutableDateTime/YearMonthDay/TimeOfDay
-  Added convenience plusXxx() and minusXxx() methods to add/subtract a period
-  For example, dt.plus(Period.days(6)) can now be replaced by dt.plusDays(6)
-
-- DateTime/DateMidnight/MutableDateTime/YearMonthDay/TimeOfDay
-  Added convenience toString() method that takes a DateTimeFormatter
-  For example, dt.toString(DateTimeFormat.shortDateTime())
-
-- YearMonthDay/TimeOfDay/AbstractPartial
-  Enabled comparisons using Comparable interface
-  Added compareTo/isEqual/isAfter/isBefore methods
-  These methods were added to AbstractPartial, and are thus available to
-  all implementations of ReadablePartial
-
-- YearMonthDay/TimeOfDay
-  Extra time zone constructor
-  Allows current date and time to be accurately obtained
-
-- DateTime/DateMidnight/MutableDateTime/YearMonthDay/TimeOfDay Property
-  Added new method to property class - getAsString()
-  Gets the value as a string, not using text values like 'Monday' or 'January'
-
-- Period
-  Added constructors to create a Period from two ReadablePartials, such as
-  YearMonthDay or TimeOfDay
-
-- Period
-  Added factory to create a Period from two ReadablePartials using an
-  alternative, field-based, calculation
-
-- DateTimeUtils
-  Added isContiguous(ReadablePartial) to test if a partial is contiguous
-  (see the method for the definition)
-
-- PeriodType
-  Added factory method forFields() to allow a PeriodType to be obtained
-  from any set of DurationFieldType objects
-
-- PeriodType
-  Added three new period types - YearMonthDay, YearWeekDay and YearDay
-  These complement the existing ones but exclude the time fields.
-
-- DateTimeFormatter
-  Method withPivotYear added to allow the two digit pivot year to be controlled.
-  This is most useful after creating a format from a string pattern.
-
-- DateTimeFormatter
-  Added lenient parse option to appendTwoDigitYear and appendTwoDigitWeekyear.
-
-- Interval
-  Added overlap method that returns the actual overlap between two intervals.
-  Added gap method that returns the gap between two intervals.
-  Added abuts method that returns true if two intervals abut.
-
-- DateTimeUtils
-  Added getReadableInterval(ReadableInterval) method to handle null intervals
-
-- IllegalFieldValueException
-  Added new exception subclass of IllegalArgumentException to capture more
-  context when a field is set to an illegal value. This can be helpful in
-  interactive applications.
-
-- GJLocaleSymbols
-  Supports parsing "CE" and "BCE" as era if locale language is English.
-
-- ISODateTimeFormat
-  New method, forFields(), which gets an ISO format for a set of fields.
-  This is useful for more unusual formats such as DayHour.
-
-- ISODateTimeFormat
-  New methods to output ordinal style dates, such as 2005-161.
-
-- DateTimeZone classes updated to latest data from the Olson time zone database
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/upgradeto120.xml b/JodaTime/xdocs/upgradeto120.xml
deleted file mode 100644
index 6946462aa..000000000
--- a/JodaTime/xdocs/upgradeto120.xml
+++ /dev/null
@@ -1,142 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Upgrade from 1.1 to 1.2</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="Upgrade">
-<p>
-These are the release notes and advice for upgrading Joda-Time from
-version 1.1 to version 1.2.
-<source>
-Joda-Time version 1.2
----------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is the third full release of Joda-Time.
-This release focuses on bug fixes, with a few new features.
-
-We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
-
-Joda-Time is licensed under the business-friendly Apache License Version 2.
-This is the same license as all of Apache, plus other open source projects such as Spring.
-The intent is to make the code available to the Java community with the minimum
-of restrictions. If the license causes you problems please contact the mailing list.
-
-** Please also check out the JSP and Hibernate contributed projects **
-
-
-Incompatible changes since 1.1
-------------------------------
-Binary compatible - Yes, except
-  - The internal classes BaseGJChronology and CommonGJChronology have been removed
-    They were implementation classes and you should not have been using them
-    Please contact the mailing list if this causes you problems
-
-Source compatible - Yes
-  - v1.1 and v1.2 are source compatible in their public and protected API
-
-Serialization compatible - Yes
-  - Chronology serialization has changed, however the two formats are compatible
-  - v1.1 did not serialize the Chronology minimum days in first week field properly, v1.2 does
-
-Data compatible - Yes
-  - DateTimeZone data updated to version 2005q
-
-
-Deprecations since 1.1
-----------------------
-- Chronology factory methods, such as getISO() and getCopticUTC()
-  You should now use the chrono package directly:
-    Chronology.getCoptic(zone)   is replaced by
-    CopticChronology.getInstance(zone)
-  These factory methods have been removed as they were unable to scale
-  suitably as more and more chronologies are added
-
-
-Bug fixes since 1.1
--------------------
-- ZonedChronology
-  getMaximumValue(ReadablePartial)/getMinimumValue(ReadablePartial)
-  Methods returned incorrect result
-
-- ZonedChronology
-  Better detection and handling of offset calculation overflow, throwing
-  an ArithmeticException.
-
-- DateTimeZone
-  Handles offset calculation overflow errors for instants near Long.MAX_VALUE,
-  ending the offset transition sequence.
-
-- DateTimeFormatter
-  Reverts to UTC if time zone offset calculation causes overflow. This allows at least
-  the time of day fields to be printed for instants near Long.MIN_VALUE or Long.MAX_VALUE.
-
-- CopticChronology
-  Fixed regression in month of year calculation which affected getMaximumValue
-  on dayOfMonth field.
-
-- CopticChronology
-  Fixed month duration field to handle short 13th month correctly.
-
-- ZonedChronology
-  Fixed getting text values for fields from getAs[Short]Text(int value, Locale locale).
-
-- Gregorian, Julian, GJ and Coptic
-  These Chronology classes did not correctly store the minimum days in first week
-  during serialization
-
-- DateTimeFormatter
-  Fixed printing of time zone name near DST transition
-
-- YearMonthDay
-  Fixed addition where date starts on a leap day
-  Fixed addition in the GJChronology
-
-- DateTimeFormat
-  Pattern letter 'K' was using the wrong underlying implementation
-
-
-Enhancements since 1.1
-----------------------
-- IslamicChronology
-- EthiopicChronology
-  New Chronologies
-
-- DateTime.Property.withMaximumValue() (also DateMidnight/YearMonthDay etc)
-- DateTime.Property.withMinimumValue()
-  Returns a copy of the base datetime with the specified field set to
-  the maximum or minimum value. This is useful to get the last day of the month.
-  - DateTime lastDayOfMonth = dt.dayOfMonth().withMaximumValue();
-
-- DateTime.Property.toInterval() (also DateMidnight/MutableDateTime)
-  New method to convert return an Interval object over the span of the property
-  Thus dt.monthOfYear().toInterval() returns an interval from the start to
-  the end of the month
-
-- MutableDateTime.property(DateTimeFieldType)
-  Gets the property by type. Complements the method already on DateTime/DateMidnight.
-
-- YearMonthDay.fromCalendarFields()
-- YearMonthDay.fromDateFields()
-- TimeOfDay.fromCalendarFields()
-- TimeOfDay.fromDateFields()
-  New factory methods to create a YearMonthDay/TimeOfDay using exactly the same
-  field values as the JDK objects, thus ignoring time zone effects
-
-- FieldUtils
-  Performance optimization when adding by scalars of one or negative one. The
-  overflow detecting multiplication skips the multiply and divide check for
-  these values.
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/upgradeto121.xml b/JodaTime/xdocs/upgradeto121.xml
deleted file mode 100644
index 84666ecb6..000000000
--- a/JodaTime/xdocs/upgradeto121.xml
+++ /dev/null
@@ -1,76 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Upgrade from 1.2 to 1.2.1</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="Upgrade">
-<p>
-These are the release notes and advice for upgrading Joda-Time from
-version 1.2 to version 1.2.1.
-<source>
-Joda-Time version 1.2.1
------------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is a patch release for Joda-Time 1.2.
-This release only contains bug fixes.
-We recommend all users of 1.2 upgrade to 1.2.1.
-
-We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
-
-Joda-Time is licensed under the business-friendly Apache License Version 2.
-This is the same license as all of Apache, plus other open source projects such as Spring.
-The intent is to make the code available to the Java community with the minimum
-of restrictions. If the license causes you problems please contact the mailing list.
-
-** Please also check out the JSP and Hibernate contributed projects **
-
-
-Incompatible changes since 1.2
-------------------------------
-Binary compatible - Yes
-
-Source compatible - Yes
-  - A bug fix has changed the effect of some toXxx() methods if you use time zones
-
-Serialization compatible - Yes
-
-Data compatible - Yes
-  - DateTimeZone data updated to version 2006a
-
-
-Deprecations since 1.2
-----------------------
-- None
-
-
-Bug fixes since 1.2
--------------------
-- DateTime/DateMidnight/MutableDateTime/AbstractInstant
-   Conversion methods toDateTime, toDateTimeISO, toMutableDateTime, and
-    toMutableDateTimeISO now preserve the time zone.
-    Previously calling any of these four methods would convert the result to
-    the default time zone. This was incorrect.
-    The methods have been changed to preserve the time zone.
-   The similarly named methods on Instant have not changed behaviour.
-
-- DateTimeFormatterBuilder.MatchingParser
-   Previously didn't estimate parsed length correctly
-
-
-Enhancements since 1.2
-----------------------
-- None
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/upgradeto130.xml b/JodaTime/xdocs/upgradeto130.xml
deleted file mode 100644
index 35e533c57..000000000
--- a/JodaTime/xdocs/upgradeto130.xml
+++ /dev/null
@@ -1,152 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Upgrade from 1.2 to 1.3</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="Upgrade">
-<p>
-These are the release notes and advice for upgrading Joda-Time from
-version 1.2 to version 1.3.
-<source>
-Joda-Time version 1.3
----------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is the fourth full release of Joda-Time.
-This release focuses on new features, but also include some bug fixes.
-
-We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
-
-Joda-Time is licensed under the business-friendly Apache License Version 2.
-This is the same license as all of Apache, plus other open source projects such as Spring.
-The intent is to make the code available to the Java community with the minimum
-of restrictions. If the license causes you problems please contact the mailing list.
-
-** Please also check out the JSP and Hibernate contributed projects **
-
-
-Enhancements since 1.2
-----------------------
-- LocalDate/LocalTime/LocalDateTime
-  New classes representing date, time and datetime without a time zone.
-  LocalDate is the recommended replacement for YearMonthDay.
-  LocalTime is the recommended replacement for TimeOfDay.
-  These classes are implemented more flexibly than YearMonthDay and TimeOfDay
-  and thus solve the problem where you couldn't query or format fields such
-  as dayOfWeek on a YearMonthDay or millisOfDay on a TimeOfDay.
-  Neither YearMonthDay or TimeOfDay will be immediately deprecated as they
-  are in widespread use.
-  The API of the new classes has been kept as similar to YearMonthDay/TimeOfDay
-  as possible to aid migration, so this should be a search and replace change.
-
-- DateTime/DateMidnight/YearMonthDay/TimeOfDay
-  - toLocalXxx()
-  Added methods that allow conversion to the new classes, for example:
-  LocalDate date = today.toLocalDate();
-
-- DateTime/DateMidnight/YearMonthDay/TimeOfDay
-  - withXxx()
-  Added methods that allow an individul field to be changed, for example:
-  DateTime firstOfMonth = today.withDayOfMonth(1);
-  These methods are the immutable equivalent of set methods.
-  These are convenince methods for the methods on the property API.
-
-- DateTimeFormatter/DateTimeParserBucket
-  If a parsed datetime is illegal due to field range or time zone offset
-  transition, thrown exception includes text of datetime being parsed.
-
-- DateTimeFormat
-  - patternForStyle()
-  Added method to retrieve the format pattern for a given style and locale.
-
-- ISODateTimeFormat
-  - localDateParser()
-  - localTimeParser()
-  - localDateOptionalTimeParser()
-  - dateOptionalTimeParser()
-  New formats for parsing a datetime/date/time without a time zone, and for
-  parsing a date (mandatory) with an optional time
-
-
-Compatibility with 1.2
-----------------------
-Binary compatible - Yes, except
-  - PartialConverter interface has had two new methods added.
-    This is an internal interface and thus it is unlikely that you have
-    implementations that will break. If you did create your own implementation
-    and extended AbstractConverter then your code will not break.
-
-Source compatible - Yes, except
-  - PartialConverter interface, see above
-
-Serialization compatible - Yes
-
-Data compatible - Yes
-  - DateTimeZone data updated to version 2006g
-
-Semantic compatible - Yes, except
-  - YearMonthDay constructor no longer accepts time only strings
-  - TimeOfDay constructor no longer accepts strings including a date
-
-
-Deprecations since 1.2
-----------------------
-- Instant.toDateTimeISO
-- Instant.toMutableDateTimeISO
-    These were identical to the methods without the ISO suffix
-
-
-Bug fixes since 1.2
--------------------
-- YearMonthDay
-  Constructing with String value no longer accepts a time only string
-
-- TimeOfDay
-  Constructing with String value no longer accepts date fields
-  Constructing with String now treats 'T' prefix as optional
-
-- DateTime/DateMidnight/MutableDateTime/AbstractInstant
-   Conversion methods toDateTime, toDateTimeISO, toMutableDateTime, and
-    toMutableDateTimeISO now preserve the time zone.
-    Previously calling any of these four methods would convert the result to
-    the default time zone. This was incorrect.
-    The methods have been changed to preserve the time zone.
-   The similarly named methods on Instant have not changed behaviour.
-
-- Interval.overlap/Interval.gap
-  Previously these methods returned intervals in the default time zone
-  Now, they return intervals in the time zone of the original interval
-
-- Interval/MutableInterval.overlaps(ReadableInterval)
-  Previously, these methods did not handle null correctly
-  Now, if the current millisecond instant is at the start of the interval the
-  method returns false (as defined, even if its a little unexpected)
-
-- DateTimeFormatterBuilder.MatchingParser
-  Previously didn't estimate parsed length correctly
-
-- YearMonthDay/TimeOfDay/Partial.Property
-  Hashcode was not defined
-
-- FixedDateTimeZone
-  Hashcode was not defined
-
-- ISO/Gregorian/Julian/Coptic/EthiopicChronology
-  Fixed overflow when getting year field from instants at Long.MAX_VALUE and
-  LONG.MIN_VALUE
-
-- DayOfYear field
-  Better error messages
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/upgradeto140.xml b/JodaTime/xdocs/upgradeto140.xml
deleted file mode 100644
index 30bed366e..000000000
--- a/JodaTime/xdocs/upgradeto140.xml
+++ /dev/null
@@ -1,88 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Upgrade from 1.3 to 1.4</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="Upgrade">
-<p>
-These are the release notes and advice for upgrading Joda-Time from
-version 1.3 to version 1.4.
-<source>
-Joda-Time version 1.4
----------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is the fifth full release of Joda-Time.
-This release focuses on new features, but also include some bug fixes.
-
-We recommend JDK 1.3 or later, and have performed no testing on earlier JDKs.
-
-Joda-Time is licensed under the business-friendly Apache License Version 2.
-This is the same license as all of Apache, plus other open source projects such as Spring.
-The intent is to make the code available to the Java community with the minimum
-of restrictions. If the license causes you problems please contact the mailing list.
-
-*  Please also check out our related projects   *
-* http://joda-time.sourceforge.net/related.html *
-
-
-Enhancements since 1.3
-----------------------
-- Years/Months/Weeks/Days/Hours/Minutes/Seconds
-  New group of single field period classes
-  These allow applications to specify a specific field in method signatures and calculations
-  Methods are provided to convert between most of these based on standard length periods
-
-- Period.ZERO
-  Add zero-length constant to Period
-
-- PeriodFormatBuilder.append(PeriodPrinter,PeriodParser)
-  This method completes the API of PeriodFormatBuilder in the style of DateTimeFormatBuilder
-
-
-Compatibility with 1.3
-----------------------
-Binary compatible - Yes
-
-Source compatible - Yes, except
-  If you subclassed AbstractReadableInstantFieldProperty (unlikely) then
-  you now need to override getChronology() to re-enable the equals() and
-  hashCode() methods.
-
-Serialization compatible - Yes
-
-Data compatible - Yes
-  - DateTimeZone data updated to version 2006o
-
-Semantic compatible - Yes
-
-
-Deprecations since 1.3
-----------------------
-
-
-Bug fixes since 1.3
--------------------
-- GJChronology
-  Text value of ReadablePartial fields was always a decimal number.
-
-- Comparisons of Chronology instances by identity  [1576727]
-  Some comparisons of Chronology instances were performed using ==
-  This worked fine in most cases due to agressive caching, however it failed when
-  using LenientChronology and other wrapping chronologies which do not have caching
-  Comparison is now via equals(), and involved adding equals() methods to a number
-  of classes. In addition, subclasses of AbstractReadableInstantFieldProperty must
-  now implement getChronology().
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/upgradeto150.xml b/JodaTime/xdocs/upgradeto150.xml
deleted file mode 100644
index 3ca0fdd6a..000000000
--- a/JodaTime/xdocs/upgradeto150.xml
+++ /dev/null
@@ -1,198 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Upgrade from 1.4 to 1.5</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="Upgrade">
-<p>
-These are the release notes and advice for upgrading Joda-Time from
-version 1.4 to version 1.5.
-<source>
-Joda-Time version 1.5
----------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is the sixth full release of Joda-Time.
-This release focuses on new features, but also include some bug fixes.
-
-We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
-
-Joda-Time is licensed under the business-friendly Apache License Version 2.
-This is the same license as all of Apache, plus other open source projects such as Spring.
-The intent is to make the code available to the Java community with the minimum
-of restrictions. If the license causes you problems please contact the mailing list.
-
-*  Please also check out our related projects   *
-* http://joda-time.sourceforge.net/related.html *
-
-
-Enhancements since 1.4
-----------------------
-- LocalDate
-  - add toDateTimeAtStartOfDay(), toDateTimeAtStartOfDay(DateTimeZone)
-  methods to replace toDateTimeAtMidnight() which avoid issues with time zones
-  that do not have midnight at spring DST cutover
-
-- LocalDate
-  - add toLocalDateTime()
-    provide mechanism to create LocalDateTime from LocalDate and LocalTime
-
-- Performance enhancement for LocalDate, LocalTime and LocalDateTime
-  - equals, compareTo, Period construction
-
-- Partial
-  - add isMatch(ReadablePartial)
-    provide mechanism to match a Partial, such as 'Friday the Thirteenth' to
-    another partial, such as a LocalDate
-
-- Period
-  - add toStandardDuration()
-  - add toStandardWeeks(), toStandardDays(), toStandardHours(),
-    toStandardMinutes(), toStandardSeconds()
-  methods to convert a period to other types using the standard
-  conversions (7 day week, 24 hour day, ...)
-
-- Period
-  - add plus(ReadablePeriod), minus(ReadablePeriod)
-  methods to add and subtract whole periods rather than just single fields
-
-- Period
-  - add normalizedStandard(), normalizedStandard(PeriodType)
-  methods to normalize the period back to standard field ranges, such as
-  normalizing 1 year 15 months to 2 years 3 months
-
-- Period.toString(PeriodFormatter), MutablePeriod.toString(PeriodFormatter)
-  - allow periods to be directly formatted, as with datetimes
-
-- DateTimeZone
-  - add isStandardOffset()
-  assists in determining if DST applies
-
-- Interval
-  - add (long,long,DateTimeZone) constructor
-  constructor emphasises that intervals include a time zone
-
-- DateTimeFormatterBuilder
-  - add appendFixedDecimal(DateTimeFieldType,int),
-        appendFixedSignedDecimal(DateTimeFieldType,int)
-  methods for printing and parsing fields which must have a fixed number of digits
-
-
-Compatibility with 1.4
-----------------------
-Binary compatible - Yes, except
-  - Internal class LenientDateTimeField has an incompatible change to
-    getInstance() and the constructor
-  - Internal class DateTimeZoneBuilder has an incompatible change to
-    toDateTime() and writeTo()
-
-Source compatible - Yes, except
-  - Internal class LenientDateTimeField has an incompatible change to
-    getInstance() and the constructor
-  - Internal class DateTimeZoneBuilder has an incompatible change to
-    toDateTime() and writeTo()
-
-Serialization compatible - Yes
-
-Data compatible - Yes, except
-  - Format of time zone data files changed slightly to fix bug
-    This mainly affects Australia
-  - DateTimeZone data updated to version 2007h
-
-Semantic compatible - Yes
-
-
-Deprecations since 1.4
-----------------------
-- YearMonthDay
-  - use LocalDate
-- TimeOfDay
-  - use LocalTime
-  - LocalDate and LocalTime have a much better internal implementation and have
-    been available since v1.3. Both have been effectively deprecated in the javadoc
-    for over a year to enable a gentle transition. In this release, they are now
-    formally deprecated, however they won't be removed until a v2.0 which won't
-    occur until 2009 at the earliest.
-
-- LocalDate.toDateTimeAtMidnight()
-  LocalDate.toDateTimeAtMidnight(DateTimeZone)
-  - use toDateTimeAtStartOfDay() instead because it avoids exceptions
-
-
-Bug fixes since 1.4
--------------------
-- Daylight savings cutover in Spring incorrect
-  A problem with DST cutover in Spring meant that the result of many
-  methods would be different depending on whether the time zone was in the
-  Eastern or Western hemisphere. Now, the DST cutover is consistent, such
-  that if a time is requested within the cutover, it will be pushed forwards
-  into summer time. [1710316, 1747219, 1755158]
-
-- LenientChronology and time zones
-  LenientChronology could throw exceptions when the time being created
-  didn't exist dies to the time zone [1755161]
-
-- LocalDate/LocalTime constructors did not set internal state correctly
-  This problem was exposed when Days.daysBetween() and similar methods
-  failed to give the right results
-
-- Period.plusXxx(), minusXxx(), withXxx()
-  Fix to throw correct exception as per javadoc (UnsupportedOperationException) when
-  changing an unsupported field
-
-- ZoneInfoProvider now returns a copy of its internal state on getAvailableIDs
-  This avoids race conditions on some JVMs
-
-- Period formating threw NegativeArraySizeException during formatting
-  This happened for certain period values, notably zero
-
-- Period formatting could end up in an infinite loop on IBM JDK 1.4.2
-  This appears to be an IBM JDK issue, not a Joda-Time issue, but we should
-  not have ended up in an infinite loop whatever happens
-
-- DateTimeZone did not properly convert fixed offset zones to java.util.TimeZone [1682152]
-
-- DateTimeZone names were incorrect when abbreviation is the same in winter
-  and summer, notably in Australia [1716305]
-
-- Avoid compilation issue reported by Apache Harmony [1699760]
-
-- LenientChronology might incorrectly adjust a valid hour field near DST transition
-
-- DateTimeFormat javadoc now explains time zone parsing restriction better [OpenDiscussion 1721909]
-
-- Period javadoc now explains toDurationFrom() and toDurationTo() better
-
-- DateTime/Instant/LocalDateTime javadoc improved
-
-- DateTimeZone
-  Clarify javadoc of forTimeZone to indicate that application created
-  SimpleTimeZone rules are not parsed [1705180]
-
-- Defect in localized Gregorian/Julian symbol cache severely impacted formatting
-  performance when using null (default) locale.
-
-- DateTimeFormatter specified with locale of null could produce mismatched
-  symbols if default locale changed concurrently.
-
-- DateTime parsing of text failed when the text for the locale contained characters
-  other than letters. [1788282]
-  For French, the short text for months ends with '.'.
-  For Korean, the text for months contains a number.
-  The parser was also too greedy, and would absorb all letters it found, preventing
-  parsing a format such as '23JunSat' (month followed by day of week, or any other text).
-  The parser has been rewritten to only match the text that can be produced by the
-  formatter.
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/upgradeto151.xml b/JodaTime/xdocs/upgradeto151.xml
deleted file mode 100644
index 40d842d04..000000000
--- a/JodaTime/xdocs/upgradeto151.xml
+++ /dev/null
@@ -1,68 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Upgrade from 1.5 to 1.5.1</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="Upgrade">
-<p>
-These are the release notes and advice for upgrading Joda-Time from
-version 1.5 to version 1.5.1.
-<source>
-Joda-Time version 1.5.1
------------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is a patch release for Joda-Time 1.5.
-This release contains one bug fix and a time zone update.
-We recommend all users of 1.5 upgrade to 1.5.1.
-
-We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
-
-Joda-Time is licensed under the business-friendly Apache License Version 2.
-This is the same license as all of Apache, plus other open source projects such as Spring.
-The intent is to make the code available to the Java community with the minimum
-of restrictions. If the license causes you problems please contact the mailing list.
-
-*  Please also check out our related projects   *
-* http://joda-time.sourceforge.net/related.html *
-
-
-Enhancements since 1.5
-----------------------
-
-
-Compatibility with 1.5
-----------------------
-Binary compatible - Yes
-
-Source compatible - Yes
-
-Serialization compatible - Yes
-
-Data compatible - Yes, except
-  - DateTimeZone data updated to version 2007j
-
-Semantic compatible - Yes
-
-
-Deprecations since 1.5
-----------------------
-
-
-Bug fixes since 1.5
--------------------
-- Parsing (regression) [1839440]
-  Support parsing all upper-case and all lower-case text
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/upgradeto152.xml b/JodaTime/xdocs/upgradeto152.xml
deleted file mode 100644
index 9df2620de..000000000
--- a/JodaTime/xdocs/upgradeto152.xml
+++ /dev/null
@@ -1,77 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Upgrade from 1.5.1 to 1.5.2</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="Upgrade">
-<p>
-These are the release notes and advice for upgrading Joda-Time from
-version 1.5.1 to version 1.5.2.
-<source>
-Joda-Time version 1.5.2
------------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is a patch release for Joda-Time 1.5.1.
-This release contains one bug fix and a time zone update.
-We recommend all users of 1.5.1 upgrade to 1.5.2.
-
-We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
-
-Joda-Time is licensed under the business-friendly Apache License Version 2.
-This is the same license as all of Apache, plus other open source projects such as Spring.
-The intent is to make the code available to the Java community with the minimum
-of restrictions. If the license causes you problems please contact the mailing list.
-
-*  Please also check out our related projects   *
-* http://joda-time.sourceforge.net/related.html *
-
-
-Enhancements since 1.5
-----------------------
-
-
-Compatibility with 1.5
-----------------------
-Binary compatible - Yes
-
-Source compatible - Yes
-
-Serialization compatible - Yes
-
-Data compatible - Yes, except
-  - DateTimeZone data updated to version 2007k
-
-Semantic compatible - Yes
-
-
-Deprecations since 1.5
-----------------------
-
-
-Bug fixes since 1.5.1
----------------------
-- DateTimeZone (regression from 1.4)
-  Fix getOffsetFromLocal DST gap adjustment.
-
-Bug fixes since 1.5
--------------------
-- Parsing (regression) [1839440]
-  Support parsing all upper-case and all lower-case text
-
-- Javadoc clarity enhancements
-  - Constants in Years/Months/Weeks/Days/Hours/Minutes/Seconds etc.
-  - Period/Interval Object constructors
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/upgradeto160.xml b/JodaTime/xdocs/upgradeto160.xml
deleted file mode 100644
index 54fd89d88..000000000
--- a/JodaTime/xdocs/upgradeto160.xml
+++ /dev/null
@@ -1,132 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Upgrade from 1.5 to 1.6</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="Upgrade">
-<p>
-These are the release notes and advice for upgrading Joda-Time from
-version 1.5 to version 1.6.
-<source>
-Joda-Time version 1.6
----------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is the seventh release of Joda-Time.
-This release contains enhancements, bug fixes and a time zone update.
-
-We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
-
-Joda-Time is licensed under the business-friendly Apache License Version 2.
-This is the same license as all of Apache, plus other open source projects such as Spring.
-The intent is to make the code available to the Java community with the minimum
-of restrictions. If the license causes you problems please contact the mailing list.
-
-**  Please also check out our related projects   **
-** http://joda-time.sourceforge.net/related.html **
-
-********************************************************************
- The next release will probably be v2.0
- This will be source and binary compatible with the exception that
- deprecated methods and classes will be removed.
- If you rely on the deprecated methods or classes please move to
- their replacements, or let us know why you can't move by writing
- in https://sourceforge.net/forum/forum.php?forum_id=337835
-********************************************************************
-
-
-Enhancements since 1.5
-----------------------
-- Add static factory methods to Duration [1909376]
-  Duration now has four factory methods, standardDays(), standardHours(),
-  standardMinutes() and standardSeconds(). These create durations of the
-  length normally associated with a day/hour/minute/second
-
-- Added Duration.getStandardSeconds() and Duration.toStandardSeconds()
-  These convert a duration in milliseconds to a number of seconds.
-
-- Added OSGi bundle information [1889787]
-  Joda-Time should be usable directly as an OSGi bundle
-
-- Added stable Chronology hash code implementations [2018795]
-  The hash codes of each Chronology implementation is now stable.
-  This should aid large scale caching/distribution tools.
-
-- Added DateTimeZone.isLocalDateTimeGap
-  Returns true/false depending on whether the time is in a time-zone gap
-
-
-Compatibility with 1.5
-----------------------
-Binary compatible - Yes
-
-Source compatible - Yes
-
-Serialization compatible - Yes
-
-Data compatible - Yes, except
-  - DateTimeZone data updated to version 2008i
-
-Semantic compatible - Yes
-
-
-Deprecations since 1.5
-----------------------
-
-
-Bug fixes since 1.5
--------------------
-- ISODateTimeFormat millisecond parsing broken
-  Millisecond parsing would parse 12:00:00.4 as 4 milliseconds rather
-  than 400 milliseconds
-
-- ISODateTimeFormat basic field parsing too lenient
-  The basic parsers in ISODateTimeFormat were too lenient
-  They have been changed to only accept the correct number of digits as
-  per the ISO-8601 standard. The non basic parsers are unaffected
-
-- DateTimeFormat.forFields(List) method can't handle immutable [1877843]
-  Fix so that the method does not throw an exception when an unmodifiable
-  list is passed in
-
-- Fixed offset time zones calculated incorrect periods
-  ZonedChronology.ZonedDuration.isPrecise() did not take into account
-  the decorated isPrecise() value. This meant that date fields for fixed
-  offset time zones were always considered precise. The result was periods
-  containing months and years when they should not have done.
-
-- ZonedChronology (regression from 1.4) [1887104]
-  Fix to roundFloor/roundCeiling
-  Bug affected DST cutover in Autumn for time fields (not date fields)
-  
-- Clarify Javadoc time zone formats
-  Time zone formats were incorrectly documented as 'Z' instead of 'ZZ'
-  Javadoc only change
-
-- Period formatting [2025928]
-  Formatting option printZeroRarelyFirst() did not work unless years
-  field was included.
-
-- DateTimeZone (regression from 1.4) [fix also available in v1.5.2]
-  Fix getOffsetFromLocal DST gap adjustment
-  Bug affected parsing of DST cutover in Autumn
-
-- Parsing (regression from 1.4) [1839440] [fix also available in v1.5.1]
-  Support parsing all upper-case and all lower-case text
-
-- Javadoc clarity enhancements [fix also available in v1.5.1]
-  - Constants in Years/Months/Weeks/Days/Hours/Minutes/Seconds etc.
-  - Period/Interval Object constructors
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/upgradeto161.xml b/JodaTime/xdocs/upgradeto161.xml
deleted file mode 100644
index 280dfc74d..000000000
--- a/JodaTime/xdocs/upgradeto161.xml
+++ /dev/null
@@ -1,91 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - Upgrade from 1.6 to 1.6.1</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
- </properties>
-
-<body>
-
-<section name="Upgrade">
-<p>
-These are the release notes and advice for upgrading Joda-Time from
-version 1.6 to version 1.6.1.
-<source>
-Joda-Time version 1.6.1
------------------------
-
-Joda-Time is a date and time handling library that seeks to replace the JDK
-Date and Calendar classes.
-
-This is a patch release for Joda-Time 1.6.
-This release only contains bug fixes.
-We recommend all users of 1.6 upgrade to 1.6.1.
-
-We recommend JDK 1.4 or later, and have performed no testing on earlier JDKs.
-
-Joda-Time is licensed under the business-friendly Apache License Version 2.
-This is the same license as all of Apache, plus other open source projects such as Spring.
-The intent is to make the code available to the Java community with the minimum
-of restrictions. If the license causes you problems please contact the mailing list.
-
-**  Please also check out our related projects   **
-** http://joda-time.sourceforge.net/related.html **
-
-
-Compatibility with 1.6
-----------------------
-Binary compatible - Yes
-
-Source compatible - Yes
-
-Serialization compatible - Yes
-
-Data compatible - Yes, except
-  - DateTimeZone data updated to version 2010k
-
-Semantic compatible - Yes
-
-
-Deprecations since 1.6
-----------------------
-- DateTimeFormatter.getChronolgy() [2783325]
-  Incorrect spelling - new method DateTimeFormatter.getChronology()
-
-
-Bug fixes since 1.6
--------------------
-- LocalTime.fromDateFields()
-  Now handles times based on java.util.Date before 1970
-
-- LocalDate.toInterval() [2487417]
-  Now handles time zones which have no midnight at DST cutover
-
-- DateTimeZone.convertLocalToUTC [2903029]
-  Now handles date after last ever DST change
-
-- Period formatting concurrency [2820871]
-  Fix possible concurrency hole in PeriodFormatBuilder.Separator
-
-- Classloading CachedDateTimeZone could invalidate state [2935625]
-  Default time zone now lazily loaded
-
-- DateTimeUtils shared static variable now volatile [2986043]
-
-- Time zone compiler now handles 24:00 [2804258]
-
-- Time zone compiler now handles non-UTC better
-
-- Assorted Javadoc clarifications, including [2721880]
-
-
-Enhancements since 1.6
-----------------------
-- None
-</source>
-</p>
-</section>
-
-</body>
-</document>
diff --git a/JodaTime/xdocs/userguide.xml b/JodaTime/xdocs/userguide.xml
deleted file mode 100644
index 7ab21edcf..000000000
--- a/JodaTime/xdocs/userguide.xml
+++ /dev/null
@@ -1,989 +0,0 @@
-<?xml version="1.0" encoding="ISO-8859-1"?>
-
-<document>
- <properties>
-  <title>Java date and time API - User Guide</title>
-  <author email="scolebourne.at.users.sourceforge.net">Stephen Colebourne</author>
-  <author email="almajor.at.boxspoon.com">Al Major</author>
- </properties>
-<body>
-
-<!-- ========================================================================= -->
-
-<section name="Introduction">
-<p>
-Joda Time is like an iceberg, 9/10ths of it is invisible to user-code.
-Many, perhaps most, applications will never need to see what's below the surface.
-This document provides an introduction to the Joda-Time API for the
-average user, not for the would-be API developer.
-</p>
-<p>
-The bulk of the
-text is devoted to code snippets that display the most common usage scenarios
-in which the library classes are used. In particular, we cover the usage of the
-key <code>DateTime</code>, <code>Interval</code>, <code>Duration</code>
-and <code>Period</code> classes.
-</p>
-<p>
-We finish with a look at the important topic of formatting and parsing and a few
-more advanced topics.
-</p>
-<p>
-<ul>
-<li><a href="#Architecture_Overview">Architecture Overview</a>
-  <ul>
-    <li><a href="#Instants">Instants</a>
-      <ul>
-        <li><a href="#Fields">Fields</a></li>
-        <li><a href="#Properties">Properties</a></li>
-      </ul>
-    </li>
-    <li><a href="#Intervals">Intervals</a></li>
-    <li><a href="#Durations">Durations</a></li>
-    <li><a href="#Periods">Periods</a></li>
-    <li><a href="#Chronology">Chronology</a></li>
-    <li><a href="#TimeZones">TimeZones</a></li>
-    <li><a href="#Interface_usage">Interface usage</a></li>
-    <li><a href="#Package_structure">Package structure</a></li>
-  </ul>
-</li>
-<li><a href="#Working_with_DateTime">Working with DateTime</a>
-  <ul>
-    <li><a href="#Construction">Construction</a></li>
-    <li><a href="#JDK_Interoperability">JDK Interoperability</a></li>
-    <li><a href="#Querying_DateTimes">Querying DateTimes</a>
-      <ul>
-        <li><a href="#Accessing_fields">Acessing fields</a></li>
-        <li><a href="#Date_fields">Date fields</a></li>
-        <li><a href="#Time_fields">Time fields</a></li>
-      </ul>
-    </li>
-    <li><a href="#Manipulating_DateTimes">Manipulating DateTimes</a>
-      <ul>
-        <li><a href="#Modifying_fields">Modifying fields</a></li>
-        <li><a href="#DateTime_methods">DateTime methods</a></li>
-        <li><a href="#Using_a_MutableDateTime">Using a MutableDateTime</a></li>
-      </ul>
-    </li>
-    <li><a href="#Changing_TimeZone">Changing TimeZone</a></li>
-    <li><a href="#Changing_Chronology">Changing Chronology</a></li>
-  </ul>
-</li>
-<!---
-<li><a href="#intervals_durations_periods">Usage: Intervals, Durations and Periods</a>
-  <ul>
-    <li><a href="#interval_ex">Interval Examples</a></li>
-    <li><a href="#duration_ex">Duration Examples</a></li>
-    <li><a href="#period_ex">Period Examples</a></li>
-  </ul>
-</li>
--->
-<li><a href="#Input_and_Output">Input and Output</a>
-<ul>
-    <li><a href="#Formatters">Formatters</a></li>
-    <li><a href="#Standard_Formatters">Standard Formatters</a></li>
-    <li><a href="#Custom_Formatters">Custom Formatters</a></li>
-    <li><a href="#Freaky_Formatters">Freaky Formatters</a></li>
-</ul>
-</li>
-<li><a href="#Advanced_features">Advanced features</a>
-<ul>
-    <li><a href="#Change_the_Current_Time">Change the Current Time</a></li>
-    <li><a href="#Converters">Converters</a></li>
-    <li><a href="#Security">Security</a></li>
-</ul>
-</li>
-</ul>
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Architecture Overview">
-<p>
-The major building blocks of joda time are introduced below. These are the concepts
-of <em>instant</em>, <em>interval</em>, <em>duration</em>, <em>period</em>,
-<em>chronology</em> and <em>timezones</em>. We then say a few words about the role
-of interfaces in the library design, which is a little different than the norm. We
-end with a few words on package structure. Usage examples for instant are delayed until the
-following sections of the guide. Examples for interval, duration and period may be
-found in the appropriate section in the "Key Concepts" part of the documentation.
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Instants">
-<p>
-The most frequently used concept in Joda-Time is that of the <em>instant</em>.
-An Instant is defined as <em>a moment in the datetime continuum specified as a
-number of milliseconds from 1970-01-01T00:00Z</em>.
-This definition of milliseconds is consistent with that of the JDK in <code>Date</code>
-or <code>Calendar</code>. Interoperating between the two APIs is thus simple.
-</p>
-<p>
-Within Joda-Time an instant is represented by the
-<code>ReadableInstant</code> interface. The main implementation
-of this interface, and the class that the average API user needs to be
-most familiar with, is <code>DateTime</code>. DateTime is immutable - and once
-created the values do not change. Thus, this class can safely be passed around
-and used in multiple threads without synchronization.
-</p>
-<p>
-The millisecond instant can be converted to any date time field using a
-<em>Chronology</em>.
-To assist with this, methods are provided on
-<code>DateTime</code> that act as getters for the most common date and
-time fields.
-</p>
-<p>
-We discuss the chronology concept a litte further on in this overview.
-</p>
-<p>
-A companion mutable class to <code>DateTime</code> is
-<code>MutableDateTime</code>. Objects
-of this class can be modified and are not thread-safe.
-</p>
-<p>
-Other implementations of <code>ReadableInstant</code> include <code>Instant</code>
-and <code>DateMidnight</code>.
-</p>
-
-<subsection name="Fields">
-<p>
-The main API of <code>DateTime</code> has been kept small, limited to just
-get methods for each calendar field. So, for instance, the 'day-of-year' calendar
-field would be retrieved by calling the <code>getDayOfYear()</code> method. For
-a complete list of fields and their descriptions, see the
-<a href="field.html">field reference</a>.
-</p>
-</subsection>
-
-<subsection name="Properties">
-<p>
-There is much more power available, however, through the use of what is termed a
-<em>property</em>. Each calendar field is associated with such a property.
-Thus, 'day-of-year', whose value is directly returned by the method
-<code>getDayOfYear()</code>, is also associated with the property returned by
-the <code>dayOfYear()</code> method. The property class associated with
-<code>DateTime</code> is <code>DateTime.Property</code>.
-</p>
-<p>
-Knowing the methods on the property is the secret to making the most of the API.
-We have more to say on the usage of properties later in this document.
-</p>
-</subsection>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Intervals">
-<p>
-An <em>interval</em> in Joda-Time represents an interval of time from one
-instant to another instant. Both instants are fully specified instants in the
-datetime continuum, complete with time zone.
-</p>
-<p>
-Intervals are implemented as <em>half-open</em>, which is to say that the start instant is
-inclusive but the end instant is exclusive. The end is always greater than or equal to the start.
-Both end-points are restricted to having the same chronology and the same time zone.
-</p>
-<p>
-Two implementations are provided, <code>Interval</code> and <code>MutableInterval</code>,
-both are specializations of <code>ReadableInterval</code>.
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Durations">
-<p>
-A <em>duration</em> in Joda-Time represents a duration of time measured in milliseconds.
-The duration is often obtained from an interval.
-</p>
-<p>
-Durations are a very simple concept, and the implementation is also simple.
-They have no chronology or time zone, and consist solely of the millisecond duration.
-</p>
-<p>
-Durations can be added to an instant, or to either
-end of an interval to change those objects.
-In datetime maths you could say:
-<source>
-      instant  +  duration  =  instant
-</source>
-</p>
-<p>
-Currently, there is only one implementation of the <code>ReadableDuration</code>
-interface: <code>Duration</code>.
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Periods">
-
-<p>
-A <em>period</em> in Joda-Time represents a period of time defined in terms of fields,
-for example, 3 years 5 months 2 days and 7 hours.
-This differs from a duration in that it is inexact in terms of milliseconds.
-A period can only be resolved to an exact number of milliseconds by specifying the
-instant (including chronology and time zone) it is relative to.
-</p>
-<p>
-For example, consider a period of 1 month.
-If you add this period to the 1st February (ISO) then you will get the 1st March.
-If you add the same period to the 1st March you will get the 1st April.
-But the duration added (in milliseconds) in these two cases is very different.
-</p>
-<p>
-As a second example, consider adding 1 day at the daylight savings boundary.
-If you use a period to do the addition then either 23 or 25 hours will be added as appropriate.
-If you had created a duration equal to 24 hours, then you would end up with the wrong result.
-</p>
-<p>
-Periods are implemented as a set of <code>int</code> fields.
-The standard set of fields in a period are years, months, weeks, days, hours, minutes, seconds
-and millis.
-The <code>PeriodType</code> class allows this set
-of fields to be restricted, for example to elimate weeks.
-This is significant when converting a duration or interval to a period, as the calculation
-needs to know which period fields it should populate.
-</p>
-<p>
-Methods exist on periods to obtain each field value.
-Periods are not associated with either a chronology or a time zone.
-</p>
-<p>
-Periods can be added to an instant, or to either
-end of an interval to change those objects.
-In datetime maths you could say:
-<source>
-      instant  +  period  =  instant
-</source>
-</p>
-<p>
-There are two implementations of the <code>ReadablePeriod</code> interface,
-<code>Period</code> and <code>MutablePeriod</code>.
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Chronology">
-<p>
-The Joda-Time design is based around the
-<em>Chronology</em>. It is a calculation engine that supports the complex
-rules for a calendar system. It encapsulates the field objects, which are used
-on demand to split the absolute time instant into recognisable calendar
-fields like 'day-of-week'. It is effectively a pluggable calendar system.
-</p>
-<p>
-The actual calculations of the chronology are split between the
-<code>Chronology</code> class itself and the field classes -
-<code>DateTimeField</code> and <code>DurationField</code>.
-Together, the subclasses of these three classes form the bulk of the code
-in the library.
-Most users will never need to use or refer directly to the subclasses.
-Instead, they will simply obtain the chronology and use it as a singleton, as follows:
-<source>
-Chronology coptic = CopticChronology.getInstance();
-</source>
-</p>
-<p>
-Internally, all the chronology, field, etc. classes are maintained as singletons.
-Thus there is an initial setup cost when using Joda-Time, but after that only
-the main API instance classes
-(<code>DateTime</code>, <code>Interval</code>, <code>Period</code>, etc.)
-have creation and garbage collector costs.
-</p>
-<p>
-Although the Chronology is key to the design, it is not key to using the API !!
-</p>
-<p>
-For most applications, the Chronology can be ignored as it will default to the
-ISOChronology. This is suitable for most uses.
-You would change it if you need accurate dates before October 15, 1582 when
-the Julian calendar was used, or if you need a specific calendar
-like the Coptic calendar illustrated earlier.
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="TimeZones">
-<p>
-The chronology class also supports the time zone functionality.
-This is applied to the underlying chronology via the decorator design pattern.
-The <code>DateTimeZone</code> class provides
-access to the zones primarily through one factory method, as follows:
-<source>
-DateTimeZone zone = DateTimeZone.forID("Europe/London");
-</source>
-</p>
-<p>
-In addition to named time zones, Joda-Time also supports fixed time zones.
-The simplest of these is UTC, which is defined as a constant:
-<source>
-DateTimeZone zoneUTC = DateTimeZone.UTC;
-</source>
-Other fixed offset time zones can be obtained by a specialise factory method:
-<source>
-DateTimeZone zoneUTC = DateTimeZone.forOffsetHours(hours);
-</source>
-</p>
-<p>
-The TimeZone implementation is based on data provided by the public
-<a href="http://www.twinsun.com/tz/tz-link.htm">tz database</a>,
-otherwise known as the Olson database.
-A full list of timezone ids can be found <a href="timezones.html">here</a>
-</p>
-<p>
-Joda-Time provides a default time zone which is used in many operations when a
-time zone is not specified. This is similar in concept to the default time zone
-of the <code>java.util.TimeZone</code> class. The value can be accessed and updated
-via static methods:
-<source>
-DateTimeZone defaultZone = DateTimeZone.getDefault();
-DateTimeZone.setDefault(myZone);
-</source>
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Interface usage">
-<p>
-As you have seen, Joda-Time defines a number of new interfaces which are visible
-throughout the javadocs. The most important is <code>ReadableInstant</code> which
-currently has 4 implementations.
-Other significant interfaces include <code>ReadableInterval</code> and
-<code>ReadablePeriod</code>. These are currently used as generalizations for
-a value-only and a mutable class, respectively.
-</p>
-<p>
-An important point to mention here is that the Joda interfaces are used differently
-than, for instance, the JDK Collections Framework interfaces.
-When working with a Collections interface, such as <code>List</code> or <code>Map</code>
-you will normally hold your variable as a type of <code>List</code> or <code>Map</code>, 
-only referencing the concrete class when you create the object.
-<source>
-    List list = new ArrayList();
-    Map map = new HashMap();
-</source>
-In Joda-Time, the interfaces exist to allow <em>interoperation</em> between similar
-date implementations, such as a mutable and immutable version of a class.
-As such, they only offer a subset of the methods of the concrete class.
-<em>For most work, you will reference the concrete class, not the interface</em>.
-This gives access to the full power of the library.
-<source>
-    DateTime dt = new DateTime();
-</source>
-</p>
-<p>
-For maximum flexibility however, you might choose to declare your method
-parameters using the Joda-Time interface.
-A method on the interface can obtain the concrete class for use within the method.
-<source>
-    public void process(ReadableDateTime dateTime) {
-        DateTime dt = dateTime.toDateTime();
-    }
-</source>
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Package structure">
-<p>
-The package structure is designed to separate the methods in the public API
-from the private API.
-The public packages are the root package (under <code>org.joda.time</code>) and
-the <code>format</code> package.
-The private packages are the <code>base</code>, <code>chrono</code>,
-<code>convert</code>, <code>field</code> and <code>tz</code> packages.
-Most applications should not need to import classes from the private packages.
-</p>
-</section>
-
-<!-- ========================================================================= -->
-<!-- ========================================================================= -->
-<!-- ========================================================================= -->
-
-<section name="Working with DateTime">
-<a name="construction"/>
-<subsection name="Construction">
-<p>
-A datetime object is created by using a <code>DateTime</code> constructor. The default
-constructor is used as follows
-<source>
-    DateTime dt = new DateTime();
-</source>
-and creates a datetime object representing the current date and time in milliseconds
-as determined by the system clock. It is constructed using the ISO
-calendar in the default time zone.</p>
-<p>
-To create a datetime object representing a specific date and time, you may use an
-initialization string:
-<source>
-    DateTime dt = new DateTime("2004-12-13T21:39:45.618-08:00");
-</source>
-The initialization string must be in a format that is compatible with the ISO8601
-standard.
-</p>
-<p>
-<code>DateTime</code> also provides
-<a href="apidocs/org/joda/time/DateTime.html#constructor_summary">other
-constructors</a> to create a specific date and time using a variety of standard
-fields. This also permits the use of any calendar and timezone.
-</p>
-</subsection>
-
-<subsection name="JDK Interoperability">
-<p>
-The <code>DateTime</code> class has a constructor which takes an <code>Object</code>
-as input. In particular this constructor can be passed a JDK <code>Date</code>,
-JDK <code>Calendar</code> or JDK <code>GregorianCalendar</code> (It also accepts an
-ISO8601 formatted String, or <code>Long</code> object representing milliseconds). This is one half
-of the interoperability with the JDK. The other half of interoperability with JDK
-is provided by <code>DateTime</code> methods which return JDK objects.
-</p>
-<p>
-Thus inter-conversion between Joda <code>DateTime</code> and JDK <code>Date</code>
-can be performed as follows
-<source>
-    // from Joda to JDK
-    DateTime dt = new DateTime();
-    Date jdkDate = dt.toDate();
-
-    // from JDK to Joda
-    dt = new DateTime(jdkDate);
-</source>
-</p>
-<p>
-Similarly, for JDK <code>Calendar</code>:
-<source>
-    // from Joda to JDK
-    DateTime dt = new DateTime();
-    Calendar jdkCal = dt.toCalendar(Locale.CHINESE);
-
-    // from JDK to Joda
-    dt = new DateTime(jdkCal);
-</source>
-</p>
-<p>
-and JDK <code>GregorianCalendar</code>:
-<source>
-    // from Joda to JDK
-    DateTime dt = new DateTime();
-    GregorianCalendar jdkGCal = dt.toGregorianCalendar();
-
-    // from JDK to Joda
-    dt = new DateTime(jdkGCal);
-</source>
-</p>
-</subsection>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Querying DateTimes">
-<p>
-The separation of the calculation of calendar fields (<code>DateTimeField</code>)
-from the representation of the calendar instant (<code>DateTime</code>) makes
-for a powerful and flexible API. The connection
-between the two is maintained by the property (<code>DateTime.Property</code>)
-which provides access to the field.
-</p>
-<p>
-For instance, the direct way to get the day of week for a particular
-<code>DateTime</code>, involves calling the method
-<source>
-    int iDoW = dt.getDayOfWeek();
-</source>
-where <code>iDoW</code> can take the values (from class
-<code>DateTimeConstants</code>).
-<source>
-    public static final int MONDAY = 1;
-    public static final int TUESDAY = 2;
-    public static final int WEDNESDAY = 3;
-    public static final int THURSDAY = 4;
-    public static final int FRIDAY = 5;
-    public static final int SATURDAY = 6;
-    public static final int SUNDAY = 7;
-</source>
-</p>
-
-<subsection name="Accessing fields">
-<p>The direct methods are fine for simple usage, but more flexibility can be achieved via the
-property/field mechanism. The day of week property is obtained by
-<source>
-    DateTime.Property pDoW = dt.dayOfWeek();
-</source>
-which can be used to get richer information about the field, such as
-<source>
-    String strST = pDoW.getAsShortText(); // returns "Mon", "Tue", etc.
-    String strT = pDoW.getAsText(); // returns "Monday", "Tuesday", etc.
-</source>
-which return short and long name strings (based on the current locale)
-of the day-of-week. Localized versions of these methods are also available, thus
-<source>
-    String strTF = pDoW.getAsText(Locale.FRENCH); // returns "Lundi", etc.
-</source>
-can be used to return the day-of-week name string in French.
-</p>
-<p>
-Of course, the original integer value of the field is still accessible as
-<source>
-    iDoW = pDoW.get();
-</source>
-The property also provides access to other values associated with the field
-such as metadata on the minimum and maximum text size, leap status, related 
-durations, etc. For a complete reference, see the
-<a href="apidocs/org/joda/time/field/AbstractReadableInstantFieldProperty.html">documentation</a>
-for the base class <code>AbstractReadableInstantFieldProperty</code>
-</p>
-<p>
-In practice, one would not actually create the intermediate <code>pDoW</code>
-variable. The code is easier to read if the methods are called on anonymous
-intermediate objects. Thus, for example,
-<source>
-    strT = dt.dayOfWeek().getAsText();
-    iDoW = dt.dayOfWeek().get();
-</source>
-would be written instead of the more indirect code presented earlier.
-</p>
-<p>
-Note: For the single case of getting the numerical value of a field, we recommend
-using the get method on the main <code>DateTime</code> object as it is more efficient.
-<source>
-    iDoW = dt.getDayOfWeek();
-</source>
-</p>
-</subsection>
-
-<subsection name="Date fields">
-<p>
-The <code>DateTime</code> implementation provides a complete list of standard
-calendar fields:
-<source>
-    dt.getEra();
-    dt.getYear();
-    dt.getWeekyear();
-    dt.getCenturyOfEra();
-    dt.getYearOfEra();
-    dt.getYearOfCentury();
-    dt.getMonthOfYear();
-    dt.getWeekOfWeekyear();
-    dt.getDayOfYear();
-    dt.getDayOfMonth();
-    dt.getDayOfWeek();
-</source>
-Each of these also has a corresponding property method, which returns a
-<code>DateTime.Property</code> binding to the appropriate field, such as
-<code>year()</code> or <code>monthOfYear()</code>.
-The fields represented by these properties behave pretty much as their
-names would suggest. The precise definitions are available in the
-<a href="field.html">field reference</a>.
-</p>
-<p>
-As you would expect, all the methods we showed above in the day-of-week example
-can be applied to any of these properties. For example, to extract the standard
-month, day and year fields from a datetime, we can write
-<source>
-    String month = dt.monthOfYear().getAsText();
-    int maxDay = dt.dayOfMonth().getMaximumValue();
-    boolean leapYear = dt.yearOfEra().isLeap();
-</source>
-</p>
-</subsection>
-
-<subsection name="Time fields">
-<p>
-Another set of properties access fields representing intra-day durations for
-time calculations. Thus to compute the hours, minutes and seconds of the instant
-represented by a <code>DateTime</code>, we would write
-<source>
-    int hour = dt.getHourOfDay();
-    int min = dt.getMinuteOfHour();
-    int sec = dt.getSecondOfMinute();
-</source>
-Again each of these has a corresponding property method for more complex manipulation.
-The complete list of time fields can be found in the 
-<a href="field.html">field reference</a>.
-</p>
-</subsection>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Manipulating DateTimes">
-<p>
-<code>DateTime</code> objects have value semantics, and cannot be modified after
-construction (they are immutable).
-Therefore, most simple manipulation of a datetime object involves
-construction of a new datetime as a modified copy of the original.
-</p>
-<p>
-WARNING: <i>A common mistake to make with immutable classes is to forget to assign
-the result to a variable. Remember that calling an add or set method on an
-immtable object has no effect on that object - only the result is updated.</i>
-</p>
-
-<subsection name="Modifying fields">
-<p>
-One way to do this is to use methods on properties. To
-return to our prior example, if we wish to modify the <code>dt</code> object
-by changing its day-of-week field to Monday we can do so by using the
-<code>setCopy</code> method of the property:
-<source>
-    DateTime result = dt.dayOfWeek().setCopy(DateTimeConstants.MONDAY);
-</source>
-Note: If the <code>DateTime</code> object is already set to Monday then the same
-object will be returned.
-</p>
-<p>
-To add to a date you could use the <code>addToCopy</code> method.
-<source>
-    DateTime result = dt.dayOfWeek().addToCopy(3);
-</source>
-</p>
-</subsection>
-
-<subsection name="DateTime methods">
-<p>
-Another means of accomplishing similar calculations is to use methods on the
-<code>DateTime</code> object itself. Thus we could add 3 days to <code>dt</code>
-directly as follows:
-<source>
-    DateTime result = dt.plusDays(3);
-</source>
-</p>
-</subsection>
-
-<subsection name="Using a MutableDateTime">
-<p>
-The methods outlined above are suitable for simple calculations involving one
-or two fields. In situations where multiple fields need to be modified, it is
-more efficient to create a mutable copy of the datetime, modify the copy and
-finally create a new value datetime.
-<source>
-    MutableDateTime mdt = dt.toMutableDateTime();
-    // perform various calculations on mdt
-    ...
-    DateTime result = mdt.toDateTime();
-</source>
-<code>MutableDateTime</code> has a number of methods, including standard setters,
-for directly modifying the datetime.
-</p>
-</subsection>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Changing TimeZone">
-<p>
-<code>DateTime</code> comes with support for a couple of common timezone
-calculations. For instance, if you want to get the local time in London at this
-very moment, you would do the following
-<source>
-    // get current moment in default time zone
-    DateTime dt = new DateTime();
-    // translate to London local time
-    DateTime dtLondon = dt.withZone(DateTimeZone.forID("Europe/London"));
-</source>
-where <code>DateTimeZone.forID("Europe/London")</code> returns the timezone
-value for London. The resulting value <code>dtLondon</code> has the same absolute
-millisecond time, but a different set of field values.
-</p>
-<p>
-There is also support for the reverse operation, i.e. to get the datetime (absolute
-millisecond) corresponding to the moment when London has the same local time as
-exists in the default time zone <em>now</em>. This is done as follows
-<source>
-    // get current moment in default time zone
-    DateTime dt = new DateTime();
-    // find the moment when London will have / had the same time
-    dtLondonSameTime = dt.withZoneRetainFields(DateTimeZone.forID("Europe/London"));
-</source>
-</p>
-<p>
-A set of all TimeZone ID strings (such as "Europe/London") may be obtained by
-calling <code>DateTimeZone.getAvailableIDs()</code>. A full list of available
-time zones is provided <a href="timezones.html">here</a>.
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Changing Chronology">
-<p>
-The <code>DateTime</code> class also has one method for changing calendars. This
-allows you to change the calendar for a given moment in time. Thus if you want to
-get the datetime for the current time, but in the Buddhist Calendar, you would do
-<source>
-    // get current moment in default time zone
-    DateTime dt = new DateTime();
-    dt.getYear();  // returns 2004
-    // change to Buddhist chronology
-    DateTime dtBuddhist = dt.withChronology(Chronology.getBuddhist());
-    dtBuddhist.getYear();  // returns 2547
-</source>
-where <code>Chronology.getBuddhist</code> is a factory method for obtaining a
-Buddhist chronology.
-</p>
-</section>
-
-<!-- ========================================================================= -->
-
-<!---
-<a name="#intervals_durations_periods"/>
-<section name="Usage: Intervals, Durations and Periods">
-
-<a name="#interval_ex"/>
-<section name="Interval Examples">
-<p>
-The code can be used in various ways:
-<source>
-// interval from start to end
-DateTime start = new DateTime(2004, 12, 25, 0, 0, 0, 0);
-DateTime end = new DateTime(2005, 1, 1, 0, 0, 0, 0);
-Interval interval = new Interval(start, end);
-</source>
-Accessing other objects is easy:
-<source>
-Interval interval = ...
-DateTime start = interval.getStart();
-DateTime end = interval.getEnd();
-Chronology chrono = interval.getChronology();
-Duration duration = interval.toDuration();
-Period period = interval.toPeriod();
-</source>
-</p>
-</section>
-
-<a name="#duration_ex"/>
-<section name="Duration Examples">
-<p>
-The code can be used in various ways:
-<source>
-DateTime start = new DateTime(2004, 12, 25, 0, 0, 0, 0);
-DateTime end = new DateTime(2005, 1, 1, 0, 0, 0, 0);
-
-// duration in ms between two instants
-Duration dur = new Duration(start, end);
-
-// calc will be the same as end
-DateTime calc = start.plus(dur);
-</source>
-</p>
-</section>
-
-<a name="#period_ex"/>
-<section name="Period Examples">
-<p>
-The code can be used in various ways:
-<source>
-DateTime start = new DateTime(2004, 12, 25, 0, 0, 0, 0);
-DateTime end = new DateTime(2006, 1, 1, 0, 0, 0, 0);
-
-// period of 1 year and 7 days
-Period period = new Period(start, end);
-
-// calc will equal end
-DateTime calc = start.plus(period);
-</source>
-</p>
-</section>
-</section>
--->
-
-<!-- ========================================================================= -->
-
-<section name="Input and Output">
-<p>
-Reading date time information from external sources which have their own custom
-format is a frequent requirement for applications that have datetime
-computations. Writing to a custom format is also a common requirement.
-</p>
-<p>
-Many custom formats can be represented by date-format strings which specify
-a sequence of calendar fields along with the representation (numeric, name string,
-etc) and the field length. For example the pattern <code>"yyyy"</code> would
-represent a 4 digit year. Other formats are not so easily represented. For
-example, the pattern <code>"yy"</code> for a two digit year does not uniquely
-identify the century it belongs to. On output, this will not cause problems, but
-there is a problem of interpretation on input.
-</p>
-<p>
-In addition, there are several date/time serialization standards in common use
-today, in particular the ISO8601. These must also be supported by most datetime
-applications.
-</p>
-<p>
-Joda time supports these different requirements through a flexible architecture.
-We will now describe the various elements of this architecture.
-</p>
-
-<subsection name="Formatters">
-<p>
-All printing and parsing is performed using a <code>DateTimeFormatter</code> object.
-Given such an object <code>fmt</code>, parsing is performed as follows
-<source>
-    String strInputDateTime;
-    // string is populated with a date time string in some fashion
-    ...
-    DateTime dt = fmt.parseDateTime(strInputDateTime);
-</source>
-Thus a <code>DateTime</code> object is returned from the parse method of the
-formatter. Similarly, output is performed as
-<source>
-    String strOutputDateTime = fmt.print(dt);
-</source>
-</p>
-</subsection>
-
-<subsection name="Standard Formatters">
-<p>
-Support for standard formats based on ISO8601 is provided by the
-<code>ISODateTimeFormat</code> class. This provides a number of factory methods.
-</p>
-<p>
-For example, if you wanted to use the ISO standard format for <em>datetime</em>,
-which is <code>yyyy-MM-dd'T'HH:mm:ss.SSSZZ</code>, you would initialize
-<code>fmt</code> as
-<source>
-    DateTimeFormatter fmt = ISODateTimeFormat.dateTime();
-</source>
-You would then use <code>fmt</code> as described above, to read or write datetime
-objects in this format.
-</p>
-</subsection>
-
-<subsection name="Custom Formatters">
-<p>
-If you need a custom formatter which can be described in terms of
-a format pattern, you can use the factory method provided by the
-<code>DateTimeFormat</code> class. Thus to get a formatter for a 4 digit year,
-2 digit month and 2 digit day of month, i.e. a format of <code>yyyyMMdd</code>
-you would do
-<source>
-    DateTimeFormatter fmt = DateTimeFormat.forPattern("yyyyMMdd");
-</source>
-The pattern string is compatible with JDK date patterns.
-</p>
-<p>
-You may need to print or parse in a particular <code>Locale</code>.
-This is achieved by calling the <code>withLocale</code> method on a formatter,
-which returns another formatter based on the original.
-<source>
-    DateTimeFormatter fmt = DateTimeFormat.forPattern("yyyyMMdd");
-    DateTimeFormatter frenchFmt = fmt.withLocale(Locale.FRENCH);
-    DateTimeFormatter germanFmt = fmt.withLocale(Locale.GERMAN);
-</source>
-Formatters are immutable, so the original is not altered by the
-<code>withLocale</code> method.
-</p>
-</subsection>
-
-<subsection name="Freaky Formatters">
-<p>
-Finally, if you have a format that is not easily represented by a pattern string,
-Joda Time architecture exposes a builder class that can be used to build a custom
-formatter which is programatically defined. Thus if you wanted a formatter to
-print and parse dates of the form "22-Jan-65", you could do the following:
-<source>
-    DateTimeFormatter fmt = new DateTimeFormatterBuilder()
-            .appendDayOfMonth(2)
-            .appendLiteral('-')
-            .appendMonthOfYearShortText()
-            .appendLiteral('-')
-            .appendTwoDigitYear(1956)  // pivot = 1956
-            .toFormatter();
-</source>
-Each append method appends a new field to be parsed/printed to the
-calling builder and returns a new builder. The final <code>toFormatter</code> method
-creates the actual formatter that will be used to print/parse.
-</p>
-<p>
-What is particularly interesting about this format is the two digit year. Since
-the interpretation of a two digit year is ambiguous, the
-<code>appendTwoDigitYear</code> takes an extra parameter that defines the 100 year
-range of the two digits, by specifying the mid point of the range. In this example
-the range will be (1956 - 50) = 1906, to (1956 + 49) = 2005. Thus 04 will be 2004
-but 07 will be 1907. This kind of conversion is not possible with ordinary format
-strings, highlighting the power of the Joda time formatting architecture.
-</p>
-</subsection>
-
-<subsection name="Direct access">
-<p>
-To simplify the access to the formatter architecture, methods have been
-provided on the datetime classes such as DateTime.
-<source>
-    DateTime dt = new DateTime();
-    String a = dt.toString();
-    String b = dt.toString("dd:MM:yy");
-    String c = dt.toString("EEE", Locale.FRENCH);
-    DateTimeFormatter fmt = ...;
-    String d = dt.toString(fmt);
-</source>
-Each of the four results demonstrates a different way to use the formatters.
-Result <code>a</code> is the standard ISO8601 string for the DateTime.
-Result <code>b</code> will output using the pattern 'dd:MM:yy' (note that
-patterns are cached internally).
-Result <code>c</code> will output using the pattern 'EEE' in French.
-Result <code>d</code> will output using the specified formatter, and is thus
-the same as <code>fmt.print(dt)</code>.
-</p>
-</subsection>
-</section>
-
-<!-- ========================================================================= -->
-
-<section name="Advanced features">
-
-<subsection name="Change the Current Time">
-<p>
-Joda-Time allows you to change the current time.
-All methods that get the current time are indirected via <code>DateTimeUtils</code>.
-This allows the current time to be changed, which can be very useful for testing.
-<source>
-    // always return the same time when querying current time
-    DateTimeUtils.setCurrentMillisFixed(millis);
-    // offset the real time
-    DateTimeUtils.setCurrentMillisOffset(millis);
-</source>
-Note that changing the current time this way does not affect the system clock.
-</p>
-</subsection>
-
-<subsection name="Converters">
-<p>
-The constructors on each major concrete class in the API take an <code>Object</code>
-as a parameter.
-This is passed to the converter subsystem which is responsible for converting
-the object to one acceptable to Joda-Time.
-For example, the converters can convert a JDK <code>Date</code> object to a <code>DateTime</code>.
-If required, you can add your own converters to those supplied in Joda-Time.
-</p>
-</subsection>
-
-<subsection name="Security">
-<p>
-Joda-Time includes hooks into the standard JDK security scheme for sensitive changes.
-These include changing the time zone handler, changing the current time and changing
-the converters.
-See <code>JodaTimePermission</code> for details.
-</p>
-</subsection>
-</section>
-
-<!-- ========================================================================= -->
-
-<!--<section name="Where to Go Next">
-<p><b>list of resources</b></p>
-</section>-->
-
-</body>
-</document>

From 00f785237713f10c25b3e53872b93a53caad9337 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 17:47:31 +0000
Subject: [PATCH 33/36] Fix spelling

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1528 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/src/site/xdoc/tz_update.xml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/JodaTime/src/site/xdoc/tz_update.xml b/JodaTime/src/site/xdoc/tz_update.xml
index 9b4bffe6c..78b644adf 100644
--- a/JodaTime/src/site/xdoc/tz_update.xml
+++ b/JodaTime/src/site/xdoc/tz_update.xml
@@ -13,7 +13,7 @@
 <p>
 Time zones are a concept driven by the political situation in each country around the world.
 As such, they change frequently, and often at short notice.
-In order to manage this, Joda-Time uses the interationally recognised
+In order to manage this, Joda-Time uses the internationally recognised
 <a href="http://www.twinsun.com/tz/tz-link.htm">tz database</a>, which is also used
 in most operating systems and the JDK itself.
 </p>

From d10ff5d7b845b215c5540b09e55e7c51e55b2502 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 18:06:32 +0000
Subject: [PATCH 34/36] Site fixes

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1529 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/src/site/site.xml                |  2 +-
 JodaTime/src/site/xdoc/faq.xml            |  6 +++---
 JodaTime/src/site/xdoc/index.xml          | 24 +++++++++++------------
 JodaTime/src/site/xdoc/key_chronology.xml |  8 ++++----
 JodaTime/src/site/xdoc/key_duration.xml   |  4 ++--
 JodaTime/src/site/xdoc/key_instant.xml    | 12 ++++++------
 JodaTime/src/site/xdoc/key_interval.xml   |  6 +++---
 JodaTime/src/site/xdoc/key_partial.xml    | 14 ++++++-------
 JodaTime/src/site/xdoc/key_period.xml     | 22 ++++++++++-----------
 9 files changed, 49 insertions(+), 49 deletions(-)

diff --git a/JodaTime/src/site/site.xml b/JodaTime/src/site/site.xml
index 28fb7725c..6fe2a3e95 100644
--- a/JodaTime/src/site/site.xml
+++ b/JodaTime/src/site/site.xml
@@ -54,7 +54,7 @@
     <menu name="Development">
       <item name="Sourceforge" href="http://sourceforge.net/projects/joda-time/"/>
       <item name="Test results" href="surefire-report.html"/>
-      <item name="Test coverage" href="coverage/index.html"/>
+      <!--item name="Test coverage" href="coverage/index.html"/-->
       <item name="Mailing lists" href="mail-lists.html"/>
       <item name="Tasks" href="tasks.html"/>
       <item name="Subversion" href="http://joda-time.svn.sourceforge.net/viewvc/joda-time/trunk/JodaTime/"/>
diff --git a/JodaTime/src/site/xdoc/faq.xml b/JodaTime/src/site/xdoc/faq.xml
index 93493ac28..32364df32 100644
--- a/JodaTime/src/site/xdoc/faq.xml
+++ b/JodaTime/src/site/xdoc/faq.xml
@@ -60,7 +60,7 @@ For any future, or similar time zone change, you can upgrade your Joda-Time jar
 <p>
 This question has more than one answer!
 If you just want the number of whole days between two dates, then you can use the
-new <a href="api-release/index.html?org/joda/time/Days.html">Days</a> class
+new <a href="api-release/org/joda/time/Days.html">Days</a> class
 in version 1.4 of Joda-Time.
 <source>
   Days d = Days.daysBetween(startDate, endDate);
@@ -71,14 +71,14 @@ designed to operate well with the JDK5 static import facility.
 </p>
 <p>
 If however you want to calculate the number of days, weeks, months and years between
-the two dates, then you need a <a href="api-release/index.html?org/joda/time/Period.html">Period</a>
+the two dates, then you need a <a href="api-release/org/joda/time/Period.html">Period</a>
 By default, this will split the difference between the two datetimes into parts,
 such as "1 month, 2 weeks, 4 days and 7 hours".
 <source>
   Period p = new Period(startDate, endDate);
 </source>
 You can control which fields get extracted using a
-<a href="api-release/index.html?org/joda/time/PeriodType.html">PeriodType</a>.
+<a href="api-release/org/joda/time/PeriodType.html">PeriodType</a>.
 <source>
   Period p = new Period(startDate, endDate, PeriodType.yearMonthDay());
 </source>
diff --git a/JodaTime/src/site/xdoc/index.xml b/JodaTime/src/site/xdoc/index.xml
index 2e0d9965d..ab740bc37 100644
--- a/JodaTime/src/site/xdoc/index.xml
+++ b/JodaTime/src/site/xdoc/index.xml
@@ -27,34 +27,34 @@ JSR 310 has now been launched. It aims to build upon Joda-Time and include it in
 <p>
 As a flavour of Joda-Time, here's some example code:
 <source>
-public boolean isAfterPayDay(<a href="api-release/index.html?org/joda/time/DateTime.html"><b>DateTime</b></a> datetime) {
+public boolean isAfterPayDay(<a href="api-release/org/joda/time/DateTime.html"><b>DateTime</b></a> datetime) {
   if (datetime.getMonthOfYear() == 2) {   // February is month 2!!
     return datetime.getDayOfMonth() > 26;
   }
   return datetime.getDayOfMonth() > 28;
 }
 
-public <a href="api-release/index.html?org/joda/time/Days.html"><b>Days</b></a> daysToNewYear(<a href="api-release/index.html?org/joda/time/LocalDate.html"><b>LocalDate</b></a> fromDate) {
-  <a href="api-release/index.html?org/joda/time/LocalDate.html"><b>LocalDate</b></a> newYear = fromDate.plusYears(1).withDayOfYear(1);
-  return <a href="api-release/index.html?org/joda/time/Days.html"><b>Days</b></a>.daysBetween(fromDate, newYear);
+public <a href="api-release/org/joda/time/Days.html"><b>Days</b></a> daysToNewYear(<a href="api-release/org/joda/time/LocalDate.html"><b>LocalDate</b></a> fromDate) {
+  <a href="api-release/org/joda/time/LocalDate.html"><b>LocalDate</b></a> newYear = fromDate.plusYears(1).withDayOfYear(1);
+  return <a href="api-release/org/joda/time/Days.html"><b>Days</b></a>.daysBetween(fromDate, newYear);
 }
 
-public boolean isRentalOverdue(<a href="api-release/index.html?org/joda/time/DateTime.html"><b>DateTime</b></a> datetimeRented) {
-  <a href="api-release/index.html?org/joda/time/Period.html"><b>Period</b></a> rentalPeriod = new <a href="api-release/index.html?org/joda/time/Period.html"><b>Period</b></a>().withDays(2).withHours(12);
+public boolean isRentalOverdue(<a href="api-release/org/joda/time/DateTime.html"><b>DateTime</b></a> datetimeRented) {
+  <a href="api-release/org/joda/time/Period.html"><b>Period</b></a> rentalPeriod = new <a href="api-release/org/joda/time/Period.html"><b>Period</b></a>().withDays(2).withHours(12);
   return datetimeRented.plus(rentalPeriod).isBeforeNow();
 }
 
-public String getBirthMonthText(<a href="api-release/index.html?org/joda/time/LocalDate.html"><b>LocalDate</b></a> dateOfBirth) {
+public String getBirthMonthText(<a href="api-release/org/joda/time/LocalDate.html"><b>LocalDate</b></a> dateOfBirth) {
   return dateOfBirth.monthOfYear().getAsText(Locale.ENGLISH);
 }
 </source>
 <!--
-public boolean isDoubleShift(<a href="api-release/index.html?org/joda/time/LocalTime.html"><b>LocalTime</b></a> startTime, <a href="api-release/index.html?org/joda/time/LocalTime.html"><b>LocalTime</b></a> endTime) {
-  <a href="api-release/index.html?org/joda/time/Hours.html"><b>Hours</b></a> hoursBetween = <a href="api-release/index.html?org/joda/time/Hours.html"><b>Hours</b></a>.hoursBetween(time1, time2);
-  return hoursBetween.isGreaterThan(<a href="api-release/index.html?org/joda/time/Hours.html"><b>Hours</b></a>.EIGHT);
+public boolean isDoubleShift(<a href="api-release/org/joda/time/LocalTime.html"><b>LocalTime</b></a> startTime, <a href="api-release/org/joda/time/LocalTime.html"><b>LocalTime</b></a> endTime) {
+  <a href="api-release/org/joda/time/Hours.html"><b>Hours</b></a> hoursBetween = <a href="api-release/org/joda/time/Hours.html"><b>Hours</b></a>.hoursBetween(time1, time2);
+  return hoursBetween.isGreaterThan(<a href="api-release/org/joda/time/Hours.html"><b>Hours</b></a>.EIGHT);
 }
-public boolean isJoinedInLastThreeMonths(<a href="api-release/index.html?org/joda/time/DateTime.html"><b>DateTime</b></a> datetimeJoined) {
-  <a href="api-release/index.html?org/joda/time/Interval.html"><b>Interval</b></a> last3Months = new <a href="api-release/index.html?org/joda/time/Interval.html"><b>Interval</b></a>(<a href="api-release/index.html?org/joda/time/Months.html"><b>Months</b></a>.THREE, new <a href="api-release/index.html?org/joda/time/DateTime.html"><b>DateTime</b></a>());
+public boolean isJoinedInLastThreeMonths(<a href="api-release/org/joda/time/DateTime.html"><b>DateTime</b></a> datetimeJoined) {
+  <a href="api-release/org/joda/time/Interval.html"><b>Interval</b></a> last3Months = new <a href="api-release/org/joda/time/Interval.html"><b>Interval</b></a>(<a href="api-release/org/joda/time/Months.html"><b>Months</b></a>.THREE, new <a href="api-release/org/joda/time/DateTime.html"><b>DateTime</b></a>());
   return last3Months.contains(datetimeJoined);
 }
 -->
diff --git a/JodaTime/src/site/xdoc/key_chronology.xml b/JodaTime/src/site/xdoc/key_chronology.xml
index fe3c8e534..8c1a56da0 100644
--- a/JodaTime/src/site/xdoc/key_chronology.xml
+++ b/JodaTime/src/site/xdoc/key_chronology.xml
@@ -27,10 +27,10 @@ think about their actual requirements, which we believe is a Good Thing.
 </p>
 <p>
 The actual calculations of the chronology are split between the
-<a href="api-release/index.html?org/joda/time/Chronology.html">Chronology</a> class itself
+<a href="api-release/org/joda/time/Chronology.html">Chronology</a> class itself
 and the field classes -
-<a href="api-release/index.html?org/joda/time/DateTimeField.html">DateTimeField</a> and
-<a href="api-release/index.html?org/joda/time/DurationField.html">DurationField</a>.
+<a href="api-release/org/joda/time/DateTimeField.html">DateTimeField</a> and
+<a href="api-release/org/joda/time/DurationField.html">DurationField</a>.
 Together, the subclasses of these three classes form the bulk of the code in the library.
 However, most users will never need to use or refer directly to the subclasses.
 Instead, most applications will simply obtain the chronology and use it as a singleton.
@@ -38,7 +38,7 @@ Instead, most applications will simply obtain the chronology and use it as a sin
 <p>
 The chronology class also supports the time zone functionality.
 This is applied to the underlying chronology via the decorator design pattern.
-The <a href="api-release/index.html?org/joda/time/DateTimeZone.html">DateTimeZone</a> class provides
+The <a href="api-release/org/joda/time/DateTimeZone.html">DateTimeZone</a> class provides
 access to the zones via factories, and also supports a default zone concept.
 A full list of time zones can be found <a href="timezones.html">here</a>.
 It is also possible to <a href="tz_update.html">update the zone data</a> yourself.
diff --git a/JodaTime/src/site/xdoc/key_duration.xml b/JodaTime/src/site/xdoc/key_duration.xml
index 295fd06f2..4f59b866d 100644
--- a/JodaTime/src/site/xdoc/key_duration.xml
+++ b/JodaTime/src/site/xdoc/key_duration.xml
@@ -37,10 +37,10 @@ Durations implement <code>Comparable</code> which compares the lengths of the tw
 <section name="Using Durations in Joda-Time">
 <p>
 Within Joda-Time a duration is represented by the
-<a href="api-release/index.html?org/joda/time/ReadableDuration.html">ReadableDuration</a> interface.
+<a href="api-release/org/joda/time/ReadableDuration.html">ReadableDuration</a> interface.
 There is one implementation of the interface provided:
 <ul>
-<li><a href="api-release/index.html?org/joda/time/Duration.html">Duration</a> -
+<li><a href="api-release/org/joda/time/Duration.html">Duration</a> -
 An immutable implementation</li>
 </ul>
 </p>
diff --git a/JodaTime/src/site/xdoc/key_instant.xml b/JodaTime/src/site/xdoc/key_instant.xml
index 686e3da9f..2995a151f 100644
--- a/JodaTime/src/site/xdoc/key_instant.xml
+++ b/JodaTime/src/site/xdoc/key_instant.xml
@@ -41,19 +41,19 @@ you should use the <a href="key_partial.html">partial</a> classes.
 <section name="Using Instants in Joda-Time">
 <p>
 Within Joda-Time an instant is represented by the
-<a href="api-release/index.html?org/joda/time/ReadableInstant.html">ReadableInstant</a> interface.
+<a href="api-release/org/joda/time/ReadableInstant.html">ReadableInstant</a> interface.
 There are four implementations of the interface provided:
 <ul>
-<li><a href="api-release/index.html?org/joda/time/Instant.html">Instant</a> -
+<li><a href="api-release/org/joda/time/Instant.html">Instant</a> -
 A simple immutable implementation which is restricted to the UTC time zone
 and is intended for time zone and calendar neutral data transfer</li>
-<li><a href="api-release/index.html?org/joda/time/DateTime.html">DateTime</a> -
+<li><a href="api-release/org/joda/time/DateTime.html">DateTime</a> -
 The most commonly used class in the library, and an immutable representation of a
 date and time with calendar and time zone</li>
-<li><a href="api-release/index.html?org/joda/time/DateMidnight.html">DateMidnight</a> -
+<li><a href="api-release/org/joda/time/DateMidnight.html">DateMidnight</a> -
 Similar to <code>DateTime</code> and also immutable but with the time component
 forced to be midnight (at the start of a day)</li>
-<li><a href="api-release/index.html?org/joda/time/MutableDateTime.html">MutableDateTime</a> -
+<li><a href="api-release/org/joda/time/MutableDateTime.html">MutableDateTime</a> -
 A mutable representation of date and time with calendar and time zone</li>
 </ul>
 We recommend the immutable implementations for general usage.
@@ -87,7 +87,7 @@ Note that the interface <code>ReadableInstant</code> should not be used like the
 The interface only contains the core subset of the operations of <code>DateTime</code>.
 You should use the interface only when you feel the need to be flexible about future changes
 to the object passed into a method.
-You might also want to consider the <a href="api-release/index.html?org/joda/time/ReadableDateTime.html">ReadableDateTime</a>
+You might also want to consider the <a href="api-release/org/joda/time/ReadableDateTime.html">ReadableDateTime</a>
 interface which extends <code>ReadableInstant</code> to provide additional methods.
 </p>
 
diff --git a/JodaTime/src/site/xdoc/key_interval.xml b/JodaTime/src/site/xdoc/key_interval.xml
index 8975436fe..e573e84ad 100644
--- a/JodaTime/src/site/xdoc/key_interval.xml
+++ b/JodaTime/src/site/xdoc/key_interval.xml
@@ -37,11 +37,11 @@ If you want to compare the length of intervals you must obtain the duration of e
 <section name="Using Intervals in Joda-Time">
 <p>
 Within Joda-Time an interval is represented by the
-<a href="api-release/index.html?org/joda/time/ReadableInterval.html">ReadableInterval</a> interface.
+<a href="api-release/org/joda/time/ReadableInterval.html">ReadableInterval</a> interface.
 There are two implementations of the interface provided:
 <ul>
-<li><a href="api-release/index.html?org/joda/time/Interval.html">Interval</a> - An immutable implementation</li>
-<li><a href="api-release/index.html?org/joda/time/MutableInterval.html">MutableInterval</a> - A mutable implementation</li>
+<li><a href="api-release/org/joda/time/Interval.html">Interval</a> - An immutable implementation</li>
+<li><a href="api-release/org/joda/time/MutableInterval.html">MutableInterval</a> - A mutable implementation</li>
 </ul>
 We recommend the immutable implementation for general usage.
 </p>
diff --git a/JodaTime/src/site/xdoc/key_partial.xml b/JodaTime/src/site/xdoc/key_partial.xml
index b26bbc0d4..e8be975ba 100644
--- a/JodaTime/src/site/xdoc/key_partial.xml
+++ b/JodaTime/src/site/xdoc/key_partial.xml
@@ -56,21 +56,21 @@ It can be thought of as a local date that covers the whole of the day from 00:00
 <section name="Using Partials in Joda-Time">
 <p>
 Within Joda-Time a partial is represented by the
-<a href="api-release/index.html?org/joda/time/ReadablePartial.html">ReadablePartial</a> interface.
+<a href="api-release/org/joda/time/ReadablePartial.html">ReadablePartial</a> interface.
 There are six implementations of the interface provided:
 <ul>
-<li><a href="api-release/index.html?org/joda/time/LocalDate.html">LocalDate</a> -
+<li><a href="api-release/org/joda/time/LocalDate.html">LocalDate</a> -
 An immutable implementation that represents a date without a time or time zone.</li>
-<li><a href="api-release/index.html?org/joda/time/LocalTime.html">LocalTime</a> -
+<li><a href="api-release/org/joda/time/LocalTime.html">LocalTime</a> -
 An immutable implementation that represents a time without a date or time zone.</li>
-<li><a href="api-release/index.html?org/joda/time/LocalDateTime.html">LocalDateTime</a> -
+<li><a href="api-release/org/joda/time/LocalDateTime.html">LocalDateTime</a> -
 An immutable implementation that represents a datetime without a time zone.</li>
-<li><a href="api-release/index.html?org/joda/time/Partial.html">Partial</a> -
+<li><a href="api-release/org/joda/time/Partial.html">Partial</a> -
 An immutable implementation that can store any combination of datetime fields.
 For example, using this class you could create a YearMonth or DayOfWeekDayOfMonth partial.</li>
-<li><a href="api-release/index.html?org/joda/time/YearMonthDay.html">YearMonthDay</a> -
+<li><a href="api-release/org/joda/time/YearMonthDay.html">YearMonthDay</a> -
 Effectively deprecated - only supports the year, monthOfYear and dayOfMonth fields.</li>
-<li><a href="api-release/index.html?org/joda/time/TimeOfDay.html">TimeOfDay</a> -
+<li><a href="api-release/org/joda/time/TimeOfDay.html">TimeOfDay</a> -
 Effectively deprecated - only supports the hour, minute, second and millisecond fields.</li>
 </ul>
 </p>
diff --git a/JodaTime/src/site/xdoc/key_period.xml b/JodaTime/src/site/xdoc/key_period.xml
index d9fad9450..4ee7a784a 100644
--- a/JodaTime/src/site/xdoc/key_period.xml
+++ b/JodaTime/src/site/xdoc/key_period.xml
@@ -90,7 +90,7 @@ The second type of period is the any-field period.
 These are implemented by the <code>Period</code> and <code>MutablePeriod</code> classes.
 Internally, they store a set of <code>int</code> fields, one for each field.
 The standard set of fields in a period are years, months, weeks, days, hours, minutes, seconds and millis.
-The <a href="api-release/index.html?org/joda/time/PeriodType.html">PeriodType</a> class allows this set
+The <a href="api-release/org/joda/time/PeriodType.html">PeriodType</a> class allows this set
 of fields to be restricted, for example to elimate weeks.
 This is significant when converting a duration or interval to a period, as the calculation
 needs to know which period fields it should populate.
@@ -119,26 +119,26 @@ and then compare the duration.
 <section name="Using Periods in Joda-Time">
 <p>
 Within Joda-Time a period is represented by the
-<a href="api-release/index.html?org/joda/time/ReadablePeriod.html">ReadablePeriod</a> interface.
+<a href="api-release/org/joda/time/ReadablePeriod.html">ReadablePeriod</a> interface.
 There are nine implementations of the interface provided:
 <ul>
-<li><a href="api-release/index.html?org/joda/time/Period.html">Period</a> -
+<li><a href="api-release/org/joda/time/Period.html">Period</a> -
 An immutable implementation</li>
-<li><a href="api-release/index.html?org/joda/time/MutablePeriod.html">MutablePeriod</a> -
+<li><a href="api-release/org/joda/time/MutablePeriod.html">MutablePeriod</a> -
 A mutable implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Years.html">Years</a> -
+<li><a href="api-release/org/joda/time/Years.html">Years</a> -
 An immutable years-only implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Months.html">Months</a> -
+<li><a href="api-release/org/joda/time/Months.html">Months</a> -
 An immutable months-only implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Weeks.html">Weeks</a> -
+<li><a href="api-release/org/joda/time/Weeks.html">Weeks</a> -
 An immutable weeks-only implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Days.html">Days</a> -
+<li><a href="api-release/org/joda/time/Days.html">Days</a> -
 An immutable days-only implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Hours.html">Hours</a> -
+<li><a href="api-release/org/joda/time/Hours.html">Hours</a> -
 An immutable hours-only implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Minutes.html">Minutes</a> -
+<li><a href="api-release/org/joda/time/Minutes.html">Minutes</a> -
 An immutable minutes-only implementation</li>
-<li><a href="api-release/index.html?org/joda/time/Seconds.html">Seconds</a> -
+<li><a href="api-release/org/joda/time/Seconds.html">Seconds</a> -
 An immutable seconds-only implementation</li>
 </ul>
 We recommend the immutable implementation for general usage.

From 30a2a6282c6cdd200cb294a750f3d66b9e5d3ee6 Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 18:43:20 +0000
Subject: [PATCH 35/36] Header images no longer work in maven

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1530 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/src/site/resources/css/site.css | 11 +++++++++--
 JodaTime/src/site/site.xml               |  6 +++---
 2 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/JodaTime/src/site/resources/css/site.css b/JodaTime/src/site/resources/css/site.css
index 824320af8..2ed8bb60a 100644
--- a/JodaTime/src/site/resources/css/site.css
+++ b/JodaTime/src/site/resources/css/site.css
@@ -52,10 +52,17 @@ p, ul {
 #banner {
   background-color: #eef;
   border-bottom: 1px solid #aaa;
+  padding: 8px;
 }
-#bannerLeft img, #bannerRight img {
-  margin:8px;
+#bannerLeft, #bannerRight {
+  font-size: 30px;
+  color:black;
+  background-color:white;
   border: 1px solid #999;
+  padding: 0px 5px;
+}
+#banner a:hover {
+  text-decoration:none;
 }
 #breadcrumbs {
   padding-top: 1px;
diff --git a/JodaTime/src/site/site.xml b/JodaTime/src/site/site.xml
index 6fe2a3e95..886cd165b 100644
--- a/JodaTime/src/site/site.xml
+++ b/JodaTime/src/site/site.xml
@@ -3,12 +3,12 @@
   <publishDate position="navigation-bottom" format="yyyy-MM-dd"/>
   <bannerLeft>
     <name>Joda.org</name>
-    <src>http://joda-time.sourceforge.net/images/joda.png</src>
+    <!--src>http://joda-time.sourceforge.net/images/joda.png</src-->
     <href>http://joda.sourceforge.net/</href>
   </bannerLeft>
   <bannerRight>
-    <name>Joda Time</name>
-    <src>http://joda-time.sourceforge.net/images/jodatime.png</src>
+    <name>Joda-Time</name>
+    <!--src>http://joda-time.sourceforge.net/images/jodatime.png</src-->
     <href>http://joda-time.sourceforge.net/</href>
   </bannerRight>
 

From 6cfb9758b3a1e3c762f1d1ccbde748346412988a Mon Sep 17 00:00:00 2001
From: Stephen Colebourne <scolebourne@joda.org>
Date: Sun, 8 Aug 2010 22:42:08 +0000
Subject: [PATCH 36/36] Switch gpg plugin to a profile activated by
 -Doss.repo=true

git-svn-id: https://joda-time.svn.sourceforge.net/svnroot/joda-time/branches/v1_6_000_BRANCH@1531 1e1cfbb7-5c0e-0410-a2f0-f98d92ec03a1
---
 JodaTime/pom.xml | 45 ++++++++++++++++++++++++++++++---------------
 1 file changed, 30 insertions(+), 15 deletions(-)

diff --git a/JodaTime/pom.xml b/JodaTime/pom.xml
index 53273fd87..b00936f08 100644
--- a/JodaTime/pom.xml
+++ b/JodaTime/pom.xml
@@ -276,20 +276,6 @@
         <artifactId>maven-site-plugin</artifactId>
         <version>2.1.1</version>
       </plugin>
-      <!--plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-gpg-plugin</artifactId>
-        <version>1.1</version>
-        <executions>
-          <execution>
-            <id>sign-artifacts</id>
-            <phase>verify</phase>
-            <goals>
-              <goal>sign</goal>
-            </goals>
-          </execution>
-        </executions>
-      </plugin-->
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-repository-plugin</artifactId>
@@ -401,7 +387,36 @@
       <url>scp://shell.sourceforge.net/home/groups/j/jo/joda-time/htdocs</url>
     </site>
     <downloadUrl>http://oss.sonatype.org/content/repositories/joda-releases</downloadUrl>
-  </distributionManagement>
+  </distributionManagement>
+  <profiles>
+    <profile>
+      <id>repo-sign-artifacts</id>
+      <activation>
+        <property>
+          <name>oss.repo</name>
+          <value>true</value>
+        </property>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-gpg-plugin</artifactId>
+            <version>1.1</version>
+            <executions>
+              <execution>
+                <id>sign-artifacts</id>
+                <phase>verify</phase>
+                <goals>
+                  <goal>sign</goal>
+                </goals>
+              </execution>
+            </executions>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
   <properties>
     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
   </properties>